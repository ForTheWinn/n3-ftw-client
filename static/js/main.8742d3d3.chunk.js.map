{"version":3,"sources":["common/hooks/use-app.tsx","reportWebVitals.ts","ui/components/DisplayRandomRune.tsx","ui/components/Logo.tsx","packages/neo/consts/index.ts","packages/neo/utils/index.ts","packages/neo/network/index.ts","packages/neo/contracts/ftw/farm/helpers.ts","packages/neo/contracts/ftw/nep17/index.ts","packages/neo/contracts/ftw/farm/index.ts","packages/neo/contracts/ftw/nft/consts.ts","packages/neo/contracts/ftw/nft/helpers.ts","packages/neo/contracts/ftw/nft/index.ts","packages/neo/contracts/ftw/bank/index.ts","packages/neo/wallet/dev-wallet.ts","packages/neo/wallet/index.ts","packages/neo/contracts/ftw/farm/consts.ts","packages/neo/local-storage/index.ts","packages/provider/wallet-provider.tsx","consts/pageRoutes.ts","packages/ui/PendingTransaction/index.tsx","packages/ui/Wallet/helpers.ts","ui/components/WalletDropdown.tsx","ui/components/Header.tsx","packages/ui/Wallet/WalletDropdown.tsx","packages/ui/Wallet/WalletList.tsx","packages/ui/Wallet/AssetCard.tsx","packages/ui/Wallet/Runes.tsx","packages/ui/Wallet/index.tsx","ui/components/WalletSidebar.tsx","ui/components/PageLayout.tsx","ui/components/Modal.tsx","ui/components/TransactionSubmitted.tsx","ui/pages/Farm/ActionModal.tsx","ui/pages/Farm/SnapshotCountdown.tsx","ui/pages/Farm/SnapshotCard.tsx","ui/pages/Farm/SnapshotList.tsx","ui/components/NotifyError.tsx","ui/pages/Farm/MyPosition.tsx","ui/pages/Farm/Pool.tsx","ui/pages/Farm/CancelModal.tsx","ui/pages/Farm/ClaimModal.tsx","ui/pages/Farm/Claims.tsx","ui/pages/Farm/PositionModal.tsx","ui/pages/Farm/About.tsx","ui/pages/Farm/index.tsx","ui/pages/Gallery/DisplayRune.tsx","ui/pages/Gallery/PropertiesModal.tsx","ui/pages/MyCollection/index.tsx","ui/pages/Gallery/index.tsx","ui/components/SidebarNav.tsx","ui/components/MobileMenuSlider.tsx","ui/pages/Home.tsx","packages/neo/contracts/ftw/smith/consts.ts","packages/neo/contracts/ftw/smith/helpers.ts","packages/neo/contracts/ftw/smith/index.ts","ui/pages/Smith/ActionModal.tsx","ui/pages/Smith/ContractCard.tsx","ui/pages/Smith/index.tsx","ui/index.tsx","index.tsx"],"names":["AppContext","createContext","AppCContextProvider","props","useState","sidebarStatus","setSidebarStatus","walletSidebarStatus","setWalletSidebarStatus","contextValue","openSidebar","closeSidebar","toggleSidebar","toggleWalletSidebar","Provider","value","children","useApp","useContext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getColors","_","range","map","i","Math","floor","random","DisplayRandomRune","width","height","isActive","colors","setColors","bg","dot1","dot2","dot3","dot4","body","svg","useEffect","interval","setInterval","clearInterval","style","src","Logo","O3","NEO_LINE","DEV","WALLET_LIST","label","key","PRIVATENET","TESTNET","MAINNET","PRIVATE_CONFIG","url","TESTNET_CONFIG","MAINNET_CONFIG","GAS_SCRIPT_HASH","NEON_CONST","NATIVE_CONTRACT_HASH","GasToken","NEO_SCRIPT_HASH","NeoToken","TOKEN_LIST","network","DEV_WALLET_PRIVATE_KEY","truncateAddress","address","substring","substr","length","convertContractCallParam","param","type","sc","ContractParam","hash160","wallet","getScriptHashFromAddress","string","integer","array","byteArray","u","hex2base64","str2hexstring","Error","base64ToAddress","str","getAddressFromScriptHash","base64ToHash160","reverseHex","base642hex","base64ToString","HexString","fromBase64","toAscii","toString","base64ToFixed8","BigInteger","fromNumber","toDecimal","base64ToDate","moment","unix","parseFloat","format","truncateDecimal","v","p","s","pow","trunc","Network","READ_LOG_FREQUENCY","getRPCClient","networkType","config","rpc","RPCClient","getRawTx","txid","a","rpcClient","console","log","getRawTransaction","rawTx","sleep","findNotificationFromTxId","txId","scriptHash","eventName","getNotificationsFromTxId","notifications","find","n","contract","eventname","getApplicationLog","appLog","executions","forEach","e","push","read","scripts","sb","ScriptBuilder","script","params","args","arg","emitAppCall","operation","invokeScript","fromHex","build","res","state","error","exception","duration","Promise","resolve","setTimeout","parseDeposit","stackItem","position","amount","lastClaimNo","createdAt","parseClaimPaginate","totalItems","totalPages","page","items","parseClaim","item","no","from","end","GAS","FTW","parseSnapshotItem","totalPositionPool","totalNeo","totalGas","winPosition","FTW_SCRIPT_HASH","CONST","FarmContract","contractHash","deposit","connectedWallet","account","WalletAPI","invoke","remove","createSnapshot","claim","changePosition","getStatus","neoBalance","ftwBalance","timeLeft","vote","snapshots","claims","stack","undefined","this","FARM_SCRIPT_HASH","NFT_SCRIPT_HASH","parseProperties","obj","base642utf8","NFTContract","mint","withdrawFund","deploy","getTotalSupplyScript","getPropertiesScript","tokenId","getProperties","getTokensOfScript","ownerAddress","getTokensOf","metaList","iterator","meta","getTokens","DevWallet","name","version","website","compatibility","extra","currency","theme","chainId","defaultNetwork","networks","getNep17Balances","balances","balance","symbol","assethash","includes","getVersion","txObj","sign","protocol","sendRawTransaction","JSON","stringify","RPC","Transaction","networkFee","systemFee","nodeUrl","Account","senderAddress","cosignerAddress","getBlockCount","currentHeight","createScript","signers","scopes","tx","WitnessScope","Global","transaction","validUntilBlock","calculateNetworkFee","calculateSystemFee","invokeFunction","PolicyContract","invokeFunctionResponse","feePerByte","transactionByteSize","serialize","witnessProcessingFee","mul","add","gasconsumed","balanceCheck","sender","transferScript","gasBalance","requiredGas","transferTokenBalance","Fixed8","fromRawNumber","toNumber","transferAmount","walletType","getInstance","instance","neo3Dapi","NEOLineN3","Init","O3Wallet","getProvider","provider","getAccount","getNetworks","getBalance","contracts","NeoLine","instance2","NEOLine","Dev","init","extraSystemFee","NeonWallet","CalledByEntry","submittedTx","method","LocalStorage","addTransaction","list","CONNECTED_WALLET","TRANSACTIONS","validated","validateConnectedWallet","store","set","has","window","dispatchEvent","Event","transactions","get","status","initStorage","supportContracts","getTransactions","validatedTx","removeTransaction","getWallet","clearTransaction","WalletContext","WalletContextProvider","options","isWalletModalActive","setWalletModalActive","useLocalStorage","setConnectedWallet","setInvokeScript","pendingTransactions","setPendingTransactions","connectWallet","setWallet","toast","message","useDevWallet","openWalletModal","closeWalletModal","disConnectWallet","removeWallet","doInvoke","closeInvoke","addPendingTransaction","removePendingTransaction","filter","useWallet","GALLERY_PATH","SMITH_PATH","COLLECTION_PATH","PendingTransaction","checkTxid","className","pointerEvents","loading","size","getWalletIcon","WalletDropdown","setActive","refresh","disconnected","addEventListener","removeEventListener","Constants","EventName","ACCOUNT_CHANGED","NETWORK_CHANGED","DISCONNECTED","onClick","utils","id","role","to","Header","justifyContent","marginLeft","activeClassName","href","WalletList","_wallet","alt","AssetCard","Runes","setTokens","setError","fetchContractStatus","flexFlow","Wallet","WalletSidebar","openFromRight","top","showNav","onHideNav","PageLayout","ModalCard","onClose","isLoading","React","$","addClass","removeClass","TransactionSubmitted","ActionModal","setAmount","setPosition","setTxid","onDeposit","Modal","onChange","target","autoFocus","decimalScale","inputMode","onValueChange","thousandSeparator","suffix","allowLeadingZeros","disabled","SnapshotCountdown","onCreateSnapshot","CreateSnapshotBtn","date","Date","now","renderer","completed","hours","minutes","seconds","SnapshotCard","SnapshotList","contractStatus","NotifyError","msg","MyPosition","lastSnapshotNo","onCancel","onClaim","onPositionChange","isClaimable","Pool","CancelModal","Claims","PositionModal","currentPosition","Farm","route","setRoute","modalActive","setModalActive","cancelModalActive","setCancelModalActive","claimModalActive","setClaimModalActive","positionModalActive","setPositionModalActive","setContractStatus","onClaimModalActive","About","ClaimModal","DisplayRune","token","setToken","image","PropertiesModal","properties","owner","MyCollection","setLoading","tokens","propertiesModalActive","setPropertiesModalActive","onPropertiesModalActive","Gallery","onMint","display","SidebarNav","useLocation","MobileMenuSlider","Home","vantaEffect","setVantaEffect","myRef","useRef","DOTS","el","current","mouseControls","touchControls","gyroControls","minHeight","minWidth","backgroundColor","destroy","alignItems","autoPlay","loop","ref","SMITH_SCRIPT_HASH","parseRecord","contractOwner","decimals","totalSupply","author","description","SmithContract","create","contractName","records","values","setValues","handleValueChange","val","max","allowNegative","ContractCard","data","Smith","setStatus","isActionModalActive","setActionModalActive","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8742d3d3.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n// import toast from \"react-hot-toast\";\n\ninterface IAppContext {\n  sidebarStatus: boolean\n  walletSidebarStatus: boolean\n  openSidebar: () => void\n  closeSidebar: () => void\n  toggleSidebar: () => void\n  toggleWalletSidebar: () => void\n}\n\nexport const AppContext = createContext({} as IAppContext);\n\nexport const AppCContextProvider = (props: { children: any }) => {\n  const [sidebarStatus, setSidebarStatus] = useState(false);\n  const [walletSidebarStatus, setWalletSidebarStatus] = useState(false);\n  const openSidebar = () => setSidebarStatus(true);\n  const closeSidebar = () => setSidebarStatus(false);\n  const toggleSidebar = () => {\n    if(walletSidebarStatus){\n      setWalletSidebarStatus(false);\n    }\n    setSidebarStatus(!sidebarStatus);\n  }\n  const toggleWalletSidebar = () => {\n    if(sidebarStatus){\n      setSidebarStatus(false)\n    }\n    setWalletSidebarStatus(!walletSidebarStatus);\n  }\n\n  const contextValue = {\n    sidebarStatus,\n    openSidebar,\n    closeSidebar,\n    toggleSidebar,\n    walletSidebarStatus,\n    toggleWalletSidebar\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => useContext(AppContext);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\n\ninterface IDisplayRandomRuneProps {\n  width: string;\n  height: string;\n  isActive?: boolean;\n}\nconst DisplayRandomRune = ({\n  width,\n  height,\n  isActive,\n}: IDisplayRandomRuneProps) => {\n  const [colors, setColors] = useState(getColors());\n  const bg = \"rgb(\" + colors[0] + \",\" + colors[6] + \",\" + colors[12] + \")\";\n  const dot1 = \"rgb(\" + colors[1] + \",\" + colors[7] + \",\" + colors[13] + \")\";\n  const dot2 = \"rgb(\" + colors[2] + \",\" + colors[8] + \",\" + colors[14] + \")\";\n  const dot3 = \"rgb(\" + colors[3] + \",\" + colors[9] + \",\" + colors[15] + \")\";\n  const dot4 = \"rgb(\" + colors[4] + \",\" + colors[10] + \",\" + colors[16] + \")\";\n  const body = \"rgb(\" + colors[5] + \",\" + colors[11] + \",\" + colors[17] + \")\";\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    if (isActive) {\n      const interval = setInterval(() => {\n        setColors(getColors());\n      }, 2000);\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  return (\n    <img style={{ width, height }} src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default DisplayRandomRune;\n","import React from \"react\";\nimport DisplayRandomRune from \"./DisplayRandomRune\";\n\nconst Logo = () => {\n  return (\n    <>\n      {/*<img*/}\n      {/*  src={\"/logo/FTW.png\"}*/}\n      {/*  height=\"40px\"*/}\n      {/*/>*/}\n      <DisplayRandomRune width=\"36px\" height=\"36px\" />\n    </>\n  );\n};\n\nexport default Logo;\n","import { CONST as NEON_CONST } from \"@cityofzion/neon-core\";\nimport { INetworkType } from \"../network\";\nimport { IWalletType } from \"../wallet/interfaces\";\n\n/* Wallets */\nexport const O3 = \"O3\";\nexport const NEO_LINE = \"NEO_LINE\";\nexport const DEV = \"DEV\";\nexport const WALLET_LIST: {\n  label: string;\n  key: IWalletType;\n}[] = [\n  {\n    label: \"Dev\",\n    key: DEV,\n  },\n  {\n    label: \"NEO Line\",\n    key: NEO_LINE,\n  },\n  {\n    label: \"O3\",\n    key: O3,\n  },\n];\n\n/* Network types */\nexport const PRIVATENET = \"N3PrivateNet\";\nexport const TESTNET = \"N3TestNet\";\nexport const MAINNET = \"N3MainNet\";\n\n/* Network configs */\nexport const PRIVATE_CONFIG = {\n  label: \"privateNet\",\n  url: \"http://127.0.0.1:50012\",\n};\n\nexport const TESTNET_CONFIG = {\n  label: \"N3TestNet\",\n  url: \"http://seed2t4.neo.org:20332\",\n};\n\nexport const MAINNET_CONFIG = {\n  label: \"N3MainNet\",\n  url: \"http://127.0.0.1:50012\",\n};\n\n/* Contract hashes */\nexport const GAS_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.GasToken;\nexport const NEO_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.NeoToken;\n\nexport const TOKEN_LIST = (network: INetworkType) => [\n  NEO_SCRIPT_HASH,\n  GAS_SCRIPT_HASH,\n  // NFT_SCRIPT_HASH[network]\n];\n\n/* Dev wallet */\nexport const DEV_WALLET_PRIVATE_KEY =\n  \"7b5d7fda53932ed9d43eb848dd521455767a4d40b5a994e6f351605e5a4ce26a\";\n","import { sc, u, wallet } from \"@cityofzion/neon-core\";\nimport moment from \"moment\";\nimport { num2fixed8 } from \"@cityofzion/neon-core/lib/u/BigInteger\";\n\nexport const truncateAddress = (address: string) => {\n  return `${address.substring(0, 4)}...${address.substr(address.length - 2)}`;\n};\n\n/**\n * It converts contract call params for dev wallet. Depending on 3rd wallet params.\n * @param param\n */\nexport const convertContractCallParam = (param: any) => {\n  switch (param.type) {\n    case \"Address\":\n      return sc.ContractParam.hash160(\n        wallet.getScriptHashFromAddress(param.value)\n      );\n\n    case \"Hash160\":\n      return sc.ContractParam.hash160(param.value);\n    case \"String\":\n      return sc.ContractParam.string(param.value);\n    case \"Integer\":\n      return sc.ContractParam.integer(param.value);\n    case \"Array\":\n      return sc.ContractParam.array(\n        ...param.value.map((i: any) => convertContractCallParam(i))\n      );\n    case \"ByteArray\":\n      return sc.ContractParam.byteArray(\n        u.hex2base64(u.str2hexstring(param.value))\n      );\n    default:\n      throw new Error(\"No support param\");\n  }\n};\n\nexport const base64ToAddress = (str: string) =>\n  wallet.getAddressFromScriptHash(base64ToHash160(str));\n\nexport const base64ToHash160 = (str: string) => u.reverseHex(u.base642hex(str));\n\nexport const base64ToString = (str: string) =>\n  u.HexString.fromBase64(str).toAscii().toString();\n\nexport const base64ToFixed8 = (str: string) => {\n  const no = u.BigInteger.fromNumber(str).toDecimal(8);\n  return no;\n};\n\nexport const base64ToDate = (str: string) =>\n  moment.unix(parseFloat(str) / 1000).format(\"lll\");\n\nexport function truncateDecimal(v, p) {\n  const s = Math.pow(10, p || 0);\n  return Math.trunc(s * v) / s;\n}\n","import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG,\n} from \"../consts\";\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport {\n  ApplicationLogJson,\n  GetRawTransactionResult,\n} from \"@cityofzion/neon-core/lib/rpc/Query\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n  private static readonly READ_LOG_FREQUENCY = 6000;\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static getRawTx = async (txid: string, network: INetworkType) => {\n    const rpcClient = Network.getRPCClient(network);\n    // Cycle\n    let rawTx: GetRawTransactionResult | undefined;\n    do {\n      try {\n      \tconsole.log(\"ping\")\n        rawTx = await rpcClient.getRawTransaction(txid, true);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!rawTx);\n\n    return rawTx;\n  };\n\n  static findNotificationFromTxId = async (\n    txId: string,\n    scriptHash: string,\n    eventName: string,\n    networkType: INetworkType\n  ) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(\n      txId,\n      networkType\n    );\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName\n    );\n  };\n\n  static getNotificationsFromTxId = async (\n    txId: string,\n    network: INetworkType\n  ) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[]\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    const res = await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    if (res.state === \"FAULT\") {\n      console.error(\"RPC read error\" + res);\n      throw new Error(res.exception ? res.exception : \"Network error\");\n    }\n    return res;\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","import { IFarmDepositRecord } from \"./interfaces\";\nimport { base64ToDate, base64ToFixed8, base64ToString } from \"../../../utils\";\n\nexport const parseDeposit = (\n  stackItem: any\n): IFarmDepositRecord | undefined => {\n  // TODO check if there no deposit\n  // if (!stackItem.value) return undefined;\n  return {\n    position: stackItem[0].value,\n    amount: stackItem[1].value,\n    lastClaimNo: stackItem[2].value,\n    createdAt: stackItem[3].value,\n  };\n};\n\nexport const parseClaimPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseClaim(stackItem[3].value),\n  };\n};\n\nexport const parseClaim = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      from: item.value[1].value,\n      end: item.value[2].value,\n      GAS: base64ToFixed8(item.value[3].value),\n      FTW: base64ToFixed8(item.value[4].value),\n      createdAt: base64ToDate(item.value[5].value),\n    };\n  });\n};\n\nexport const parseSnapshotPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSnapshotItem(stackItem[3].value),\n  };\n};\n\nconst parseSnapshotItem = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      totalPositionPool: item.value[1].value, // NEO amount\n      totalNeo: item.value[2].value, // NEO amount\n      totalGas: base64ToFixed8(item.value[3].value),\n      range: base64ToFixed8(item.value[4].value),\n      winPosition: item.value[5].value,\n      createdAt: base64ToDate(item.value[6].value),\n    };\n  });\n};\n","import { CONST } from \"../../../index\";\n\nexport const FTW_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\",\n  [CONST.TESTNET]: \"9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\",\n  [CONST.MAINNET]: \"9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20 \",\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { NEO_SCRIPT_HASH } from \"../../../consts\";\nimport { FARM_SCRIPT_HASH } from \"./consts\";\nimport { IFarmContractStatus } from \"./interfaces\";\nimport {\n  parseClaimPaginate,\n  parseDeposit,\n  parseSnapshotPaginate,\n} from \"./helpers\";\nimport { FTW_SCRIPT_HASH } from \"../nep17\";\nimport { base64ToFixed8 } from \"../../../utils\";\n\nexport class FarmContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FARM_SCRIPT_HASH[networkType];\n  }\n\n  deposit = async (\n    connectedWallet: IConnectedWallet,\n    amount: string,\n    position: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: amount,\n        },\n        {\n          type: \"Integer\",\n          value: parseFloat(position),\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  remove = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"removeFund\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  createSnapshot = async (\n    connectedWallet: IConnectedWallet\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"createSnapshot\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  claim = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  changePosition = async (\n    connectedWallet: IConnectedWallet,\n    position: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"changePosition\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Integer\",\n          value: position,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getStatus = async (\n    connectedWallet?: IConnectedWallet\n  ): Promise<IFarmContractStatus> => {\n    const neoBalance = {\n      operation: \"balanceOf\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const ftwBalance = {\n      operation: \"balanceOf\",\n      scriptHash: FTW_SCRIPT_HASH[this.network],\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const timeLeft = {\n      operation: \"timeLeft\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const interval = {\n      operation: \"getSnapshotInterval\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const range = {\n      operation: \"getRange\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const vote = {\n      operation: \"getVote\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const snapshots = {\n      operation: \"getSnapshots\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n\n    const scripts = [\n      neoBalance,\n      ftwBalance,\n      timeLeft,\n      interval,\n      range,\n      vote,\n      snapshots,\n    ];\n\n    if (connectedWallet) {\n      const deposit = {\n        operation: \"getDeposit\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            type: \"Address\",\n            value: connectedWallet.account.address,\n          },\n        ],\n      };\n      const claims = {\n        operation: \"getClaims\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            // @ts-ignore\n            type: \"Address\",\n            // @ts-ignore\n            value: connectedWallet.account.address,\n          },\n          {\n            type: \"Integer\",\n            value: 1,\n          },\n        ],\n      };\n      scripts.push(deposit);\n      scripts.push(claims);\n    }\n\n    const res = await Network.read(this.network, scripts);\n    return {\n      neoBalance: res.stack[0].value as string,\n      ftwBalance: base64ToFixed8(res.stack[1].value as string),\n      timeLeft: res.stack[2].value as string,\n      interval: res.stack[3].value as string,\n      range: res.stack[4].value as string,\n      vote: res.stack[5].value as string,\n      snapshots: parseSnapshotPaginate(res.stack[6].value),\n      deposit:\n        connectedWallet && res.stack[7].value\n          ? parseDeposit(res.stack[7].value)\n          : undefined,\n      claims:\n        connectedWallet && res.stack[8].value\n          ? parseClaimPaginate(res.stack[8].value)\n          : undefined,\n    };\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const NFT_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.TESTNET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.MAINNET]: \"bebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\",\n};\n","import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { sc, u } from \"@cityofzion/neon-core\";\nimport { GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { NFT_SCRIPT_HASH } from \"./consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { IRuneMeta } from \"./interfaces\";\nimport { parseProperties } from \"./helpers\";\n\nexport class NFTContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = NFT_SCRIPT_HASH[networkType];\n  }\n\n  mint = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: 1000000000,\n        },\n        {\n          type: \"String\",\n          value: \"1\",\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      \"0.01\"\n    );\n  };\n\n  withdrawFund = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"withdrawFund\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  deploy = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"deploy\",\n      scriptHash: \"fffdc93764dbaddd97c48f252a53ea4643faa3fd\",\n      args: [\n        {\n          type: \"ByteArray\",\n          value:\n            \"TkVGM05lby5Db21waWxlci5DU2hhcnAgMy4wLjIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH9o/pDRupTKiWPxJfdrdtkN8n9/wtnZXRDb250cmFjdAEAAQ8AAP1mBFcAAQwGc3ltYm9sQZv2Z85Bkl3oMSFAIUBBkl3oMUBBm/ZnzkBXAAF4NQYAAABAVwABeDUGAAAAQFcAAXg1BgAAAEBXAAFAVwABGEAMAQDbMEGb9mfOQZJd6DFK2CYERRDbIUBK2CYERRDbIUBBkl3oMUBXAgEheHBoC5cnDQAAABHbICMRAAAAIXhK2ShQygAUs6uqIScoAAAADCBUaGUgYXJndW1lbnQgIm93bmVyIiBpcyBpbnZhbGlkLjohQZv2Z84REYhOEFHQUBLAcWl4SxHOUItQEM5Bkl3oMUrYJgRFENshIwUAAABAStkoUMoAFLOrQBGIThBR0FASwEBLEc5Qi1AQzkGSXegxQFcDASFBm/ZnznAMAQDbMHFpaEGSXegxStgmBEUQ2yFyanieSnJFamloQeY/GIRAQeY/GIRAVwICIUGb9mfOERGIThBR0FASwHBoeEsRzlCLUBDOQZJd6DFK2CYERRDbIXFpeZ5KcUVpELUnDQAAABDbICM9AAAAIWkQsycZAAAAaHhLEc5Qi1AQzkEvWMXtIxcAAAAhaHhpEk0RzlGLURDOQeY/GIQhEdsgIwUAAABASxHOUItQEM5BL1jF7UASTRHOUYtREM5B5j8YhEBXAgQheHBoC5cnDQAAABHbICMRAAAAIXhK2ShQygAUs6uqIScnAAAADB9UaGUgYXJndW1lbnQgImZyb20iIGlzIGludmFsaWQuOiF5cWkLlycNAAAAEdsgIxEAAAAheUrZKFDKABSzq6ohJyUAAAAMHVRoZSBhcmd1bWVudCAidG8iIGlzIGludmFsaWQuOiF6ELUnLQAAAAwlVGhlIGFtb3VudCBtdXN0IGJlIGEgcG9zaXRpdmUgbnVtYmVyLjoheEH4J+yMqicNAAAAENsgI0EAAAAhehCYJyYAAAAhept4NYb+//+qJw0AAAAQ2yAjIQAAACF6eTVw/v//RSEhe3p5eDUUAAAAEdsgIwUAAABAQfgn7IxAVwIEIcJKeM9Kec9Kes8MCFRyYW5zZmVyQZUBb2F5cGgLl6olDQAAABDbICMPAAAAIXk3AABxaQuXqiEnIgAAAHt6eBPAHwwOb25ORVAxN1BheW1lbnR5QWJ9W1JFIUA3AABAQWJ9W1JAVwACIXmZELUnDgAAAAwGYW1vdW50OiF5ELMnCgAAACMdAAAAIXl4NcD9//9FeTWE/f//C3l4CzVg////QFcAAiF5mRC1Jw4AAAAMBmFtb3VudDoheRCzJwoAAAAjMQAAACF5m3g1gv3//6onEQAAAAwJZXhjZXB0aW9uOiF5mzUz/f//C3kLeDUP////QAwEbmFtZUGb9mfOQZJd6DEhQAwFb3duZXJBm/ZnzkGSXegxIUBXAgEheBDOcHgRznFpaDU/////Qdv+qHQjBQAAAEBB2/6odEBXAAMhQFYBCg38//8Kwfv//xLAYEDCSljPSjXY+///I677///CSljPSjXJ+///I+b7//9Y1sNm\",\n        },\n        {\n          type: \"String\",\n          value:\n            '{\"name\":\"FTWSmith\",\"groups\":[],\"features\":{},\"supportedstandards\":[\"NEP-17\"],\"abi\":{\"methods\":[{\"name\":\"symbol\",\"offset\":1096,\"safe\":true,\"returntype\":\"String\",\"parameters\":[]},{\"name\":\"decimals\",\"offset\":1111,\"safe\":true,\"returntype\":\"Integer\",\"parameters\":[]},{\"name\":\"totalSupply\",\"offset\":76,\"safe\":true,\"returntype\":\"Integer\",\"parameters\":[]},{\"name\":\"balanceOf\",\"offset\":115,\"safe\":true,\"returntype\":\"Integer\",\"parameters\":[{\"name\":\"owner\",\"type\":\"Hash160\"}]},{\"name\":\"transfer\",\"offset\":475,\"safe\":false,\"returntype\":\"Boolean\",\"parameters\":[{\"name\":\"from\",\"type\":\"Hash160\"},{\"name\":\"to\",\"type\":\"Hash160\"},{\"name\":\"amount\",\"type\":\"Integer\"},{\"name\":\"data\",\"type\":\"Any\"}]},{\"name\":\"name\",\"offset\":1002,\"safe\":true,\"returntype\":\"String\",\"parameters\":[]},{\"name\":\"owner\",\"offset\":1020,\"safe\":true,\"returntype\":\"String\",\"parameters\":[]},{\"name\":\"_deploy\",\"offset\":1039,\"safe\":false,\"returntype\":\"Hash160\",\"parameters\":[{\"name\":\"data\",\"type\":\"Array\"}]},{\"name\":\"onNEP17Payment\",\"offset\":1075,\"safe\":false,\"returntype\":\"Void\",\"parameters\":[{\"name\":\"from\",\"type\":\"Hash160\"},{\"name\":\"amount\",\"type\":\"Integer\"},{\"name\":\"data\",\"type\":\"Any\"}]},{\"name\":\"_initialize\",\"offset\":1080,\"safe\":false,\"returntype\":\"Void\",\"parameters\":[]}],\"events\":[{\"name\":\"Transfer\",\"parameters\":[{\"name\":\"from\",\"type\":\"Hash160\"},{\"name\":\"to\",\"type\":\"Hash160\"},{\"name\":\"amount\",\"type\":\"Integer\"}]}]},\"permissions\":[{\"contract\":\"*\",\"methods\":\"*\"}],\"trusts\":[],\"extra\":{\"Author\":\"forthewin.network\",\"Description\":\"Forthewin Smith: Your metaverse coin.\"}}',\n        },\n        // {\n        //   type: \"Array\",\n        //   value: [\n        //     {\n        //       type: \"Hash160\",\n        //       value: \"0xfffdc93764dbaddd97c48f252a53ea4643faa3fd\",\n        //     },\n        //     { type: \"Integer\", value: \"100000000\" },\n        //   ],\n        // },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getTotalSupplyScript = (): sc.ContractCallJson => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"totalSupply\",\n      args: [],\n    };\n  };\n\n  getPropertiesScript = (tokenId: string) => {\n    // const tokenId = `${u.str2hexstring(prefix + no.toString())}`;\n    return {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n  };\n\n  getProperties = async (tokenId: string): Promise<IRuneMeta> => {\n    const script = this.getPropertiesScript(tokenId);\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseProperties(res.stack);\n  };\n\n  getTokensOfScript = (ownerAddress: string) => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = this.getTokensOfScript(ownerAddress);\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      const meta = await this.getProperties(tokenId);\n      metaList.push(meta);\n    }\n    return metaList;\n  };\n\n  getTokens = async (): Promise<string[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokens\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].iterator.map((item) => {\n      return u.HexString.fromBase64(item.value as string).toAscii();\n    });\n  };\n}\nexport { NFT_SCRIPT_HASH } from \"./consts\";\n","import { CONST } from \"../../../index\";\n\nexport const BANK_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.TESTNET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.MAINNET]: \"\",\n};\n","import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpcClient = Network.getRPCClient(network);\n    const res = await rpcClient.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      let amount;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n        amount = u.BigInteger.fromNumber(item.amount).toDecimal(8).toString();\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n        amount = item.amount;\n      }\n      balances.push({\n        contract: item.assethash,\n        amount,\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    network: INetworkType,\n    invokeScript: sc.ContractCallJson\n  ) {\n    const rpcClient = Network.getRPCClient(network);\n    const version: any = await rpcClient.getVersion();\n    const txObj = await DevWallet.build(\n      rpcClient,\n      invokeScript,\n      DevWallet.account.address\n    );\n    txObj.sign(DevWallet.account, version.protocol.network);\n    const txid = await rpcClient.sendRawTransaction(txObj);\n    // tslint:disable-next-line:no-console\n    console.log(\n      JSON.stringify(\n        {\n          RPC: rpc,\n          Transaction: txObj,\n          Network: version,\n          \"Network Fee\": txObj.networkFee.toDecimal(8).toString(),\n          \"System Fee\": txObj.systemFee.toDecimal(8).toString(),\n        },\n        null,\n        4\n      )\n    );\n    return {\n      txid,\n      nodeUrl: rpcClient.url,\n    };\n  }\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson,\n    senderAddress: string,\n    cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n    // @ts-ignore\n    invokeScript.args = invokeScript.args.map((param: any) =>\n      convertContractCallParam(param)\n    );\n    const script = sc.createScript({ ...invokeScript });\n\n    const signers = [\n      {\n        account: wallet.getScriptHashFromAddress(senderAddress),\n        scopes: tx.WitnessScope.Global,\n      },\n    ];\n    if (cosignerAddress) {\n      signers.push({\n        account: wallet.getScriptHashFromAddress(cosignerAddress),\n        scopes: tx.WitnessScope.Global,\n      });\n    }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","import neo3Dapi from \"neo3-dapi\";\nimport { ITransaction, IWalletType } from \"./interfaces\";\nimport { DEV, NEO_LINE, O3, WALLET_LIST } from \"../consts\";\nimport { DevWallet } from \"./dev-wallet\";\nimport { tx, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { INetworkType } from \"../network\";\nimport { LocalStorage } from \"../local-storage\";\nimport moment from \"moment\";\n\nexport class WalletAPI {\n  walletType: IWalletType;\n\n  constructor(walletType: IWalletType) {\n    this.walletType = walletType;\n  }\n\n  static list = WALLET_LIST;\n\n  private getInstance = async (walletType: IWalletType): Promise<any> => {\n    let instance: any;\n    switch (walletType) {\n      case O3:\n        instance = neo3Dapi;\n        break;\n      case NEO_LINE:\n        // @ts-ignore\n        instance = new NEOLineN3.Init();\n        break;\n      case DEV:\n        instance = DevWallet;\n        break;\n      default:\n        throw new Error(\"No support wallet!\");\n    }\n    return instance;\n  };\n\n  private O3Wallet = async () => {\n    const instance = neo3Dapi;\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const network = await instance.getNetworks();\n    const balances = await instance.getBalance(\n      {\n        params: {\n          address: account.address,\n          contracts: [],\n        },\n      },\n      network.defaultNetwork\n    );\n    // TODO: Need to some sort of validation for balances in case wallet doesn't have any address?\n    return { provider, account, network, balances: balances[account.address] };\n  };\n\n  private NeoLine = async () => {\n    // @ts-ignore\n    const instance = new NEOLineN3.Init();\n    // @ts-ignore\n    // NEOLineN3 doesn't have getNetworks function\n    const instance2 = new NEOLine.Init();\n    const network = await instance2.getNetworks();\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance({\n      params: {\n        address: account.address,\n        contracts: [],\n      },\n    });\n    return { provider, account, network, balances: balances[account.address] };\n  };\n\n  private Dev = async (defaultNetwork: INetworkType) => {\n    const instance = DevWallet;\n    const network = await instance.getNetworks(defaultNetwork);\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance(defaultNetwork);\n    return { provider, account, network, balances };\n  };\n\n  /**\n   * TODO: Remove dev wallet when 3rd party has privatenet support\n   * @param defaultNetwork\n   */\n  init = async (defaultNetwork: INetworkType): Promise<any> => {\n    let wallet;\n    try {\n      switch (this.walletType) {\n        case O3:\n          wallet = await this.O3Wallet();\n          break;\n        case NEO_LINE:\n          wallet = await this.NeoLine();\n          break;\n        case DEV:\n          wallet = await this.Dev(defaultNetwork);\n          break;\n      }\n      return {\n        key: this.walletType,\n        ...wallet,\n      };\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  /* Control signing and send transaction. TODO:Need to improve type hardcoding later */\n  invoke = async (\n    network: INetworkType,\n    senderAddress: string,\n    invokeScript: any,\n    extraSystemFee?: string\n  ): Promise<string> => {\n    try {\n      const wallet = await this.getInstance(this.walletType);\n      let res;\n      if (this.walletType === DEV) {\n        res = await wallet.invoke(network, invokeScript);\n      } else {\n        invokeScript.signers = [\n          {\n            account: NeonWallet.getScriptHashFromAddress(senderAddress),\n            scopes: tx.WitnessScope.CalledByEntry,\n          },\n        ];\n        if (extraSystemFee) {\n          invokeScript.extraSystemFee = extraSystemFee;\n        }\n        console.log(invokeScript);\n        res = await wallet.invoke(invokeScript);\n      }\n      const submittedTx: ITransaction = {\n        network,\n        wallet: this.walletType,\n        txid: res.txid,\n        contractHash: invokeScript.scriptHash,\n        method: invokeScript.operation,\n        args: invokeScript.args,\n        createdAt: moment().format(\"MMMM Do YYYY, h:mm:ss a\"),\n      };\n      LocalStorage.addTransaction(submittedTx);\n      return res.txid;\n    } catch (e: any) {\n      console.error(e);\n      // TODO: All wallets return different errors and it seems standard is coming we need to improve handling errors.\n      throw new Error(\"Failed to invoke\");\n    }\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const FARM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\",\n  [CONST.TESTNET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\", // 11/26\n  [CONST.MAINNET]: \"\",\n};\n","import store from \"store2\";\nimport { IConnectedWallet, ITransaction } from \"../wallet/interfaces\";\nimport { FARM_SCRIPT_HASH } from \"../contracts/ftw/farm/consts\";\nimport { NFT_SCRIPT_HASH } from \"../contracts\";\n\nconst CONNECTED_WALLET = \"CONNECTED_WALLET\";\nconst TRANSACTIONS = \"TRANSACTIONS\";\n\nexport class LocalStorage {\n  public static initStorage = (network: string): ITransaction[] => {\n    const supportContracts = [\n      FARM_SCRIPT_HASH[network],\n      NFT_SCRIPT_HASH[network],\n    ];\n    const transactions = LocalStorage.getTransactions();\n    const validatedTx: ITransaction[] = [];\n    transactions.forEach((tx) => {\n      if (supportContracts.includes(tx.contractHash)) {\n        validatedTx.push(tx);\n      } else {\n        LocalStorage.removeTransaction(tx);\n      }\n    });\n    return validatedTx;\n  };\n  public static getWallet = (): IConnectedWallet | undefined =>\n    validateConnectedWallet(store.get(CONNECTED_WALLET));\n\n  public static setWallet(connectedWallet: IConnectedWallet) {\n    const validated = validateConnectedWallet(connectedWallet);\n    store.set(CONNECTED_WALLET, validated);\n  }\n\n  public static removeWallet() {\n    store.remove(CONNECTED_WALLET);\n  }\n\n  public static getTransactions = (): ITransaction[] =>\n    store.has(TRANSACTIONS) ? store.get(TRANSACTIONS) : [];\n\n  public static addTransaction(tx: ITransaction) {\n    if (store.has(TRANSACTIONS)) {\n      store.add(TRANSACTIONS, tx);\n    } else {\n      store.set(TRANSACTIONS, [tx]);\n    }\n    window.dispatchEvent(new Event(\"transactions\"));\n  }\n\n  public static updatePendingTransaction(txId: string) {\n    let transactions = store.get(TRANSACTIONS);\n    transactions = transactions.map((tx) => {\n      if (tx.txid === txId) {\n        tx.status = \"SUBMITTED\";\n      }\n      return tx;\n    });\n    store.set(TRANSACTIONS, transactions);\n  }\n\n  public static removeTransaction = (tx: ITransaction) =>\n    store.remove(TRANSACTIONS, tx);\n\n  public static clearTransaction = () => store.set(TRANSACTIONS, []);\n}\n\nconst validateConnectedWallet = (connectedWallet?: IConnectedWallet) => {\n  if (\n    !connectedWallet ||\n    !connectedWallet.account ||\n    !connectedWallet.provider ||\n    !connectedWallet.network\n  ) {\n    return undefined;\n  }\n  return connectedWallet;\n};\n//\n// const validateTransaction = (connectedWallet?: IConnectedWallet) => {\n//   if (\n//     !connectedWallet ||\n//     !connectedWallet.account ||\n//     !connectedWallet.provider ||\n//     !connectedWallet.network\n//   ) {\n//     return undefined;\n//   }\n//   return connectedWallet;\n// };\n","import { ContextOptions, IWalletStates } from \"./interfaces\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { IConnectedWallet, IWalletType } from \"../neo/wallet/interfaces\";\nimport { LocalStorage } from \"../neo/local-storage\";\nimport { sc } from \"@cityofzion/neon-core\";\nimport { WalletAPI } from \"../neo/wallet\";\nimport toast from \"react-hot-toast\";\n\nexport const WalletContext = createContext({} as IWalletStates);\nexport const WalletContextProvider = (props: {\n  options: ContextOptions;\n  children: any;\n}) => {\n  const [network] = useState(props.options.network);\n\n  const [isWalletModalActive, setWalletModalActive] = useState(false);\n\n  const [connectedWallet, setConnectedWallet] = useState<\n    IConnectedWallet | undefined\n  >(props.options.useLocalStorage ? LocalStorage.getWallet() : undefined);\n\n  const [invokeScript, setInvokeScript] = useState<\n    sc.ContractCallJson | undefined\n  >();\n\n  // const [transactions, setTransactions] = useState(\n  //   props.options.useLocalStorage ? LocalStorage.initStorage(network) : []\n  // );\n\n  const [pendingTransactions, setPendingTransactions] = useState<string[]>([]);\n\n  const openWalletModal = () => setWalletModalActive(true);\n\n  const closeWalletModal = () => setWalletModalActive(false);\n\n  const connectWallet = async (walletType: IWalletType) => {\n    try {\n      const res = await new WalletAPI(walletType).init(network);\n      setConnectedWallet(res);\n      if (props.options.useLocalStorage) {\n        LocalStorage.setWallet(res);\n      }\n      setWalletModalActive(false);\n    } catch (e: any) {\n      toast.error(e.message);\n    }\n  };\n\n  const disConnectWallet = () => {\n    LocalStorage.removeWallet();\n    setConnectedWallet(undefined);\n  };\n\n  const doInvoke = (args: sc.ContractCallJson) => {\n    if (isWalletModalActive) setWalletModalActive(false);\n    setInvokeScript(args);\n  };\n\n  const closeInvoke = () => setInvokeScript(undefined);\n\n  const addPendingTransaction = (txid: string) => {\n    setPendingTransactions([...pendingTransactions, txid]);\n  };\n\n  const removePendingTransaction = (txid: string) => {\n    setPendingTransactions(pendingTransactions.filter((i) => i !== txid));\n  };\n\n  const contextValue: IWalletStates = {\n    useDevWallet: props.options.useDevWallet,\n    network,\n    invokeScript,\n    list: WalletAPI.list,\n    connectedWallet,\n    isWalletModalActive,\n    openWalletModal,\n    closeWalletModal,\n    connectWallet,\n    disConnectWallet,\n    doInvoke,\n    closeInvoke,\n    addPendingTransaction,\n    removePendingTransaction,\n    pendingTransactions,\n  };\n\n  return (\n    <WalletContext.Provider value={contextValue}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n};\nexport const useWallet = () => useContext(WalletContext);\n","export const HOME_PATH = \"/\";\nexport const FARM_PATH = \"/gas\";\nexport const MINT_PATH = \"/NFT/mint\";\nexport const GALLERY_PATH = \"/NFT/gallery\";\nexport const SMITH_PATH = \"/smith\";\nexport const COLLECTION_PATH = \"/NFT/collection\";\n","import React, { useEffect } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useWallet } from \"../../provider\";\nimport { Network } from \"../../neo/network\";\n\nconst PendingTransaction = () => {\n  const { network, pendingTransactions, removePendingTransaction } =\n    useWallet();\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        for (const txid of pendingTransactions) {\n          const res = await Network.getRawTx(txid, network);\n          removePendingTransaction(txid);\n        }\n      } catch (e: any) {\n        console.error(e);\n      }\n    }\n\n    if (pendingTransactions.length > 0) {\n      checkTxid();\n    }\n  }, [pendingTransactions]);\n  if (pendingTransactions.length === 0) return <></>;\n  return (\n    <div className=\"navbar-item pr-0\">\n      <div\n        style={{ pointerEvents: \"none\" }}\n        className=\"is-center button is-outlined is-rounded is-small\"\n      >\n        <ClipLoader loading={true} size={15} />\n        <span className=\"ml-2\">{`${pendingTransactions.length} Pending`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default PendingTransaction;\n","import { CONST } from \"../../neo\";\n\nexport const getWalletIcon = (key: string) => {\n  let svg = \"\";\n  switch (key){\n    case CONST.DEV:\n      svg = \"/dev.png\"\n      break;\n    case CONST.O3:\n      svg = \"/o3.svg\"\n      break;\n    case CONST.NEO_LINE:\n      svg = \"/neoline.svg\"\n      break;\n  }\n  return svg\n}\n","import React, { useEffect, useState } from \"react\";\nimport { utils } from \"../../packages/neo\";\nimport { IConnectedWallet } from \"../../packages/neo/wallet/interfaces\";\nimport { useWallet } from \"../../packages/provider\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport { COLLECTION_PATH } from \"../../consts\";\nimport { NavLink } from \"react-router-dom\";\nimport { NEO_LINE, O3 } from \"../../packages/neo/consts\";\nimport neo3Dapi from \"neo3-dapi\";\ninterface IWalletDropdownProps {\n  connectedWallet: IConnectedWallet;\n}\nconst WalletDropdown = ({ connectedWallet }: IWalletDropdownProps) => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n\n  const onActive = () => setActive(!isActive);\n\n  useEffect(() => {\n    const refresh = () => {\n      connectWallet(connectedWallet.key);\n    };\n    const disconnected = () => {\n      disConnectWallet();\n    };\n\n    if (connectedWallet.key === NEO_LINE) {\n      window.addEventListener(\"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.NETWORK_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.DISCONNECTED\", disconnected);\n      return () => {\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.NETWORK_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.DISCONNECTED\",\n          disconnected\n        );\n      };\n    }\n    if (connectedWallet.key === O3) {\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.DISCONNECTED,\n        disconnected\n      );\n\n      return () => {\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.DISCONNECTED,\n          disconnected\n        );\n      };\n    }\n  }, []);\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className=\"button is-small is-black is-rounded\"\n          aria-controls=\"dropdown-wallet\"\n        >\n          <span>{utils.truncateAddress(connectedWallet.account.address)}</span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <img src={getWalletIcon(connectedWallet.key)} />\n              </div>\n              <div className=\"media-content\">\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </div>\n            </div>\n          </div>\n          <hr className=\"dropdown-divider\" />\n          <NavLink\n            className=\"dropdown-item has-text-dark\"\n            onClick={() => setActive(false)}\n            to={COLLECTION_PATH}\n          >\n            My NFT\n          </NavLink>\n          <hr className=\"dropdown-divider\" />\n          <a onClick={handleDisconnectWallet} className=\"dropdown-item\">\n            Disconnect\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaBars, FaWallet } from \"react-icons/fa\";\nimport Logo from \"./Logo\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { useWallet } from \"../../packages/provider\";\nimport { utils } from \"../../packages/neo\";\nimport {\n  COLLECTION_PATH,\n  FARM_PATH,\n  GALLERY_PATH,\n  SMITH_PATH,\n} from \"../../consts\";\nimport PendingTransaction from \"../../packages/ui/PendingTransaction\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\n\nconst Header = () => {\n  const { toggleSidebar, toggleWalletSidebar } = useApp();\n  const { connectedWallet, network, disConnectWallet } = useWallet();\n  const [isActive, setActive] = useState(false);\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    disConnectWallet();\n  };\n  return (\n    <nav\n      className=\"navbar has-shadow is-white is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ height: \"52px\" }}\n    >\n      <div className=\"container\">\n        <div\n          className=\"navbar-brand\"\n          style={{ justifyContent: \"space-between\" }}\n        >\n          <div\n            role=\"button\"\n            className=\"navbar-burger is-center is-hidden-tablet\"\n            style={{ marginLeft: 0 }}\n            onClick={toggleSidebar}\n          >\n            <FaBars />\n          </div>\n          <Link\n            className=\"has-text-white navbar-item is-center\"\n            to=\"/\"\n            // style={{ margin: \"auto\" }}\n          >\n            <Logo />\n          </Link>\n          <div\n            role=\"button\"\n            className={`navbar-burger is-center is-hidden-desktop`}\n            onClick={() => {\n              if (connectedWallet) {\n                setActive(!isActive);\n              } else {\n                toggleWalletSidebar();\n              }\n            }}\n            style={{ marginLeft: 0 }}\n          >\n            <FaWallet />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div\n            className={`navbar-menu  is-hidden-tablet ${\n              isActive && \"is-active\"\n            }`}\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item\">\n                <div className=\"media\">\n                  <div className=\"media-left\">\n                    <img src={getWalletIcon(connectedWallet.key)} />\n                  </div>\n                  <div className=\"media-content\">\n                    {utils.truncateAddress(connectedWallet.account.address)}\n                    {/*{utils.truncateAddress(connectedWallet.account.address)}*/}\n                  </div>\n                </div>\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <Link\n                onClick={() => setActive(false)}\n                className=\"navbar-item has-text-dark\"\n                to={COLLECTION_PATH}\n              >\n                My NFT\n              </Link>\n              <hr className=\"dropdown-divider\" />\n              <a onClick={handleDisconnectWallet} className=\"navbar-item\">\n                Disconnect wallet\n              </a>\n            </div>\n          </div>\n        )}\n\n        <div className=\"navbar-menu ml-3\">\n          <div className=\"navbar-start\">\n            <NavLink\n              activeClassName=\"is-active\"\n              to={GALLERY_PATH}\n              className=\"navbar-item\"\n            >\n              <strong>Rune</strong>\n            </NavLink>\n            <NavLink\n              activeClassName=\"is-active\"\n              to={SMITH_PATH}\n              className=\"navbar-item\"\n            >\n              <strong>Smith</strong>\n            </NavLink>\n            {/*<NavLink*/}\n            {/*  exact={true}*/}\n            {/*  activeClassName=\"is-active\"*/}\n            {/*  to={FARM_PATH}*/}\n            {/*  className=\"navbar-item\"*/}\n            {/*>*/}\n            {/*  <strong>GAS-Fi️</strong>*/}\n            {/*</NavLink>*/}\n          </div>\n        </div>\n        <div className=\"navbar-end is-hidden-touch\">\n          <div className=\"navbar-item\">\n            <small>{network}</small>\n          </div>\n          <PendingTransaction />\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              {/*<button*/}\n              {/*  onClick={toggleWalletSidebar}*/}\n              {/*  className=\"button is-small is-black is-rounded\"*/}\n              {/*>*/}\n              {/*  {connectedWallet*/}\n              {/*    ? utils.truncateAddress(connectedWallet.account.address)*/}\n              {/*    : \"Connect wallet\"}*/}\n              {/*</button>*/}\n              {connectedWallet ? (\n                <WalletDropdown connectedWallet={connectedWallet} />\n              ) : (\n                <button\n                  onClick={toggleWalletSidebar}\n                  className=\"button is-small is-black is-rounded\"\n                >\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown } from \"react-icons/all\";\nimport { useApp } from \"../../../common/hooks/use-app\";\nimport { useWallet } from \"../../provider\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletDropdown = () => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectedWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n  if (!connectedWallet) {\n    return (\n      <button className=\"button is-white \" onClick={() => setActive(!isActive)}>\n        <strong>Wallet</strong>\n      </button>\n    );\n  }\n  return (\n    <div className={`dropdown ${isActive && \"is-active\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-white\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu3\"\n          onClick={() => setActive(!isActive)}\n        >\n          <span className=\"icon is-small\">\n            <img src={getWalletIcon(connectedWallet.key)} />\n          </span>\n          <span>\n            <strong>Wallet</strong>\n          </span>\n          <span className=\"icon is-small\">\n            <FaAngleDown />\n            {/*<i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>*/}\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a\n            onClick={handleDisconnectWallet}\n            href=\"#\"\n            className=\"dropdown-item\"\n          >\n            Disconnect\n          </a>\n          {/*<hr className=\"dropdown-divider\"/>*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletList = () => {\n  const { connectWallet, list, useDevWallet } = useWallet();\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          if (!useDevWallet && _wallet.key === DEV) return false;\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} alt=\"React Logo\" />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n","import React from \"react\";\nimport { IBalance } from \"../../neo/wallet/interfaces\";\n\nconst AssetCard = (props: IBalance) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        <strong>{props.symbol}</strong>\n      </div>\n      <div className=\"media-content\"></div>\n      <div className=\"media-right has-text-right\">{props.amount}</div>\n    </div>\n  );\n};\n\nexport default AssetCard;\n","import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../neo/contracts\";\nimport { IRuneMeta } from \"../../neo/contracts/ftw/nft/interfaces\";\nimport { useWallet } from \"../../provider\";\nimport toast from \"react-hot-toast\";\nimport DisplayRune from \"../../../ui/pages/Gallery/DisplayRune\";\nimport DisplayRandomRune from \"../../../ui/components/DisplayRandomRune\";\nimport { IConnectedWallet } from \"../../neo/wallet/interfaces\";\n\ninterface IRunesProps {\n  connectedWallet: IConnectedWallet;\n}\nconst Runes = ({ connectedWallet }: IRunesProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  useState<IRuneMeta>();\n  const { network } = useWallet();\n  // const onPropertiesModalActive = (obj: IRuneMeta) => {\n  //   if (connectedWallet) {\n  //     setPropertiesModalActive(obj);\n  //   } else {\n  //     toast.error(\"Please connect wallet.\");\n  //   }\n  // };\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getTokens();\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet]);\n  return (\n    <div>\n      <div\n        style={{\n          flexFlow: \"wrap\",\n          // width: \"640px\",\n          // margin: \"0 auto\"\n        }}\n        className=\"is-flex\"\n      >\n        {/*{tokens.map((tokenId) => (*/}\n        {/*  <DisplayRune*/}\n        {/*    tokenId={tokenId}*/}\n        {/*    network={network}*/}\n        {/*    onClick={() => false}*/}\n        {/*  />*/}\n        {/*))}*/}\n        {/*<DisplayRandomRune width=\"64px\" height=\"64px\" />*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Runes;\n","import React, { useEffect } from \"react\";\nimport { utils } from \"../../neo\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport WalletList from \"./WalletList\";\nimport AssetCard from \"./AssetCard\";\nimport { useWallet } from \"../../provider\";\nimport Runes from \"./Runes\";\nimport { Network } from \"../../neo/network\";\n\nconst Wallet = (props) => {\n  const { connectedWallet } = useWallet();\n  return (\n    <>\n      <header className=\"level is-mobile p-3 is-marginless\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <WalletDropdown />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <small>\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </small>\n            </div>\n          </div>\n        )}\n      </header>\n      <hr className=\"m-0\" />\n      <section className=\"p-5\">\n        {connectedWallet ? (\n          <>\n            <div>\n              {connectedWallet &&\n                connectedWallet.balances.map((balance) => {\n                  return <AssetCard key={balance.symbol} {...balance} />;\n                })}\n            </div>\n            <Runes connectedWallet={connectedWallet} />\n          </>\n        ) : (\n          <WalletList />\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport Wallet from \"../../packages/ui/Wallet\";\nimport { useWallet } from \"../../packages/provider\";\n\nconst WalletSidebar = () => {\n  const { walletSidebarStatus, toggleWalletSidebar } = useApp();\n  const { connectedWallet } = useWallet();\n  if (connectedWallet) return <div></div>;\n  return (\n    <SideNav\n      openFromRight={true}\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={walletSidebarStatus}\n      onHideNav={toggleWalletSidebar}\n      children={<Wallet />}\n    />\n  );\n};\n\nexport default WalletSidebar;\n","import React from \"react\";\n\nconst PageLayout = (props) => {\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        {props.children}\n      </div>\n    </section>\n  );\n\n};\n\nexport default PageLayout;\n","import React, { ReactElement } from \"react\";\nimport $ from \"jquery\";\n\ninterface IProps {\n  onClose: () => void;\n  children: ReactElement;\n  isLoading?: boolean;\n  error?: string;\n}\nconst ModalCard = ({ onClose, children, isLoading, error }: IProps) => {\n  React.useEffect(() => {\n    $(\"html\").addClass(\"is-clipped\");\n    return () => {\n      $(\"html\").removeClass(\"is-clipped\");\n    };\n  }, []);\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={onClose} />\n      <section className=\"modal-content\">\n        <div className=\"box\">{isLoading ? <div>Loading</div> : error ? <div>Error</div> : children}</div>\n      </section>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};\n\nexport default ModalCard;\n","import React from \"react\";\n\n/**\n * TODO: Better ux needed\n * @param props\n * @constructor\n */\ninterface ITransactionSuccessProps {\n  txid: string;\n  onClick: () => void;\n}\nconst TransactionSubmitted = ({ txid, onClick }: ITransactionSuccessProps) => {\n  return (\n    <div className=\"has-text-centered\">\n      <h1 className=\"title is-5\">Transaction submitted!</h1>\n      <p className=\"subtitle is-7\">{txid}</p>\n      <button onClick={onClick} className=\"button is-black\">\n        Close\n      </button>\n    </div>\n  );\n};\n\nexport default TransactionSubmitted;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport NumberFormat from \"react-number-format\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  onClose: () => void;\n}\nconst ActionModal = ({ range, onClose }: IActionModal) => {\n  const [amount, setAmount] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onDeposit = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).deposit(\n          connectedWallet,\n          amount,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">\n            {/*<img src={\"/neo_512_512.svg\"} />*/}\n            Deposit NEO\n          </h1>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Your position</label>\n                <div className=\"select is-fullwidth\">\n                  <select\n                    value={position}\n                    onChange={(e) => setPosition(e.target.value)}\n                  >\n                    <option value=\"\">Select your position</option>\n                    {_.range(0, range).map((i) => (\n                      <option key={i} value={i + 1}>\n                        {i + 1}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Amount</label>\n                <NumberFormat\n                  autoFocus={true}\n                  // ref={this.props, inputRef}\n                  decimalScale={0}\n                  inputMode=\"decimal\"\n                  className=\"input\"\n                  value={amount}\n                  onValueChange={(value) => {\n                    setAmount(value.value);\n                  }}\n                  thousandSeparator={true}\n                  suffix={\" NEO\"}\n                  allowLeadingZeros={false}\n                />\n              </div>\n            </div>\n          </div>\n          <button\n            onClick={onDeposit}\n            disabled={!position || !amount || parseFloat(amount) < 1}\n            className=\"button is-button is-black\"\n          >\n            Deposit\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default ActionModal;\n","import React from \"react\";\nimport Countdown from \"react-countdown\";\n\ninterface ISnapshotCountdownProps {\n  timeLeft: number;\n  onCreateSnapshot: () => void;\n}\nconst SnapshotCountdown = ({\n  timeLeft,\n  onCreateSnapshot,\n}: ISnapshotCountdownProps) => {\n  const CreateSnapshotBtn = () => (\n    <button onClick={onCreateSnapshot} className=\"button is-button is-primary\">\n      Creat snapshot\n    </button>\n  );\n  if (timeLeft < 1) {\n    return <CreateSnapshotBtn />;\n  }\n  return (\n    <Countdown\n      date={Date.now() + timeLeft}\n      renderer={(props) => {\n        if (props.completed) {\n          return <CreateSnapshotBtn />;\n        } else {\n          return (\n            <span>\n              {props.hours}:{props.minutes}:{props.seconds}\n            </span>\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default SnapshotCountdown;\n","import React from \"react\";\nimport { IFarmSnapshot } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface ISnapshotListProps {\n  item: IFarmSnapshot;\n}\nconst SnapshotCard = ({ item }: ISnapshotListProps) => {\n  return (\n    <div key={item.createdAt} className=\"media\">\n      <div className=\"media-left\">#{item.no}</div>\n      <div className=\"media-content\">\n        Position: <span className=\"is-capitalized\">{item.winPosition}</span>\n        <br />\n        GAS: {item.totalGas}\n        <br />\n        {item.createdAt}\n      </div>\n    </div>\n  );\n};\n\nexport default SnapshotCard;\n","import React, { useState } from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\nimport SnapshotCard from \"./SnapshotCard\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCreateSnapshot = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).createSnapshot(\n          connectedWallet\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  if (!contractStatus) return <div></div>;\n  return (\n    <div className=\"box\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">Snapshots</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <SnapshotCountdown\n              timeLeft={parseFloat(contractStatus.timeLeft)}\n              onCreateSnapshot={onCreateSnapshot}\n            />\n          </div>\n        </div>\n      </div>\n\n      {contractStatus.snapshots.items.map((item) => (\n        <SnapshotCard key={item.no} item={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React from \"react\";\n\nconst NotifyError = ({ msg, onClose }) => {\n  if (!msg) return <></>;\n  return (\n    <div className=\"notification is-danger\">\n      <button onClick={onClose} className=\"delete\" />\n      {msg}\n    </div>\n  );\n};\n\nexport default NotifyError;\n","import React from \"react\";\nimport { IFarmDepositRecord } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface IMyPositionProps {\n  deposit?: IFarmDepositRecord;\n  lastSnapshotNo: string;\n  onCancel: () => void;\n  onPositionChange: () => void;\n  onClaim: () => void;\n}\nconst MyPosition = ({\n  deposit,\n  lastSnapshotNo,\n  onCancel,\n  onClaim,\n  onPositionChange,\n}: IMyPositionProps) => {\n  if (!deposit) return <div></div>;\n  const lastClaimNo = deposit.lastClaimNo ? parseFloat(deposit.lastClaimNo) : 0;\n  const isClaimable = parseFloat(lastSnapshotNo) > lastClaimNo;\n  return (\n    <>\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item is-block\">\n            <div className=\"has-text-grey-lighter\">\n              My position\n              <br />\n              <span className=\"is-capitalized\">\n                {deposit.position} / {deposit.amount} NEO\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"buttons\">\n            {!isClaimable && (\n              <button\n                onClick={onPositionChange}\n                className=\"button is-black is-outlined is-inverted\"\n              >\n                Change position\n              </button>\n            )}\n            <button\n              onClick={onCancel}\n              className=\"button is-black is-outlined is-inverted\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n      {isClaimable && (\n        <button onClick={onClaim} className=\"button is-primary is-fullwidth\">\n          Claim Reward\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default MyPosition;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport MyPosition from \"./MyPosition\";\n\ninterface IPoolProps {\n  contractStatus?: IFarmContractStatus;\n  onDeposit: () => void;\n  onCancel: () => void;\n\tonPositionChange: () => void;\n  onClaim: () => void;\n}\nconst Pool = ({ contractStatus, onDeposit, onCancel, onClaim, onPositionChange }: IPoolProps) => {\n  return (\n    <div className=\"\">\n      <div className=\"box\">\n        <div className=\"level is-mobile\">\n          <div className=\"level-left\">\n            <div className=\"level-item is-block\">\n              <h1 className=\"title is-4 is-marginless\">Total</h1>\n            </div>\n          </div>\n          <div className=\"level-right\">\n            <div>\n              {contractStatus?.neoBalance} <strong>NEO</strong>\n              <br />\n              {contractStatus?.ftwBalance} <strong>FTW</strong>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {contractStatus && contractStatus.deposit ? (\n        <MyPosition\n          deposit={contractStatus.deposit}\n          lastSnapshotNo={contractStatus.snapshots.totalItems}\n          onCancel={onCancel}\n          onClaim={onClaim}\n          onPositionChange={onPositionChange}\n        />\n      ) : (\n        <button onClick={onDeposit} className=\"button is-primary is-fullwidth\">\n          Deposit\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Pool;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal, addPendingTransaction } =\n    useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).remove(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(txid);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm close</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Close my position\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).claim(connectedWallet);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm claim</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Claim my reward\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\n\ninterface IClaimsProps {\n  contractStatus?: IFarmContractStatus;\n  onClaim: () => void;\n}\nconst Claims = ({ contractStatus, onClaim }: IClaimsProps) => {\n  if (!contractStatus) return <div></div>;\n  if (!contractStatus.claims) return <div></div>;\n  if (!contractStatus.deposit) return <div></div>;\n  const lastClaimNo = contractStatus.deposit.lastClaimNo\n    ? parseFloat(contractStatus.deposit.lastClaimNo)\n    : 0;\n  const isClaimable =\n    parseFloat(contractStatus.snapshots.totalItems) > lastClaimNo;\n  return (\n    <div className=\"box\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">My Claims</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            {isClaimable && (\n              <button\n                onClick={onClaim}\n                className=\"button is-primary is-fullwidth\"\n              >\n                Claim Reward\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      {contractStatus.claims.items.map((item) => {\n        return (\n          <div key={item.createdAt} className=\"media\">\n            <div className=\"media-left\">#{item.no}</div>\n            <div className=\"media-content\">\n              Snapshots: {`${item.from} ~ ${item.end}`}\n              <br />\n              GAS: {item.GAS}\n              <br />\n              FTW: {item.FTW}\n              <br />\n              {item.createdAt}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Claims;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport NumberFormat from \"react-number-format\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  currentPosition: string;\n  onClose: () => void;\n}\nconst PositionModal = ({ currentPosition, range, onClose }: IActionModal) => {\n  const [position, setPosition] = useState(currentPosition);\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onChange = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).changePosition(\n          connectedWallet,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-spaced\">Change your position</h1>\n          <p className=\"subtitle is-6\">\n            Your current position is <strong>{currentPosition}</strong>\n          </p>\n          <div className=\"field\">\n            <label className=\"label\">New position</label>\n            <div className=\"select is-fullwidth\">\n              <select\n                value={position}\n                onChange={(e) => setPosition(e.target.value)}\n              >\n                <option value=\"\">Select new position</option>\n                {_.range(0, range)\n                  .filter((i) => !(i + 1 === parseFloat(currentPosition)))\n                  .map((i) => (\n                    <option key={i} value={i + 1}>\n                      {i + 1}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <button\n            onClick={onChange}\n            disabled={!position}\n            className=\"button is-button is-black\"\n          >\n            Change\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PositionModal;\n","import React, { useState } from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\nimport SnapshotCard from \"./SnapshotCard\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCreateSnapshot = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).createSnapshot(\n          connectedWallet\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  if (!contractStatus) return <div></div>;\n  return (\n    <div className=\"box\">\n\t    <h1 className=\"title is-4\">About</h1>\n\n\t    <h4 className=\"title is-6\">Current settings</h4>\n\t    <p className=\"subtitle is-6\">\n\t\t    Range: {contractStatus.range}\n\t\t    <br />\n\t\t    Interval: {contractStatus.interval}\n\t    </p>\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport ActionModal from \"./ActionModal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport toast from \"react-hot-toast\";\nimport SnapshotList from \"./SnapshotList\";\nimport NotifyError from \"../../components/NotifyError\";\nimport Pool from \"./Pool\";\nimport CancelModal from \"./CancelModal\";\nimport ClaimModal from \"./ClaimModal\";\nimport Claims from \"./Claims\";\nimport PositionModal from \"./PositionModal\";\nimport About from \"./About\";\n\nconst Farm = () => {\n  // let location = useLocation();\n  const [route, setRoute] = useState(\"POOL\");\n  const [modalActive, setModalActive] = useState(false);\n  const [cancelModalActive, setCancelModalActive] = useState(false);\n  const [claimModalActive, setClaimModalActive] = useState(false);\n  const [positionModalActive, setPositionModalActive] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [contractStatus, setContractStatus] = useState<IFarmContractStatus>();\n  const onActive = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onCancelModalActive = () => setCancelModalActive(true);\n  const onClaimModalActive = () => setClaimModalActive(true);\n  const onPositionChange = () => setPositionModalActive(true);\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new FarmContract(network).getStatus(connectedWallet);\n        setContractStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, route]);\n  return (\n    <PageLayout>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-half\">\n          <div className=\"box has-background-black\">\n            <div className=\"buttons has-background-dark p-3\">\n              <button\n                onClick={() => setRoute(\"POOL\")}\n                className={`button mb-0 ${\n                  route === \"POOL\" ? \"is-black\" : \"is-dark\"\n                }`}\n              >\n                Pool\n              </button>\n\n              {connectedWallet && contractStatus && contractStatus.deposit && (\n                <button\n                  onClick={() => setRoute(\"CLAIMS\")}\n                  className={`button mb-0 ${\n                    route === \"CLAIMS\" ? \"is-black\" : \"is-dark\"\n                  }`}\n                >\n                  Claims\n                </button>\n              )}\n\n              <button\n                onClick={() => setRoute(\"SNAPSHOTS\")}\n                className={`button mb-0 ${\n                  route === \"SNAPSHOTS\" ? \"is-black\" : \"is-dark\"\n                }`}\n              >\n                Snapshots\n              </button>\n              <button\n                onClick={() => setRoute(\"ABOUT\")}\n                className={`button mb-0 ${\n                  route === \"ABOUT\" ? \"is-black\" : \"is-dark\"\n                }`}\n              >\n                About\n              </button>\n            </div>\n\n            <NotifyError msg={error} onClose={() => setError(\"\")} />\n            {route === \"POOL\" && (\n              <Pool\n                contractStatus={contractStatus}\n                onPositionChange={onPositionChange}\n                onDeposit={onActive}\n                onCancel={onCancelModalActive}\n                onClaim={onClaimModalActive}\n              />\n            )}\n            {route === \"SNAPSHOTS\" && (\n              <SnapshotList contractStatus={contractStatus} />\n            )}\n            {route === \"CLAIMS\" && (\n              <Claims\n                onClaim={onClaimModalActive}\n                contractStatus={contractStatus}\n              />\n            )}\n            {route === \"ABOUT\" && <About contractStatus={contractStatus} />}\n          </div>\n        </div>\n      </div>\n      {contractStatus && modalActive && (\n        <ActionModal\n          range={contractStatus.range}\n          onClose={() => setModalActive(false)}\n        />\n      )}\n      {contractStatus && contractStatus.deposit && positionModalActive && (\n        <PositionModal\n          currentPosition={contractStatus.deposit.position}\n          range={contractStatus.range}\n          onClose={() => setPositionModalActive(false)}\n        />\n      )}\n      {cancelModalActive && (\n        <CancelModal onClose={() => setCancelModalActive(false)} />\n      )}\n      {claimModalActive && (\n        <ClaimModal onClose={() => setClaimModalActive(false)} />\n      )}\n    </PageLayout>\n  );\n};\n\nexport default Farm;\n","import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../packages/neo/contracts/ftw/nft/interfaces\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n}\n\nconst DisplayRune = ({\n  width,\n  height,\n  tokenId,\n  network,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(tokenId);\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image\"\n      onClick={() => onClick(token)}\n    >\n      <img src={token.image} />\n    </figure>\n  );\n};\n\nexport default DisplayRune;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { IRuneMeta } from \"../../../packages/neo/contracts/ftw/nft/interfaces\";\n\ninterface IPropertiesModal {\n  properties: IRuneMeta;\n  onClose: () => void;\n}\nconst PropertiesModal = ({ properties, onClose }: IPropertiesModal) => {\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <h1 className=\"title is-4\">{properties.name}</h1>\n        <figure className=\"image is-square\">\n          <img src={properties.image} />\n        </figure>\n        <p className=\"subtitle is-7 has-text-right mt-3\">{properties.owner}</p>\n      </>\n    </Modal>\n  );\n};\n\nexport default PropertiesModal;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport DisplayRune from \"../Gallery/DisplayRune\";\nimport PropertiesModal from \"../Gallery/PropertiesModal\";\nimport { IRuneMeta } from \"../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport DisplayRandomRune from \"../../components/DisplayRandomRune\";\nimport { GALLERY_PATH } from \"../../../consts\";\nimport { Link } from \"react-router-dom\";\n\nconst MyCollection = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [tokens, setTokens] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] =\n    useState<IRuneMeta>();\n  const { connectedWallet, network } = useWallet();\n  const onPropertiesModalActive = (obj: IRuneMeta) => {\n    if (connectedWallet) {\n      setPropertiesModalActive(obj);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new NFTContract(network).getTokens();\n        setTokens(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet]);\n  return (\n    <>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">My collection</h1>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"columns is-multiline\">\n            {tokens.length === 0 ? (\n              tokens.map((tokenId) => (\n                <div className=\"column is-3\">\n                  <DisplayRune\n                    width=\"100%\"\n                    height=\"100%\"\n                    tokenId={tokenId}\n                    network={network}\n                    onClick={onPropertiesModalActive}\n                  />\n                </div>\n              ))\n            ) : (\n              <div className=\"column is-3\">\n                <div className=\"box\">\n                  <div className=\"block\">\n                    <p>You don't have any runes yet</p>\n                  </div>\n\n                  <Link className=\"button is-primary\" to={GALLERY_PATH}>\n                    Go Get Them\n                  </Link>\n                </div>\n                {/*<DisplayRandomRune width=\"100%\" height=\"100%\" />*/}\n              </div>\n            )}\n          </div>\n        )}\n      </PageLayout>\n      {/*<button onClick={onMint} className=\"button is-black\">Mint</button>*/}\n      {propertiesModalActive && (\n        <PropertiesModal\n          properties={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MyCollection;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport PropertiesModal from \"./PropertiesModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport DisplayRune from \"./DisplayRune\";\nimport { IRuneMeta } from \"../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport DisplayRandomRune from \"../../components/DisplayRandomRune\";\n\nconst Gallery = (props) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] =\n    useState<IRuneMeta>();\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPropertiesModalActive = (obj: IRuneMeta) => {\n    if (connectedWallet) {\n      setPropertiesModalActive(obj);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).mint(connectedWallet);\n        addPendingTransaction(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  const withdraw = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).deploy(connectedWallet);\n        console.log(res);\n      } catch (e: any) {\n        console.log(e);\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new NFTContract(network).getTokens();\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet]);\n  return (\n    <>\n      <section className=\"hero is-white is-medium\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column\">\n                <div>\n                  <h1 className=\"title\">Forthewin Runes</h1>\n                  <p className=\"subtitle\">Algorithms-generated lucky runes</p>\n                  <div className=\"field is-grouped is-grouped-multiline mb-5\">\n                    <div className=\"control\">\n                      <div className=\"tags has-addons\">\n                        <span className=\"tag is-dark\">Max supply</span>\n                        <span className=\"tag is-black\">500</span>\n                      </div>\n                    </div>\n                    <div className=\"control\">\n                      <div className=\"tags has-addons\">\n                        <span className=\"tag is-dark\">Attribute #1</span>\n                        <span className=\"tag is-black\">Phase</span>\n                      </div>\n                    </div>\n                    <div className=\"control\">\n                      <div className=\"tags has-addons\">\n                        <span className=\"tag is-dark\">Attribute #2</span>\n                        <span className=\"tag is-black\">Luck</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"block has-text-centered-mobile is-hidden-mobile\">\n                    <button\n                      onClick={onMint}\n                      className=\"button is-primary press-font\"\n                    >\n                      Mint: 10 GAS\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"column\">\n                <div\n                  className=\"block\"\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\n                >\n                  <DisplayRandomRune\n                    isActive={true}\n                    width=\"250px\"\n                    height=\"250px\"\n                  />\n                </div>\n                <div className=\"block has-text-centered-mobile is-hidden-tablet\">\n                  <button\n                    onClick={onMint}\n                    className=\"button is-primary press-font\"\n                  >\n                    Mint: 10 GAS\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div\n          style={{\n            flexFlow: \"wrap\",\n            // width: \"640px\",\n            // margin: \"0 auto\"\n          }}\n          className=\"is-flex\"\n        >\n          {tokens.map((tokenId) => (\n            <DisplayRune\n              width={\"20%\"}\n              height={\"20%\"}\n              tokenId={tokenId}\n              network={network}\n              onClick={onPropertiesModalActive}\n            />\n          ))}\n        </div>\n      </PageLayout>\n      {/*<button onClick={onMint} className=\"button is-black\">Mint</button>*/}\n      {propertiesModalActive && (\n        <PropertiesModal\n          properties={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { GALLERY_PATH, SMITH_PATH } from \"../../consts\";\n\nconst SidebarNav = (props) => {\n  const location = useLocation();\n  const { toggleSidebar } = useApp();\n  return (\n    <aside className=\"menu p-5\">\n      <p className=\"menu-label\">Menu</p>\n      <ul className=\"menu-list\">\n        <li>\n          <NavLink\n            onClick={toggleSidebar}\n            activeClassName={\"is-active\"}\n            to={GALLERY_PATH}\n          >\n            Rune\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            onClick={toggleSidebar}\n            activeClassName={\"is-active\"}\n            to={SMITH_PATH}\n          >\n            Smith\n          </NavLink>\n        </li>\n        {/*<li>*/}\n        {/*  <NavLink*/}\n        {/*    onClick={toggleSidebar}*/}\n        {/*    activeClassName={\"is-active\"}*/}\n        {/*    to={FARM_PATH}*/}\n        {/*  >*/}\n        {/*    GAS*/}\n        {/*  </NavLink>*/}\n        {/*</li>*/}\n      </ul>\n    </aside>\n  );\n};\n\nexport default SidebarNav;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport SidebarNav from \"./SidebarNav\";\n\nconst MobileMenuSlider = (props) => {\n  const { sidebarStatus, toggleSidebar } = useApp();\n  return (\n    <SideNav\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={sidebarStatus}\n      onHideNav={toggleSidebar}\n      children={<SidebarNav />}\n    />\n  );\n};\n\nexport default MobileMenuSlider;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport PageLayout from \"../components/PageLayout\";\n// tslint:disable-next-line:no-submodule-imports\nimport DOTS from \"vanta/dist/vanta.halo.min\";\nimport DisplayRandomRune from \"../components/DisplayRandomRune\";\n// import * as THREE from \"three\";\n\nconst Home = (props) => {\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        DOTS({\n          el: myRef.current,\n          mouseControls: true,\n          touchControls: true,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          backgroundColor: 0x80822,\n          size: 2.8,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) {\n        // @ts-ignore\n        vantaEffect.destroy();\n      }\n    };\n  }, [vantaEffect]);\n  return (\n    <div>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-flex\" style={{ alignItems: \"center\" }}>\n                <div>\n                  <h1 className=\"title\">Forthewin is back</h1>\n                  <p className=\"subtitle\">\n                    Migrate your Neo-legacy FTX to the new <span>N3 FTW</span>\n                  </p>\n                  <a\n                    target=\"_blank\"\n                    href=\"https://nepmigration.com/\"\n                    className=\"button is-primary\"\n                  >\n                    Go to Official Site\n                  </a>\n                </div>\n              </div>\n              <div className=\"column is-hidden-touch\">\n                <div\n                  className=\"block\"\n                  // style={{ display: \"flex\", justifyContent: \"center\" }}\n                >\n                  <video style={{ width: \"450px\" }} autoPlay loop>\n                    <source src={\"/migration.mp4\"} type=\"video/mp4\" />\n                  </video>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns halo\" ref={myRef}>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>Neo-legacy</h3>\n                <h6>Symbol</h6>\n                <p>FTX</p>\n                <h6>Contract hash</h6>\n                <p>0xaac66f9779ca67d819d05492805d251dab02fc7b</p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://neotracker.io/asset/aac66f9779ca67d819d05492805d251dab02fc7b\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>N3</h3>\n                <h6>Symbol</h6>\n                <p>FTW</p>\n                <h6>Contract hash</h6>\n                <p>\n                  <a\n                    target=\"_blank\"\n                    className=\"has-text-dark\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\n                  </a>\n                </p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://explorer.onegate.space/NEP17tokeninfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Home;\n","import { CONST } from \"../../../index\";\n\nexport const SMITH_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"799704f9d8588b183204e154f8eea1de35bb3ecd\",\n  [CONST.TESTNET]: \"799704f9d8588b183204e154f8eea1de35bb3ecd\",\n  [CONST.MAINNET]: \"f860bbdcc5091a9ae7812b047fd325dfa7905ee1\",\n};\n","import {base64ToAddress, base64ToDate, base64ToHash160, base64ToString} from \"../../../utils\";\n\nexport const parsePaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseRecord(stackItem[3].value),\n  };\n};\n\nconst parseRecord = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractOwner: base64ToAddress(item.value[1].value),\n      contractHash: base64ToHash160(item.value[2].value), // NEO amount\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      decimals: item.value[5].value, // NEO amount\n      totalSupply: item.value[6].value, // NEO amount\n      author: base64ToString(item.value[7].value), // NEO amount\n      description: base64ToString(item.value[8].value), // NEO amount\n      createdAt: base64ToDate(item.value[9].value),\n    };\n  });\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { SMITH_SCRIPT_HASH } from \"./consts\";\nimport { ISmithContractStatus } from \"./interfaces\";\nimport { parsePaginate } from \"./helpers\";\nimport { wallet as NeonWallet } from \"@cityofzion/neon-core\";\n\nexport class SmithContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = SMITH_SCRIPT_HASH[networkType];\n  }\n\n  create = async (\n    connectedWallet: IConnectedWallet,\n    contractName: string,\n    symbol: string,\n    decimals: string,\n    totalSupply: string,\n    author: string,\n    description: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: \"100000000\",\n        },\n        {\n          type: \"Array\",\n          value: [\n            {\n              type: \"Hash160\",\n              value: NeonWallet.getScriptHashFromAddress(\n                connectedWallet.account.address\n              ),\n            },\n            {\n              type: \"String\",\n              value: contractName,\n            },\n            {\n              type: \"String\",\n              value: author,\n            },\n            {\n              type: \"String\",\n              value: description,\n            },\n            {\n              type: \"String\",\n              value: symbol,\n            },\n            {\n              type: \"Integer\",\n              value: totalSupply,\n            },\n            {\n              type: \"Integer\",\n              value: decimals,\n            },\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getStatus = async (): Promise<ISmithContractStatus> => {\n    const records = {\n      operation: \"getRecords\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n\n    const scripts = [records];\n\n    const res = await Network.read(this.network, scripts);\n    return {\n      records: parsePaginate(res.stack[0].value),\n    };\n  };\n  //\n  // loadNep17 = async (): Promise<ISmithContractStatus> => {\n  //\n  // \t// const symbol = {\n  // \t// \toperation: \"symbol\",\n  // \t// \tscriptHash: this.contractHash,\n  // \t// \targs: [\n  // \t// \t],\n  // \t// };\n  // \t// const decimals = {\n  // \t// \toperation: \"decimals\",\n  // \t// \tscriptHash: this.contractHash,\n  // \t// \targs: [\n  // \t// \t],\n  // \t// };\n  // \t// const totalSupply = {\n  // \t// \toperation: \"totalSupply\",\n  // \t// \tscriptHash: this.contractHash,\n  // \t// \targs: [\n  // \t// \t\t{\n  // \t// \t\t\ttype: \"Integer\",\n  // \t// \t\t\tvalue: 1,\n  // \t// \t\t},\n  // \t// \t],\n  // \t// };\n  //\n  // \tconst scripts = [records];\n  //\n  // \tconst res = await Network.read(this.network, scripts);\n  // \treturn {\n  // \t\trecords: parseSnapshotPaginate(res.stack[0].value),\n  // \t};\n  // };\n}\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport NumberFormat from \"react-number-format\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst ActionModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    decimals: \"8\",\n    totalSupply: \"\",\n    author: \"\",\n    description: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SmithContract(network).create(\n          connectedWallet,\n          values.name,\n          values.symbol,\n          values.decimals,\n          values.totalSupply,\n          values.author,\n          values.description\n        );\n        setTxid(res);\n      } catch (e) {\n        console.error(e);\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title\">NEP-17 Token Mint</h1>\n\n          <div className=\"field is-grouped is-grouped-multiline\">\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Deploy fee</span>\n                <span className=\"tag is-primary\">10 GAS</span>\n              </div>\n            </div>\n\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Mint Fee</span>\n                <span className=\"tag is-primary\">1 GAS</span>\n              </div>\n            </div>\n          </div>\n\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">Token Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Token Symbol</label>\n            <div className=\"control\">\n              <input\n                value={values.symbol}\n                onChange={(e) => handleValueChange(\"symbol\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Token Decimals</label>\n            <div className=\"control\">\n              <NumberFormat\n                decimalScale={0}\n                inputMode=\"decimal\"\n                className=\"input\"\n                value={values.decimals}\n                onValueChange={(value) => {\n                  handleValueChange(\"decimals\", value.value);\n                }}\n                max={18}\n                allowNegative={false}\n                allowLeadingZeros={false}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Total supply</label>\n            <div className=\"control\">\n              <NumberFormat\n                allowNegative={false}\n                decimalScale={0}\n                inputMode=\"decimal\"\n                className=\"input\"\n                value={values.totalSupply}\n                onValueChange={(value) => {\n                  handleValueChange(\"totalSupply\", value.value);\n                }}\n                allowLeadingZeros={false}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          <button\n\t          onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.decimals ||\n              parseFloat(values.decimals) > 18 ||\n              parseFloat(values.totalSupply) < 1 ||\n              !values.author ||\n              !values.description\n            }\n            className=\"button is-primary\"\n          >\n            Mint\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default ActionModal;\n","import React from \"react\";\nimport { ISmithRecord } from \"../../../packages/neo/contracts/ftw/smith/interfaces\";\n\ninterface IContractCardProps {\n  data: ISmithRecord;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">#{data.no} {data.name}</h5>\n        <div className=\"field is-grouped is-grouped-multiline\">\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Symbol</span>\n              <span className=\"tag is-info\">{data.symbol}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Decimals</span>\n              <span className=\"tag is-info\">{data.decimals}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Total supply</span>\n              <span className=\"tag is-info\">{data.totalSupply}</span>\n            </div>\n          </div>\n\n\t        <div className=\"control\">\n\t\t        <div className=\"tags has-addons\">\n\t\t\t        <span className=\"tag is-dark\">Hash</span>\n\t\t\t        <span className=\"tag is-info\">0x{data.contractHash}</span>\n\t\t        </div>\n\t        </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContractCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport ActionModal from \"./ActionModal\";\nimport ContractCard from \"./ContractCard\";\nimport WAVES from \"vanta/dist/vanta.waves.min\";\n\nconst Smith = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [status, setStatus] = useState<any>([]);\n  const [isActionModalActive, setActionModalActive] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const myRef = useRef(null);\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getStatus();\n        setStatus(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n    // if (!vantaEffect) {\n    //   setVantaEffect(\n    //     WAVES({\n    //       el: myRef.current,\n    //       mouseControls: true,\n    //       touchControls: true,\n    //       gyroControls: false,\n    //       minHeight: 200.0,\n    //       minWidth: 200.0,\n    //       scale: 1.0,\n    //       scaleMobile: 1.0,\n    //       color: 0x97abbb,\n    //     })\n    //   );\n    // }\n    // return () => {\n    //   if (vantaEffect) {\n    //     // @ts-ignore\n    //     vantaEffect.destroy();\n    //   }\n    // };\n  }, [connectedWallet, vantaEffect]);\n\n  return (\n    <>\n      <section className=\"hero is-white is-medium\" ref={myRef}>\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Forthewin Smith</h1>\n            <p className=\"subtitle\">\n              Mint your NEP-17 tokens without any codes\n            </p>\n            <button\n              onClick={() => setActionModalActive(true)}\n              className=\"button is-primary press-font\"\n            >\n              Mint Tokens\n            </button>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"box\">\n            {status && status.records.items.length > 0 ? (\n              status.records.items.map((item) => <ContractCard data={item} />)\n            ) : (\n              <div></div>\n            )}\n          </div>\n        )}\n        {isActionModalActive && (\n          <ActionModal onClose={() => setActionModalActive(false)} />\n        )}\n      </PageLayout>\n    </>\n  );\n};\n\nexport default Smith;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\n\nimport {\n  COLLECTION_PATH,\n  FARM_PATH,\n  GALLERY_PATH,\n  HOME_PATH,\n  SMITH_PATH,\n} from \"../consts\";\nimport { WalletContextProvider } from \"../packages/provider\";\nimport { CONST } from \"../packages/neo\";\nimport WalletSidebar from \"./components/WalletSidebar\";\nimport Farm from \"./pages/Farm\";\nimport { Toaster } from \"react-hot-toast\";\nimport MyCollection from \"./pages/MyCollection\";\nimport Gallery from \"./pages/Gallery\";\nimport MobileMenuSlider from \"./components/MobileMenuSlider\";\nimport Home from \"./pages/Home\";\nimport Smith from \"./pages/Smith\";\n// import NetworkCheck from \"./components/NetworkCheck\";\n\nconst App = () => {\n  return (\n    <WalletContextProvider\n      options={{\n        // network: CONST.PRIVATENET,\n        // network: CONST.TESTNET,\n        network: CONST.MAINNET,\n        useLocalStorage: true,\n        // useDevWallet: true,\n      }}\n    >\n      <Router>\n        <Toaster position=\"bottom-center\" />\n        <Header />\n        <Route exact path={HOME_PATH} component={Home} />\n        <Route path={GALLERY_PATH} component={Gallery} />\n        <Route exact path={SMITH_PATH} component={Smith} />\n        <Route exact path={FARM_PATH} component={Farm} />\n        <Route path={COLLECTION_PATH} component={MyCollection} />\n        <MobileMenuSlider />\n        <WalletSidebar />\n        {/*<NetworkCheck />*/}\n      </Router>\n    </WalletContextProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppCContextProvider } from \"./common/hooks/use-app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/style.scss\";\nimport App from \"./ui\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppCContextProvider>\n      <App />\n    </AppCContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}