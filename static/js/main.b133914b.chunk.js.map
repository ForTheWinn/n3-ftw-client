{"version":3,"sources":["common/hooks/use-app.tsx","reportWebVitals.ts","ui/components/Logo.tsx","packages/neo/consts/index.ts","packages/neo/utils/index.ts","packages/neo/network/index.ts","packages/neo/contracts/ftw/farm/helpers.ts","packages/neo/contracts/ftw/nep17/consts.ts","packages/neo/contracts/ftw/farm/index.ts","packages/neo/contracts/ftw/nft/consts.ts","packages/neo/contracts/ftw/nft/helpers.ts","packages/neo/contracts/ftw/nft/index.ts","packages/neo/contracts/ftw/swap/consts.ts","packages/neo/contracts/ftw/bank/index.ts","packages/neo/contracts/ftw/swap/helpers.ts","packages/neo/contracts/ttm/nft/helpers.ts","packages/neo/contracts/ftw/swap/index.ts","packages/neo/wallet/dev-wallet.ts","packages/neo/wallet/index.ts","packages/neo/contracts/ftw/farm/consts.ts","packages/neo/local-storage/index.ts","packages/provider/wallet-provider.tsx","consts/pageRoutes.ts","packages/ui/Wallet/helpers.ts","ui/components/WalletDropdown.tsx","ui/components/NetworkSwitch.tsx","ui/components/NetworkSwitch2.tsx","ui/components/SocialLinkGroup.tsx","ui/components/Header.tsx","packages/ui/Wallet/WalletDropdown.tsx","packages/ui/Wallet/WalletList.tsx","packages/ui/Wallet/AssetCard.tsx","packages/ui/Wallet/index.tsx","ui/components/WalletSidebar.tsx","ui/components/PageLayout.tsx","ui/components/Modal.tsx","ui/components/TransactionSubmitted.tsx","ui/pages/GASFi/ActionModal.tsx","ui/pages/GASFi/SnapshotCountdown.tsx","ui/pages/GASFi/SnapshotCard.tsx","ui/pages/GASFi/SnapshotList.tsx","ui/components/NotifyError.tsx","ui/pages/GASFi/MyPosition.tsx","ui/pages/GASFi/Pool.tsx","ui/pages/GASFi/CancelModal.tsx","ui/pages/GASFi/ClaimModal.tsx","ui/pages/GASFi/Claims.tsx","ui/pages/GASFi/PositionModal.tsx","ui/pages/GASFi/About.tsx","ui/pages/GASFi/index.tsx","ui/pages/Gallery/PropertiesModal.tsx","ui/pages/MyCollection/index.tsx","ui/pages/Gallery/Banner.tsx","packages/neo/api/consts.ts","packages/neo/api/rest.ts","packages/ui/AfterTransactionSubmitted/RuneLoading.tsx","ui/pages/Tournament/scenes/Arena/Players/components/CheckMark.tsx","packages/ui/AfterTransactionSubmitted/index.tsx","ui/pages/Gallery/index.tsx","ui/components/SidebarNav.tsx","ui/components/MobileMenuSlider.tsx","ui/components/BgContainer.tsx","ui/pages/Home.tsx","packages/neo/contracts/ftw/smith/consts.ts","packages/neo/contracts/ftw/smith/helpers.ts","packages/neo/contracts/ftw/smith/index.ts","ui/pages/Smith/helpers.ts","ui/pages/Smith/components/Header.tsx","ui/pages/Smith/NEP17FormModal.tsx","ui/pages/Smith/NEP11FormModal.tsx","ui/pages/Smith/Banner.tsx","ui/pages/Smith/scenes/NEP17/ContractCard.tsx","common/hooks/use-onchain-data.ts","ui/pages/Smith/scenes/NEP17/index.tsx","ui/pages/Smith/scenes/NEP11/DisplayNFT.tsx","ui/pages/Smith/scenes/NEP11/Tokens.tsx","ui/pages/Smith/scenes/NEP11/ContractCard.tsx","ui/pages/Smith/scenes/NEP11/index.tsx","ui/pages/Smith/scenes/PageView/NEP17UpdateFormModal.tsx","ui/pages/Smith/scenes/PageView/NEP17InfoPage.tsx","ui/pages/Smith/scenes/PageView/NEP11MintFormModal.tsx","ui/pages/Smith/scenes/PageView/NEP11InfoPage.tsx","ui/pages/Smith/index.tsx","ui/pages/Tournament/pageRoutes.ts","packages/neo/contracts/ftw/tournament/consts.ts","packages/neo/contracts/ftw/tournament/helpers.ts","packages/neo/contracts/ftw/tournament/index.ts","ui/pages/Tournament/components/PlayButton.tsx","ui/pages/Tournament/scenes/Arena/Banner.tsx","ui/pages/Tournament/components/DisplayRuneWithProperties.tsx","ui/pages/Tournament/components/BetButton.tsx","ui/pages/Tournament/components/LeaveButton.tsx","ui/pages/Tournament/scenes/Arena/Players/components/PlayerModal.tsx","ui/pages/Tournament/scenes/Arena/Players/components/NFTListModal.tsx","ui/pages/Tournament/scenes/Arena/Players/components/ArenaRegisterButton.tsx","ui/pages/Tournament/scenes/Arena/Players/index.tsx","ui/pages/Tournament/scenes/Arena/History/NFTDetailModal.tsx","ui/pages/Tournament/components/ClaimButton.tsx","ui/pages/Tournament/scenes/Arena/History/HistoryTable.tsx","ui/pages/Tournament/scenes/Arena/helpers.ts","ui/pages/Tournament/scenes/Arena/History/TournamentTree.tsx","ui/pages/Tournament/scenes/Arena/History/Replay.tsx","ui/pages/Tournament/scenes/Arena/History/index.tsx","ui/pages/Tournament/scenes/Arena/index.tsx","ui/pages/Tournament/index.tsx","ui/pages/Swap/components/AssetListModal/index.tsx","ui/components/HeaderBetween.tsx","ui/components/ErrorNotificationWithRefresh.tsx","ui/pages/Swap/scenes/AddLiquidity/TimeLockInput.tsx","ui/pages/Swap/scenes/AddLiquidity/LPRewardInfo.tsx","ui/components/ConnectWalletButton.tsx","ui/pages/Swap/components/Input/index.tsx","ui/pages/Swap/scenes/AddLiquidity/LPInputs.tsx","ui/pages/Swap/scenes/AddLiquidity/index.tsx","ui/components/TruncatedAddress.tsx","ui/pages/Swap/scenes/History/index.tsx","ui/pages/Swap/scenes/Swap/NoLPInfo.tsx","ui/pages/Swap/scenes/Swap/SwapInputs.tsx","ui/pages/Swap/scenes/Swap/index.tsx","ui/pages/Swap/components/PairIcons/index.tsx","ui/pages/Swap/components/PoolCard/index.tsx","ui/pages/Swap/scenes/Pools/PoolHeader.tsx","ui/pages/Swap/scenes/Pools/index.tsx","ui/pages/Swap/scenes/RemoveLiquidity/LPTokenItem.tsx","ui/pages/Swap/scenes/RemoveLiquidity/LPTokenList.tsx","ui/pages/Swap/scenes/RemoveLiquidity/index.tsx","ui/pages/Swap/scenes/Providers/index.tsx","ui/pages/Swap/index.tsx","ui/pages/Fusion/components/FusionBox.tsx","ui/pages/Fusion/components/RuneListModal.tsx","packages/neo/contracts/ttm/nft/consts.ts","packages/neo/contracts/ttm/nft/index.ts","ui/pages/Fusion/components/CryptonatuListModal.tsx","packages/neo/contracts/ftw/fuse/index.ts","ui/pages/Fusion/components/FusedList.tsx","ui/pages/Fusion/index.tsx","ui/pages/Migration/index.tsx","ui/components/ReactGa.tsx","packages/neo/contracts/ftw/staking/consts.ts","ui/pages/Farm/components/StakingPairCard.tsx","packages/neo/contracts/ftw/staking/index.ts","packages/neo/contracts/ftw/staking/helpers.ts","ui/pages/Farm/scenes/Main/index.tsx","ui/pages/Farm/scenes/Stake/LPTokenCard.tsx","ui/pages/Farm/scenes/Stake/LPTokenList.tsx","ui/pages/Farm/scenes/Stake/index.tsx","ui/pages/Farm/scenes/MyPositions/PositionCard.tsx","ui/pages/Farm/scenes/MyPositions/PositionList.tsx","ui/pages/Farm/scenes/MyPositions/index.tsx","ui/pages/Farm/scenes/ClaimRewards/ClaimModal.tsx","ui/pages/Farm/scenes/ClaimRewards/index.tsx","ui/pages/Farm/index.tsx","ui/index.tsx","index.tsx"],"names":["AppContext","createContext","AppCContextProvider","props","useState","sidebarStatus","setSidebarStatus","walletSidebarStatus","setWalletSidebarStatus","contextValue","openSidebar","closeSidebar","toggleSidebar","toggleWalletSidebar","Provider","value","children","useApp","useContext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Logo","alt","src","width","height","O3","NEO_LINE","DEV","ONE_GATE","WALLET_LIST","label","key","PRIVATENET","TESTNET","MAINNET","PRIVATE_CONFIG","url","TESTNET_CONFIG","TESTNET_CONFIG_2","MAINNET_CONFIG","MAINNET_CONFIG_2","GAS_SCRIPT_HASH","NEON_CONST","NATIVE_CONTRACT_HASH","GasToken","NEO_SCRIPT_HASH","NeoToken","TOKEN_LIST","DEV_WALLET_PRIVATE_KEY","DEFAULT_WITNESS_SCOPE","senderHash","account","scopes","tx","WitnessScope","CalledByEntry","truncateAddress","address","substring","substr","length","convertContractCallParam","param","type","sc","ContractParam","hash160","wallet","getScriptHashFromAddress","string","integer","array","map","i","byteArray","u","hex2base64","str2hexstring","Error","base64ToAddress","str","getAddressFromScriptHash","base64ToHash160","reverseHex","base642hex","base64ToString","HexString","fromBase64","toAscii","toString","base64ToDate","moment","unix","parseFloat","format","toDecimal","val","BigInteger","fromNumber","e","balanceCheck","balances","requiredAmount","hasBalance","forEach","bal","symbol","amount","parseMapValue","v","obj","k","base642utf8","Network","READ_LOG_FREQUENCY","getRPCClient","networkType","config","rpc","RPCClient","getRawTx","txid","a","rpcClient","getApplicationLog","rawTx","sleep","findNotificationFromTxId","txId","scriptHash","eventName","getNotificationsFromTxId","notifications","find","n","contract","eventname","network","appLog","executions","push","read","scripts","sb","ScriptBuilder","script","params","args","arg","emitAppCall","operation","invokeScript","fromHex","build","readOnly","parser","res","state","console","error","exception","undefined","duration","Promise","resolve","setTimeout","parseDeposit","stackItem","position","lastClaimNo","createdAt","parseClaimPaginate","totalItems","totalPages","page","items","parseClaim","item","no","from","end","GAS","FTW","parseSnapshotItem","totalPositionPool","totalNeo","totalGas","range","winPosition","BNEO_SCRIPT_HASH","CONST","FTW_SCRIPT_HASH","TTM_SCRIPT_HASH","NUDES_SCRIPT_HASH","MAXI_SCRIPT_HASH","FarmContract","contractHash","deposit","connectedWallet","NeonWallet","signers","WalletAPI","invoke","remove","createSnapshot","claim","changePosition","getStatus","neoBalance","ftwBalance","timeLeft","interval","vote","snapshots","claims","stack","this","FARM_SCRIPT_HASH","RUNE_SCRIPT_HASH","RUNE_PRICE","RUNE_PHASE_FILTER","parseProperties","NFTContract","mint","fromDecimal","withdrawFund","getProperties","tokenId","getTokensOf","ownerAddress","metaList","iterator","meta","getTokens","SWAP_SCRIPT_HASH","ASSET_LIST","logo","parseReserve","tokenA","tokenB","parseSwap","tokenIn","tokenOut","amountIn","amountOut","defaultDeadLine","utc","add","valueOf","SwapContract","provide","amountA","amountB","lockUntil","CustomContracts","allowedContracts","swap","getReserve","script1","script2","pair","reserve","getPairs","getEstimate","swapToken","getLPEstimate","reserveAAmount","reserveBAmount","fixed8TokenAmount","estimated","Math","floor","getSwapHistory","symbolA","symbolB","paginate","getLPList","getContractHashes","script3","script4","script5","decimals","getContractSymbol","getLPTokens","DevWallet","name","version","website","compatibility","extra","currency","theme","chainId","defaultNetwork","networks","getNep17Balances","balance","assethash","includes","getVersion","txObj","sign","protocol","sendRawTransaction","nodeUrl","Account","createScript","getBlockCount","currentHeight","transaction","Transaction","validUntilBlock","calculateNetworkFee","networkFee","calculateSystemFee","systemFee","extraSystemFee","fee","invokeFunction","PolicyContract","invokeFunctionResponse","feePerByte","transactionByteSize","serialize","witnessProcessingFee","mul","gasconsumed","sender","transferScript","gasBalance","requiredGas","transferTokenBalance","Fixed8","fromRawNumber","toNumber","transferAmount","walletType","O3Wallet","instance","neo3Dapi","getProvider","provider","getAccount","getNetworks","getBalance","contracts","OneGate","NeoDapi","window","assetHashes","NeoLine","NEOLineN3","Init","instance2","NEOLine","Dev","init","_instance","description","message","currentNetwork","testInvoke","submittedTx","method","LocalStorage","addTransaction","invokeMulti","invokeMultiple","invokeArgs","list","CONNECTED_WALLET","TRANSACTIONS","NETWORK","SWAP_TOKEN_A","SWAP_TOKEN_B","validated","validateConnectedWallet","store","set","has","dispatchEvent","Event","transactions","get","status","initStorage","supportContracts","getTransactions","validatedTx","removeTransaction","getNetwork","setNetwork","getWallet","clearTransaction","setSwapTokenA","setSwapTokenB","getSwapTokenA","getSwapTokenB","WalletContext","WalletContextProvider","initNetwork","location","href","indexOf","totalTxSubmit","setTotalTxSubmit","isWalletModalActive","setWalletModalActive","options","useLocalStorage","setConnectedWallet","setInvokeScript","pendingTransactions","setPendingTransactions","connectWallet","toast","success","setWallet","useDevWallet","openWalletModal","closeWalletModal","disConnectWallet","removeWallet","doInvoke","closeInvoke","addPendingTransaction","removePendingTransaction","filter","switchNetwork","increaseTotalTxSubmit","useWallet","MIGRATION_PATH","GASFI_PATH","GALLERY_PATH","TOURNAMENT_PATH","SMITH_PATH","SMITH_CONTRACT_NEP17_PATH","SMITH_CONTRACT_NEP11_PATH","SMITH_PATH_NEP11","COLLECTION_PATH","SWAP_PATH","SWAP_PATH_HISTORY","SWAP_PATH_LP_LIST","SWAP_PATH_LIQUIDITY_ADD","SWAP_PATH_LIQUIDITY_REMOVE","SWAP_PATH_TRADE","FARM_PATH","FARM_STAKE_PATH","FARM_STAKE_POSITIONS_PATH","FUSION_PATH","MENU","path","category","getWalletIcon","svg","WalletDropdown","isActive","setActive","useEffect","refresh","disconnected","addEventListener","removeEventListener","Constants","EventName","ACCOUNT_CHANGED","NETWORK_CHANGED","DISCONNECTED","className","onClick","utils","id","role","to","NetworkSwitch","networkList","confirm","targetNetwork","SocialLinkGroup","target","Header","style","justifyContent","marginLeft","alignItems","NetworkSwitch2","route","index","activeClassName","WalletList","_wallet","AssetCard","Wallet","bottom","WalletSidebar","openFromRight","top","showNav","onHideNav","PageLayout","ModalCard","onClose","isLoading","React","$","addClass","removeClass","zIndex","TransactionSubmitted","ActionModal","setAmount","setPosition","setTxid","onDeposit","Modal","onChange","_","autoFocus","decimalScale","inputMode","onValueChange","thousandSeparator","suffix","allowLeadingZeros","disabled","SnapshotCountdown","onCreateSnapshot","CreateSnapshotBtn","date","Date","now","renderer","completed","hours","minutes","seconds","SnapshotCard","SnapshotList","contractStatus","NotifyError","msg","MyPosition","lastSnapshotNo","onCancel","onClaim","onPositionChange","isClaimable","Pool","CancelModal","Claims","PositionModal","currentPosition","tempTime","Farm","production","setRoute","modalActive","setModalActive","cancelModalActive","setCancelModalActive","claimModalActive","setClaimModalActive","positionModalActive","setPositionModalActive","setError","setContractStatus","onClaimModalActive","fetchContractStatus","About","PropertiesModal","setItem","setLoading","phase","luck","image","owner","MyCollection","tokens","setTokens","propertiesModalActive","setPropertiesModalActive","token","Banner","onMint","ENDPOINT","RestAPI","endpoint","fetchResult","fetch","mode","json","RuneLoading","random","colors","bg","setBg","dot1","setDot1","dot2","setDot2","dot3","setDot3","dot4","setDot4","body","setBody","timer","clearTimeout","CheckMark","xmlns","viewBox","fill","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","strokeLinecap","points","AfterTransactionSubmitted","onSuccess","onError","isDone","setDone","hasError","checkTxid","margin","display","size","marginTop","Gallery","setFilter","getRunes","document","title","onFilterChange","flexFlow","SidebarNav","MobileMenuSlider","BgContainer","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","CARDS","desc","img","link","Home","onSwitchNetwork","card","minHeight","SMITH_SCRIPT_HASH","parseNEP17RecordsPaginate","parseNEP17Record","contractOwner","totalSupply","author","parseNEP11Record","email","parseSmithProperties","parseSmithNEP17Info","parseSmithNEP11Info","SmithContract","createNEP17","contractName","createNEP11","mintNFT","updateNEP17","getNEP17Records","records","getNEP11Records","getNep17ContractInfo","getNep11ContractInfo","emojiRegexExp","detectEmojiInString","values","detected","Object","keys","test","SmithModalHeader","NEP17FormModal","setValues","handleValueChange","hasEmoji","firstInput","useRef","current","focus","ref","max","allowNegative","NEP11FormModal","useLocation","isNep11FormModalActive","setNep11FormModalActive","isNep17FormModalActive","setNep17FormModalActive","pathname","ContractCard","data","toLocaleString","useOnChainData","fn","deps","setData","isLoaded","setIsLoaded","NEP17Smith","setPage","pages","currentPage","DisplayRune","Tokens","DisplayNFT","NEP11Smith","NEP17UpdateFormModal","onUpdate","NEP17InfoPage","useParams","isUpdateModalActive","setUpdateModalActive","setRefresh","NEP11MintFormModal","showForm","setShowForm","attributes","attValues","setAttValues","handleAttChange","attKeys","placeholder","NEP11InfoPage","isMintModalActive","setMintModalActive","JSON","stringify","Smith","exact","component","NEP17","NEP11","ARENA_PATH","TOURNAMENT_SCRIPT_HASH","ADMIN_FOR_PLAY","SUPPORT_TICKET_PRICE","parsePlayer","tokenHash","parseGame","gameNo","tournamentTree","champion","nonce","betsOnChampion","totalBets","rollover","championPrize","champOwner","calculateClaimableAmount","history","betAmount","totalAmount","myClaimAble","TournamentContract","register","arenaNo","play","leave","bet","getPlayers","getGameHeight","getBetAmount","championTokenId","isClaimed","getBetOnPlayer","userBets","getCurrentPrize","prize","previousChampWallet","timeElapsedFromPreviousGame","PlayButton","onSubmitted","onPlay","playTxid","setPlayTxid","hasPermissionToPlay","DisplayRuneWithProperties","isOwner","setToken","getRune","fetchRune","left","BetButton","onBet","LeaveButton","onLeave","PlayerModal","player","setStatus","_gameNo","gameOwner","NFTListModal","onRegister","RegisterButton","playerCount","Players","playerModalActive","setPlayerModalActive","players","setPlayers","onPlayerModalActive","NFTDetailModal","rune","ClaimButton","onClaimed","fetchBetAmount","HistoryTable","onReplay","fight","aPhase","aLuck","bPhase","bLuck","compareLuck","chunks","arr","slice","TournamentTree","champ","tree","capacity","stage","winners","match","rounds","reverse","arena","winner","opacity","Replay","gameHistory","backgroundColor","History","claimTxid","setClaimTxid","nftModalActive","setNftModalActive","replayModalActive","setReplayModalActive","setHistory","onNFTModalActive","fetchHistory","itemsPerPage","ceil","game","_page","Arena","defaultArena","useMemo","Tournament","ARENA_LIST","HashInput","onAssetClick","customContractHash","setContractHash","onAddContractHash","hash","isScriptHash","AssetListModal","isCustomInputMode","setCustomInputMode","assets","ASSETS","asset","HeaderBetween","right","ErrorNotificationWithRefresh","onRefresh","TimeLockInput","toggleSwitch","setLockUntil","checked","selected","timeInputLabel","dateFormat","showTimeInput","minDate","LPRewardInfo","ConnectWalletButton","Input","isDisable","heading","setValue","onClickAsset","isReadOnly","userBalance","source","event","LPInputs","onAssetChange","onSwitch","userTokenABalance","userTokenBBalance","setAmountA","setAmountB","noLiquidity","Liquidity","queryString","parse","search","isAssetChangeModalActive","setAssetChangeModalActive","setTokenA","setTokenB","setSymbolA","setSymbolB","selectedLock","setSelectedLock","setUntil","isPairLoading","setPairLoading","onAddLiquidity","milliseconds","tokenASymbol","tokenBSymbol","load","assetHash","TruncatedAddress","isFiltered","NoLPInfo","SwapInputs","searchTerm","setSearchTerm","isAmountALoading","setAmountALoading","isAmountBLoading","setAmountBLoading","delayDebounceFn","Swap","useHistory","onSwap","priceImpact","toFixed","replace","PairIcons","tokenSymbol","tokenALogo","PoolCard","ratioAB","ratioBA","PoolHeader","PairList","LPTokenItem","onRemove","expired","LPTokenList","onRemoveLiquidity","RemoveLiquidity","Providers","lp","Pools","Trade","FusionBox","RuneListModal","CRYPTONAUT_REGEX","TTMNFTContract","CryptonatuListModal","FUSE_SCRIPT_HASH","FusionContract","fuse","cryptonautTokenId","runeTokenId","refund","FusedList","onReset","detail","setDetail","onRefund","element","Fusion","isTTMModalActive","setTTMModalActive","isFTWModalActive","setFTWModalActive","cryptonaut","setCryptonaut","setRune","onFuse","_txid","Migration","vantaEffect","setVantaEffect","myRef","DOTS","el","mouseControls","touchControls","gyroControls","minWidth","destroy","autoPlay","loop","ReactGa","ReactGA","pageview","StakingPairCard","dailyReward","StakingContract","stake","claimMulti","batch","getStakingPairs","swapContract","properties","getStakedLPTokens","getClaimable","StakingMain","LPTokenCard","onStakeLP","Stake","PositionCard","onUnStake","PositionList","MyPositions","ClaimModal","selectedItems","setSelectedItems","isSelected","_item","f","handleToggle","claimable","ClaimRewards","setItems","isClaimModalOpen","setClaimModalOpen","w","initialize","App","process","GASFI","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b133914b.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n// import toast from \"react-hot-toast\";\n\ninterface IAppContext {\n  sidebarStatus: boolean;\n  walletSidebarStatus: boolean;\n  openSidebar: () => void;\n  closeSidebar: () => void;\n  toggleSidebar: () => void;\n  toggleWalletSidebar: () => void;\n}\n\nexport const AppContext = createContext({} as IAppContext);\n\nexport const AppCContextProvider = (props: { children: any }) => {\n  const [sidebarStatus, setSidebarStatus] = useState(false);\n  const [walletSidebarStatus, setWalletSidebarStatus] = useState(false);\n  const openSidebar = () => setSidebarStatus(true);\n  const closeSidebar = () => setSidebarStatus(false);\n  const toggleSidebar = () => {\n    if (walletSidebarStatus) {\n      setWalletSidebarStatus(false);\n    }\n    setSidebarStatus(!sidebarStatus);\n  };\n  const toggleWalletSidebar = () => {\n    if (sidebarStatus) {\n      setSidebarStatus(false);\n    }\n    setWalletSidebarStatus(!walletSidebarStatus);\n  };\n\n  const contextValue = {\n    sidebarStatus,\n    openSidebar,\n    closeSidebar,\n    toggleSidebar,\n    walletSidebarStatus,\n    toggleWalletSidebar,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => useContext(AppContext);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nconst Logo = () => {\n  return (\n    <>\n      <img\n        alt=\"Forthewin Logo\"\n        src={\"/logo/FTW_512_512.svg\"}\n        width=\"36px\"\n        height=\"36px\"\n      />\n      {/*<DisplayRandomRune width=\"36px\" height=\"36px\" />*/}\n    </>\n  );\n};\n\nexport default Logo;\n","import { CONST as NEON_CONST, tx } from \"@cityofzion/neon-core\";\nimport { IWalletType } from \"../wallet/interfaces\";\n\n/* Wallets */\nexport const O3 = \"O3\";\nexport const NEO_LINE = \"NEO_LINE\";\nexport const DEV = \"DEV\";\nexport const ONE_GATE = \"ONE_GATE\";\nexport const WALLET_LIST: {\n  label: string;\n  key: IWalletType;\n}[] = [\n  {\n    label: \"Dev\",\n    key: DEV,\n  },\n  {\n    label: \"NEO Line\",\n    key: NEO_LINE,\n  },\n  {\n    label: \"O3\",\n    key: O3,\n  },\n  {\n    label: \"OneGate\",\n    key: ONE_GATE,\n  },\n];\n\n/* Network types */\nexport const PRIVATENET = \"N3PrivateNet\";\nexport const TESTNET = \"N3TestNet\";\nexport const MAINNET = \"N3MainNet\";\n\n/* Network configs */\nexport const PRIVATE_CONFIG = {\n  label: \"privateNet\",\n  url: \"http://127.0.0.1:50012\",\n};\n\nexport const TESTNET_CONFIG = {\n  label: \"N3TestNet\",\n  // url: \"https://testnet1.neo.coz.io:443\",\n  url: \"https://testnet2.neo.coz.io:443\",\n};\n\n// Using for tx monitor\nexport const TESTNET_CONFIG_2 = {\n  label: \"N3TestNet\",\n  url: \"https://testnet1.neo.coz.io:443\",\n};\n\nexport const MAINNET_CONFIG = {\n  label: \"N3MainNet\",\n  url: \"https://n3seed2.ngd.network:10332\",\n};\n\nexport const MAINNET_CONFIG_2 = {\n  label: \"N3MainNet\",\n  url: \"https://mainnet1.neo.coz.io:443\",\n};\n\n/* Contract hashes */\nexport const GAS_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.GasToken;\nexport const NEO_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.NeoToken;\n\nexport const TOKEN_LIST = () => [NEO_SCRIPT_HASH, GAS_SCRIPT_HASH];\n\n/* Dev wallet */\nexport const DEV_WALLET_PRIVATE_KEY =\n  \"7b5d7fda53932ed9d43eb848dd521455767a4d40b5a994e6f351605e5a4ce26a\";\n\nexport const DEFAULT_WITNESS_SCOPE = (senderHash: string) => {\n  return {\n    account: senderHash,\n    scopes: tx.WitnessScope.CalledByEntry,\n  };\n};\n","import { sc, u, wallet } from \"@cityofzion/neon-core\";\nimport moment from \"moment\";\nimport { IBalance } from \"../wallet/interfaces\";\nimport {\n  StackItemLike,\n  StackItemMap,\n} from \"@cityofzion/neon-core/lib/sc/StackItem\";\n\nexport const truncateAddress = (address: string) => {\n  return address\n    ? `${address.substring(0, 4)}...${address.substr(address.length - 2)}`\n    : \"\";\n};\n\n/**\n * It converts contract call params for dev wallet. Depending on 3rd wallet params.\n * @param param\n */\nexport const convertContractCallParam = (param: any) => {\n  switch (param.type) {\n    case \"Address\":\n      return sc.ContractParam.hash160(\n        wallet.getScriptHashFromAddress(param.value)\n      );\n    case \"Hash160\":\n      return sc.ContractParam.hash160(param.value);\n    case \"String\":\n      return sc.ContractParam.string(param.value);\n    case \"Integer\":\n      return sc.ContractParam.integer(param.value);\n    case \"Array\":\n      return sc.ContractParam.array(\n        ...param.value.map((i: any) => convertContractCallParam(i))\n      );\n    case \"ByteArray\":\n      return sc.ContractParam.byteArray(\n        u.hex2base64(u.str2hexstring(param.value))\n      );\n    default:\n      throw new Error(\"No support param\");\n  }\n};\n\nexport const base64ToAddress = (str: string): string =>\n  wallet.getAddressFromScriptHash(base64ToHash160(str));\n\nexport const base64ToHash160 = (str: string): string =>\n  u.reverseHex(u.base642hex(str));\n\nexport const base64ToString = (str: string): string =>\n  u.HexString.fromBase64(str).toAscii().toString();\n\nexport const base64ToDate = (str: string): string =>\n  moment.unix(parseFloat(str) / 1000).format(\"lll\");\n\nexport const toDecimal = (val: string | number): number => {\n  try {\n    return parseFloat(u.BigInteger.fromNumber(val).toDecimal(8));\n  } catch (e) {\n    return 0;\n  }\n};\n\nexport const balanceCheck = (\n  balances: IBalance[],\n  requiredAmount: number\n): boolean => {\n  let hasBalance = false;\n  balances.forEach((bal) => {\n    if (bal.symbol === \"GAS\") {\n      if (parseFloat(bal.amount) > requiredAmount) {\n        hasBalance = true;\n      }\n    }\n  });\n  return hasBalance;\n};\n\nexport const parseMapValue = (v: StackItemLike): any => {\n  const obj = {};\n  const root = v.value as StackItemMap[];\n  root.forEach(({ key, value }) => {\n    const k = u.base642utf8(key.value as string);\n    let val;\n    switch (k) {\n      case \"owner\":\n        val = base64ToAddress(value.value as string);\n        break;\n      case \"contractHash\":\n        val = base64ToHash160(value.value as string);\n        break;\n      case \"tokenA\":\n        val = base64ToHash160(value.value as string);\n        break;\n      case \"tokenB\":\n        val = base64ToHash160(value.value as string);\n        break;\n      case \"name\":\n        val = base64ToString(value.value as string);\n        break;\n      case \"tokenId\":\n        val = base64ToString(value.value as string);\n        break;\n      case \"tokenASymbol\":\n        val = base64ToString(value.value as string);\n        break;\n      case \"tokenBSymbol\":\n        val = base64ToString(value.value as string);\n        break;\n      case \"symbolA\":\n        val = base64ToString(value.value as string);\n        break;\n      case \"symbolB\":\n        val = base64ToString(value.value as string);\n        break;\n      case \"amountA\":\n        val = toDecimal(value.value as string);\n        break;\n      case \"amountB\":\n        val = toDecimal(value.value as string);\n        break;\n      case \"totalShare\":\n        val = toDecimal(value.value as string);\n        break;\n      case \"claimable\":\n        val = toDecimal(value.value as string);\n        break;\n      case \"dailyReward\":\n        val = toDecimal(value.value as string);\n        break;\n      case \"amount\":\n        val = toDecimal(value.value as string);\n        break;\n      case \"lockUntil\":\n        val =\n          value.value === \"0\" ? \"None\" : base64ToDate(value.value as string);\n        break;\n    }\n    obj[k] = val;\n  });\n  return obj;\n};\n","import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG,\n  TESTNET_CONFIG_2,\n  MAINNET_CONFIG_2,\n} from \"../consts\";\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport { ApplicationLogJson } from \"@cityofzion/neon-core/lib/rpc/Query\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n  private static readonly READ_LOG_FREQUENCY = 6000;\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static getRawTx = async (txid: string, networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG_2;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG_2;\n        break;\n    }\n    const rpcClient = new rpc.RPCClient(config.url);\n    let rawTx: any;\n    do {\n      try {\n        rawTx = await rpcClient.getApplicationLog(txid);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!rawTx);\n\n    return rawTx;\n  };\n\n  static findNotificationFromTxId = async (\n    txId: string,\n    scriptHash: string,\n    eventName: string,\n    networkType: INetworkType\n  ) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(\n      txId,\n      networkType\n    );\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName\n    );\n  };\n\n  static getNotificationsFromTxId = async (\n    txId: string,\n    network: INetworkType\n  ) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[]\n    // passFaultCheck?: boolean\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    return rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    // if (res.state === \"FAULT\") {\n    //   console.error(res.exception);\n    //   return null;\n    // }\n    // if (!passFaultCheck && res.state === \"FAULT\") {\n    //   console.error(\"RPC read error\" + res.exception);\n    //   throw new Error(res.exception ? res.exception : \"Network error\");\n    // }\n  };\n\n  static readOnly = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[],\n    parser: (res: InvokeResult) => any\n  ): Promise<any | undefined> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    const res = await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    if (res.state === \"FAULT\") {\n      console.error(res.exception);\n      return undefined;\n    }\n    return parser(res);\n    // if (res.state === \"FAULT\") {\n    //   console.error(res.exception);\n    //   return null;\n    // }\n    // if (!passFaultCheck && res.state === \"FAULT\") {\n    //   console.error(\"RPC read error\" + res.exception);\n    //   throw new Error(res.exception ? res.exception : \"Network error\");\n    // }\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","import { IFarmDepositRecord } from \"./interfaces\";\nimport { base64ToDate, toDecimal } from \"../../../utils\";\n\nexport const parseDeposit = (\n  stackItem: any\n): IFarmDepositRecord | undefined => {\n  // TODO check if there no deposit\n  // if (!stackItem.value) return undefined;\n  return {\n    position: stackItem[0].value,\n    amount: stackItem[1].value,\n    lastClaimNo: stackItem[2].value,\n    createdAt: stackItem[3].value,\n  };\n};\n\nexport const parseClaimPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseClaim(stackItem[3].value),\n  };\n};\n\nexport const parseClaim = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      from: item.value[1].value,\n      end: item.value[2].value,\n      GAS: toDecimal(item.value[3].value),\n      FTW: toDecimal(item.value[4].value),\n      createdAt: base64ToDate(item.value[5].value),\n    };\n  });\n};\n\nexport const parseSnapshotPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSnapshotItem(stackItem[3].value),\n  };\n};\n\nconst parseSnapshotItem = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      totalPositionPool: item.value[1].value, // NEO amount\n      totalNeo: item.value[2].value, // NEO amount\n      totalGas: toDecimal(item.value[3].value),\n      range: toDecimal(item.value[4].value),\n      winPosition: item.value[5].value,\n      createdAt: toDecimal(item.value[6].value),\n    };\n  });\n};\n","import { CONST } from \"../../../index\";\n\nexport const BNEO_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"48c40d4666f93408be1bef038b6722404d9a4c2a\",\n  [CONST.TESTNET]: \"48c40d4666f93408be1bef038b6722404d9a4c2a\",\n  [CONST.MAINNET]: \"48c40d4666f93408be1bef038b6722404d9a4c2a\",\n};\n\nexport const FTW_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"c1a56650f12420405c5b7e2634eb3779a0c3e396\",\n  [CONST.TESTNET]: \"c1a56650f12420405c5b7e2634eb3779a0c3e396\",\n  [CONST.MAINNET]: \"9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\",\n};\n\nexport const TTM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"\",\n  [CONST.TESTNET]: \"c0283310a5117b9d007941e8a0dc3dae9593f65c\",\n  [CONST.MAINNET]: \"c0283310a5117b9d007941e8a0dc3dae9593f65c\",\n};\n\nexport const NUDES_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"\",\n  [CONST.TESTNET]: \"340720c7107ef5721e44ed2ea8e314cce5c130fa\",\n  [CONST.MAINNET]: \"340720c7107ef5721e44ed2ea8e314cce5c130fa\",\n};\n\nexport const MAXI_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"\",\n  [CONST.TESTNET]: \"5afb6804ee3598a58f8a0994b1df99d8be43a313\",\n  [CONST.MAINNET]: \"5afb6804ee3598a58f8a0994b1df99d8be43a313\",\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { DEFAULT_WITNESS_SCOPE, NEO_SCRIPT_HASH } from \"../../../consts\";\nimport { FARM_SCRIPT_HASH } from \"./consts\";\nimport { IFarmContractStatus } from \"./interfaces\";\nimport {\n  parseClaimPaginate,\n  parseDeposit,\n  parseSnapshotPaginate,\n} from \"./helpers\";\nimport { FTW_SCRIPT_HASH } from \"../nep17/consts\";\nimport { toDecimal } from \"../../../utils\";\nimport { wallet as NeonWallet } from \"@cityofzion/neon-core\";\n\nexport class FarmContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FARM_SCRIPT_HASH[networkType];\n  }\n\n  deposit = async (\n    connectedWallet: IConnectedWallet,\n    amount: string,\n    position: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: amount,\n        },\n        {\n          type: \"Integer\",\n          value: parseFloat(position),\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  remove = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"removeFund\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  createSnapshot = async (\n    connectedWallet: IConnectedWallet\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"createSnapshot\",\n      scriptHash: this.contractHash,\n      args: [],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  claim = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  changePosition = async (\n    connectedWallet: IConnectedWallet,\n    position: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"changePosition\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Integer\",\n          value: position,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  getStatus = async (\n    connectedWallet?: IConnectedWallet\n  ): Promise<IFarmContractStatus> => {\n    const neoBalance = {\n      operation: \"balanceOf\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const ftwBalance = {\n      operation: \"balanceOf\",\n      scriptHash: FTW_SCRIPT_HASH[this.network],\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const timeLeft = {\n      operation: \"timeLeft\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const interval = {\n      operation: \"getSnapshotInterval\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const range = {\n      operation: \"getRange\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const vote = {\n      operation: \"getVote\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const snapshots = {\n      operation: \"getSnapshots\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n\n    const scripts = [\n      neoBalance,\n      ftwBalance,\n      timeLeft,\n      interval,\n      range,\n      vote,\n      snapshots,\n    ];\n\n    if (connectedWallet) {\n      const deposit = {\n        operation: \"getDeposit\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            type: \"Address\",\n            value: connectedWallet.account.address,\n          },\n        ],\n      };\n      const claims = {\n        operation: \"getClaims\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            // @ts-ignore\n            type: \"Address\",\n            // @ts-ignore\n            value: connectedWallet.account.address,\n          },\n          {\n            type: \"Integer\",\n            value: 1,\n          },\n        ],\n      };\n      scripts.push(deposit);\n      scripts.push(claims);\n    }\n    const res = await Network.read(this.network, scripts);\n    return {\n      neoBalance: res.stack[0].value as string,\n      ftwBalance: toDecimal(res.stack[1].value as string),\n      timeLeft: res.stack[2].value as string,\n      interval: res.stack[3].value as string,\n      range: res.stack[4].value as string,\n      vote: res.stack[5].value as string,\n      snapshots: parseSnapshotPaginate(res.stack[6].value),\n      deposit:\n        connectedWallet && res.stack[7].value\n          ? parseDeposit(res.stack[7].value)\n          : undefined,\n      claims:\n        connectedWallet && res.stack[8].value\n          ? parseClaimPaginate(res.stack[8].value)\n          : undefined,\n    };\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const RUNE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.TESTNET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.MAINNET]: \"bebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\",\n};\n\nexport const RUNE_PRICE = {\n  [CONST.PRIVATENET]: \"10\",\n  [CONST.TESTNET]: \"0.1\", // Testnet mint is cheaper than mainnet\n  [CONST.MAINNET]: \"10\",\n};\n\nexport const RUNE_PHASE_FILTER = [\n  \"All\",\n  \"Fire\",\n  \"Water\",\n  \"Wood\",\n  \"Earth\",\n  \"Metal\",\n  \"Dark\",\n  \"Light\",\n];\n","import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { DEFAULT_WITNESS_SCOPE, GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { RUNE_SCRIPT_HASH, RUNE_PRICE } from \"./consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { IRuneMeta } from \"./interfaces\";\nimport { parseProperties } from \"./helpers\";\n\nexport class NFTContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = RUNE_SCRIPT_HASH[networkType];\n  }\n\n  mint = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(\n            RUNE_PRICE[this.network],\n            8\n          ).toString(),\n        },\n        {\n          type: \"String\",\n          value: \"1\",\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      \"0.01\"\n    );\n  };\n\n  withdrawFund = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"withdrawFund\",\n      scriptHash: this.contractHash,\n      args: [],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  getProperties = async (tokenId: string): Promise<IRuneMeta | null> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    if (res.state === \"FAULT\") {\n      console.error(res.exception);\n      return null;\n    }\n    return parseProperties(res.stack) as IRuneMeta;\n  };\n\n  // getTokensOfScript = (ownerAddress: string) => {\n  //   return {\n  //     scriptHash: this.contractHash,\n  //     operation: \"tokensOf\",\n  //     args: [\n  //       {\n  //         type: \"Address\",\n  //         value: ownerAddress,\n  //       },\n  //     ],\n  //   };\n  // };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    if (res.state === \"FAULT\") {\n      console.error(res.exception);\n      return [];\n    }\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      const meta = await this.getProperties(tokenId);\n      if (meta) {\n        metaList.push({ tokenId, ...meta });\n      }\n    }\n    return metaList;\n  };\n\n  getTokens = async (): Promise<string[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokens\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    if (res.state === \"FAULT\") {\n      console.error(res.exception);\n      return [];\n    }\n    // @ts-ignore\n    return res.stack[0].iterator.map((item) => {\n      return u.HexString.fromBase64(item.value as string).toAscii();\n    });\n  };\n}\nexport { RUNE_SCRIPT_HASH } from \"./consts\";\n","import { CONST } from \"../../../index\";\nimport {\n  BNEO_SCRIPT_HASH,\n  FTW_SCRIPT_HASH,\n  MAXI_SCRIPT_HASH,\n  NUDES_SCRIPT_HASH,\n  TTM_SCRIPT_HASH,\n} from \"../nep17/consts\";\nimport { GAS_SCRIPT_HASH, MAINNET, PRIVATENET, TESTNET } from \"../../../consts\";\nimport { INetworkType } from \"../../../network\";\n\nexport const SWAP_FEE = 0.25;\n\nexport const SWAP_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"aeac82f7830f4083b98089baa51060e621febb10\",\n  // [CONST.TESTNET]: \"428783fccfb6b194f7d33cd421e9f56f48efbde5\", // With WMOON\n  // [CONST.TESTNET]: \"9773f6d3faa8d016856bddcb39777bc8d64dec5b\",\n  [CONST.TESTNET]: \"50ae712ccb2760ad3f2ec3edebb25dbacc627fe2\", // real\n  // [CONST.TESTNET]: \"b50b3f0469794c04c0eb73f8b7df8e8b38ce2cd6\", // real\n  [CONST.MAINNET]: \"\",\n};\n\nexport const ASSET_LIST = {\n  [PRIVATENET]: {\n    [GAS_SCRIPT_HASH]: {\n      contractHash: GAS_SCRIPT_HASH,\n      symbol: \"GAS\",\n      logo: \"/symbols/neo.svg\",\n    },\n    [FTW_SCRIPT_HASH[PRIVATENET]]: {\n      contractHash: FTW_SCRIPT_HASH[PRIVATENET],\n      symbol: \"FTW\",\n      logo: \"/symbols/ftw.svg\",\n    },\n    [NUDES_SCRIPT_HASH[PRIVATENET]]: {\n      contractHash: NUDES_SCRIPT_HASH[PRIVATENET],\n      symbol: \"NUDES\",\n      logo: \"/symbols/nudes.png\",\n    },\n  },\n  [TESTNET]: {\n    [BNEO_SCRIPT_HASH[TESTNET]]: {\n      contractHash: BNEO_SCRIPT_HASH[TESTNET],\n      symbol: \"bNEO\",\n      logo: \"/symbols/bneo.jpeg\",\n    },\n    [GAS_SCRIPT_HASH]: {\n      contractHash: GAS_SCRIPT_HASH,\n      symbol: \"GAS\",\n      logo: \"/symbols/neo.svg\",\n    },\n    [FTW_SCRIPT_HASH[TESTNET]]: {\n      contractHash: FTW_SCRIPT_HASH[TESTNET],\n      symbol: \"FTW\",\n      logo: \"/symbols/ftw.svg\",\n    },\n    \"7e7a84abff782e9f0c60c2fe1cd6b550a32d5cee\": {\n      contractHash: \"7e7a84abff782e9f0c60c2fe1cd6b550a32d5cee\",\n      symbol: \"FRANK\",\n      logo: \"/symbols/frank.png\",\n    },\n    [MAXI_SCRIPT_HASH[TESTNET]]: {\n      contractHash: MAXI_SCRIPT_HASH[TESTNET],\n      symbol: \"MAXI\",\n      logo: \"/symbols/maxi.png\",\n    },\n    [NUDES_SCRIPT_HASH[TESTNET]]: {\n      contractHash: NUDES_SCRIPT_HASH[TESTNET],\n      symbol: \"NUDES\",\n      logo: \"/symbols/nudes.png\",\n    },\n    [TTM_SCRIPT_HASH[TESTNET]]: {\n      contractHash: TTM_SCRIPT_HASH[TESTNET],\n      symbol: \"TTM\",\n      logo: \"/symbols/ttm.png\",\n    },\n    \"37fc2612dfe80a20b97470e57de60ffe81a8a0c0\": {\n      contractHash: \"37fc2612dfe80a20b97470e57de60ffe81a8a0c0\",\n      symbol: \"NPRZ\",\n      logo: \"/symbols/prezel.png\",\n    },\n    \"7fd7b284cef510b017bca4d2e2e656d9a7b570ce\": {\n      contractHash: \"7fd7b284cef510b017bca4d2e2e656d9a7b570ce\",\n      symbol: \"NJC\",\n      logo: \"/symbols/njc.png\",\n    },\n    aeb697166d5cb3376757983b23df1be8292364d0: {\n      contractHash: \"aeb697166d5cb3376757983b23df1be8292364d0\",\n      symbol: \"FOXES\",\n      logo: \"/symbols/FOXES.png\",\n    },\n    f987b060e05aeb3e58db27c409b82fc2d764e3ff: {\n      contractHash: \"f987b060e05aeb3e58db27c409b82fc2d764e3ff\",\n      symbol: \"SAFERUST\",\n      logo: \"/symbols/saferust.png\",\n    },\n  },\n  [MAINNET]: {\n    [BNEO_SCRIPT_HASH[MAINNET]]: {\n      contractHash: BNEO_SCRIPT_HASH[MAINNET],\n      symbol: \"bNEO\",\n      logo: \"/symbols/bneo.jpeg\",\n    },\n    [GAS_SCRIPT_HASH]: {\n      contractHash: GAS_SCRIPT_HASH,\n      symbol: \"GAS\",\n      logo: \"/symbols/neo.svg\",\n    },\n    [FTW_SCRIPT_HASH[MAINNET]]: {\n      contractHash: FTW_SCRIPT_HASH[MAINNET],\n      symbol: \"FTW\",\n      logo: \"/symbols/ftw.svg\",\n    },\n    [NUDES_SCRIPT_HASH[MAINNET]]: {\n      contractHash: NUDES_SCRIPT_HASH[MAINNET],\n      symbol: \"NUDES\",\n      logo: \"/symbols/nudes.png\",\n    },\n    [TTM_SCRIPT_HASH[MAINNET]]: {\n      contractHash: TTM_SCRIPT_HASH[MAINNET],\n      symbol: \"TTM\",\n      logo: \"/symbols/ttm.png\",\n    },\n    \"461c3689e56a1d0c72ffeac3584af481d7642e7f\": {\n      contractHash: \"461c3689e56a1d0c72ffeac3584af481d7642e7f\",\n      symbol: \"MNGA\",\n      logo: \"/symbols/mnga.png\",\n    },\n    \"50b41a55c1d746eec2b86b8f0405fb49fbb96492\": {\n      contractHash: \"50b41a55c1d746eec2b86b8f0405fb49fbb96492\",\n      symbol: \"TEDS\",\n      logo: \"/symbols/ted.jpg\",\n    },\n    [MAXI_SCRIPT_HASH[MAINNET]]: {\n      contractHash: MAXI_SCRIPT_HASH[MAINNET],\n      symbol: \"MAXI\",\n      logo: \"/symbols/maxi.png\",\n    },\n  },\n};\n\nexport const PAIR_LIST = {\n  [PRIVATENET]: [\n    {\n      label: \"FTW - NUDES\",\n      value: {\n        tokenA: FTW_SCRIPT_HASH[PRIVATENET],\n        tokenB: NUDES_SCRIPT_HASH[PRIVATENET],\n      },\n    },\n  ],\n  [TESTNET]: [\n    {\n      label: \"FTW - NUDES\",\n      value: {\n        tokenA: FTW_SCRIPT_HASH[TESTNET],\n        tokenB: NUDES_SCRIPT_HASH[TESTNET],\n      },\n    },\n  ],\n  [MAINNET]: [],\n};\n\nexport const ASSETS = (network: INetworkType) => {\n  const keys = Object.keys(ASSET_LIST[network]);\n  return keys.map((key) => {\n    return ASSET_LIST[network][key];\n  });\n};\n","import { CONST } from \"../../../index\";\n\nexport const BANK_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.TESTNET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.MAINNET]: \"\",\n};\n","import { u } from \"@cityofzion/neon-core\";\nimport {\n  base64ToAddress,\n  base64ToDate,\n  base64ToHash160,\n  parseMapValue,\n  toDecimal,\n} from \"../../../utils\";\nimport moment from \"moment\";\nimport { IReserve, ISwap, ISwapHistory } from \"./interfaces\";\n\nexport const getEstimate = (\n  amount: string,\n  reserveA: number,\n  reserveB: number\n): number => {\n  const fixed8TokenAmount = u.BigInteger.fromDecimal(amount, 8).toString();\n  let estimated = (parseFloat(fixed8TokenAmount) * reserveB) / reserveA;\n  estimated = Math.floor(estimated);\n  return toDecimal(estimated.toString());\n};\n\nexport const getUserShare = (totalShares, userShare, poolA, poolB) => {\n  return {\n    amountA: (poolA * userShare) / totalShares,\n    amountB: (poolB * userShare) / totalShares,\n  };\n};\n\nexport const parseUserStake = (stackItem) => {\n  return {\n    tokenA: base64ToHash160(stackItem.value[0].value as string),\n    tokenB: base64ToHash160(stackItem.value[1].value as string),\n    amountA: toDecimal(stackItem.value[2].value),\n    amountB: toDecimal(stackItem.value[3].value),\n  };\n};\n\nexport const parseReserve = (map): IReserve => parseMapValue(map);\n\nexport const parseSwapPaginate = (stackItem: any): ISwapHistory => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSwap(stackItem[3].value),\n  };\n};\n\nconst parseSwap = (stackItem): ISwap[] => {\n  return stackItem.map((item) => {\n    return {\n      account: base64ToAddress(item.value[0].value),\n      tokenIn: base64ToHash160(item.value[1].value),\n      tokenOut: base64ToHash160(item.value[2].value), // NEO amount\n      amountIn: toDecimal(item.value[3].value), // NEO amount\n      amountOut: toDecimal(item.value[4].value),\n      createdAt: item.value[5] ? base64ToDate(item.value[5].value) : \"\",\n    };\n  });\n};\n\nexport const defaultDeadLine = () =>\n  moment().utc().add(\"10\", \"minutes\").valueOf();\n","import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  stackItem.value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value;\n    switch (key) {\n      case \"owner\":\n        value = base64ToAddress(item.value.value);\n        break;\n      case \"attributes\":\n        value = parseProperties(item.value);\n        break;\n      default:\n        if (item.value.type === \"Integer\" || item.value.type === \"Boolean\") {\n          value = item.value.value;\n        } else {\n          value = base64ToString(item.value.value);\n        }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { SWAP_SCRIPT_HASH } from \"./consts\";\nimport { base64ToString, parseMapValue, toDecimal } from \"../../../utils\";\nimport { tx, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { defaultDeadLine, parseSwapPaginate, parseReserve } from \"./helpers\";\nimport { DEFAULT_WITNESS_SCOPE } from \"../../../consts\";\nimport { IPairInfo, IReserve } from \"./interfaces\";\nimport { parseProperties } from \"../../ttm/nft/helpers\";\n\nexport class SwapContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = SWAP_SCRIPT_HASH[networkType];\n  }\n\n  provide = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    amountA: string,\n    tokenB: string,\n    amountB: string,\n    lockUntil: number\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    // const defaultDeadLine = moment().utc().add(\"10\", \"minutes\").valueOf();\n    const invokeScript = {\n      operation: \"addLiquidity\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountA, 8).toString(),\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountB, 8).toString(),\n        },\n        {\n          type: \"Integer\",\n          value: defaultDeadLine(),\n        },\n        {\n          type: \"Integer\",\n          value: lockUntil,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, tokenA, tokenB],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  remove = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"removeLiquidity\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n        {\n          type: \"Integer\",\n          value: defaultDeadLine(),\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  swap = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    amountA: string,\n    tokenB: string,\n    amountB: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"swap\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountA, 8).toString(),\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountB, 8).toString(),\n        },\n        {\n          type: \"Integer\",\n          value: defaultDeadLine(),\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, tokenA, tokenB],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  getReserve = async (\n    tokenA: string,\n    tokenB: string,\n    connectedWallet?: IConnectedWallet\n  ): Promise<IPairInfo> => {\n    const scripts: any = [];\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getReserveData\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    scripts.push(script);\n    if (connectedWallet) {\n      const script1 = {\n        scriptHash: tokenA,\n        operation: \"balanceOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      };\n      const script2 = {\n        scriptHash: tokenB,\n        operation: \"balanceOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      };\n      scripts.push(script1);\n      scripts.push(script2);\n    }\n    const res = await Network.read(this.network, scripts);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    const pair: any = parseReserve(res.stack[0]);\n    const obj = {\n      reserve: pair,\n      pair: {\n        [pair.tokenA]: pair.amountA,\n        [pair.tokenB]: pair.amountB,\n      },\n      balances: {\n        [tokenA]: 0,\n        [tokenB]: 0,\n      },\n    };\n    if (connectedWallet) {\n      obj.balances[tokenA] = toDecimal(res.stack[1].value as string);\n      obj.balances[tokenB] = toDecimal(res.stack[2].value as string);\n    }\n    return obj;\n  };\n\n  getPairs = async (): Promise<IReserve[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPairs\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    // @ts-ignore\n    return res.stack[0].value.map((item) => parseMapValue(item));\n  };\n\n  // Swap estimate\n  getEstimate = async (tokenA, tokenB, swapToken, amount): Promise<number> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getEstimate\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n        { type: \"Hash160\", value: swapToken },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amount, 8).toString(),\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    if (res.state === \"FAULT\") {\n      return 0;\n    } else {\n      return toDecimal(res.stack[0].value as string);\n    }\n  };\n\n  getLPEstimate = (\n    amount: string,\n    reserveAAmount: number,\n    reserveBAmount: number\n  ): string => {\n    const fixed8TokenAmount = u.BigInteger.fromDecimal(amount, 8).toString();\n    let estimated =\n      (parseFloat(fixed8TokenAmount) * reserveBAmount) / reserveAAmount;\n    estimated = Math.floor(estimated);\n    return u.BigInteger.fromNumber(estimated).toDecimal(8).toString();\n    // return ((parseFloat(amount) * reserveBAmount) / reserveAAmount).toString();\n  };\n\n  getSwapHistory = async (tokenA: string, tokenB: string, page: string) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getSwaps\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n        { type: \"Integer\", value: page },\n      ],\n    };\n    const symbolA = {\n      scriptHash: tokenA,\n      operation: \"symbol\",\n      args: [],\n    };\n    const symbolB = {\n      scriptHash: tokenB,\n      operation: \"symbol\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script, symbolA, symbolB]);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    const paginate = parseSwapPaginate(res.stack[0].value);\n    return {\n      ...paginate,\n      [tokenA]: base64ToString(res.stack[1].value as string),\n      [tokenB]: base64ToString(res.stack[2].value as string),\n    };\n  };\n\n  getLPList = async (tokenA: string, tokenB: string): Promise<IReserve[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getLPTokensByPair\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    // @ts-ignore\n    return res.stack[0].value.map((item) => parseMapValue(item));\n  };\n\n  getContractHashes = async (tokenA: string, tokenB: string): Promise<any> => {\n    const script1 = {\n      scriptHash: tokenA,\n      operation: \"symbol\",\n      args: [],\n    };\n    const script2 = {\n      scriptHash: tokenA,\n      operation: \"decimals\",\n      args: [],\n    };\n    const script3 = {\n      scriptHash: tokenB,\n      operation: \"symbol\",\n      args: [],\n    };\n    const script4 = {\n      scriptHash: tokenB,\n      operation: \"decimals\",\n      args: [],\n    };\n    const script5 = {\n      scriptHash: this.contractHash,\n      operation: \"getReserve\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    const res = await Network.read(this.network, [\n      script1,\n      script2,\n      script3,\n      script4,\n      script5,\n    ]);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    return {\n      tokenA: {\n        symbol: base64ToString(res.stack[0].value as string),\n        decimals: res.stack[1].value,\n      },\n      tokenB: {\n        symbol: base64ToString(res.stack[2].value as string),\n        decimals: res.stack[3].value,\n      },\n      reserve: parseReserve(res.stack[4]),\n    };\n  };\n\n  getContractSymbol = async (tokenA: string): Promise<any> => {\n    const script1 = {\n      scriptHash: tokenA,\n      operation: \"symbol\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script1]);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    return base64ToString(res.stack[0].value as string);\n  };\n\n  getProperties = async (tokenId: string): Promise<object | null> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    return parseProperties(res.stack[0]);\n  };\n\n  getLPTokens = async (connectedWallet: IConnectedWallet) => {\n    const scripts = [\n      {\n        scriptHash: this.contractHash,\n        operation: \"getLPTokensByUser\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      },\n    ];\n    const res = await Network.read(this.network, scripts);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    // @ts-ignore\n    return res.stack[0].value.map((item) => parseMapValue(item));\n  };\n}\n","import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\n// tslint:disable-next-line:no-submodule-imports\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpcClient = Network.getRPCClient(network);\n    const res = await rpcClient.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      let amount;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n        amount = u.BigInteger.fromNumber(item.amount).toDecimal(8).toString();\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n        amount = item.amount;\n      }\n      balances.push({\n        contract: item.assethash,\n        amount,\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    },\n    network: INetworkType\n  ) {\n    const rpcClient = Network.getRPCClient(network);\n    const version: any = await rpcClient.getVersion();\n    const txObj = await DevWallet.build(rpcClient, invokeScript);\n    txObj.sign(DevWallet.account, version.protocol.network);\n    const txid = await rpcClient.sendRawTransaction(txObj);\n    // // tslint:disable-next-line:no-console\n    //   JSON.stringify(\n    //     {\n    //       RPC: rpc,\n    //       Transaction: txObj,\n    //       Network: version,\n    //       \"Network Fee\": txObj.networkFee.toDecimal(8).toString(),\n    //       \"System Fee\": txObj.systemFee.toDecimal(8).toString(),\n    //     },\n    //     null,\n    //     4\n    //   )\n    // );\n    return {\n      txid,\n      nodeUrl: rpcClient.url,\n    };\n  }\n\n  static createScript = (invokeScript: sc.ContractCallJson) => {\n    return sc.createScript({\n      scriptHash: invokeScript.scriptHash,\n      operation: invokeScript.operation,\n      args: invokeScript.args\n        ? invokeScript.args.map((param: any) => convertContractCallParam(param))\n        : [],\n    });\n  };\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    }\n    // cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n\n    const script = this.createScript(invokeScript);\n\n    // if (cosignerAddress) {\n    //   signers.push({\n    //     account: wallet.getScriptHashFromAddress(cosignerAddress),\n    //     scopes: tx.WitnessScope.Global,\n    //   });\n    // }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers: invokeScript.signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    if (invokeScript.extraSystemFee) {\n      const fee = u.BigInteger.fromDecimal(\n        invokeScript.extraSystemFee,\n        8\n      ).toString();\n      transaction.systemFee = systemFee.add(parseFloat(fee));\n    }\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","import neo3Dapi from \"neo3-dapi\";\nimport { ITransaction, IWalletType } from \"./interfaces\";\nimport {\n  DEV,\n  MAINNET,\n  NEO_LINE,\n  O3,\n  ONE_GATE,\n  TESTNET,\n  WALLET_LIST,\n} from \"../consts\";\nimport { NeoDapi } from \"@neongd/neo-dapi\";\nimport { DevWallet } from \"./dev-wallet\";\nimport { u, wallet } from \"@cityofzion/neon-core\";\nimport { INetworkType, Network } from \"../network\";\nimport { LocalStorage } from \"../local-storage\";\nimport moment from \"moment\";\n\nexport class WalletAPI {\n  walletType: IWalletType;\n\n  constructor(walletType: IWalletType) {\n    this.walletType = walletType;\n  }\n\n  static list = WALLET_LIST;\n\n  private O3Wallet = async () => {\n    const instance = neo3Dapi;\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const network = await instance.getNetworks();\n    const balances = await instance.getBalance(\n      {\n        params: {\n          address: account.address,\n          contracts: [],\n        },\n      },\n      network.defaultNetwork\n    );\n    // TODO: Need to some sort of validation for balances in case wallet doesn't have any address?\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private OneGate = async () => {\n    // @ts-ignore\n    const instance = new NeoDapi(window.OneGate);\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const network = await instance.getNetworks();\n    network.defaultNetwork =\n      network.defaultNetwork === \"MainNet\" ? MAINNET : TESTNET;\n    const balances = await instance.getNep17Balances({\n      address: account.address,\n      assetHashes: [],\n    });\n    // TODO: Need to some sort of validation for balances in case wallet doesn't have any address?\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances,\n    };\n  };\n\n  private NeoLine = async () => {\n    // @ts-ignore\n    const instance = new NEOLineN3.Init();\n    // @ts-ignore\n    // NEOLineN3 doesn't have getNetworks function\n    const instance2 = new NEOLine.Init();\n    const network = await instance2.getNetworks();\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance({\n      params: {\n        address: account.address,\n        contracts: [],\n      },\n    });\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private Dev = async (defaultNetwork: INetworkType) => {\n    const instance = DevWallet;\n    const network = await instance.getNetworks(defaultNetwork);\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance(defaultNetwork);\n    return { instance, provider, account, network, balances };\n  };\n\n  /**\n   * TODO: Remove dev wallet when 3rd party has privatenet support\n   * @param defaultNetwork\n   */\n  init = async (defaultNetwork: INetworkType): Promise<any> => {\n    let _instance;\n    try {\n      switch (this.walletType) {\n        case O3:\n          _instance = await this.O3Wallet();\n          break;\n        case NEO_LINE:\n          _instance = await this.NeoLine();\n          break;\n        case ONE_GATE:\n          _instance = await this.OneGate();\n          break;\n        case DEV:\n          _instance = await this.Dev(defaultNetwork);\n          break;\n      }\n      return {\n        key: this.walletType,\n        ..._instance,\n      };\n    } catch (e: any) {\n      if (this.walletType === ONE_GATE) {\n        throw new Error(\"OneGate wallet only supports in OneGate web browser.\");\n      } else {\n        throw new Error(e.description ? e.description : e.message);\n      }\n    }\n  };\n\n  /* Control signing and send transaction. TODO:Need to improve type hardcoding later */\n  invoke = async (\n    currentNetwork: INetworkType,\n    invokeScript: any,\n    extraSystemFee?: string,\n    testInvoke?: boolean\n  ): Promise<string> => {\n    const { instance, network } = await this.init(currentNetwork);\n    if (network.defaultNetwork !== currentNetwork) {\n      throw new Error(\n        \"Your wallet's network doesn't match with the app network setting.\"\n      );\n    }\n\n    // Do test invoke if required.\n    if (testInvoke) {\n      const rpcClient = Network.getRPCClient(currentNetwork);\n      const transaction = await DevWallet.build(rpcClient, invokeScript);\n      const invokeFunctionResponse = await rpcClient.invokeScript(\n        transaction.script,\n        transaction.signers\n      );\n      if (invokeFunctionResponse.state === \"FAULT\") {\n        throw new Error(invokeFunctionResponse.exception as string);\n      }\n    }\n\n    // Hard coding for OG wallet\n    if (this.walletType === ONE_GATE) {\n      invokeScript.args = invokeScript.args.map((param: any) => {\n        if (param.type === \"Address\") {\n          return {\n            type: \"Hash160\",\n            value: wallet.getScriptHashFromAddress(param.value),\n          };\n        } else {\n          return param;\n        }\n      });\n      if (extraSystemFee) {\n        invokeScript.extraSystemFee = u.BigInteger.fromDecimal(\n          extraSystemFee,\n          8\n        ).toString();\n      }\n    } else {\n      if (extraSystemFee) {\n        invokeScript.extraSystemFee = extraSystemFee;\n      }\n    }\n\n    try {\n      const res = await instance.invoke(invokeScript, currentNetwork);\n      const submittedTx: ITransaction = {\n        network,\n        wallet: this.walletType,\n        txid: res.txid,\n        contractHash: invokeScript.scriptHash,\n        method: invokeScript.operation,\n        args: invokeScript.args,\n        createdAt: moment().format(\"lll\"),\n      };\n      LocalStorage.addTransaction(submittedTx);\n      return res.txid;\n    } catch (e: any) {\n      // TODO: Need to improve dev wallet error handling as dapi standard.\n      if (e.description) {\n        throw new Error(e.description);\n      }\n      throw e;\n    }\n  };\n\n  invokeMulti = async (\n    currentNetwork: INetworkType,\n    invokeScript: any\n  ): Promise<any> => {\n    const { instance, network } = await this.init(currentNetwork);\n    if (network.defaultNetwork !== currentNetwork) {\n      throw new Error(\n        \"Your wallet's network doesn't match with the app network setting.\"\n      );\n    }\n    try {\n      const res = await instance.invokeMultiple(invokeScript);\n      const submittedTx: ITransaction = {\n        network,\n        wallet: this.walletType,\n        txid: res.txid,\n        contractHash: \"MultiInvoke\",\n        method: \"MultiInvoke\",\n        args: invokeScript.invokeArgs,\n        createdAt: moment().format(\"lll\"),\n      };\n      LocalStorage.addTransaction(submittedTx);\n      return res.txid;\n    } catch (e: any) {\n      if (e.description) {\n        throw new Error(e.description);\n      }\n    }\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const FARM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\",\n  [CONST.TESTNET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\", // 11/26\n  [CONST.MAINNET]: \"\",\n};\n","import store from \"store2\";\nimport { IConnectedWallet, ITransaction } from \"../wallet/interfaces\";\nimport { FARM_SCRIPT_HASH } from \"../contracts/ftw/farm/consts\";\nimport { RUNE_SCRIPT_HASH } from \"../contracts\";\nimport { MAINNET } from \"../consts\";\nimport { INetworkType } from \"../network\";\n\nconst CONNECTED_WALLET = \"CONNECTED_WALLET\";\nconst TRANSACTIONS = \"TRANSACTIONS\";\nconst NETWORK = \"NETWORK\";\nconst SWAP_TOKEN_A = \"SWAP_TOKEN_A\"\nconst SWAP_TOKEN_B = \"SWAP_TOKEN_B\"\n\nexport class LocalStorage {\n  public static initStorage = (network: string): ITransaction[] => {\n    const supportContracts = [\n      FARM_SCRIPT_HASH[network],\n      RUNE_SCRIPT_HASH[network],\n    ];\n    const transactions = LocalStorage.getTransactions();\n    const validatedTx: ITransaction[] = [];\n    transactions.forEach((tx) => {\n      if (supportContracts.includes(tx.contractHash)) {\n        validatedTx.push(tx);\n      } else {\n        LocalStorage.removeTransaction(tx);\n      }\n    });\n    return validatedTx;\n  };\n\n  public static getNetwork = () => {\n    return store.get(NETWORK) ? store.get(NETWORK) : MAINNET;\n  };\n\n  public static setNetwork = (network: INetworkType) => {\n    return store.set(NETWORK, network);\n  };\n\n  public static getWallet = (): IConnectedWallet | undefined =>\n    validateConnectedWallet(store.get(CONNECTED_WALLET));\n\n  public static setWallet(connectedWallet: IConnectedWallet) {\n    const validated = validateConnectedWallet(connectedWallet);\n    store.set(CONNECTED_WALLET, validated);\n  }\n\n  public static removeWallet() {\n    store.remove(CONNECTED_WALLET);\n  }\n\n  public static getTransactions = (): ITransaction[] =>\n    store.has(TRANSACTIONS) ? store.get(TRANSACTIONS) : [];\n\n  public static addTransaction(tx: ITransaction) {\n    if (store.has(TRANSACTIONS)) {\n      store.add(TRANSACTIONS, tx);\n    } else {\n      store.set(TRANSACTIONS, [tx]);\n    }\n    window.dispatchEvent(new Event(\"transactions\"));\n  }\n\n  public static updatePendingTransaction(txId: string) {\n    let transactions = store.get(TRANSACTIONS);\n    transactions = transactions.map((tx) => {\n      if (tx.txid === txId) {\n        tx.status = \"SUBMITTED\";\n      }\n      return tx;\n    });\n    store.set(TRANSACTIONS, transactions);\n  }\n\n  public static removeTransaction = (tx: ITransaction) =>\n    store.remove(TRANSACTIONS, tx);\n\n  public static clearTransaction = () => store.set(TRANSACTIONS, []);\n\n  static setSwapTokenA = (val: string) => store.set(SWAP_TOKEN_A, val);\n  static setSwapTokenB = (val: string) => store.set(SWAP_TOKEN_B, val);\n  static getSwapTokenA = () => store.get(SWAP_TOKEN_A);\n  static getSwapTokenB = () => store.get(SWAP_TOKEN_B);\n}\n\nconst validateConnectedWallet = (connectedWallet?: IConnectedWallet) => {\n  if (\n    !connectedWallet ||\n    !connectedWallet.account ||\n    !connectedWallet.provider ||\n    !connectedWallet.network\n  ) {\n    return undefined;\n  }\n  return connectedWallet;\n};\n//\n// const validateTransaction = (connectedWallet?: IConnectedWallet) => {\n//   if (\n//     !connectedWallet ||\n//     !connectedWallet.account ||\n//     !connectedWallet.provider ||\n//     !connectedWallet.network\n//   ) {\n//     return undefined;\n//   }\n//   return connectedWallet;\n// };\n","import { ContextOptions, IWalletStates } from \"./interfaces\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { IConnectedWallet, IWalletType } from \"../neo/wallet/interfaces\";\nimport { LocalStorage } from \"../neo/local-storage\";\nimport { sc } from \"@cityofzion/neon-core\";\nimport { WalletAPI } from \"../neo/wallet\";\nimport toast from \"react-hot-toast\";\nimport { INetworkType } from \"../neo/network\";\nimport { TESTNET } from \"../neo/consts\";\n\n// tslint:disable-next-line:no-object-literal-type-assertion\nexport const WalletContext = createContext({} as IWalletStates);\nexport const WalletContextProvider = (props: {\n  options: ContextOptions;\n  children: any;\n}) => {\n  let initNetwork = LocalStorage.getNetwork();\n  if (window.location.href.indexOf(\"network=testnet\") !== -1) {\n    initNetwork = TESTNET;\n    LocalStorage.setNetwork(TESTNET);\n  }\n  const [network, setNetwork] = useState(initNetwork);\n  const [totalTxSubmit, setTotalTxSubmit] = useState(0);\n\n  const [isWalletModalActive, setWalletModalActive] = useState(false);\n\n  const [connectedWallet, setConnectedWallet] = useState<\n    IConnectedWallet | undefined\n  >(props.options.useLocalStorage ? LocalStorage.getWallet() : undefined);\n\n  const [invokeScript, setInvokeScript] = useState<\n    sc.ContractCallJson | undefined\n  >();\n\n  // const [transactions, setTransactions] = useState(\n  //   props.options.useLocalStorage ? LocalStorage.initStorage(network) : []\n  // );\n\n  const [pendingTransactions, setPendingTransactions] = useState<string[]>([]);\n\n  const openWalletModal = () => setWalletModalActive(true);\n\n  const closeWalletModal = () => setWalletModalActive(false);\n\n  const connectWallet = async (walletType: IWalletType) => {\n    try {\n      const res = await new WalletAPI(walletType).init(network);\n      setConnectedWallet(res);\n      toast.success(\"Wallet connected\");\n      if (props.options.useLocalStorage) {\n        LocalStorage.setWallet(res);\n      }\n      setWalletModalActive(false);\n    } catch (e: any) {\n      toast.error(e.message);\n    }\n  };\n\n  const disConnectWallet = () => {\n    LocalStorage.removeWallet();\n    setConnectedWallet(undefined);\n    toast.success(\"Wallet disconnected\");\n  };\n\n  const doInvoke = (args: sc.ContractCallJson) => {\n    if (isWalletModalActive) setWalletModalActive(false);\n    setInvokeScript(args);\n  };\n\n  const closeInvoke = () => setInvokeScript(undefined);\n\n  const addPendingTransaction = (txid: string) => {\n    setPendingTransactions([...pendingTransactions, txid]);\n  };\n\n  const switchNetwork = (val: INetworkType) => {\n    setNetwork(val);\n    LocalStorage.setNetwork(val);\n  };\n\n  const removePendingTransaction = (txid: string) => {\n    setPendingTransactions(pendingTransactions.filter((i) => i !== txid));\n  };\n\n  const increaseTotalTxSubmit = () => {\n    setTotalTxSubmit(totalTxSubmit + 1);\n  };\n\n  const contextValue: IWalletStates = {\n    useDevWallet: props.options.useDevWallet,\n    network,\n    invokeScript,\n    list: WalletAPI.list,\n    connectedWallet,\n    isWalletModalActive,\n    openWalletModal,\n    closeWalletModal,\n    connectWallet,\n    disConnectWallet,\n    doInvoke,\n    closeInvoke,\n    addPendingTransaction,\n    removePendingTransaction,\n    pendingTransactions,\n    switchNetwork,\n    totalTxSubmit,\n    increaseTotalTxSubmit,\n  };\n\n  return (\n    <WalletContext.Provider value={contextValue}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n};\nexport const useWallet = () => useContext(WalletContext);\n","import { MAINNET, PRIVATENET, TESTNET } from \"../packages/neo/consts\";\n\nexport const HOME_PATH = \"/\";\nexport const MIGRATION_PATH = \"/migration\";\nexport const GASFI_PATH = \"/gas\";\nexport const GALLERY_PATH = \"/NFT/gallery\";\nexport const TOURNAMENT_PATH = \"/arena\";\nexport const SMITH_PATH = \"/smith\";\nexport const SMITH_CONTRACT_NEP17_PATH = \"/smith/nep17/contract\";\nexport const SMITH_CONTRACT_NEP11_PATH = \"/smith/nep11/contract\";\nexport const SMITH_PATH_NEP11 = \"/smith/nep11\";\nexport const COLLECTION_PATH = \"/NFT/collection\";\n// export const SWAP_PATH = \"/swap\";\n// export const SWAP_PATH_LIQUIDITY = \"/swap/liquidity\";\nexport const SWAP_PATH = \"/swap\";\nexport const SWAP_PATH_HISTORY = \"/swap/history\";\nexport const SWAP_PATH_LP_LIST = \"/swap/providers\";\nexport const SWAP_PATH_LIQUIDITY_ADD = \"/swap/liquidity/add\";\nexport const SWAP_PATH_LIQUIDITY_REMOVE = \"/swap/liquidity/remove\";\nexport const SWAP_PATH_TRADE = \"/swap/trade\";\nexport const FARM_PATH = \"/farm\";\nexport const FARM_STAKE_PATH = \"/farm/stake\";\nexport const FARM_STAKE_POSITIONS_PATH = \"/farm/stake/positions\";\nexport const FUSION_PATH = \"/fusion\";\nexport const INCUBATOR_PATH = \"/incubator\";\n\nexport const MENU = [\n  {\n    label: \"Swap\",\n    path: SWAP_PATH,\n    network: [PRIVATENET, TESTNET],\n  },\n  {\n    label: \"Farm\",\n    path: FARM_PATH,\n    network: [PRIVATENET, TESTNET],\n  },\n  {\n    label: \"Smith\",\n    path: SMITH_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n  {\n    label: \"NFT\",\n    path: GALLERY_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n    category: [\n      {\n        label: \"Rune\",\n        path: GALLERY_PATH,\n        network: [PRIVATENET, TESTNET, MAINNET],\n      },\n      {\n        label: \"Arena\",\n        path: TOURNAMENT_PATH,\n        network: [PRIVATENET, TESTNET, MAINNET],\n      },\n    ],\n  },\n  {\n    label: \"GAS-FI\",\n    path: GASFI_PATH,\n    network: [PRIVATENET],\n  },\n  {\n    label: \"Fusion\",\n    path: FUSION_PATH,\n    network: [PRIVATENET],\n  },\n  {\n    label: \"Migration\",\n    path: MIGRATION_PATH,\n    network: [PRIVATENET],\n  },\n];\n","import { CONST } from \"../../neo\";\n\nexport const getWalletIcon = (key: string) => {\n  let svg = \"\";\n  switch (key) {\n    case CONST.DEV:\n      svg = \"/icons/dev.png\";\n      break;\n    case CONST.O3:\n      svg = \"/icons/o3.svg\";\n      break;\n    case CONST.NEO_LINE:\n      svg = \"/icons/neoline.svg\";\n      break;\n    case CONST.ONE_GATE:\n      svg = \"/icons/onegate.png\";\n      break;\n  }\n  return svg;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { utils } from \"../../packages/neo\";\nimport { IConnectedWallet } from \"../../packages/neo/wallet/interfaces\";\nimport { useWallet } from \"../../packages/provider\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport { COLLECTION_PATH } from \"../../consts\";\nimport { NavLink } from \"react-router-dom\";\nimport { NEO_LINE, O3 } from \"../../packages/neo/consts\";\nimport neo3Dapi from \"neo3-dapi\";\ninterface IWalletDropdownProps {\n  connectedWallet: IConnectedWallet;\n}\nconst WalletDropdown = ({ connectedWallet }: IWalletDropdownProps) => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n\n  const onActive = () => setActive(!isActive);\n\n  useEffect(() => {\n    const refresh = () => {\n      connectWallet(connectedWallet.key);\n    };\n    const disconnected = () => {\n      disConnectWallet();\n    };\n\n    if (connectedWallet.key === NEO_LINE) {\n      window.addEventListener(\"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.NETWORK_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.DISCONNECTED\", disconnected);\n      return () => {\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.NETWORK_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.DISCONNECTED\",\n          disconnected\n        );\n      };\n    }\n    if (connectedWallet.key === O3) {\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.DISCONNECTED,\n        disconnected\n      );\n\n      return () => {\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.DISCONNECTED,\n          disconnected\n        );\n      };\n    }\n  }, []);\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className=\"button is-small is-black is-rounded\"\n          aria-controls=\"dropdown-wallet\"\n        >\n          <span>{utils.truncateAddress(connectedWallet.account.address)}</span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <img src={getWalletIcon(connectedWallet.key)} />\n              </div>\n              <div className=\"media-content\">\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </div>\n            </div>\n          </div>\n          <hr className=\"dropdown-divider\" />\n          <NavLink\n            className=\"dropdown-item has-text-dark\"\n            onClick={() => setActive(false)}\n            to={COLLECTION_PATH}\n          >\n            My NFT\n          </NavLink>\n          <hr className=\"dropdown-divider\" />\n          <a onClick={handleDisconnectWallet} className=\"dropdown-item\">\n            Disconnect\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React, { useState } from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, PRIVATENET, TESTNET } from \"../../packages/neo/consts\";\nimport { INetworkType } from \"../../packages/neo/network\";\n\nconst NetworkSwitch = () => {\n  const [isActive, setActive] = useState(false);\n  const { network, switchNetwork } = useWallet();\n  const onActive = () => setActive(!isActive);\n  const handleNetworkChange = (val: string) => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(\"Are you sure to switch network?\")) {\n      switchNetwork(val as INetworkType);\n      setActive(false);\n    }\n  };\n  const networkList = [PRIVATENET, TESTNET, MAINNET];\n\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className={`button is-small ${\n            network === MAINNET ? \"is-white\" : \"is-danger\"\n          }`}\n          aria-controls=\"dropdown-wallet\"\n        >\n          {network}\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {networkList.map((v) => {\n            if (\n              (process.env.NODE_ENV !== \"development\" && v === PRIVATENET) ||\n              network === v\n            ) {\n              return false;\n            }\n            return (\n              <div key={`network${v}`} className=\"dropdown-item\">\n                <a onClick={() => handleNetworkChange(v)}>Switch to {v}</a>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","import React from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, TESTNET } from \"../../packages/neo/consts\";\nimport toast from \"react-hot-toast\";\n\nconst NetworkSwitch = () => {\n  const { network, switchNetwork } = useWallet();\n  const handleSwitchNetwork = () => {\n    const targetNetwork = network === TESTNET ? MAINNET : TESTNET;\n    switchNetwork(targetNetwork);\n    toast.success(`Network switched. You are on ${targetNetwork}`);\n  };\n  return (\n    <div className=\"level is-mobile\">\n      <div className=\"level-left\">\n        <div className=\"level-item\">\n          Network:&nbsp;\n          <span\n            className={\n              network === TESTNET ? \"has-text-danger\" : \"has-text-info\"\n            }\n          >\n            {\" \"}\n            {network}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"level-right\">\n        <div className=\"level-item\">\n          <button onClick={handleSwitchNetwork} className=\"button is-small\">\n            Switch\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","import React from \"react\";\nimport { FaDiscord, FaMedium, FaTwitter, FaGithub } from \"react-icons/all\";\n\nconst SocialLinkGroup = () => {\n  return (\n    <>\n      <a\n        target=\"_blank\"\n        href=\"https://twitter.com/N3_FTW_NETWORK\"\n        className=\"button is-white is-small\"\n      >\n        <FaTwitter />\n      </a>\n      <a\n        target=\"_blank\"\n        href=\"https://github.com/ForTheWinn\"\n        className=\"button is-white is-small\"\n      >\n        <FaGithub />\n      </a>\n      <a\n        target=\"_blank\"\n        href=\"https://discord.gg/A83mtQqsfP\"\n        className=\"button is-white is-small\"\n      >\n        <FaDiscord />\n      </a>\n      <a\n        target=\"_blank\"\n        href=\"https://medium.com/@Forthewin_network\"\n        className=\"button is-white is-small\"\n      >\n        <FaMedium />\n      </a>\n    </>\n  );\n};\n\nexport default SocialLinkGroup;\n","import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaBars, FaFile, FaGithub, FaWallet } from \"react-icons/fa\";\nimport Logo from \"./Logo\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { useWallet } from \"../../packages/provider\";\nimport { utils } from \"../../packages/neo\";\nimport { MENU } from \"../../consts\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport NetworkSwitch from \"./NetworkSwitch\";\nimport NetworkSwitch2 from \"./NetworkSwitch2\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaMedium, FaTwitter, GrDocumentText } from \"react-icons/all\";\nimport { MAINNET, TESTNET } from \"../../packages/neo/consts\";\nimport toast from \"react-hot-toast\";\nimport SocialLinkGroup from \"./SocialLinkGroup\";\n\nconst Header = () => {\n  const { toggleSidebar, toggleWalletSidebar } = useApp();\n  const { connectedWallet, network, disConnectWallet, switchNetwork } =\n    useWallet();\n  const [isActive, setActive] = useState(false);\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    disConnectWallet();\n  };\n\n  const handleSwitchNetwork = () => {\n    const targetNetwork = network === TESTNET ? MAINNET : TESTNET;\n    switchNetwork(targetNetwork);\n    setActive(false);\n    toast.success(`Network switched. You are on ${targetNetwork}`);\n  };\n\n  return (\n    <nav\n      className=\"navbar has-shadow is-white is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ height: \"52px\" }}\n    >\n      <div className=\"container\">\n        <div\n          className=\"navbar-brand\"\n          style={{ justifyContent: \"space-between\" }}\n        >\n          <div\n            role=\"button\"\n            className=\"navbar-burger is-center is-hidden-tablet\"\n            style={{ marginLeft: 0 }}\n            onClick={toggleSidebar}\n          >\n            <FaBars />\n          </div>\n          <Link className=\"has-text-white navbar-item is-center\" to=\"/\">\n            <Logo />\n          </Link>\n          <div\n            role=\"button\"\n            className={`navbar-burger is-center is-hidden-desktop`}\n            onClick={() => {\n              if (connectedWallet) {\n                setActive(!isActive);\n              } else {\n                toggleWalletSidebar();\n              }\n            }}\n            style={{ marginLeft: 0 }}\n          >\n            <FaWallet />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div\n            className={`navbar-menu  is-hidden-tablet ${\n              isActive && \"is-active\"\n            }`}\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item\">\n                <div className=\"media\" style={{ alignItems: \"center\" }}>\n                  <div className=\"media-left\">\n                    <img\n                      width=\"32px\"\n                      src={getWalletIcon(connectedWallet.key)}\n                    />\n                  </div>\n                  <div className=\"media-content\">\n                    {utils.truncateAddress(connectedWallet.account.address)}\n                  </div>\n                </div>\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <div className=\"navbar-item\">\n                <NetworkSwitch2 />\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <a onClick={handleDisconnectWallet} className=\"navbar-item\">\n                Disconnect wallet\n              </a>\n            </div>\n          </div>\n        )}\n\n        <div className=\"navbar-menu ml-3\">\n          <div className=\"navbar-start\">\n            {MENU.map((route, i) => {\n              if (!route.network.includes(network)) return false;\n              if (route.category) {\n                return (\n                  <div\n                    key={`header-${route.label}${i}`}\n                    className=\"navbar-item has-dropdown is-hoverable\"\n                  >\n                    <div className=\"navbar-link\">{route.label}</div>\n                    <div className=\"navbar-dropdown is-boxed\">\n                      {route.category.map((item, index) => {\n                        return (\n                          <NavLink\n                            key={`category-${item.label}-${item.label}${index}`}\n                            activeClassName=\"is-active\"\n                            to={item.path}\n                            className=\"navbar-item\"\n                          >\n                            {item.label}\n                          </NavLink>\n                        );\n                      })}\n                    </div>\n                  </div>\n                );\n              } else {\n                return (\n                  <NavLink\n                    key={`header-${route.label}${i}`}\n                    activeClassName=\"is-active\"\n                    to={route.path}\n                    className=\"navbar-item\"\n                  >\n                    {route.label}\n                  </NavLink>\n                );\n              }\n            })}\n          </div>\n        </div>\n        <div className=\"navbar-end is-hidden-touch\">\n          <a\n            target={\"_blank\"}\n            className=\"navbar-item\"\n            href={\"http://docs.forthewin.network/\"}\n          >\n            <GrDocumentText />\n            <span className=\"ml-1\">Docs</span>\n          </a>\n          <div className=\"navbar-item\">\n            <SocialLinkGroup />\n          </div>\n\n          <div className=\"navbar-item\">\n            <NetworkSwitch />\n          </div>\n          {/*<PendingTransaction />*/}\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              {connectedWallet ? (\n                <WalletDropdown connectedWallet={connectedWallet} />\n              ) : (\n                <button\n                  onClick={toggleWalletSidebar}\n                  className=\"button is-small is-black is-rounded\"\n                >\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown } from \"react-icons/all\";\nimport { useApp } from \"../../../common/hooks/use-app\";\nimport { useWallet } from \"../../provider\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletDropdown = () => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectedWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n  if (!connectedWallet) {\n    return (\n      <button className=\"button is-white \" onClick={() => setActive(!isActive)}>\n        <strong>Wallet</strong>\n      </button>\n    );\n  }\n  return (\n    <div className={`dropdown ${isActive && \"is-active\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-white\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu3\"\n          onClick={() => setActive(!isActive)}\n        >\n          <span className=\"icon is-small\">\n            <img src={getWalletIcon(connectedWallet.key)} />\n          </span>\n          <span>\n            <strong>Wallet</strong>\n          </span>\n          <span className=\"icon is-small\">\n            <FaAngleDown />\n            {/*<i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>*/}\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a\n            onClick={handleDisconnectWallet}\n            href=\"#\"\n            className=\"dropdown-item\"\n          >\n            Disconnect\n          </a>\n          {/*<hr className=\"dropdown-divider\"/>*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletList = () => {\n  const { connectWallet, list, useDevWallet } = useWallet();\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          if (!useDevWallet && _wallet.key === DEV) return false;\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n","import React from \"react\";\nimport { IBalance } from \"../../neo/wallet/interfaces\";\n\nconst AssetCard = (props: IBalance) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        <strong>{props.symbol}</strong>\n      </div>\n      <div className=\"media-content\"></div>\n      <div className=\"media-right has-text-right\">{props.amount}</div>\n    </div>\n  );\n};\n\nexport default AssetCard;\n","import React from \"react\";\nimport { utils } from \"../../neo\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport WalletList from \"./WalletList\";\nimport AssetCard from \"./AssetCard\";\nimport { useWallet } from \"../../provider\";\nimport NetworkSwitch2 from \"../../../ui/components/NetworkSwitch2\";\n\nconst Wallet = () => {\n  const { connectedWallet } = useWallet();\n  return (\n    <>\n      <header className=\"level is-mobile p-3 is-marginless\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <WalletDropdown />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <small>\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </small>\n            </div>\n          </div>\n        )}\n      </header>\n      <hr className=\"m-0\" />\n      <section className=\"p-5\">\n        {connectedWallet ? (\n          <>\n            <div>\n              {connectedWallet &&\n                connectedWallet.balances.map((balance) => {\n                  return <AssetCard key={balance.symbol} {...balance} />;\n                })}\n            </div>\n          </>\n        ) : (\n          <WalletList />\n        )}\n      </section>\n\n      <div\n        className=\"p-5\"\n        style={{ position: \"absolute\", bottom: \"40px\", width: \"100%\" }}\n      >\n        <NetworkSwitch2 />\n      </div>\n    </>\n  );\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport Wallet from \"../../packages/ui/Wallet\";\nimport { useWallet } from \"../../packages/provider\";\n\nconst WalletSidebar = () => {\n  const { walletSidebarStatus, toggleWalletSidebar } = useApp();\n  const { connectedWallet } = useWallet();\n  if (connectedWallet) return <div></div>;\n  return (\n    <SideNav\n      openFromRight={true}\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={walletSidebarStatus}\n      onHideNav={toggleWalletSidebar}\n      children={<Wallet />}\n    />\n  );\n};\n\nexport default WalletSidebar;\n","import React from \"react\";\n\nconst PageLayout = (props) => {\n  return (\n    <section className=\"section\">\n      <div className=\"container\">{props.children}</div>\n    </section>\n  );\n};\n\nexport default PageLayout;\n","import React, { ReactElement } from \"react\";\nimport $ from \"jquery\";\n\ninterface IProps {\n  onClose: () => void;\n  children: ReactElement;\n  isLoading?: boolean;\n  error?: string;\n}\nconst ModalCard = ({ onClose, children, isLoading, error }: IProps) => {\n  React.useEffect(() => {\n    $(\"html\").addClass(\"is-clipped\");\n    return () => {\n      $(\"html\").removeClass(\"is-clipped\");\n    };\n  }, []);\n  return (\n    <div className=\"modal is-active\" style={{ zIndex: 99 }}>\n      <div className=\"modal-background\" onClick={onClose} />\n      <section className=\"modal-content\">\n        <div className=\"box\">\n          {isLoading ? <div>Loading</div> : error ? <div>Error</div> : children}\n        </div>\n      </section>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};\n\nexport default ModalCard;\n","import React from \"react\";\n\n/**\n * TODO: Better ux needed\n * @param props\n * @constructor\n */\ninterface ITransactionSuccessProps {\n  txid: string;\n  onClick: () => void;\n}\nconst TransactionSubmitted = ({ txid, onClick }: ITransactionSuccessProps) => {\n  return (\n    <div className=\"has-text-centered\">\n      <h1 className=\"title is-5\">Transaction submitted!</h1>\n      <p className=\"subtitle is-7\">{txid}</p>\n      <button onClick={onClick} className=\"button is-black\">\n        Close\n      </button>\n    </div>\n  );\n};\n\nexport default TransactionSubmitted;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport NumberFormat from \"react-number-format\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  onClose: () => void;\n}\nconst ActionModal = ({ range, onClose }: IActionModal) => {\n  const [amount, setAmount] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onDeposit = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).deposit(\n          connectedWallet,\n          amount,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">\n            {/*<img src={\"/neo_512_512.svg\"} />*/}\n            Deposit NEO\n          </h1>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Your position</label>\n                <div className=\"select is-fullwidth\">\n                  <select\n                    value={position}\n                    onChange={(e) => setPosition(e.target.value)}\n                  >\n                    <option value=\"\">Select your position</option>\n                    {_.range(0, range).map((i) => (\n                      <option key={i} value={i + 1}>\n                        {i + 1}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Amount</label>\n                <NumberFormat\n                  autoFocus={true}\n                  // ref={this.props, inputRef}\n                  decimalScale={0}\n                  inputMode=\"decimal\"\n                  className=\"input\"\n                  value={amount}\n                  onValueChange={(value) => {\n                    setAmount(value.value);\n                  }}\n                  thousandSeparator={true}\n                  suffix={\" NEO\"}\n                  allowLeadingZeros={false}\n                />\n              </div>\n            </div>\n          </div>\n          <button\n            onClick={onDeposit}\n            disabled={!position || !amount || parseFloat(amount) < 1}\n            className=\"button is-button is-black\"\n          >\n            Deposit\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default ActionModal;\n","import React from \"react\";\nimport Countdown from \"react-countdown\";\n\ninterface ISnapshotCountdownProps {\n  timeLeft: number;\n  onCreateSnapshot: () => void;\n}\nconst SnapshotCountdown = ({\n  timeLeft,\n  onCreateSnapshot,\n}: ISnapshotCountdownProps) => {\n  const CreateSnapshotBtn = () => (\n    <button onClick={onCreateSnapshot} className=\"button is-button is-black\">\n      Creat snapshot\n    </button>\n  );\n  if (timeLeft < 1) {\n    return <CreateSnapshotBtn />;\n  }\n  return (\n    <Countdown\n      date={Date.now() + timeLeft}\n      renderer={(props) => {\n        if (props.completed) {\n          return <CreateSnapshotBtn />;\n        } else {\n          return (\n            <span>\n              {props.hours}:{props.minutes}:{props.seconds}\n            </span>\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default SnapshotCountdown;\n","import React from \"react\";\nimport { IFarmSnapshot } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface ISnapshotListProps {\n  item: IFarmSnapshot;\n}\nconst SnapshotCard = ({ item }: ISnapshotListProps) => {\n  return (\n    <div key={item.createdAt} className=\"media\">\n      <div className=\"media-left\">#{item.no}</div>\n      <div className=\"media-content\">\n        Position: <span className=\"is-capitalized\">{item.winPosition}</span>\n        <br />\n        GAS: {item.totalGas}\n        <br />\n        {item.createdAt}\n      </div>\n    </div>\n  );\n};\n\nexport default SnapshotCard;\n","import React, { useState } from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\nimport SnapshotCard from \"./SnapshotCard\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCreateSnapshot = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).createSnapshot(\n          connectedWallet\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  if (!contractStatus) return <div></div>;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">Snapshots</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <SnapshotCountdown\n              timeLeft={parseFloat(contractStatus.timeLeft)}\n              onCreateSnapshot={onCreateSnapshot}\n            />\n          </div>\n        </div>\n      </div>\n\n      {contractStatus.snapshots.items.map((item) => (\n        <SnapshotCard key={item.no} item={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React from \"react\";\n\nconst NotifyError = ({ msg, onClose }) => {\n  if (!msg) return <></>;\n  return (\n    <div className=\"notification is-danger\">\n      <button onClick={onClose} className=\"delete\" />\n      {msg}\n    </div>\n  );\n};\n\nexport default NotifyError;\n","import React from \"react\";\nimport { IFarmDepositRecord } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface IMyPositionProps {\n  deposit?: IFarmDepositRecord;\n  lastSnapshotNo: string;\n  onCancel: () => void;\n  onPositionChange: () => void;\n  onClaim: () => void;\n}\nconst MyPosition = ({\n  deposit,\n  lastSnapshotNo,\n  onCancel,\n  onClaim,\n  onPositionChange,\n}: IMyPositionProps) => {\n  if (!deposit) return <div></div>;\n  const lastClaimNo = deposit.lastClaimNo ? parseFloat(deposit.lastClaimNo) : 0;\n  const isClaimable = parseFloat(lastSnapshotNo) > lastClaimNo;\n  return (\n    <>\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item is-block\">\n            <div className=\"\">\n              My position\n              <br />\n              <span className=\"is-capitalized\">\n                {deposit.position} / {deposit.amount} NEO\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"buttons\">\n            {!isClaimable && (\n              <button onClick={onPositionChange} className=\"button is-black\">\n                Change position\n              </button>\n            )}\n            <button onClick={onCancel} className=\"button is-light\">\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n      {isClaimable && (\n        <button onClick={onClaim} className=\"button is-primary is-fullwidth\">\n          Claim Reward\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default MyPosition;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport MyPosition from \"./MyPosition\";\n\ninterface IPoolProps {\n  contractStatus?: IFarmContractStatus;\n  onDeposit: () => void;\n  onCancel: () => void;\n  onPositionChange: () => void;\n  onClaim: () => void;\n}\nconst Pool = ({\n  contractStatus,\n  onDeposit,\n  onCancel,\n  onClaim,\n  onPositionChange,\n}: IPoolProps) => {\n  return (\n    <div className=\"\">\n      <div className=\"box\">\n        <div className=\"level\">\n          <div className=\"level-left\">\n            <div className=\"level-item is-block\">\n              <h1 className=\"title is-4 is-marginless\">Total</h1>\n            </div>\n          </div>\n          <div className=\"level-right\">\n            <div>\n              {contractStatus?.neoBalance} <strong>NEO</strong>\n              <br />\n              {contractStatus?.ftwBalance} <strong>FTW</strong>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {contractStatus && contractStatus.deposit ? (\n        <MyPosition\n          deposit={contractStatus.deposit}\n          lastSnapshotNo={contractStatus.snapshots.totalItems}\n          onCancel={onCancel}\n          onClaim={onClaim}\n          onPositionChange={onPositionChange}\n        />\n      ) : (\n        <button onClick={onDeposit} className=\"button is-primary is-fullwidth\">\n          Deposit\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Pool;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal, addPendingTransaction } =\n    useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).remove(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(txid);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm close</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Close my position\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).claim(connectedWallet);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm claim</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Claim my reward\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\n\ninterface IClaimsProps {\n  contractStatus?: IFarmContractStatus;\n  onClaim: () => void;\n}\nconst Claims = ({ contractStatus, onClaim }: IClaimsProps) => {\n  if (!contractStatus) return <div></div>;\n  if (!contractStatus.claims) return <div></div>;\n  if (!contractStatus.deposit) return <div></div>;\n  const lastClaimNo = contractStatus.deposit.lastClaimNo\n    ? parseFloat(contractStatus.deposit.lastClaimNo)\n    : 0;\n  const isClaimable =\n    parseFloat(contractStatus.snapshots.totalItems) > lastClaimNo;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">My Claims</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            {isClaimable && (\n              <button\n                onClick={onClaim}\n                className=\"button is-primary is-fullwidth\"\n              >\n                Claim Reward\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      {contractStatus.claims.items.length > 0 ? (\n        contractStatus.claims.items.map((item) => {\n          return (\n            <div key={item.createdAt} className=\"media\">\n              <div className=\"media-left\">#{item.no}</div>\n              <div className=\"media-content\">\n                Snapshots: {`${item.from} ~ ${item.end}`}\n                <br />\n                GAS: {item.GAS}\n                <br />\n                FTW: {item.FTW}\n                <br />\n                {item.createdAt}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>No claims to display</div>\n      )}\n    </div>\n  );\n};\n\nexport default Claims;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  currentPosition: string;\n  onClose: () => void;\n}\nconst PositionModal = ({ currentPosition, range, onClose }: IActionModal) => {\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onChange = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).changePosition(\n          connectedWallet,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-spaced\">Change your position</h1>\n          <p className=\"subtitle is-6\">\n            Your current position is <strong>{currentPosition}</strong>\n          </p>\n          <div className=\"field\">\n            <label className=\"label\">New position</label>\n            <div className=\"select is-fullwidth\">\n              <select\n                value={position}\n                onChange={(e) => setPosition(e.target.value)}\n              >\n                <option value=\"\">Select new position</option>\n                {_.range(0, range)\n                  .filter((i) => !(i + 1 === parseFloat(currentPosition)))\n                  .map((i) => (\n                    <option key={i} value={i + 1}>\n                      {i + 1}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <button\n            onClick={onChange}\n            disabled={!position}\n            className=\"button is-button is-black\"\n          >\n            Change\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PositionModal;\n","import React  from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport moment from \"moment\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  if (!contractStatus) return <div></div>;\n  const tempTime = moment.duration(contractStatus.interval);\n  const format = `Every ${\n    tempTime.hours() > 0\n      ? `${tempTime.hours()} hours ${tempTime.minutes()} mins`\n      : `${tempTime.minutes()} mins`\n  }`;\n  return (\n    <div className=\"\">\n      <h1 className=\"title is-4\">About</h1>\n      <h4 className=\"title is-6\">Current settings</h4>\n      <p className=\"subtitle is-6\">\n        Position range: {contractStatus.range}\n        <br />\n        Interval: {format}\n      </p>\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport ActionModal from \"./ActionModal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport toast from \"react-hot-toast\";\nimport SnapshotList from \"./SnapshotList\";\nimport NotifyError from \"../../components/NotifyError\";\nimport Pool from \"./Pool\";\nimport CancelModal from \"./CancelModal\";\nimport ClaimModal from \"./ClaimModal\";\nimport Claims from \"./Claims\";\nimport PositionModal from \"./PositionModal\";\nimport About from \"./About\";\nimport { TESTNET } from \"../../../packages/neo/consts\";\n\nconst Farm = () => {\n  // let location = useLocation();\n  const production = [TESTNET];\n  const [route, setRoute] = useState(\"POOL\");\n  const [modalActive, setModalActive] = useState(false);\n  const [cancelModalActive, setCancelModalActive] = useState(false);\n  const [claimModalActive, setClaimModalActive] = useState(false);\n  const [positionModalActive, setPositionModalActive] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [contractStatus, setContractStatus] = useState<IFarmContractStatus>();\n  const onActive = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onCancelModalActive = () => setCancelModalActive(true);\n  const onClaimModalActive = () => setClaimModalActive(true);\n  const onPositionChange = () => setPositionModalActive(true);\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new FarmContract(network).getStatus(connectedWallet);\n        setContractStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, route]);\n  if (!production.includes(network))\n    return (\n      <PageLayout>This smart contract is not support in {network}.</PageLayout>\n    );\n  return (\n    <PageLayout>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-half\">\n          <div className=\"box \">\n            <div className=\"tabs is-toggle\">\n              <ul>\n                <li className={route === \"POOL\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"POOL\")}>Pool</a>\n                </li>\n                {connectedWallet && contractStatus && contractStatus.deposit && (\n                  <li className={route === \"CLAIMS\" ? \"is-active\" : \"\"}>\n                    <a onClick={() => setRoute(\"CLAIMS\")}>Claims</a>\n                  </li>\n                )}\n                <li className={route === \"SNAPSHOTS\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"SNAPSHOTS\")}>Snapshots</a>\n                </li>\n                <li className={route === \"ABOUT\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"ABOUT\")}>About</a>\n                </li>\n              </ul>\n            </div>\n            <NotifyError msg={error} onClose={() => setError(\"\")} />\n            {route === \"POOL\" && (\n              <Pool\n                contractStatus={contractStatus}\n                onPositionChange={onPositionChange}\n                onDeposit={onActive}\n                onCancel={onCancelModalActive}\n                onClaim={onClaimModalActive}\n              />\n            )}\n            {route === \"SNAPSHOTS\" && (\n              <SnapshotList contractStatus={contractStatus} />\n            )}\n            {route === \"CLAIMS\" && (\n              <Claims\n                onClaim={onClaimModalActive}\n                contractStatus={contractStatus}\n              />\n            )}\n            {route === \"ABOUT\" && <About contractStatus={contractStatus} />}\n          </div>\n        </div>\n      </div>\n      {contractStatus && modalActive && (\n        <ActionModal\n          range={contractStatus.range}\n          onClose={() => setModalActive(false)}\n        />\n      )}\n      {contractStatus && contractStatus.deposit && positionModalActive && (\n        <PositionModal\n          currentPosition={contractStatus.deposit.position}\n          range={contractStatus.range}\n          onClose={() => setPositionModalActive(false)}\n        />\n      )}\n      {cancelModalActive && (\n        <CancelModal onClose={() => setCancelModalActive(false)} />\n      )}\n      {claimModalActive && (\n        <ClaimModal onClose={() => setClaimModalActive(false)} />\n      )}\n    </PageLayout>\n  );\n};\n\nexport default Farm;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\n\ninterface IPropertiesModal {\n  tokenId: string;\n  onClose: () => void;\n}\nconst PropertiesModal = ({ tokenId, onClose }: IPropertiesModal) => {\n  const [item, setItem] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getProperties(\n          tokenId.toString()\n        );\n        setItem(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network]);\n  return (\n    <Modal onClose={onClose}>\n      {isLoading ? (\n        <div>Loading the rune data from the chain..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <h1 className=\"title is-4\">{item.name}</h1>\n\n          <p className=\"subtitle is-7\">\n            <strong>Phase:</strong> {item.phase}, <strong>Luck:</strong>{\" \"}\n            {item.luck}\n          </p>\n          <figure className=\"image is-square\">\n            <img src={item.image} />\n          </figure>\n          <p className=\"subtitle is-7 has-text-right mt-3\">{item.owner}</p>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PropertiesModal;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport PropertiesModal from \"../Gallery/PropertiesModal\";\nimport { GALLERY_PATH } from \"../../../consts\";\nimport { Link } from \"react-router-dom\";\n\nconst MyCollection = () => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus(address: string) {\n      setError(\"\");\n      try {\n        const res = await new NFTContract(network).getTokensOf(address);\n        setTokens(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network]);\n  return (\n    <>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">My collection</h1>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"columns is-multiline\">\n            {tokens.length > 0 ? (\n              tokens.map((token) => (\n                <div className=\"column is-3\">\n                  <figure\n                    className=\"image\"\n                    onClick={() => onPropertiesModalActive(token.tokenId)}\n                  >\n                    <img src={token.image} />\n                  </figure>\n                </div>\n              ))\n            ) : (\n              <div className=\"column is-3\">\n                <div className=\"box\">\n                  <div className=\"block\">\n                    <p>You don't have any runes yet</p>\n                  </div>\n\n                  <Link className=\"button is-primary\" to={GALLERY_PATH}>\n                    Go Get Them\n                  </Link>\n                </div>\n                {/*<DisplayRandomRune width=\"100%\" height=\"100%\" />*/}\n              </div>\n            )}\n          </div>\n        )}\n      </PageLayout>\n      {/*<button onClick={onMint} className=\"button is-black\">Mint</button>*/}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MyCollection;\n","import React from \"react\";\nimport { RUNE_PRICE } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport DisplayRandomRune from \"../../components/RandomRune\";\ninterface IBannerProps {\n  network: INetworkType;\n  filter: string;\n  onMint: () => void;\n  onFilterChange: (val: string) => void;\n}\nconst Banner = ({ onMint, network }: IBannerProps) => {\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div>\n            <h1 className=\"title\">FTW Runes</h1>\n            <p className=\"subtitle\">Algorithms-generated, stored onchain NFT</p>\n            <div className=\"content is-small\">\n              <p>\n                <strong>Smart contract</strong>\n                <br />\n                <a\n                  className=\"has-text-dark is-size-7\"\n                  href=\"https://explorer.onegate.space/contractinfo/0xbebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\"\n                >\n                  0xbebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\n                </a>\n              </p>\n              <p>\n                <strong>Max supply</strong>\n                <br />\n                500 runes (Sold out)\n              </p>\n              <p>\n                <strong>Attribute #1</strong>\n                <br />\n                Dark, Light, Fire, Water, Wood, Earth, Metal\n              </p>\n              <p>\n                <strong>Attribute #2</strong>\n                <br /> Luck (1 ~ 10)\n              </p>\n              <p>\n                <strong>Press</strong>\n                <br />\n                <a\n                  // className=\"has-text-dark is-size-7\"\n                  href=\"https://neonewstoday.com/general/forthewin-network-launches-token-generator-and-ftw-rune-with-image-stored-onchain\"\n                >\n                  Article 1, &nbsp;\n                </a>\n                <a\n                  // className=\"has-text-dark is-size-7\"\n                  href=\"https://neonewstoday.com/nft/ftw-arena-tickets-now-on-sale/\"\n                >\n                  Article 2\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n","import { CONST } from \"..\";\n\nexport const ENDPOINT = {\n  [CONST.PRIVATENET]: \"http://localhost:3000\",\n  [CONST.TESTNET]:\n    \"https://jefzcuwe0e.execute-api.us-east-1.amazonaws.com/testnet\",\n  [CONST.MAINNET]:\n    \"https://z3fn74s0oa.execute-api.us-east-1.amazonaws.com/mainnet\",\n};\n","import { INetworkType } from \"../network\";\nimport { ENDPOINT } from \"./consts\";\n\n// interface IRuneFilter = \"All\" | \"Fire\" |  \"\"\n\nexport class RestAPI {\n  network: INetworkType;\n  endpoint: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.endpoint = ENDPOINT[networkType];\n  }\n\n  fetchResult = async (url: string) => {\n    const res = await fetch(url, { mode: \"cors\" });\n    const json = await res.json();\n    if (res.status === 200) {\n      return json;\n    } else {\n      // throw new Error(json.message);\n      throw new Error(\"Network error\");\n    }\n  };\n\n  async getRunes(filter) {\n    return this.fetchResult(this.endpoint + \"/runes/\" + filter);\n  }\n\n  async getRune(tokenId) {\n    return this.fetchResult(this.endpoint + \"/rune/\" + tokenId);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\nconst RuneLoading = () => {\n\tconst [colors, setColors] = useState(getColors());\n  const [bg, setBg] = useState(\"black\");\n  const [dot1, setDot1] = useState(\"black\");\n  const [dot2, setDot2] = useState(\"black\");\n  const [dot3, setDot3] = useState(\"black\");\n  const [dot4, setDot4] = useState(\"black\");\n  const [body, setBody] = useState(\"black\");\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setBody(\"white\");\n    }, 1000);\n    timer = setTimeout(() => {\n      setDot1(\"white\");\n    }, 2000);\n    timer = setTimeout(() => {\n      setDot2(\"white\");\n    }, 3000);\n    timer = setTimeout(() => {\n      setDot3(\"white\");\n    }, 4000);\n    timer = setTimeout(() => {\n      setDot4(\"white\");\n    }, 5000);\n    timer = setTimeout(() => {\n      setBg(\"rgb(\" + colors[0] + \",\" + colors[1] + \",\" + colors[2] + \")\");\n    }, 6000);\n    timer = setTimeout(() => {\n      setBody(\"rgb(\" + colors[3] + \",\" + colors[4] + \",\" + colors[5] + \")\");\n    }, 7000);\n    timer = setTimeout(() => {\n      setDot1(\"rgb(\" + colors[6] + \",\" + colors[7] + \",\" + colors[8] + \")\");\n    }, 8000);\n    timer = setTimeout(() => {\n      setDot2(\"rgb(\" + colors[9] + \",\" + colors[10] + \",\" + colors[11] + \")\");\n    }, 9000);\n    timer = setTimeout(() => {\n      setDot3(\"rgb(\" + colors[12] + \",\" + colors[13] + \",\" + colors[14] + \")\");\n    }, 10000);\n    timer = setTimeout(() => {\n      setDot4(\"rgb(\" + colors[15] + \",\" + colors[16] + \",\" + colors[17] + \")\");\n    }, 11000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <img width=\"100%\" height=\"100%\" src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default RuneLoading;\n","import React from \"react\";\n\nconst CheckMark = () => {\n  return (\n    <div style={{width:\"90px\", height:\"90px\"}}>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 130.2 130.2\"\n      >\n        <circle\n          className=\"path circle\"\n          fill=\"none\"\n          stroke=\"#73AF55\"\n          strokeWidth=\"6\"\n          strokeMiterlimit=\"10\"\n          cx=\"65.1\"\n          cy=\"65.1\"\n          r=\"62.1\"\n        />\n        <polyline\n          className=\"path check\"\n          fill=\"none\"\n          stroke=\"#73AF55\"\n          strokeWidth=\"6\"\n          strokeLinecap=\"round\"\n          strokeMiterlimit=\"10\"\n          points=\"100.2,40.2 51.5,88.8 29.8,67.5 \"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default CheckMark;\n","import React, { useEffect, useState } from \"react\";\nimport { INetworkType, Network } from \"../../neo/network\";\nimport RuneLoading from \"./RuneLoading\";\nimport CheckMark from \"../../../ui/pages/Tournament/scenes/Arena/Players/components/CheckMark\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExclamationCircle } from \"react-icons/all\";\nimport { TESTNET } from \"../../neo/consts\";\n\ninterface IAfterTransactionSubmittedProps {\n  txid: string;\n  network: INetworkType;\n  onSuccess: () => void;\n  onError: () => void;\n}\nconst AfterTransactionSubmitted = ({\n  txid,\n  network,\n  onSuccess,\n  onError,\n}: IAfterTransactionSubmittedProps) => {\n  const [isDone, setDone] = useState(false);\n  const [hasError, setError] = useState(\"\");\n\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        const res = await Network.getRawTx(txid, network);\n        if (res) {\n          setDone(true);\n        }\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    checkTxid();\n  }, [txid]);\n\n  return (\n    <div>\n      <div\n        style={{\n          width: \"200px\",\n          height: \"200px\",\n          margin: \"auto\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        className=\"\"\n      >\n        {hasError ? (\n          <FaExclamationCircle size={90} className=\"has-text-danger\" />\n        ) : isDone ? (\n          <CheckMark />\n        ) : (\n          <RuneLoading />\n        )}\n      </div>\n      <div className=\"has-background  has-text-centered mt-5\">\n        {hasError ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Error occurred</h1>\n            <p className=\"subtitle is-7\">{hasError}</p>\n            <button onClick={onError} className=\"button is-black\">\n              Close\n            </button>\n          </div>\n        ) : isDone ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Submitted</h1>\n            <p className=\"subtitle is-7\">Your transaction accepted</p>\n            <div className=\"block\">\n              <a\n                target=\"_blank\"\n                href={`https://${\n                  network === TESTNET ? \"testnet.\" : \"\"\n                }explorer.onegate.space/transactionInfo/${txid}`}\n              >\n                View txid on explorer\n              </a>\n            </div>\n            <div className=\"block\">\n              <button onClick={onSuccess} className=\"button is-black\">\n                Close\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <h1 className=\"title is-5\">Submitting..</h1>\n            <p className=\"subtitle is-7\">\n              Please wait until your transaction accepted\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AfterTransactionSubmitted;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport PropertiesModal from \"./PropertiesModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport Banner from \"./Banner\";\nimport { RestAPI } from \"../../../packages/neo/api\";\nimport { RUNE_PHASE_FILTER } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../components/Modal\";\n\nconst Gallery = () => {\n  const [txid, setTxid] = useState(\"\");\n  const [filter, setFilter] = useState<string>(RUNE_PHASE_FILTER[0]);\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n  const onFilterChange = (val: string) => setFilter(val);\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).mint(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    document.title =\n      \"Forthewin Rune: Algorithms-generated lucky runes NFT on NEO\";\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const items = await new RestAPI(network).getRunes(filter);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getTokens();\n        setTokens(items);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network, filter]);\n  return (\n    <section id=\"Rune\">\n      <Banner\n        network={network}\n        filter={filter}\n        onFilterChange={onFilterChange}\n        onMint={onMint}\n      />\n      {isLoading ? (\n        <PageLayout>\n          <div>Loading..</div>\n        </PageLayout>\n      ) : error ? (\n        <PageLayout>\n          <div>{error}</div>\n        </PageLayout>\n      ) : (\n        <div\n          className=\"container\"\n          style={{\n            display: \"flex\",\n            flexFlow: \"wrap\",\n          }}\n        >\n          {tokens.map((token) => (\n            <figure\n              style={{ width: \"5%\" }}\n              key={token.tokenId}\n              className=\"image rune\"\n              onClick={() => onPropertiesModalActive(token.tokenId.toString())}\n            >\n              <img src={token.image} />\n              {/*<small*/}\n              {/*  className=\"has-text-white\"*/}\n              {/*  style={{ position: \"absolute\", top: 0 }}*/}\n              {/*>*/}\n              {/*  #{token.tokenId}*/}\n              {/*</small>*/}\n              {/*<span className=\"has-text-white\">{token.phase}</span>*/}\n            </figure>\n          ))}\n        </div>\n      )}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={() => setTxid(\"\")}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { MENU } from \"../../consts\";\nimport { useWallet } from \"../../packages/provider\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaMedium, FaTwitter } from \"react-icons/all\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaGithub } from \"react-icons/fa\";\nimport SocialLinkGroup from \"./SocialLinkGroup\";\n\nconst SidebarNav = (props) => {\n  const { network } = useWallet();\n  const { toggleSidebar } = useApp();\n  return (\n    <>\n      <aside className=\"menu p-5\">\n        <p className=\"menu-label\">Menu</p>\n        <ul className=\"menu-list\">\n          {MENU.map((route, i) => {\n            if (!route.network.includes(network)) return false;\n            return (\n              <li key={`${route.label}${i}`}>\n                {route.category ? (\n                  <>\n                    <div\n                      onClick={toggleSidebar}\n                      // activeClassName={\"is-active\"}\n                      // to={route.path}\n                    >\n                      {route.label}\n                    </div>\n                    <ul>\n                      {route.category.map((item) => {\n                        return (\n                          <li key={item.label}>\n                            <NavLink\n                              key={`category-${item.label}`}\n                              activeClassName={\"is-active\"}\n                              to={item.path}\n                            >\n                              {item.label}\n                            </NavLink>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </>\n                ) : (\n                  <NavLink\n                    onClick={toggleSidebar}\n                    activeClassName={\"is-active\"}\n                    to={route.path}\n                  >\n                    {route.label}\n                  </NavLink>\n                )}\n              </li>\n            );\n          })}\n          <li>\n            {\" \"}\n            <a\n              target={\"_blank\"}\n              className=\"navbar-item\"\n              href={\"http://docs.forthewin.network/\"}\n            >\n\t            Documentation\n            </a>\n          </li>\n        </ul>\n      </aside>\n      <div className=\"p-5\" style={{ position: \"absolute\", bottom: \"40px\" }}>\n        <div className=\"buttons\">\n          <SocialLinkGroup />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SidebarNav;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport SidebarNav from \"./SidebarNav\";\n\nconst MobileMenuSlider = (props) => {\n  const { sidebarStatus, toggleSidebar } = useApp();\n  return (\n    <SideNav\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={sidebarStatus}\n      onHideNav={toggleSidebar}\n      children={<SidebarNav />}\n    />\n  );\n};\n\nexport default MobileMenuSlider;\n","import React from \"react\";\n\ninterface IBackgroundImageContainerProps {\n  src: string;\n  height: string;\n}\nconst BgContainer = ({ src, height }: IBackgroundImageContainerProps) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"none\",\n        backgroundImage: `url(${src})`,\n        // padding: \"80px 16px\",\n      }}\n    />\n  );\n};\n\nexport default BgContainer;\n","import React from \"react\";\nimport PageLayout from \"../components/PageLayout\";\nimport BgContainer from \"../components/BgContainer\";\nimport {GALLERY_PATH, SMITH_PATH, SWAP_PATH, TOURNAMENT_PATH} from \"../../consts\";\nimport { ARENA_PATH } from \"./Tournament/pageRoutes\";\nimport { Link } from \"react-router-dom\";\nimport { useWallet } from \"../../packages/provider\";\nimport { TESTNET } from \"../../packages/neo/consts\";\nimport toast from \"react-hot-toast\";\n\nconst CARDS = [\n\t{\n\t\ttitle: \"FTW Smith\",\n\t\ttype: \"Utility\",\n\t\tdesc: \"FTW Smith helps users to create and deploy fungible/Non-fungible token smart contracts without any codes.\",\n\t\timg: \"assets/smith.png\",\n\t\tlink: SMITH_PATH,\n\t},\n  {\n    title: \"FTW Rune\",\n    type: \"NFT\",\n    desc: \"FTW Rune is an algorithmically generated NFT created and stored onchain.\",\n    img: \"assets/runes.png\",\n    link: GALLERY_PATH,\n  },\n  {\n    title: \"FTW Arena\",\n    type: \"GameFi\",\n    desc: \" FTW Runes against each other with the victor earning a GAS prize.\",\n    img: \"assets/arena-bg.jpeg\",\n    link: TOURNAMENT_PATH,\n  },\n  {\n    title: \"FTW Swap\",\n    type: \"DeFi\",\n    desc: \"Coming soon. Try on our Testnet.\",\n    img: \"assets/swap.png\",\n    link: SWAP_PATH,\n  },\n  // {\n  //   title: \"FTW Lab\",\n  //   type: \"Testnet\",\n  //   desc: \"Preview FTW future apps.\",\n  //   img: \"assets/testnet.png\",\n  //   link: SMITH_PATH,\n  // },\n];\n\nconst Home = () => {\n  const { network, switchNetwork } = useWallet();\n  const onSwitchNetwork = () => {\n    if (network !== TESTNET) {\n      // eslint-disable-next-line no-restricted-globals\n      if (confirm(\"Are you sure to switch network?\")) {\n        switchNetwork(TESTNET);\n        toast.success(\"Network switched\");\n      }\n    }\n  };\n  return (\n    <div>\n      <section className=\"hero is-black\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Forthewin Network</h1>\n            <p className=\"subtitle\">\n              Building some cool decentralized stuff on NEO blockchain.{\" \"}\n            </p>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns is-multiline\">\n          {CARDS.map((card) => {\n            return (\n              <div key={card.title} className=\"column is-3\">\n                <div className=\"card\">\n                  <div className=\"card-image is-clickable\">\n                    <Link to={card.link}>\n                      <figure className=\"image\">\n                        <BgContainer src={card.img} height=\"300px\" />\n                      </figure>\n                    </Link>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"media\">\n                      <div className=\"media-content\">\n                        <p className=\"title is-4\">\n                          <Link className={\"has-text-dark\"} to={card.link}>\n                            {card.title}\n                          </Link>\n                        </p>\n                        <span className=\"tag is-primary\">{card.type}</span>\n                      </div>\n                    </div>\n                    <div className=\"content\" style={{ minHeight: \"100px\" }}>\n                      {card.desc}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"column is-3\">\n            <div className=\"card\">\n              <div\n                className=\"card-image is-clickable\"\n                onClick={onSwitchNetwork}\n              >\n                <figure className=\"image\">\n                  <BgContainer src={\"assets/lab.png\"} height=\"300px\" />\n                </figure>\n              </div>\n              <div className=\"card-content\">\n                <div className=\"media\">\n                  <div className=\"media-content\">\n                    <p\n                      onClick={onSwitchNetwork}\n                      className=\"title is-4 is-clickable\"\n                    >\n                      FTW Lab\n                    </p>\n                    <span className=\"tag is-primary\">Testnet</span>\n                  </div>\n                </div>\n                <div className=\"content\" style={{ minHeight: \"100px\" }}>\n                  Preview FTW future apps.\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Home;\n","import { CONST } from \"../../../index\";\n\nexport const SMITH_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"f161ae138e0255b809612e4d26e540c94c83c0cc\",\n  [CONST.TESTNET]: \"799704f9d8588b183204e154f8eea1de35bb3ecd\",\n  [CONST.MAINNET]: \"f860bbdcc5091a9ae7812b047fd325dfa7905ee1\",\n};\n\nexport const DEPLOY_FEE = {\n  [CONST.PRIVATENET]: \"10\",\n  [CONST.TESTNET]: \"10\",\n  [CONST.MAINNET]: \"10\",\n};\n","import {\n  base64ToAddress,\n  base64ToDate,\n  base64ToHash160,\n  base64ToString,\n  toDecimal,\n} from \"../../../utils\";\nimport { u } from \"@cityofzion/neon-core\";\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport {\n  ISmithNEP11Info,\n  ISmithNEP17Info,\n  ISmithNEP17Record,\n  ISmithNEP17RecordPaginate,\n} from \"./interfaces\";\n\nexport const parseNEP17RecordsPaginate = (\n  res: InvokeResult\n): ISmithNEP17RecordPaginate => {\n  const stack = res.stack[0].value as any;\n  return {\n    totalItems: parseFloat(stack[0].value),\n    totalPages: parseFloat(stack[1].value),\n    page: parseFloat(stack[2].value),\n    items: parseNEP17Record(stack[3].value),\n  };\n};\n\nconst parseNEP17Record = (stackItem): ISmithNEP17Record[] => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractOwner: base64ToAddress(item.value[1].value),\n      contractHash: base64ToHash160(item.value[2].value), // NEO amount\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      decimals: item.value[5].value, // NEO amount\n      totalSupply: item.value[6].value, // NEO amount\n      author: base64ToString(item.value[7].value), // NEO amount\n      description: base64ToString(item.value[8].value), // NEO amount\n      createdAt: base64ToDate(item.value[9].value),\n    };\n  });\n};\n\nexport const parseNEP11RecordPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseNEP11Record(stackItem[3].value),\n  };\n};\n\nconst parseNEP11Record = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractHash: base64ToHash160(item.value[1].value), // NEO amount\n      contractOwner: base64ToAddress(item.value[2].value),\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      description: base64ToString(item.value[5].value), // NEO amount\n      author: base64ToString(item.value[6].value), // NEO amount\n      email: base64ToString(item.value[7].value), // NEO amount\n      createdAt: base64ToDate(item.value[8].value),\n    };\n  });\n};\n\nexport const parseSmithProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n\nexport const parseSmithNEP17Info = (res: InvokeResult): ISmithNEP17Info => {\n  return {\n    owner: base64ToAddress(res.stack[0].value as string),\n    name: base64ToString(res.stack[1].value as string),\n    totalSupply: toDecimal(res.stack[2].value as string),\n    symbol: base64ToString(res.stack[3].value as string),\n    decimals: res.stack[4].value as string,\n    author: base64ToString(res.stack[5].value as string),\n    description: base64ToString(res.stack[6].value as string),\n    website: res.stack[7].value\n      ? base64ToString(res.stack[7].value as string)\n      : \"\",\n    logo: res.stack[8].value\n      ? base64ToString(res.stack[8].value as string)\n      : \"\",\n  };\n};\n\nexport const parseSmithNEP11Info = (res: InvokeResult): ISmithNEP11Info => {\n  return {\n    owner: base64ToAddress(res.stack[0].value as string),\n    symbol: base64ToString(res.stack[1].value as string),\n    totalSupply: res.stack[2].value as string,\n  };\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { DEFAULT_WITNESS_SCOPE, GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { SMITH_SCRIPT_HASH } from \"./consts\";\nimport {\n  ISmithNEP11Info,\n  ISmithNEP11RecordPaginate,\n  ISmithNEP17Info,\n  ISmithNEP17RecordPaginate,\n} from \"./interfaces\";\nimport {\n  parseNEP11RecordPaginate,\n  parseNEP17RecordsPaginate,\n  parseSmithNEP11Info,\n  parseSmithNEP17Info,\n  parseSmithProperties,\n} from \"./helpers\";\nimport { tx, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { IRuneMeta } from \"../nft/interfaces\";\n\nexport class SmithContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = SMITH_SCRIPT_HASH[networkType];\n  }\n\n  createNEP17 = async (\n    connectedWallet: IConnectedWallet,\n    contractName: string,\n    symbol: string,\n    decimals: string,\n    totalSupply: string,\n    author: string,\n    description: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"createNEP17\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: contractName,\n        },\n        {\n          type: \"String\",\n          value: author,\n        },\n        {\n          type: \"String\",\n          value: description,\n        },\n        {\n          type: \"String\",\n          value: symbol,\n        },\n        {\n          type: \"Integer\",\n          value: totalSupply,\n        },\n        {\n          type: \"Integer\",\n          value: decimals,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, GAS_SCRIPT_HASH],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  createNEP11 = async (\n    connectedWallet: IConnectedWallet,\n    contractName: string,\n    symbol: string,\n    author: string,\n    description: string,\n    email: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"createNEP11\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: symbol,\n        },\n        {\n          type: \"String\",\n          value: contractName,\n        },\n        {\n          type: \"String\",\n          value: description,\n        },\n        {\n          type: \"String\",\n          value: author,\n        },\n        {\n          type: \"String\",\n          value: email,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, GAS_SCRIPT_HASH],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  mintNFT = async (\n    connectedWallet: IConnectedWallet,\n    contractHash: string,\n    name: string,\n    description: string,\n    image: string,\n    json\n  ) => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"mintNFT\",\n      scriptHash: contractHash,\n      args: [\n        {\n          type: \"String\",\n          value: name,\n        },\n        {\n          type: \"String\",\n          value: description,\n        },\n        {\n          type: \"String\",\n          value: image,\n        },\n        {\n          type: \"String\",\n          value: json,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  updateNEP17 = async (\n    connectedWallet: IConnectedWallet,\n    contractHash: string,\n    logo: string,\n    website: string\n  ) => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript: any = {\n      invokeArgs: [],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n\n    if (logo) {\n      invokeScript.invokeArgs.push({\n        operation: \"updateLogo\",\n        scriptHash: contractHash,\n        args: [\n          {\n            type: \"String\",\n            value: logo,\n          },\n        ],\n      });\n    }\n    if (website) {\n      invokeScript.invokeArgs.push({\n        operation: \"updateWebsite\",\n        scriptHash: contractHash,\n        args: [\n          {\n            type: \"String\",\n            value: website,\n          },\n        ],\n      });\n    }\n    return new wallet.WalletAPI(connectedWallet.key).invokeMulti(\n      this.network,\n      invokeScript\n    );\n  };\n\n  getNEP17Records = async (\n    page: number\n  ): Promise<ISmithNEP17RecordPaginate> => {\n    const records = {\n      operation: \"getRecords\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: page,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [records]);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    return parseNEP17RecordsPaginate(res);\n  };\n\n  getNEP11Records = async (): Promise<ISmithNEP11RecordPaginate> => {\n    const records = {\n      operation: \"getNep11Records\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n    const scripts = [records];\n    const res = await Network.read(this.network, scripts);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    return parseNEP11RecordPaginate(res.stack[0].value);\n  };\n\n  getTokens = async (contract): Promise<string[]> => {\n    const script = {\n      scriptHash: contract,\n      operation: \"tokens\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    // @ts-ignore\n    return res.stack[0].iterator.map((item) => {\n      return u.HexString.fromBase64(item.value as string).toAscii();\n    });\n  };\n\n  totalSupply = async (contract): Promise<number> => {\n    const script = {\n      scriptHash: contract,\n      operation: \"totalSupply\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    return parseFloat(res.stack[0].value as string);\n  };\n\n  getProperties = async (\n    contractHash: string,\n    tokenId: string\n  ): Promise<IRuneMeta> => {\n    const script = {\n      scriptHash: contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    return parseSmithProperties(res.stack) as IRuneMeta;\n  };\n\n  getNep17ContractInfo = async (\n    contractHash: string\n  ): Promise<ISmithNEP17Info> => {\n    const owner = {\n      operation: \"owner\",\n      scriptHash: contractHash,\n      args: [],\n    };\n    const name = {\n      operation: \"name\",\n      scriptHash: contractHash,\n      args: [],\n    };\n    const totalSupply = {\n      operation: \"totalSupply\",\n      scriptHash: contractHash,\n      args: [],\n    };\n    const symbol = {\n      operation: \"symbol\",\n      scriptHash: contractHash,\n      args: [],\n    };\n    const decimals = {\n      operation: \"decimals\",\n      scriptHash: contractHash,\n      args: [],\n    };\n    const author = {\n      operation: \"author\",\n      scriptHash: contractHash,\n      args: [],\n    };\n    const description = {\n      operation: \"description\",\n      scriptHash: contractHash,\n      args: [],\n    };\n    const website = {\n      operation: \"website\",\n      scriptHash: contractHash,\n      args: [],\n    };\n    const logo = {\n      operation: \"logo\",\n      scriptHash: contractHash,\n      args: [],\n    };\n\n    const scripts = [\n      owner,\n      name,\n      totalSupply,\n      symbol,\n      decimals,\n      author,\n      description,\n      website,\n      logo,\n    ];\n    const res = await Network.read(this.network, scripts);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    return parseSmithNEP17Info(res);\n  };\n\n  getNep11ContractInfo = async (\n    contractHash: string\n  ): Promise<ISmithNEP11Info> => {\n    const owner = {\n      operation: \"owner\",\n      scriptHash: contractHash,\n      args: [],\n    };\n    const symbol = {\n      operation: \"symbol\",\n      scriptHash: contractHash,\n      args: [],\n    };\n    const totalSupply = {\n      operation: \"totalSupply\",\n      scriptHash: contractHash,\n      args: [],\n    };\n\n    const scripts = [owner, symbol, totalSupply];\n    const res = await Network.read(this.network, scripts);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    return parseSmithNEP11Info(res);\n  };\n}\n","const emojiRegexExp =\n  /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/gi;\n\nexport const detectEmojiInString = (values: object) => {\n  let detected = 0;\n  const keys = Object.keys(values);\n  keys.forEach((i) => {\n    detected = emojiRegexExp.test(values[i]) ? detected + 1 : detected;\n  });\n  return detected;\n};\n","import React from \"react\";\n\ninterface SmithModalHeader {\n  title: string;\n}\nconst SmithModalHeader = (props: SmithModalHeader) => {\n  return (\n    <div>\n      <div className=\"level is-mobile mb-3\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-3\">{props.title}</h1>\n          </div>\n        </div>\n        <div className=\"level-right is-hidden-touch\">\n          <div className=\"level-item\">\n            <div className=\"field is-grouped is-grouped-multiline\">\n              <div className=\"control\">\n                <div className=\"tags has-addons\">\n                  <span className=\"tag is-dark\">Deploy fee</span>\n                  <span className=\"tag is-info\">10 GAS</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"field is-grouped is-grouped-multiline is-hidden-desktop\">\n        <div className=\"control\">\n          <div className=\"tags has-addons\">\n            <span className=\"tag is-dark\">Deploy fee</span>\n            <span className=\"tag is-info\">10 GAS</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"content is-small\">\n        <li>\n          We recommend to mint on Testnet first before you mint on Mainnet.\n        </li>\n        <li>Do not use EMOJI or Unicode.</li>\n      </div>\n    </div>\n  );\n};\n\nexport default SmithModalHeader;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport NumberFormat from \"react-number-format\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport SmithModalHeader from \"./components/Header\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\n\nconst NEP17FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    decimals: \"8\",\n    totalSupply: \"\",\n    author: \"\",\n    description: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        // if (balanceCheck(connectedWallet.balances, 20)) {\n        try {\n          const res = await new SmithContract(network).createNEP17(\n            connectedWallet,\n            values.name,\n            values.symbol,\n            values.decimals,\n            values.totalSupply,\n            values.author,\n            values.description\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.message);\n        }\n        // } else {\n        //   toast.error(\"You must have more than 20 GAS.\");\n        // }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n\n  const firstInput = useRef(null);\n\n  useEffect(() => {\n    // @ts-ignore\n    firstInput.current.focus();\n  }, []);\n\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <SmithModalHeader title={\"Token Smart Contract\"} />\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">Token Name</label>\n            <div className=\"control\">\n              <input\n                ref={firstInput}\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Symbol</label>\n                <div className=\"control\">\n                  <input\n                    value={values.symbol}\n                    onChange={(e) =>\n                      handleValueChange(\"symbol\", e.target.value)\n                    }\n                    className=\"input\"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Decimals</label>\n                <div className=\"control\">\n                  <NumberFormat\n                    decimalScale={0}\n                    inputMode=\"decimal\"\n                    className=\"input\"\n                    value={values.decimals}\n                    onValueChange={(value) => {\n                      handleValueChange(\"decimals\", value.value);\n                    }}\n                    max={18}\n                    allowNegative={false}\n                    allowLeadingZeros={false}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Total supply</label>\n            <div className=\"control\">\n              <NumberFormat\n                thousandSeparator={true}\n                allowNegative={false}\n                decimalScale={0}\n                inputMode=\"decimal\"\n                className=\"input\"\n                value={values.totalSupply}\n                onValueChange={(value) => {\n                  handleValueChange(\"totalSupply\", value.value);\n                }}\n                allowLeadingZeros={false}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.decimals ||\n              parseFloat(values.decimals) > 18 ||\n              parseFloat(values.totalSupply) < 1 ||\n              !values.author ||\n              !values.description ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP17FormModal;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport { balanceCheck } from \"../../../packages/neo/utils\";\nimport SmithModalHeader from \"./components/Header\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst NEP11FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    author: \"\",\n    description: \"\",\n    email: \"\",\n  });\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        if (balanceCheck(connectedWallet.balances, 20)) {\n          try {\n            const res = await new SmithContract(network).createNEP11(\n              connectedWallet,\n              values.name,\n              values.symbol,\n              values.author,\n              values.description,\n              values.email\n            );\n            setTxid(res);\n          } catch (e: any) {\n            toast.error(e.message);\n          }\n        } else {\n          toast.error(\"You must have more than 20 GAS.\");\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  const firstInput = useRef(null);\n\n  useEffect(() => {\n    // @ts-ignore\n    firstInput.current.focus();\n  }, []);\n\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <SmithModalHeader title={\"NFT Smart Contract\"} />\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">NFT Contract Name</label>\n            <div className=\"control\">\n              <input\n                ref={firstInput}\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Symbol</label>\n            <div className=\"control\">\n              <input\n                value={values.symbol}\n                onChange={(e) => handleValueChange(\"symbol\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control\">\n              <input\n                value={values.email}\n                onChange={(e) => handleValueChange(\"email\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.author ||\n              !values.description ||\n              !values.email ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP11FormModal;\n","import React, { useState } from \"react\";\nimport { SMITH_PATH, SMITH_PATH_NEP11, TOURNAMENT_PATH } from \"../../../consts\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport NEP17FormModal from \"./NEP17FormModal\";\nimport NEP11FormModal from \"./NEP11FormModal\";\nimport {\n  BiCoinStack,\n  BsLightbulb,\n  FaCoins,\n  HiOutlinePhotograph,\n} from \"react-icons/all\";\n\nconst Banner = () => {\n  const location = useLocation();\n  const [isNep11FormModalActive, setNep11FormModalActive] = useState(false);\n  const [isNep17FormModalActive, setNep17FormModalActive] = useState(false);\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">Smith</h1>\n          <p className=\"subtitle\">\n            Create your token smart contracts without codes\n          </p>\n          <br />\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box content has-background-info has-text-white\">\n                <h5 className=\"has-text-light\">Token</h5>\n                <p>\n                  Neo blockchain's token smart contract. Like ERC20 Shiba Inu.\n                </p>\n                <button\n                  onClick={() => setNep17FormModalActive(true)}\n                  className=\"button is-light\"\n                >\n                  Create Token Contract\n                </button>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box content has-background-info  has-text-white\">\n                <h5 className=\"has-text-white\">NFT</h5>\n                <p>\n                  Neo blockchain's NFT smart contract. Like ERC721 Cryptopunk\n                  NFT.\n                </p>\n                <button\n                  onClick={() => setNep11FormModalActive(true)}\n                  className=\"button  is-light\"\n                >\n                  Create NFT Contract\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              <li\n                className={location.pathname === SMITH_PATH ? \"is-active\" : \"\"}\n              >\n                <Link to={SMITH_PATH}>\n                  <FaCoins />\n                  &nbsp; Token Showcase\n                </Link>\n              </li>\n              <li\n                className={\n                  location.pathname === SMITH_PATH_NEP11 ? \"is-active\" : \"\"\n                }\n              >\n                <Link to={SMITH_PATH_NEP11}>\n                  <BsLightbulb />\n                  &nbsp; NFT Showcase\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n      {isNep11FormModalActive && (\n        <NEP11FormModal onClose={() => setNep11FormModalActive(false)} />\n      )}\n      {isNep17FormModalActive && (\n        <NEP17FormModal onClose={() => setNep17FormModalActive(false)} />\n      )}\n    </section>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\nimport { ISmithNEP17Record } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport { Link } from \"react-router-dom\";\nimport { SMITH_CONTRACT_NEP17_PATH } from \"../../../../../consts\";\n\ninterface IContractCardProps {\n  data: ISmithNEP17Record;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network } = useWallet();\n  const logo = ASSET_LIST[network][data.contractHash]\n    ? ASSET_LIST[network][data.contractHash].logo\n    : undefined;\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <div className=\"level\">\n          <div className=\"level-left\">\n            {logo && (\n              <div className=\"level-item\">\n                <div className=\"image is-64x64\">\n                  <img src={logo} />\n                </div>\n              </div>\n            )}\n\n            <div className=\"level-item\">\n              <h5 className=\"title is-5 is-marginless\">\n                #{data.no} {data.name}\n              </h5>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/contractinfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n        </div>\n        <div className=\"field is-grouped is-grouped-multiline\">\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Symbol</span>\n              <span className=\"tag is-info\">{data.symbol}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Decimals</span>\n              <span className=\"tag is-info\">{data.decimals}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Total supply</span>\n              <span className=\"tag is-info\">\n                {parseFloat(data.totalSupply).toLocaleString()}\n              </span>\n            </div>\n          </div>\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Author</span>\n              <span className=\"tag is-info\">{data.author}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"media-right\">\n        <Link\n          to={`${SMITH_CONTRACT_NEP17_PATH}/${data.contractHash}`}\n          className=\"button is-light\"\n        >\n          Info\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ContractCard;\n","import { useEffect, useState } from \"react\";\n\ninterface IUseOnChainDataResult {\n  isLoaded: boolean;\n  data: any;\n  error?: string;\n}\nexport const useOnChainData = (\n  fn: () => Promise<any>,\n  deps: any[]\n): IUseOnChainDataResult => {\n  const [data, setData] = useState<any>();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const res = await fn();\n        setData(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n      setIsLoaded(true);\n    }\n    fetch();\n  }, deps);\n  return { error, isLoaded, data };\n};\n","import React, { useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\nimport Pagination from \"bulma-pagination-react\";\nimport { useOnChainData } from \"../../../../../common/hooks/use-onchain-data\";\n\nconst NEP17Smith = () => {\n  const [page, setPage] = useState(1);\n  const { connectedWallet, network } = useWallet();\n  const { isLoaded, error, data } = useOnChainData(() => {\n    return new SmithContract(network).getNEP17Records(page);\n  }, [connectedWallet, network, page]);\n  return (\n    <>\n      {!isLoaded ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {data && (\n            <>\n              {data.items.length > 0 ? (\n                data.items.map((item, i) => (\n                  <ContractCard key={\"contact17\" + i} data={item} />\n                ))\n              ) : (\n                <div>No contracts to display</div>\n              )}\n\n              {data.totalPages > 1 && (\n                <>\n                  <hr />\n                  <Pagination\n                    pages={data.totalPages}\n                    currentPage={page}\n                    onChange={(v) => {\n                      if (page !== v) {\n                        setPage(v);\n                      }\n                    }}\n                  />\n                </>\n              )}\n            </>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NEP17Smith;\n","import React from \"react\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\nimport { useOnChainData } from \"../../../../../common/hooks/use-onchain-data\";\n\ninterface IDisplayRuneProps {\n  contractHash: string;\n  tokenId: string;\n  network: INetworkType;\n}\n\nconst DisplayRune = ({ contractHash, tokenId, network }: IDisplayRuneProps) => {\n  const { isLoaded, error, data } = useOnChainData(() => {\n    return new SmithContract(network).getProperties(contractHash, tokenId);\n  }, [tokenId, network]);\n\n  if (!isLoaded) return <></>;\n  if (error) return <></>;\n  return <img width=\"100%\" height=\"100%\" src={data.image} />;\n};\n\nexport default DisplayRune;\n","import React, { useEffect, useState } from \"react\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport DisplayNFT from \"./DisplayNFT\";\nimport _ from \"underscore\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport { useOnChainData } from \"../../../../../common/hooks/use-onchain-data\";\ninterface ITokensProps {\n  contractHash: string;\n}\nconst Tokens = ({ contractHash }: ITokensProps) => {\n  const { network } = useWallet();\n  const { isLoaded, error, data } = useOnChainData(() => {\n    return new SmithContract(network).totalSupply(contractHash);\n  }, [network]);\n\n  return (\n    <>\n      <strong>Supply</strong>\n      <br />\n      {!isLoaded ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {data && (\n            <>\n              {data > 0 ? (\n                <>\n                  <br />\n                  <strong>Showcase</strong>\n                  <div className=\"columns is-multiline is-mobile\">\n                    {_.range(data > 12 ? 12 : data).map((i) => {\n                      const tokenId = i + 1;\n                      return (\n                        <div\n                          key={`token${i}`}\n                          className=\"column is-1-desktop is-3-mobile\"\n                        >\n                          <DisplayNFT\n                            network={network}\n                            contractHash={contractHash}\n                            tokenId={tokenId.toString()}\n                          />\n                        </div>\n                      );\n                    })}\n                  </div>\n                  {data > 12 && (\n                    <a\n                      className=\"button is-black\"\n                      target=\"_blank\"\n                      href={`https://${\n                        network === MAINNET\n                          ? \"explorer.onegate.space\"\n                          : \"testnet.explorer.onegate.space\"\n                      }/NFTtokeninfo/0x${contractHash}`}\n                    >\n                      <span className=\"icon\">\n                        <FaExternalLinkAlt />\n                      </span>\n                      <span>Browse more</span>\n                    </a>\n                  )}\n                </>\n              ) : (\n                <div></div>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Tokens;\n","import React, { useState } from \"react\";\nimport { ISmithNEP11Record } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport NEP11MintFormModal from \"../PageView/NEP11MintFormModal\";\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport Tokens from \"./Tokens\";\nimport { SMITH_CONTRACT_NEP11_PATH } from \"../../../../../consts\";\nimport { Link } from \"react-router-dom\";\n\ninterface IContractCardProps {\n  data: ISmithNEP11Record;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network, connectedWallet } = useWallet();\n  const [isMintModalActive, setMintModalActive] = useState(\"\");\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">\n          #{data.no} {data.name}\n        </h5>\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/NFTtokeninfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n          <br />\n          <Tokens contractHash={data.contractHash} />\n        </div>\n      </div>\n      <div className=\"media-right\">\n        <Link\n          to={`${SMITH_CONTRACT_NEP11_PATH}/${data.contractHash}`}\n          className=\"button is-light\"\n        >\n          Info\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ContractCard;\n","import React, { useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\nimport { useOnChainData } from \"../../../../../common/hooks/use-onchain-data\";\nimport Pagination from \"bulma-pagination-react\";\nconst NEP11Smith = () => {\n  const [page, setPage] = useState(1);\n  const { connectedWallet, network } = useWallet();\n  const { isLoaded, error, data } = useOnChainData(() => {\n    return new SmithContract(network).getNEP11Records();\n  }, [connectedWallet, network, page]);\n\n  return (\n    <>\n      {!isLoaded ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {data && (\n            <>\n              {data.items.length > 0 ? (\n                data.items.map((item, i) => (\n                  <ContractCard key={\"contract\" + i} data={item} />\n                ))\n              ) : (\n                <div>No contracts to display</div>\n              )}\n\n              {data.totalPages > 1 && (\n                <>\n                  <hr />\n                  <Pagination\n                    pages={data.totalPages}\n                    currentPage={page}\n                    onChange={(v) => {\n                      if (page !== v) {\n                        setPage(v);\n                      }\n                    }}\n                  />\n                </>\n              )}\n            </>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NEP11Smith;\n","import React, { useState } from \"react\";\nimport Modal from \"../../../../components/Modal\";\n\ninterface IActionModal {\n  onClose: () => void;\n  onUpdate: (values: any) => void;\n}\nconst NEP17UpdateFormModal = ({ onClose, onUpdate }: IActionModal) => {\n  const [values, setValues] = useState({\n    logo: \"\",\n    website: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <h1 className=\"title\">Update your contract</h1>\n        <hr />\n        <div className=\"field\">\n          <label className=\"label\">Logo Url</label>\n          <div className=\"control\">\n            <input\n              value={values.logo}\n              onChange={(e) => handleValueChange(\"logo\", e.target.value)}\n              className=\"input\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Website</label>\n          <div className=\"control\">\n            <input\n              value={values.website}\n              onChange={(e) => handleValueChange(\"website\", e.target.value)}\n              className=\"input\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n\n        <hr />\n        <button\n          onClick={() => onUpdate(values)}\n          disabled={!values.logo && !values.website}\n          className=\"button is-primary\"\n        >\n          Update\n        </button>\n      </>\n    </Modal>\n  );\n};\n\nexport default NEP17UpdateFormModal;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport { useOnChainData } from \"../../../../../common/hooks/use-onchain-data\";\nimport { toast } from \"react-hot-toast\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport NEP17UpdateFormModal from \"./NEP17UpdateFormModal\";\n\nconst NEP17InfoPage = () => {\n  const params = useParams();\n  const { contractHash } = params as any;\n  const { connectedWallet, network } = useWallet();\n  const [isUpdateModalActive, setUpdateModalActive] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const [txid, setTxid] = useState<string>();\n\n  const { isLoaded, error, data } = useOnChainData(() => {\n    return new SmithContract(network).getNep17ContractInfo(contractHash);\n  }, [connectedWallet, network, refresh]);\n\n  const onSubmitSuccess = () => {\n    setRefresh(refresh + 1);\n    setTxid(\"\");\n  };\n\n  const onClickUpdate = () => {\n    if (connectedWallet) {\n      if (connectedWallet.account.address === data.owner) {\n        setUpdateModalActive(true);\n      } else {\n        toast.error(\"Only contract owner can update\");\n      }\n    } else {\n      toast.error(\"Please connect your wallet\");\n    }\n  };\n  const onUpdate = async (values) => {\n    if (connectedWallet) {\n      try {\n        const res = await new SmithContract(network).updateNEP17(\n          connectedWallet,\n          contractHash,\n          values.logo,\n          values.website\n        );\n        setUpdateModalActive(false);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <div className=\"box\">\n      {!isLoaded ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div className=\"content\">\n          <h3>Failed to load contract</h3>\n          <p>Contract may have been updated.</p>\n          <p>{error}</p>\n        </div>\n      ) : (\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-64x64\">\n              <img src={data.logo ? data.logo : \"/symbols/unknown.png\"} />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <div className=\"content\">\n              <h3>{data.name}</h3>\n              <p>{data.description}</p>\n              {data.website ? <p>{data.website}</p> : <div></div>}\n              <br />\n              <strong>Contract Hash</strong>\n              <br />\n              0x{contractHash}{\" \"}\n              <a\n                target=\"_blank\"\n                href={`https://${\n                  network === MAINNET\n                    ? \"explorer.onegate.space\"\n                    : \"testnet.explorer.onegate.space\"\n                }/contractinfo/0x${contractHash}`}\n              >\n                <FaExternalLinkAlt />\n              </a>\n              <br />\n              <strong>Contract Owner</strong>\n              <br />\n              {data.owner}\n              <br />\n              <strong>Website</strong>\n              <br />\n              {data.website ? data.website : \"None\"}\n            </div>\n\n            <div className=\"field is-grouped is-grouped-multiline\">\n              <div className=\"control\">\n                <div className=\"tags has-addons\">\n                  <span className=\"tag is-dark\">Symbol</span>\n                  <span className=\"tag is-info\">{data.symbol}</span>\n                </div>\n              </div>\n\n              <div className=\"control\">\n                <div className=\"tags has-addons\">\n                  <span className=\"tag is-dark\">Decimals</span>\n                  <span className=\"tag is-info\">{data.decimals}</span>\n                </div>\n              </div>\n\n              <div className=\"control\">\n                <div className=\"tags has-addons\">\n                  <span className=\"tag is-dark\">Total supply</span>\n                  <span className=\"tag is-info\">\n                    {parseFloat(data.totalSupply).toLocaleString()}\n                  </span>\n                </div>\n              </div>\n              <div className=\"control\">\n                <div className=\"tags has-addons\">\n                  <span className=\"tag is-dark\">Author</span>\n                  <span className=\"tag is-info\">{data.author}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"media-right\">\n            <button onClick={onClickUpdate} className=\"button is-primary\">\n              Update\n            </button>\n          </div>\n        </div>\n      )}\n\n      {isUpdateModalActive && (\n        <NEP17UpdateFormModal\n          onUpdate={onUpdate}\n          onClose={() => setUpdateModalActive(false)}\n        />\n      )}\n\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            network={network}\n            txid={txid}\n            onSuccess={onSubmitSuccess}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default NEP17InfoPage;\n","import React, { useState } from \"react\";\nimport Modal from \"../../../../components/Modal\";\n\ninterface IActionModal {\n  contractHash: string;\n  onClose: () => void;\n  onMint: (values: any) => void;\n}\nconst NEP11MintFormModal = ({ onClose, onMint }: IActionModal) => {\n  const [showForm, setShowForm] = useState(false);\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    image: \"\",\n    attributes: {},\n  });\n  const [attValues, setAttValues] = useState({\n    key: \"\",\n    value: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n\n  const handleAttChange = (key: string, val: string) => {\n    setAttValues({\n      ...attValues,\n      [key]: val,\n    });\n  };\n\n  const handleAttributes = () => {\n    if (attValues.key && attValues.value) {\n      // @ts-ignore\n      const attributes = values.attributes;\n      attributes[attValues.key] = attValues.value;\n      setValues({\n        ...values,\n        attributes,\n      });\n      setAttValues({\n        key: \"\",\n        value: \"\",\n      });\n    }\n  };\n\n  const attKeys = Object.keys(values.attributes);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <h1 className=\"title\">Mint a NFT</h1>\n        <hr />\n        <div className=\"field\">\n          <label className=\"label\">NFT Name</label>\n          <div className=\"control\">\n            <input\n              value={values.name}\n              onChange={(e) => handleValueChange(\"name\", e.target.value)}\n              className=\"input\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">NFT Description</label>\n          <div className=\"control\">\n            <input\n              value={values.description}\n              onChange={(e) => handleValueChange(\"description\", e.target.value)}\n              className=\"input\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">NFT Image</label>\n          <div className=\"control\">\n            <input\n              value={values.image}\n              onChange={(e) => handleValueChange(\"image\", e.target.value)}\n              className=\"input\"\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div className=\"level\">\n          <div className=\"level-left\">\n            <div className=\"level-item\">\n              <label className=\"label\">NFT Attributes</label>\n            </div>\n          </div>\n\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <button\n                onClick={() => setShowForm(!showForm)}\n                className=\"button is-dark\"\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"block\">\n          <div className=\"field is-grouped is-grouped-multiline\">\n            {attKeys.map((k) => {\n              return (\n                <div className=\"control\">\n                  <div className=\"tags has-addons\">\n                    <span className=\"tag is-dark\">{k}</span>\n                    <span className=\"tag is-info\">{values.attributes[k]}</span>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {showForm && (\n          <div className=\"block\">\n            <div className=\"columns is-mobile\">\n              <div className=\"column is-5\">\n                <div className=\"control\">\n                  <input\n                    placeholder=\"KEY\"\n                    value={attValues.key}\n                    onChange={(e) => handleAttChange(\"key\", e.target.value)}\n                    className=\"input\"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div className=\"column\">\n                <div className=\"control is-5\">\n                  <input\n                    placeholder=\"VALUE\"\n                    value={attValues.value}\n                    onChange={(e) => handleAttChange(\"value\", e.target.value)}\n                    className=\"input\"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div className=\"column is-2\">\n                <button\n                  disabled={!attValues.key || !attValues.value}\n                  onClick={handleAttributes}\n                  className=\"button\"\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <hr />\n        <button\n          onClick={() => onMint(values)}\n          disabled={!values.name || !values.description || !values.image}\n          className=\"button is-primary\"\n        >\n          Create\n        </button>\n      </>\n    </Modal>\n  );\n};\n\nexport default NEP11MintFormModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport { useOnChainData } from \"../../../../../common/hooks/use-onchain-data\";\nimport Tokens from \"../NEP11/Tokens\";\nimport NEP11MintFormModal from \"./NEP11MintFormModal\";\nimport { toast } from \"react-hot-toast\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../../components/Modal\";\n\nconst NEP11InfoPage = () => {\n  const params = useParams();\n  const { contractHash } = params as any;\n  const { connectedWallet, network } = useWallet();\n  const [isMintModalActive, setMintModalActive] = useState(\"\");\n  const [refresh, setRefresh] = useState(0);\n  const [txid, setTxid] = useState<string>();\n\n  const { isLoaded, error, data } = useOnChainData(() => {\n    return new SmithContract(network).getNep11ContractInfo(contractHash);\n  }, [connectedWallet, network, refresh]);\n\n  const onClickMint = () => {\n    if (connectedWallet) {\n      if (connectedWallet.account.address === data.owner) {\n        setMintModalActive(contractHash);\n      } else {\n        toast.error(\"Only contract owner can mint\");\n      }\n    } else {\n      toast.error(\"Please connect your wallet\");\n    }\n  };\n  const onMint = async (values) => {\n    if (connectedWallet) {\n      try {\n        const res = await new SmithContract(network).mintNFT(\n          connectedWallet,\n          contractHash,\n          values.name,\n          values.description,\n          values.image,\n          JSON.stringify(values.attributes)\n        );\n        setMintModalActive(\"\");\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  const onSubmitSuccess = () => {\n    setRefresh(refresh + 1);\n    setTxid(\"\");\n  };\n\n  if (!isLoaded) return <div>Loading contract info..</div>;\n  if (error) return <div>{error}</div>;\n  return (\n    <div className=\"box\">\n      <div className=\"media\">\n        <div className=\"media-content\">\n          <div className=\"content\">\n            {/*<h3>{data.contractHash}</h3>*/}\n            {/*<p>{data.description}</p>*/}\n            {/*{data.website ? <p>{data.website}</p> : <div></div>}*/}\n            {/*<br />*/}\n            <strong>Contract Hash</strong>\n            <br />\n            0x{contractHash}{\" \"}\n            <a\n              target=\"_blank\"\n              href={`https://${\n                network === MAINNET\n                  ? \"explorer.onegate.space\"\n                  : \"testnet.explorer.onegate.space\"\n              }/contractinfo/0x${contractHash}`}\n            >\n              <FaExternalLinkAlt />\n            </a>\n            <br />\n            <strong>Contract Owner</strong>\n            <br />\n            {data.owner}\n            <br />\n            <Tokens contractHash={contractHash} />\n          </div>\n          <div className=\"field is-grouped is-grouped-multiline\">\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Symbol</span>\n                <span className=\"tag is-info\">{data.symbol}</span>\n              </div>\n            </div>\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Total supply</span>\n                <span className=\"tag is-info\">{data.totalSupply}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"media-right\">\n          <div className=\"block\">\n            <button onClick={onClickMint} className=\"button is-primary\">\n              Mint\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {isMintModalActive && (\n        <NEP11MintFormModal\n          onMint={onMint}\n          contractHash={isMintModalActive}\n          onClose={() => setMintModalActive(\"\")}\n        />\n      )}\n\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            network={network}\n            txid={txid}\n            onSuccess={onSubmitSuccess}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default NEP11InfoPage;\n","import React, { useEffect } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport {\n  SMITH_CONTRACT_NEP11_PATH,\n  SMITH_CONTRACT_NEP17_PATH,\n  SMITH_PATH,\n  SMITH_PATH_NEP11,\n} from \"../../../consts\";\nimport { Route } from \"react-router-dom\";\nimport Banner from \"./Banner\";\nimport NEP17Smith from \"./scenes/NEP17\";\nimport NEP11Smith from \"./scenes/NEP11\";\nimport NEP17InfoPage from \"./scenes/PageView/NEP17InfoPage\";\nimport NEP11InfoPage from \"./scenes/PageView/NEP11InfoPage\";\n\nconst Smith = () => {\n  useEffect(() => {\n    document.title =\n      \"Forthewin Smith: Create your NEP11 and NEP17 smart contracts without any codes.\";\n  }, []);\n  return (\n    <>\n      <Banner />\n      <PageLayout>\n        <Route exact path={SMITH_PATH} component={() => <NEP17Smith />} />\n        <Route exact path={SMITH_PATH_NEP11} component={() => <NEP11Smith />} />\n        <Route\n          exact\n          path={`${SMITH_CONTRACT_NEP17_PATH}/:contractHash`}\n          component={() => <NEP17InfoPage />}\n        />\n        <Route\n          exact\n          path={`${SMITH_CONTRACT_NEP11_PATH}/:contractHash`}\n          component={() => <NEP11InfoPage />}\n        />\n      </PageLayout>\n    </>\n  );\n};\n\nexport default Smith;\n","import { TOURNAMENT_PATH } from \"../../../consts\";\n\nexport const ARENA_PATH = TOURNAMENT_PATH + \"/:arenaNo\";\n","import { CONST } from \"../../../index\";\n\nexport const TOURNAMENT_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"d2016f40d26d420c696132e5dae453d93b0f3050\",\n  [CONST.TESTNET]: \"1666b9485e2faf13ccea24c9563dfa5cbd92a1ad\",\n  [CONST.MAINNET]: \"0eb288c413b5d5ec4aa0df5aea34d9538b28dd29\",\n};\n\nexport const ADMIN_FOR_PLAY = {\n  [CONST.PRIVATENET]: [\"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\"],\n  [CONST.TESTNET]: [\n    \"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\",\n    \"NS9QLsaY8RzN9fxTWj9AECyLaJvsk38XUb\",\n  ],\n  [CONST.MAINNET]: [\"NS9QLsaY8RzN9fxTWj9AECyLaJvsk38XUb\"],\n};\n\nexport const SUPPORT_TICKET_PRICE = \"0.2\";\nexport const TOURNAMENT_TIME_PADDING = 3600000;\n","import {\n  base64ToAddress,\n  base64ToHash160,\n  base64ToString,\n  toDecimal,\n} from \"../../../utils\";\nimport { IHistory, IHistoryGame, IPlayer } from \"./interfaces\";\n\nexport const parsePlayer = (stackItem): IPlayer => {\n  return stackItem.map((item) => {\n    return {\n      // no: item.value[0].value,\n      owner: base64ToAddress(item.value[0].value),\n      tokenHash: base64ToHash160(item.value[1].value),\n      tokenId: base64ToString(item.value[2].value),\n      phase: base64ToString(item.value[3].value),\n      luck: item.value[4].value,\n      createdAt: item.value[5].value,\n    };\n  });\n};\n\nexport const parseHistory = (stackItem: any): IHistory => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    currentPage: stackItem[2].value,\n    items: parseGame(stackItem[3].value),\n  };\n};\n\nconst parseGame = (stackItem): IHistoryGame[] => {\n  return stackItem.map((item) => {\n    return {\n      gameNo: item.value[0].value,\n      tournamentTree: parsePlayer(item.value[1].value),\n      champion: base64ToString(item.value[2].value), // NEO amount\n      nonce: item.value[3].value,\n      betsOnChampion: item.value[4].value,\n      totalBets: item.value[5].value,\n      rollover: item.value[6].value,\n      fee: item.value[7].value,\n      championPrize: item.value[8].value,\n      createdAt: item.value[9].value,\n      champOwner: item.value[10]\n        ? base64ToAddress(item.value[10].value)\n        : undefined,\n    };\n  });\n};\n\nexport const calculateClaimableAmount = (\n  history: IHistoryGame,\n  betAmount: number\n): number => {\n  let totalAmount =\n    parseFloat(history.totalBets) -\n    parseFloat(history.fee) -\n    parseFloat(history.championPrize);\n  totalAmount = totalAmount + parseFloat(history.rollover);\n  let myClaimAble =\n    (totalAmount * betAmount) / parseFloat(history.betsOnChampion);\n  myClaimAble = Math.floor(myClaimAble);\n  return toDecimal(myClaimAble.toString());\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { SUPPORT_TICKET_PRICE, TOURNAMENT_SCRIPT_HASH } from \"./consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { RUNE_SCRIPT_HASH } from \"../nft\";\nimport { parsePlayer, parseHistory } from \"./helpers\";\nimport { DEFAULT_WITNESS_SCOPE, GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { base64ToAddress, toDecimal } from \"../../../utils\";\nimport { u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\n\nexport class TournamentContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = TOURNAMENT_SCRIPT_HASH[networkType];\n  }\n\n  register = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: RUNE_SCRIPT_HASH[this.network],\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n        {\n          type: \"Array\",\n          value: [\n            {\n              type: \"Integer\",\n              value: arenaNo,\n            },\n          ],\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  play = async (\n    connectedWallet: IConnectedWallet,\n    arenaNo: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"play\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      \"0.05\",\n      true\n    );\n  };\n\n  leave = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"leave\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n      // \"0.1\"\n    );\n  };\n\n  bet = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        { type: \"Hash160\", value: senderHash },\n        { type: \"Hash160\", value: this.contractHash },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(SUPPORT_TICKET_PRICE, 8).toString(),\n        },\n        {\n          type: \"Array\",\n          value: [\n            { type: \"Integer\", value: arenaNo },\n            { type: \"String\", value: tokenId },\n          ],\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      true\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    arenaNo: string,\n    gameNo: string\n  ): Promise<string> => {\n\t  const senderHash = NeonWallet.getScriptHashFromAddress(\n\t\t  connectedWallet.account.address\n\t  );\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n      ],\n\t    signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  getPlayers = async (arenaNo: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPlayers\",\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parsePlayer(res.stack[0].value);\n  };\n\n  history = async (arenaNo: string, page: number): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getHistoryPaginate\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: page },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    return parseHistory(res.stack[0].value);\n  };\n\n  getGameHeight = async (arenaNo: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getGameHeight\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].value;\n  };\n\n  getBetAmount = async (\n    arenaNo: string,\n    gameNo: string,\n    championTokenId: string,\n    address: string\n  ): Promise<any> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getBetsOnAccount\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"String\", value: championTokenId },\n        { type: \"Address\", value: address },\n      ],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"isClaimed\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"Address\", value: address },\n      ],\n    };\n    const res = await Network.read(this.network, [script, script1]);\n    return {\n      // @ts-ignore\n      betAmount: parseFloat(res.stack[0].value),\n      // @ts-ignore\n      isClaimed: res.stack[1].value,\n    };\n  };\n\n  getBetOnPlayer = async (\n    arenaNo: string,\n    gameNo: string,\n    tokenId: string,\n    address: string\n  ): Promise<{\n    totalBets: string;\n    userBets: string;\n  }> => {\n    const scripts: any = [];\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getBetsOnPlayer\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"String\", value: tokenId },\n      ],\n    };\n    scripts.push(script);\n\n    if (address) {\n      const script1 = {\n        scriptHash: this.contractHash,\n        operation: \"getBetsOnAccount\",\n        args: [\n          { type: \"Integer\", value: arenaNo },\n          { type: \"Integer\", value: gameNo },\n          { type: \"String\", value: tokenId },\n          { type: \"Address\", value: address },\n        ],\n      };\n      scripts.push(script1);\n    }\n    const res = await Network.read(this.network, scripts);\n    return {\n      totalBets: res.stack[0].value as string,\n      userBets: res.stack[1] ? (res.stack[1].value as string) : \"\",\n    };\n  };\n\n  getCurrentPrize = async (\n    arenaNo: string\n  ): Promise<{\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  }> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getCurrentPrize\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"getGameHeight\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const script2 = {\n      scriptHash: this.contractHash,\n      operation: \"getPreviousWinner\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const script3 = {\n      scriptHash: this.contractHash,\n      operation: \"getTimeElapsed\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const res = await Network.read(this.network, [\n      script,\n      script1,\n      script2,\n      script3,\n    ]);\n    return {\n      prize: toDecimal(res.stack[0].value as string),\n      gameNo: parseFloat(res.stack[1].value as string) + 1,\n      previousChampWallet: res.stack[2].value\n        ? base64ToAddress(res.stack[2].value as string)\n        : undefined,\n      timeElapsedFromPreviousGame: res.stack[3].value\n        ? (res.stack[3].value as string)\n        : undefined,\n    };\n  };\n}\n","import React from \"react\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TOURNAMENT_TIME_PADDING } from \"../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IPlayButtonProps {\n  arenaNo: string;\n  onSubmitted: (txid: string) => void;\n  status?: {\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  };\n}\nconst PlayButton = ({ arenaNo, onSubmitted, status }: IPlayButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPlay = async () => {\n    if (connectedWallet && status) {\n      // try {\n      //   const res = await new TournamentContract(network).play(\n      //     connectedWallet,\n      //     arenaNo\n      //   );\n      //   addPendingTransaction(res);\n      //   onSubmitted(res);\n      // } catch (e: any) {\n      //   toast.error(e.message);\n      // }\n      // const timeLeft =\n      //   TOURNAMENT_TIME_PADDING -\n      //   parseFloat(status.timeElapsedFromPreviousGame);\n      // if (timeLeft <= 0) {\n      try {\n        const res = await new TournamentContract(network).play(\n          connectedWallet,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        onSubmitted(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n      // } else {\n      // }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <button className=\"button is-primary press-font\" onClick={onPlay}>\n      Start\n    </button>\n  );\n};\n\nexport default PlayButton;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TOURNAMENT_PATH } from \"../../../../../consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport PlayButton from \"../../components/PlayButton\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { ADMIN_FOR_PLAY } from \"../../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IBanner {\n  arenaNo: string;\n  pathname: string;\n  status?: {\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  };\n}\nconst Banner = ({ arenaNo, status, pathname }: IBanner) => {\n  const { connectedWallet, network } = useWallet();\n  const [playTxid, setPlayTxid] = useState(\"\");\n\n  let hasPermissionToPlay = false;\n  if (ADMIN_FOR_PLAY[network].includes(connectedWallet?.account.address)) {\n    hasPermissionToPlay = true;\n  }\n  if (\n    connectedWallet &&\n    status &&\n    connectedWallet.account.address === status.previousChampWallet\n  ) {\n    hasPermissionToPlay = true;\n  }\n  return (\n    <>\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4\">ARENA {arenaNo}</h1>\n          </div>\n        </div>\n\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            Round: #{status ? status.gameNo : \"\"}\n            <br />\n            Prize: {status ? status.prize + \" GAS\" : \"\"}\n            {hasPermissionToPlay && (\n              <div className=\"has-text-centered\">\n                <PlayButton\n                  onSubmitted={setPlayTxid}\n                  arenaNo={arenaNo}\n                  status={status}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          <li\n            className={\n              pathname === TOURNAMENT_PATH + \"/\" + arenaNo ? \"is-active\" : \"\"\n            }\n          >\n            <Link to={TOURNAMENT_PATH + \"/\" + arenaNo}>Players</Link>\n          </li>\n          <li\n            className={\n              pathname === TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"\n                ? \"is-active\"\n                : \"\"\n            }\n          >\n            <Link to={TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"}>\n              History\n            </Link>\n          </li>\n        </ul>\n      </div>\n\n      {playTxid && (\n        <Modal onClose={() => setPlayTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={playTxid}\n            network={network}\n            onSuccess={() => setPlayTxid(\"\")}\n            onError={() => setPlayTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\nimport { INetworkType } from \"../../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { RestAPI } from \"../../../../packages/neo/api\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaStar } from \"react-icons/fa\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  isOwner?: boolean;\n  onClick: (obj) => void;\n}\n\nconst DisplayRuneWithProperties = ({\n  width,\n  height,\n  tokenId,\n  network,\n  isOwner,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchRune() {\n      try {\n        const res = await new RestAPI(network).getRune(tokenId);\n        setToken(res);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getProperties(tokenId);\n        // setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchRune();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune is-relative\"\n      onClick={() => onClick({ ...token, tokenId })}\n    >\n      <img src={token.image} />\n      {isOwner && (\n        <FaStar\n          style={{ position: \"absolute\", top: \"2px\", left: \"3px\" }}\n          className=\"has-text-warning\"\n        />\n      )}\n    </figure>\n  );\n};\n\nexport default DisplayRuneWithProperties;\n","import React from \"react\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { balanceCheck } from \"../../../../packages/neo/utils\";\nimport { SUPPORT_TICKET_PRICE } from \"../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IBetButtonProps {\n  arenaNo: string;\n  tokenId: string;\n  setTxid: (txid: string) => void;\n}\nconst BetButton = ({ arenaNo, tokenId, setTxid }: IBetButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onBet = async () => {\n    if (connectedWallet) {\n      if (\n        balanceCheck(connectedWallet.balances, parseFloat(SUPPORT_TICKET_PRICE))\n      ) {\n        try {\n          const res = await new TournamentContract(network).bet(\n            connectedWallet,\n            tokenId,\n            arenaNo\n          );\n          addPendingTransaction(res);\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error(`You must have more than ${SUPPORT_TICKET_PRICE} GAS.`);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <button onClick={onBet} className=\"button is-primary is-fullwidth\">\n      Support {SUPPORT_TICKET_PRICE} GAS\n    </button>\n  );\n};\n\nexport default BetButton;\n","import React from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\n\ninterface ILeaveButtonProps {\n  arenaNo: string;\n  tokenId: string;\n  setTxid: (txid: string) => void;\n}\nconst LeaveButton = ({ arenaNo, tokenId, setTxid }: ILeaveButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onLeave = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).leave(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  return (\n    <button onClick={onLeave} className=\"button is-danger is-fullwidth\">\n      Leave\n    </button>\n  );\n};\n\nexport default LeaveButton;\n","import React, { useEffect, useState } from \"react\";\nimport { IRuneMeta } from \"../../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport BetButton from \"../../../../components/BetButton\";\nimport LeaveButton from \"../../../../components/LeaveButton\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toDecimal } from \"../../../../../../../packages/neo/utils\";\n\ninterface IPlayerModalProps {\n  arenaNo: string;\n  gameNo?: number;\n  player: IRuneMeta & { tokenId: string; gameOwner: string };\n  onClose: () => void;\n}\n\nconst PlayerModal = ({\n  arenaNo,\n  gameNo,\n  player,\n  onClose,\n}: IPlayerModalProps) => {\n  const [txid, setTxid] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const [status, setStatus] = useState({\n    totalBets: \"\",\n    userBets: \"\",\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    async function fetchContractStatus(_gameNo) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetOnPlayer(\n          arenaNo,\n          _gameNo,\n          player.tokenId,\n          connectedWallet ? connectedWallet.account.address : undefined\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (gameNo) {\n      fetchContractStatus(gameNo);\n    }\n  }, [gameNo, network]);\n  return (\n    <Modal onClose={onClose}>\n      <div>\n        {txid ? (\n          <AfterTransactionSubmitted\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n            txid={txid}\n            network={network}\n          />\n        ) : (\n          <div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <img src={player.image} />\n              </div>\n              <div className=\"column\">\n                <div className=\"content\">\n                  <strong>Name</strong>\n                  <br />\n                  <p>{player.name}</p>\n                  <strong>Phase</strong>\n                  <p>{player.phase}</p>\n                  <strong>Luck</strong>\n                  <p>{player.luck}</p>\n                  <strong>Owner</strong>\n                  <p>{player.gameOwner}</p>\n                  <strong>Current support amount</strong>\n                  <p>{toDecimal(status.totalBets)}</p>\n                  {connectedWallet && (\n                    <>\n                      <strong>My support amount</strong>\n                      <p>{toDecimal(status.userBets)}</p>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <BetButton\n                  setTxid={setTxid}\n                  arenaNo={arenaNo}\n                  tokenId={player.tokenId}\n                />\n              </div>\n              <div className=\"column\">\n                <button\n                  onClick={onClose}\n                  className=\"button is-light is-fullwidth\"\n                >\n                  Close\n                </button>\n              </div>\n              {connectedWallet &&\n              connectedWallet.account.address === player.gameOwner ? (\n                <div className=\"column\">\n                  <LeaveButton\n                    setTxid={setTxid}\n                    arenaNo={arenaNo}\n                    tokenId={player.tokenId}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default PlayerModal;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { NFTContract } from \"../../../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toast } from \"react-hot-toast\";\n\ninterface INFTListModalModal {\n  arenaNo: string;\n  onClose: () => void;\n}\nconst NFTListModal = ({ arenaNo, onClose }: INFTListModalModal) => {\n  const [txid, setTxid] = useState(\"\");\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n\n  const onRegister = async (tokenId: string) => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).register(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        {txid ? (\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n          />\n        ) : (\n          <div>\n            <div className=\"block\">\n              <h5 className=\"title is-5\">Select a NFT to send to the ARENA</h5>\n            </div>\n            <div>\n              {isLoading ? (\n                <div>Loading..</div>\n              ) : error ? (\n                <div>{error}</div>\n              ) : tokens.length > 0 ? (\n                <div\n                  style={{\n                    flexFlow: \"wrap\",\n                  }}\n                  className=\"is-flex\"\n                >\n                  {tokens.map((token) => {\n                    return (\n                      <figure\n                        key={token.tokenId}\n                        // style={{ width, height }}\n                        className=\"image is-64x64\"\n                        onClick={() => onRegister(token.tokenId)}\n                      >\n                        <img src={token.image} />\n                      </figure>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div>You don't have runes</div>\n              )}\n            </div>\n          </div>\n        )}\n      </>\n    </Modal>\n  );\n};\n\nexport default NFTListModal;\n","import React, { useState } from \"react\";\nimport NFTListModal from \"./NFTListModal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\n\ninterface IRegisterButtonProps {\n  arenaNo: string;\n  playerCount: number;\n}\nconst RegisterButton = ({ arenaNo, playerCount }: IRegisterButtonProps) => {\n  const [modalActive, setModalActive] = useState(false);\n  const { connectedWallet } = useWallet();\n  const onPickModal = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Connect your wallet.\");\n    }\n  };\n  return (\n    <>\n      <button\n        disabled={playerCount === parseFloat(arenaNo)}\n        className=\"button is-primary is-fullwidth\"\n        onClick={onPickModal}\n      >\n        Register ({playerCount}/{arenaNo})\n      </button>\n      {modalActive && connectedWallet && (\n        <NFTListModal arenaNo={arenaNo} onClose={() => setModalActive(false)} />\n      )}\n    </>\n  );\n};\n\nexport default RegisterButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport DisplayRuneWithProperties from \"../../../components/DisplayRuneWithProperties\";\nimport PlayerModal from \"./components/PlayerModal\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport RegisterButton from \"./components/ArenaRegisterButton\";\n\nconst Players = ({ arenaNo, gameNo }: { arenaNo: string; gameNo?: number }) => {\n  const [playerModalActive, setPlayerModalActive] = useState<\n    IRuneMeta & { tokenId: string; gameOwner: string }\n  >();\n\n  const onPlayerModalActive = (obj) => setPlayerModalActive(obj);\n  const [players, setPlayers] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getPlayers(arenaNo);\n        setPlayers(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network, arenaNo, gameNo]);\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"\">\n          <div className=\"columns\">\n            <div className=\"column is-10\">\n              {players.length > 0 ? (\n                <div className=\"columns is-multiline is-mobile\">\n                  {players.map(({ tokenId, owner }) => {\n                    return (\n                      <div\n                        key={tokenId}\n                        className=\"column is-1-desktop is-3-mobile\"\n                      >\n                        <DisplayRuneWithProperties\n                          key={tokenId}\n                          width={\"100%\"}\n                          height={\"100%\"}\n                          tokenId={tokenId}\n                          network={network}\n                          isOwner={\n                            connectedWallet\n                              ? connectedWallet.account.address === owner\n                              : false\n                          }\n                          onClick={(obj: any) =>\n                            onPlayerModalActive({ ...obj, gameOwner: owner })\n                          }\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div>No players</div>\n              )}\n            </div>\n            <div className=\"column is-2\">\n              <RegisterButton playerCount={players.length} arenaNo={arenaNo} />\n            </div>\n          </div>\n        </div>\n      )}\n      {playerModalActive && (\n        <PlayerModal\n          arenaNo={arenaNo}\n          gameNo={gameNo}\n          onClose={() => setPlayerModalActive(undefined)}\n          player={playerModalActive}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Players;\n","import React from \"react\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IPlayerModalProps {\n  rune: IRuneMeta;\n  onClose: () => void;\n}\nconst NFTDetailModal = ({ rune, onClose }: IPlayerModalProps) => {\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <img src={rune.image} />\n        </div>\n        <div className=\"column\">\n          <div className=\"content\">\n            <strong>Name</strong>\n            <br />\n            <p>{rune.name}</p>\n            <strong>Phase</strong>\n            <p>{rune.phase}</p>\n            <strong>Luck</strong>\n            <p>{rune.luck}</p>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NFTDetailModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { IHistoryGame } from \"../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport { calculateClaimableAmount } from \"../../../../packages/neo/contracts/ftw/tournament/helpers\";\n\ninterface IClaimButtonProps {\n  arenaNo: string;\n  history: IHistoryGame;\n  onClaimed: (txid: string) => void;\n}\nconst ClaimButton = ({ arenaNo, history, onClaimed }: IClaimButtonProps) => {\n  const [status, setStatus] = useState<any>({\n    betAmount: 0,\n    isClaimed: false,\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).claim(\n          connectedWallet,\n          arenaNo,\n          history.gameNo\n        );\n        addPendingTransaction(res);\n        onClaimed(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  useEffect(() => {\n    async function fetchBetAmount(address: string) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetAmount(\n          arenaNo,\n          history.gameNo,\n          history.champion,\n          address\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchBetAmount(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network, history]);\n  if (!connectedWallet) return <></>;\n\tif (history.betsOnChampion === \"0\") return <></>;\n  if (!status.betAmount) return <></>;\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {status.isClaimed ? (\n            <button disabled={true} className=\"button is-info is-fullwidth\">\n              Claimed\n            </button>\n          ) : (\n            <button className=\"button is-info is-fullwidth\" onClick={onClaim}>\n              Claim {calculateClaimableAmount(history, status.betAmount)} GAS\n            </button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ClaimButton;\n","import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaPlay } from \"react-icons/fa\";\nimport { NFTContract } from \"../../../../../../packages/neo/contracts\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { INetworkType } from \"../../../../../../packages/neo/network\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport ClaimButton from \"../../../components/ClaimButton\";\nimport { toDecimal } from \"../../../../../../packages/neo/utils\";\n\ninterface IDisplayRuneProps {\n  history: IHistoryGame;\n  arenaNo: string;\n  width: string;\n  height: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n  onReplay: () => void;\n  onClaimed: (txid: string) => void;\n}\n\nconst HistoryTable = ({\n  history,\n  arenaNo,\n  width,\n  height,\n  network,\n  onClick,\n  onReplay,\n  onClaimed,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      const res = await new NFTContract(network).getProperties(\n        history.champion\n      );\n      if (res) {\n        setToken(res);\n      }\n    }\n    fetchContractStatus();\n  }, [history]);\n  if (!token) return <></>;\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        {\" \"}\n        <figure\n          style={{ width, height }}\n          className=\"image rune\"\n          onClick={() => onClick(token)}\n        >\n          <img src={token.image} />\n        </figure>\n      </div>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          Game #{history.gameNo}\n          <br />\n          Champ: {token.name} ({token.phase} / {token.luck})\n          <br />\n          {history.champOwner && (\n            <>\n              Champ address: {history.champOwner} <br />\n            </>\n          )}\n          Total supports: {toDecimal(history.totalBets)}GAS\n          <br />\n          Rollover: {toDecimal(history.rollover)}GAS\n          <br />\n          Total supports on champ: {toDecimal(history.betsOnChampion)}GAS\n          <br />\n          Champ reward: {toDecimal(history.championPrize)}GAS\n          <br />\n          Operation reward: {toDecimal(history.fee)}GAS\n        </div>\n        <button onClick={() => onReplay()} className=\"button is-black is-small\">\n          <span className=\"icon\">\n            <FaPlay />\n          </span>\n          <span>Replay</span>\n        </button>\n      </div>\n      <div className=\"media-right\">\n        <div>\n          <ClaimButton\n            onClaimed={onClaimed}\n            arenaNo={arenaNo}\n            history={history}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryTable;\n","// Game formula was changed from game 5 except arena 4 and 2;\nexport const fight = (aPhase, aLuck, bPhase, bLuck, nonce, gameNo) => {\n  gameNo = parseFloat(gameNo);\n  aLuck = parseFloat(aLuck);\n  bLuck = parseFloat(bLuck);\n  nonce = parseFloat(nonce);\n  if (aPhase === bPhase) {\n    return compareLuck(aLuck, bLuck, nonce);\n  }\n\n  switch (aPhase) {\n    case \"Fire\":\n      switch (bPhase) {\n        case \"Metal\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Wood\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Earth\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Water\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Water\":\n      switch (bPhase) {\n        case \"Fire\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Metal\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Wood\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Earth\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Wood\":\n      switch (bPhase) {\n        case \"Earth\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Water\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Fire\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Metal\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Earth\":\n      switch (bPhase) {\n        case \"Water\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Fire\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Metal\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Wood\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Metal\":\n      switch (bPhase) {\n        case \"Wood\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Earth\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Water\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Fire\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Dark\":\n      switch (bPhase) {\n        case \"Light\":\n          // Formula changed from Game#5\n          aLuck = aLuck - (gameNo > 4 ? 5 : 3);\n          break;\n        default:\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Light\":\n      switch (bPhase) {\n        case \"Dark\":\n          // Formula changed from Game#5\n          aLuck = aLuck + (gameNo > 4 ? 5 : 3);\n          break;\n        default:\n          aLuck = aLuck - 3;\n          break;\n      }\n      break;\n  }\n  return compareLuck(aLuck, bLuck, nonce);\n};\n\nconst compareLuck = (aLuck, bLuck, nonce) => {\n  if (aLuck > bLuck) {\n    return \"A\";\n  } else if (bLuck > aLuck) {\n    return \"B\";\n  } else {\n    // tslint:disable-next-line:no-unused-expression\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    return nonce % 2 === 0 ? \"A\" : \"B\";\n  }\n  // else\n  // {\n  // \tvar tx = (Transaction)Runtime.ScriptContainer;\n  // \treturn tx.Nonce % 2 == 0 ? \"A\" : \"B\";\n  // }\n};\n","import React from \"react\";\nimport { IPlayer } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport DisplayRuneWithProperties from \"../../../components/DisplayRuneWithProperties\";\nimport { fight } from \"../helpers\";\nimport { useWallet } from \"../../../../../../packages/provider\";\n\ninterface ITournamentTree {\n  gameNo: string;\n  champ: string;\n  nonce: string;\n  tree: IPlayer[];\n  onClick: (obj) => void;\n}\n\nfunction* chunks(arr, n) {\n  for (let i = 0; i < arr.length; i += n) {\n    yield arr.slice(i, i + n);\n  }\n}\n\nconst TournamentTree = ({\n  gameNo,\n  onClick,\n  champ,\n  tree,\n  nonce,\n}: ITournamentTree) => {\n  const { network } = useWallet();\n\n  let capacity = tree.length;\n  let stage: IPlayer[] = tree;\n  let winners: IPlayer[] = [];\n  let match: IPlayer[] = [];\n  let rounds: any[] = [];\n  while (capacity >= 2) {\n    for (let i = 0; i < capacity; i++) {\n      match.push(stage[i]);\n      if (match.length === 2) {\n        const res = fight(\n          match[0].phase,\n          match[0].luck,\n          match[1].phase,\n          match[1].luck,\n          nonce,\n          gameNo\n        );\n        if (res === \"A\") {\n          winners.push(match[0]);\n        } else {\n          winners.push(match[1]);\n        }\n        match = [];\n      }\n    }\n    // @ts-ignore\n    rounds.push([...chunks(stage, 2)]);\n    stage = winners;\n    winners = [];\n    capacity = capacity / 2;\n  }\n  rounds = rounds.reverse();\n\n  return (\n    <>\n      <div className=\"is-flex mb-5\" style={{ justifyContent: \"safe center\" }}>\n        <DisplayRuneWithProperties\n          network={network}\n          onClick={(obj) => {\n            onClick(obj);\n          }}\n          width={\"128px\"}\n          height={\"128px\"}\n          tokenId={champ}\n        />\n      </div>\n      {rounds.map((arena) => {\n        return (\n          <div className=\"is-flex mb-5\" style={{ justifyContent: \"center\" }}>\n            {arena.map((arr, i) => {\n              const winner = fight(\n                arr[0].phase,\n                arr[0].luck,\n                arr[1].phase,\n                arr[1].luck,\n                nonce,\n                gameNo\n              );\n              return (\n                <div\n                  className={`is-flex ${arena.length - 1 !== i ? \"mr-5\" : \"\"} `}\n                >\n                  <div style={{ opacity: winner === \"A\" ? \"1\" : \"0.3\" }}>\n                    <DisplayRuneWithProperties\n                      network={network}\n                      onClick={(obj) => {\n                        onClick(obj);\n                      }}\n                      width={\"32px\"}\n                      height={\"32px\"}\n                      tokenId={arr[0].tokenId}\n                    />\n                  </div>\n                  <div style={{ opacity: winner === \"B\" ? \"1\" : \"0.3\" }}>\n                    <DisplayRuneWithProperties\n                      network={network}\n                      onClick={(obj) => {\n                        onClick(obj);\n                      }}\n                      width={\"32px\"}\n                      height={\"32px\"}\n                      tokenId={arr[1].tokenId}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default TournamentTree;\n","import React from \"react\";\nimport TournamentTree from \"./TournamentTree\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\n\ninterface IReplayProps {\n  arenaNo: string;\n  gameHistory: IHistoryGame;\n  onClick: (obj) => void;\n  onClose: () => void;\n}\nconst Replay = ({ arenaNo, gameHistory, onClick, onClose }: IReplayProps) => {\n  return (\n    <div className=\"modal is-active\">\n      <div\n        className=\"modal-background\"\n        onClick={onClose}\n        style={{ backgroundColor: \"black\" }}\n      />\n      <h1\n        className=\"title has-text-white\"\n        style={{ position: \"absolute\", top: \"20px\", left: \"20px\" }}\n      >\n        ARENA {arenaNo}\n      </h1>\n      <section className=\"modal-content\" style={{ width: \"100%\" }}>\n        <TournamentTree\n          // Game formula was changed from game 5 except arena 4 and 2;\n          gameNo={parseFloat(arenaNo) < 8 ? \"5\" : gameHistory.gameNo}\n          champ={gameHistory.champion}\n          tree={gameHistory.tournamentTree}\n          nonce={gameHistory.nonce}\n          onClick={onClick}\n        />\n      </section>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};\n\nexport default Replay;\n","import React, { useEffect, useState } from \"react\";\nimport Pagination from \"bulma-pagination-react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport NFTDetailModal from \"./NFTDetailModal\";\nimport HistoryTable from \"./HistoryTable\";\nimport Replay from \"./Replay\";\nimport AfterTransactionSubmitted from \"../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IHistoryProps {\n  arenaNo: string;\n}\nconst History = ({ arenaNo }: IHistoryProps) => {\n  const [claimTxid, setClaimTxid] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [nftModalActive, setNftModalActive] = useState();\n  const [replayModalActive, setReplayModalActive] = useState();\n  const [history, setHistory] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const onNFTModalActive = (obj) => setNftModalActive(obj);\n  const onReplayModalActive = (obj) => setReplayModalActive(obj);\n\n  useEffect(() => {\n    async function fetchHistory() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).history(\n          arenaNo,\n          page\n        );\n        setHistory(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchHistory();\n  }, [connectedWallet, network, page]);\n\n  let totalPages = 0;\n  if (history) {\n    const itemsPerPage = parseFloat(arenaNo) >= 64 ? 2 : 5;\n    totalPages = Math.ceil(history.totalItems / itemsPerPage);\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <div className=\"\">\n            {history.items && history.items.length > 0 ? (\n              history.items.map((game) => {\n                return (\n                  <HistoryTable\n                    key={game.gameNo}\n                    width={\"64px\"}\n                    height={\"64px\"}\n                    history={game}\n                    arenaNo={arenaNo}\n                    network={network}\n                    onClick={(obj) => {\n                      onNFTModalActive(obj);\n                    }}\n                    onReplay={() => onReplayModalActive(game)}\n                    onClaimed={setClaimTxid}\n                  />\n                );\n              })\n            ) : (\n              <div>Game hasn't been played</div>\n            )}\n            {totalPages > 1 && (\n              <div className=\"media\">\n                <div className=\"media-content\">\n                  <Pagination\n                    pages={totalPages}\n                    currentPage={page}\n                    onChange={(_page) => {\n                      if (page !== _page) {\n                        setPage(_page);\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      {nftModalActive && (\n        <NFTDetailModal\n          rune={nftModalActive}\n          onClose={() => setNftModalActive(undefined)}\n        />\n      )}\n\n      {replayModalActive && (\n        <Replay\n          arenaNo={arenaNo}\n          gameHistory={replayModalActive}\n          onClick={(obj) => {\n            onNFTModalActive(obj);\n          }}\n          onClose={() => setReplayModalActive(undefined)}\n        />\n      )}\n\n      {claimTxid && (\n        <Modal onClose={() => setClaimTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={claimTxid}\n            network={network}\n            onSuccess={() => setClaimTxid(\"\")}\n            onError={() => setClaimTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default History;\n","import React, { useEffect, useState } from \"react\";\nimport Banner from \"./Banner\";\nimport PageLayout from \"../../../../components/PageLayout\";\nimport { ARENA_PATH } from \"../../pageRoutes\";\nimport { Route, useLocation } from \"react-router-dom\";\nimport Players from \"./Players\";\nimport History from \"./History\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../packages/neo/contracts/ftw/tournament\";\n\nconst Arena = (props) => {\n  const location = useLocation();\n  let { arenaNo } = props.match.params;\n  arenaNo = arenaNo ? arenaNo : props.defaultArena;\n  const [status, setStatus] = useState<{\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  }>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchBetAmount() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getCurrentPrize(\n          arenaNo\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchBetAmount();\n  }, [network, location.pathname]);\n  return (\n    <div>\n      <Banner pathname={location.pathname} status={status} arenaNo={arenaNo} />\n      {React.useMemo(() => {\n        return (\n          <>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : (\n              <>\n                <Route\n                  exact\n                  path={ARENA_PATH}\n                  component={() => (\n                    <Players\n                      arenaNo={arenaNo}\n                      gameNo={status ? status.gameNo : undefined}\n                    />\n                  )}\n                />\n                <Route\n                  path={ARENA_PATH + \"/history\"}\n                  component={() => <History arenaNo={arenaNo} />}\n                />\n              </>\n            )}\n          </>\n        );\n      }, [status, isLoading])}\n    </div>\n  );\n};\n\nexport default Arena;\n","import React, { useEffect } from \"react\";\nimport { ARENA_PATH } from \"./pageRoutes\";\nimport { Link, NavLink, Route, useLocation } from \"react-router-dom\";\nimport Arena from \"./scenes/Arena\";\nimport { TOURNAMENT_PATH } from \"../../../consts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { MAINNET } from \"../../../packages/neo/consts\";\nimport PageLayout from \"../../components/PageLayout\";\n\nconst Tournament = () => {\n  const location = useLocation();\n  useEffect(() => {\n    document.title = \"Forthewin Arena: NFT tournament on NEO\";\n  }, []);\n  const { network } = useWallet();\n  let ARENA_LIST = [\"4\", \"8\", \"16\", \"32\", \"64\", \"128\", \"256\"];\n  if (network === MAINNET) {\n    ARENA_LIST = [\"8\", \"16\", \"32\", \"64\", \"128\"];\n  }\n  return (\n    <section>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div>\n              <h1 className=\"title\">Arenas</h1>\n              <div className=\"content is-small\">\n                <p>\n                  <strong>Smart contract</strong>\n                  <br />\n                  <a\n                    className=\"has-text-dark is-size-7\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x0eb288c413b5d5ec4aa0df5aea34d9538b28dd29\"\n                  >\n                    0x0eb288c413b5d5ec4aa0df5aea34d9538b28dd29\n                  </a>\n                </p>\n                <p>\n                  <strong>Press</strong>\n                  <br />\n                  <a\n                    // className=\"has-text-dark is-size-7\"\n                    href=\"https://neonewstoday.com/nft/ftw-arena-tickets-now-on-sale/\"\n                  >\n                    Article 1, &nbsp;\n                  </a>\n                  <a\n                    // className=\"has-text-dark is-size-7\"\n                    href=\"https://neonewstoday.com/gaming/forthewin-opens-the-arena-allowing-runes-to-battle-for-gas-prizes/\"\n                  >\n                    2\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"hero-foot\">\n          <nav className=\"tabs is-boxed\">\n            <div className=\"container\">\n              <ul>\n                {ARENA_LIST.map((arena) => {\n                  return (\n                    <li\n                      key={arena}\n                      className={\n                        location.pathname === TOURNAMENT_PATH + \"/\" + arena ||\n                        (location.pathname === TOURNAMENT_PATH &&\n                          arena === ARENA_LIST[0])\n                          ? \"is-active\"\n                          : \"\"\n                      }\n                    >\n                      <NavLink\n                        activeClassName=\"is-active\"\n                        to={TOURNAMENT_PATH + \"/\" + arena}\n                      >\n                        ARENA {arena}\n                      </NavLink>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </nav>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"box\">\n          <Route\n            exact={true}\n            path={TOURNAMENT_PATH}\n            component={(route) => (\n              <Arena defaultArena={ARENA_LIST[0]} {...route} />\n            )}\n          />\n          <Route\n            path={ARENA_PATH}\n            component={(route) => (\n              <Arena defaultArena={ARENA_LIST[0]} {...route} />\n            )}\n          />\n        </div>\n      </PageLayout>\n    </section>\n  );\n};\n\nexport default Tournament;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Modal from \"../../../../components/Modal\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { ASSETS } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport { FaPlus } from \"react-icons/all\";\nimport { wallet } from \"@cityofzion/neon-core\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\ninterface IAssetListModalProps {\n  tokenA?: string;\n  tokenB?: string;\n  onClose: () => void;\n  onAssetClick: (assetHash: string, symbol: string) => void;\n}\n\ninterface IHashInputProp {\n  network: INetworkType;\n  onAssetClick: (assetHash: string, symbol: string) => void;\n}\nconst HashInput = ({ network, onAssetClick }: IHashInputProp) => {\n  const [customContractHash, setContractHash] = useState(\"\");\n  const [error, setError] = useState<string | undefined>();\n  const firstInput = useRef(null);\n  const onAddContractHash = async () => {\n    setError(undefined);\n    let hash = customContractHash;\n    const ox = customContractHash.substring(0, 2);\n    if (ox === \"0x\") {\n      hash = customContractHash.substring(2);\n    }\n    if (wallet.isScriptHash(hash)) {\n      try {\n        const symbol = await new SwapContract(network).getContractSymbol(hash);\n        onAssetClick(hash, symbol);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    } else {\n      setError(\"Please enter a valid contract script hash.\");\n    }\n  };\n\n  useEffect(() => {\n    // @ts-ignore\n    firstInput.current.focus();\n  }, []);\n\n  return (\n    <>\n      <label className=\"label is-marginless\">Enter a contract hash</label>\n      <p className=\"help has-text-grey\">\n        Example: 0xef4073a0f2b305a38ec4050e4d3d28bc40ea63f5\n      </p>\n      <hr />\n      <div className=\"field\">\n        <input\n          ref={firstInput}\n          className=\"input\"\n          value={customContractHash}\n          onChange={(e) => setContractHash(e.target.value)}\n        />\n        {error && <p className=\"help is-danger\">{error}</p>}\n      </div>\n\n      <hr />\n      <button\n        onClick={onAddContractHash}\n        disabled={!customContractHash}\n        className=\"button is-primary\"\n      >\n        Submit\n      </button>\n    </>\n  );\n};\n\nconst AssetListModal = ({\n  tokenA,\n  tokenB,\n  onAssetClick,\n  onClose,\n}: IAssetListModalProps) => {\n  const { network } = useWallet();\n  const [isCustomInputMode, setCustomInputMode] = useState(false);\n  const assets = ASSETS(network).filter((asset) => {\n    return asset.contractHash !== tokenA && asset.contractHash !== tokenB;\n  });\n\n  return (\n    <Modal onClose={onClose}>\n      {isCustomInputMode ? (\n        <HashInput network={network} onAssetClick={onAssetClick} />\n      ) : (\n        <div>\n          <h5 className=\"title is-6\">Select a token</h5>\n          <nav className=\"panel\">\n            {assets.length > 0 ? (\n              assets.map(({ contractHash, logo, symbol }) => {\n                return (\n                  <a\n                    onClick={() => onAssetClick(contractHash, symbol)}\n                    className=\"panel-block\"\n                    key={contractHash}\n                  >\n                    <div className=\"panel-icon\">\n                      <img src={logo} />\n                    </div>\n                    {symbol}\n                  </a>\n                );\n              })\n            ) : (\n              <div></div>\n            )}\n            <a\n              onClick={() => setCustomInputMode(true)}\n              className=\"panel-block\"\n              // key={contractHash}\n            >\n              <div className=\"panel-icon\">\n                <FaPlus />\n              </div>\n              Custom contract hash\n            </a>\n          </nav>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default AssetListModal;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaAngleLeft } from \"react-icons/all\";\ninterface IHeaderBetweenProps {\n  path: string;\n  title: string;\n  isLoading?: boolean;\n}\nconst HeaderBetween = (props: IHeaderBetweenProps) => {\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <div style={{ width: \"50px\" }}>\n        <Link className=\"button is-white is-small\" to={props.path}>\n          <span className=\"icon\">\n            <FaAngleLeft />\n          </span>\n          <span>Main</span>\n        </Link>\n      </div>\n\n      <h1 className=\"is-size-5 has-text-weight-bold\">{props.title}</h1>\n      <div className=\"is-relative\" style={{ width: \"50px\" }}>\n        {props.isLoading && (\n          <div\n            className=\"button is-white is-loading\"\n            style={{ position: \"absolute\", right: 0 }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderBetween;\n","import React from \"react\";\ninterface IErrorNotificationWithRefreshProps {\n  error: string;\n  onRefresh: () => void;\n}\nconst ErrorNotificationWithRefresh = ({\n  error,\n  onRefresh,\n}: IErrorNotificationWithRefreshProps) => {\n  return (\n    <div className=\"notification is-warning\">\n      <strong>Failed to load data</strong>\n      <br />\n      {error}\n      <br />\n      <br />\n      <button\n        onClick={onRefresh}\n        className=\"button is-warning is-outlined is-inverted\"\n      >\n        Refresh\n      </button>\n    </div>\n  );\n};\n\nexport default ErrorNotificationWithRefresh;\n","import React from \"react\";\nimport Switch from \"react-switch\";\nimport DatePicker from \"react-datepicker\";\ninterface ITimeLockInputProps {\n  toggleSwitch: () => void;\n  isActive: boolean;\n  lockUntil: Date;\n  setLockUntil: (date: Date) => void;\n}\nconst TimeLockInput = ({\n  toggleSwitch,\n  isActive,\n  lockUntil,\n  setLockUntil,\n}: ITimeLockInputProps) => {\n  return (\n    <>\n      <div className=\"level is-mobile\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <label style={{ display: \"flex\", alignItems: \"center\" }}>\n              <span className=\"mr-3\">Lock liquidity</span>\n              <Switch onChange={toggleSwitch} checked={isActive} />\n            </label>\n          </div>\n        </div>\n        {isActive && (\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <DatePicker\n                selected={lockUntil}\n                onChange={(date) => setLockUntil(date)}\n                timeInputLabel=\"Time:\"\n                dateFormat=\"MM/dd/yyyy h:mm aa\"\n                showTimeInput\n                minDate={lockUntil}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default TimeLockInput;\n","import React from \"react\";\nimport { SWAP_FEE } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\n\nconst LPRewardInfo = (props) => {\n  return (\n    <div className=\"notification is-info\">\n      <strong>Liquidity Provider Rewards</strong>\n      <br />\n      Liquidity providers earn a {SWAP_FEE}% fee on all trades proportional to\n      their share of the pool. Fees are added to the pool, accrue in real time\n      and can be claimed by withdrawing your liquidity.\n    </div>\n  );\n};\n\nexport default LPRewardInfo;\n","import React from \"react\";\nimport { useApp } from \"../../common/hooks/use-app\";\ninterface IConnectWalletButtonProps {\n  className?: string;\n}\nconst ConnectWalletButton = (props: IConnectWalletButtonProps) => {\n  const { toggleWalletSidebar } = useApp();\n  return (\n    <button\n      onClick={toggleWalletSidebar}\n      className={`button ${props.className ? props.className : \"is-primary\"}`}\n    >\n      Connect your wallet\n    </button>\n  );\n};\n\nexport default ConnectWalletButton;\n","import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown, FaQuestionCircle } from \"react-icons/all\";\nimport NumberFormat from \"react-number-format\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\n\ninterface IInputProps {\n  contractHash: string;\n  symbol: string;\n  val: string;\n  heading?: string;\n  isLoading?: boolean;\n  setValue: (val: string, e: any) => void;\n  onClickAsset: () => void;\n  isReadOnly?: boolean;\n  userBalance?: number;\n  isDisable?: boolean;\n}\nconst Input = ({\n  contractHash,\n  isDisable,\n  symbol,\n  val,\n  heading,\n  setValue,\n  onClickAsset,\n  isLoading,\n  isReadOnly,\n  userBalance,\n}: IInputProps) => {\n  const { network } = useWallet();\n  const logo = ASSET_LIST[network][contractHash]\n    ? ASSET_LIST[network][contractHash].logo\n    : undefined;\n  return (\n    <div className=\"\">\n      <div className=\"columns\">\n        <div className=\"column is-narrow\">\n          <div style={{ width: \"150px\" }}>\n            <div\n              className=\"media\"\n              style={{ alignItems: \"center\", display: \"flex\" }}\n            >\n              <div className=\"media-left\">\n                <div\n                  onClick={onClickAsset}\n                  style={{\n                    width: \"50px\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                  className=\"image is-clickable is-flex\"\n                >\n                  {logo ? <img src={logo} /> : <FaQuestionCircle size={35} />}\n                </div>\n              </div>\n              <div\n                onClick={onClickAsset}\n                className=\"media-content is-clickable\"\n              >\n                {heading && <p className=\"heading\">{heading}</p>}\n                <div style={{ alignItems: \"center\", display: \"flex\" }}>\n                  <span className=\"has-text-weight-bold\">\n                    {symbol ? symbol : \"Select\"}\n                  </span>\n                  <span className=\"icon\">\n                    <FaAngleDown />\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <div className={`control ${isLoading ? \"is-loading\" : \"\"}`}>\n            <NumberFormat\n              disabled={isDisable}\n              readOnly={isReadOnly}\n              decimalScale={8}\n              inputMode=\"decimal\"\n              className=\"input\"\n              value={val}\n              allowNegative={false}\n              onValueChange={(value, e) => {\n                if (e.source === \"event\") {\n                  setValue(value.value, e.event);\n                }\n              }}\n              thousandSeparator={true}\n              suffix={\" \" + symbol}\n              allowLeadingZeros={false}\n              // format={(val) => {} }\n            />\n            {userBalance !== undefined ? (\n              <div className=\"level is-mobile mt-1\">\n                <div className=\"level-left\">\n                  <div className=\"level-item\">\n                    <small className=\"is-size-7\">Your balance</small>\n                  </div>\n                </div>\n                <div className=\"level-right\">\n                  <div className=\"level-item\">\n                    <small\n                      onClick={(e) => {\n                        if (userBalance) {\n                          // @ts-ignore\n                          setValue(userBalance, e);\n                        }\n                      }}\n                      className={`is-size-7 ${\n                        userBalance ? \"is-clickable\" : \"\"\n                      }`}\n                    >\n                      {userBalance ? userBalance : 0} {symbol}\n                    </small>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <></>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useEffect, useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport { FaExchangeAlt } from \"react-icons/all\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\nimport { IPairInfo } from \"../../../../../packages/neo/contracts/ftw/swap/interfaces\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\n\ninterface ILPInputsProps {\n  network: INetworkType;\n  tokenA: string;\n  tokenB: string;\n  symbolA: string;\n  symbolB: string;\n  amountA: string;\n  amountB: string;\n  onAssetChange: (type: \"A\" | \"B\") => void;\n  userTokenABalance: any;\n  userTokenBBalance: any;\n  onSwitch: () => void;\n  setAmountA: (val: string) => void;\n  setAmountB: (val: string) => void;\n  reserve?: IPairInfo;\n  noLiquidity?: boolean;\n}\n\ninterface ISearchTerm {\n  type: \"A\" | \"B\";\n  value: string;\n}\n\nconst LPInputs = ({\n  network,\n  tokenA,\n  tokenB,\n  symbolA,\n  symbolB,\n  onAssetChange,\n  amountA,\n  amountB,\n  onSwitch,\n  userTokenABalance,\n  userTokenBBalance,\n  setAmountA,\n  setAmountB,\n  reserve,\n  noLiquidity,\n}: ILPInputsProps) => {\n  const handleChangeAmountA = (val) => {\n    setAmountA(val);\n    if (!noLiquidity && reserve) {\n      const estimated = new SwapContract(network).getLPEstimate(\n        val,\n        reserve.pair[tokenA],\n        reserve.pair[tokenB]\n      );\n      setAmountB(estimated);\n    }\n  };\n  const handleChangeAmountB = (val) => {\n    setAmountB(val);\n    if (!noLiquidity && reserve) {\n      const estimated = new SwapContract(network).getLPEstimate(\n        val,\n        reserve.pair[tokenB],\n        reserve.pair[tokenA]\n      );\n      setAmountA(estimated);\n    }\n  };\n\n  return (\n    <>\n      <Input\n        isDisable={!tokenA}\n        heading=\"Pair A\"\n        onClickAsset={() => {\n          onAssetChange(\"A\");\n        }}\n        contractHash={tokenA}\n        symbol={symbolA}\n        val={amountA}\n        setValue={handleChangeAmountA}\n        userBalance={userTokenABalance}\n      />\n      <div className=\"pt-4 pb-4\">\n        <button onClick={onSwitch} className=\"button is-white is-fullwidth\">\n          <FaExchangeAlt />\n        </button>\n      </div>\n      <Input\n        isDisable={!tokenB}\n        heading=\"Pair B\"\n        onClickAsset={() => {\n          onAssetChange(\"B\");\n        }}\n        contractHash={tokenB}\n        symbol={symbolB}\n        val={amountB}\n        setValue={handleChangeAmountB}\n        userBalance={userTokenBBalance}\n      />\n    </>\n  );\n};\n\nexport default LPInputs;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport AssetListModal from \"../../components/AssetListModal\";\nimport { toast } from \"react-hot-toast\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { useLocation } from \"react-router-dom\";\n// tslint:disable-next-line:no-implicit-dependencies\nimport queryString from \"query-string\";\nimport { SWAP_PATH } from \"../../../../../consts\";\nimport HeaderBetween from \"../../../../components/HeaderBetween\";\nimport moment from \"moment\";\nimport ErrorNotificationWithRefresh from \"../../../../components/ErrorNotificationWithRefresh\";\nimport TimeLockInput from \"./TimeLockInput\";\nimport LPRewardInfo from \"./LPRewardInfo\";\nimport ConnectWalletButton from \"../../../../components/ConnectWalletButton\";\nimport LPInputs from \"./LPInputs\";\n\nconst Liquidity = (props) => {\n  const location = useLocation();\n  const params = queryString.parse(location.search);\n  const isNewPoolMode = !params.tokenA && !params.tokenB;\n  const { network, connectedWallet } = useWallet();\n  const [isAssetChangeModalActive, setAssetChangeModalActive] = useState<\n    \"A\" | \"B\" | \"\"\n  >(\"\");\n\n  const [tokenA, setTokenA] = useState<any>(\n    params.tokenA ? params.tokenA : undefined\n  );\n  const [tokenB, setTokenB] = useState<any>(\n    params.tokenB ? params.tokenB : undefined\n  );\n  const [symbolA, setSymbolA] = useState<any>(\n    params.symbolA ? params.symbolA : undefined\n  );\n  const [symbolB, setSymbolB] = useState<any>(\n    params.symbolB ? params.symbolB : undefined\n  );\n\n  const [amountA, setAmountA] = useState(\"\");\n  const [amountB, setAmountB] = useState(\"\");\n\n  const [selectedLock, setSelectedLock] = useState(false);\n  const [lockUntil, setUntil] = useState(new Date());\n  const [data, setData] = useState<any>();\n  const [isPairLoading, setPairLoading] = useState(false);\n  const [txid, setTxid] = useState(\"\");\n  const [refresh, setRefresh] = useState(0);\n  const [error, setError] = useState<string | undefined>();\n\n  const onAssetChange = (type: \"A\" | \"B\" | \"\") => {\n    setAssetChangeModalActive(type);\n  };\n\n  const onAssetClick = (assetHash, symbol) => {\n    if (isAssetChangeModalActive === \"A\") {\n      setTokenA(assetHash);\n      setSymbolA(symbol);\n      setAmountA(\"\");\n    } else {\n      setTokenB(assetHash);\n      setSymbolB(symbol);\n      setAmountB(\"\");\n    }\n    setAssetChangeModalActive(\"\");\n  };\n\n  const onSuccess = () => {\n    setAmountA(\"\");\n    setAmountB(\"\");\n    setRefresh(refresh + 1);\n    setTxid(\"\");\n  };\n\n  const onAddLiquidity = async () => {\n    if (connectedWallet) {\n      if (tokenA && tokenB && amountA && amountB) {\n        try {\n          const milliseconds = selectedLock ? moment(lockUntil).valueOf() : 0;\n          const res = await new SwapContract(network).provide(\n            connectedWallet,\n            tokenA,\n            amountA,\n            tokenB,\n            amountB,\n            milliseconds\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.description ? e.description : e.message);\n        }\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onSwitch = () => {\n    setTokenB(tokenA);\n    setTokenA(tokenB ? tokenB : \"\");\n    setAmountB(amountA);\n    setAmountA(amountB);\n    setSymbolA(symbolB);\n    setSymbolB(symbolA);\n  };\n\n  const onRefresh = () => {\n    setRefresh(refresh + 1);\n  };\n\n  const getReserve = async () => {\n    try {\n      setError(undefined);\n      setPairLoading(true);\n      const res = await new SwapContract(network).getReserve(\n        tokenA,\n        tokenB,\n        connectedWallet\n      );\n      setData(res);\n      setSymbolA(res.reserve.tokenASymbol);\n      setSymbolB(res.reserve.tokenBSymbol);\n      setPairLoading(false);\n    } catch (e: any) {\n      setError(e.message);\n      setPairLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    async function load() {\n      await getReserve();\n    }\n    if (tokenA && tokenB) {\n      load();\n    }\n  }, [connectedWallet, refresh, tokenA, tokenB]);\n  const noLiquidity =\n    (data && data.pair[tokenA] === 0) || (data && data.pair[tokenB] === 0);\n  return (\n    <>\n      <HeaderBetween\n        path={SWAP_PATH}\n        title={noLiquidity ? \"Create a new pool\" : \"Provide liquidity\"}\n        isLoading={isPairLoading}\n      />\n      <hr />\n      {noLiquidity && <LPRewardInfo />}\n      {error && (\n        <ErrorNotificationWithRefresh onRefresh={onRefresh} error={error} />\n      )}\n      <div className=\"is-relative\">\n        <LPInputs\n          noLiquidity={noLiquidity}\n          network={network}\n          tokenA={tokenA}\n          tokenB={tokenB}\n          symbolA={symbolA}\n          symbolB={symbolB}\n          amountA={amountA}\n          amountB={amountB}\n          onAssetChange={onAssetChange}\n          userTokenABalance={\n            connectedWallet && data ? data.balances[tokenA] : undefined\n          }\n          userTokenBBalance={\n            connectedWallet && data ? data.balances[tokenB] : undefined\n          }\n          onSwitch={onSwitch}\n          setAmountA={setAmountA}\n          setAmountB={setAmountB}\n          reserve={data}\n        />\n\n        {connectedWallet ? (\n          tokenA && tokenB && amountA && amountB ? (\n            <>\n              <hr />\n              <TimeLockInput\n                setLockUntil={setUntil}\n                lockUntil={lockUntil}\n                toggleSwitch={() => setSelectedLock(!selectedLock)}\n                isActive={selectedLock}\n              />\n              <button\n                disabled={\n                  data.balances[tokenA] < parseFloat(amountA) ||\n                  data.balances[tokenB] < parseFloat(amountB)\n                }\n                onClick={onAddLiquidity}\n                className=\"button is-fullwidth is-primary\"\n              >\n                Add Liquidity\n              </button>\n            </>\n          ) : (\n            <div />\n          )\n        ) : (\n          <>\n            <hr />\n            <ConnectWalletButton className=\"is-primary is-fullwidth\" />\n          </>\n        )}\n      </div>\n\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onSuccess}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n\n      {isAssetChangeModalActive && (\n        <AssetListModal\n          tokenA={tokenA}\n          tokenB={tokenB}\n          onAssetClick={onAssetClick}\n          onClose={() => setAssetChangeModalActive(\"\")}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Liquidity;\n","import React, { useState } from \"react\";\nimport { truncateAddress } from \"../../packages/neo/utils\";\ninterface ITruncatedAddressProps {\n  address: string;\n}\nconst TruncatedAddress = ({ address }: ITruncatedAddressProps) => {\n  const [isFiltered, setFilter] = useState(true);\n  return (\n    <span onClick={() => setFilter(!isFiltered)}>\n      {isFiltered ? truncateAddress(address) : address}\n    </span>\n  );\n};\n\nexport default TruncatedAddress;\n","import React, { useState } from \"react\";\n// tslint:disable-next-line:no-implicit-dependencies\nimport queryString from \"query-string\";\nimport Pagination from \"bulma-pagination-react\";\nimport { useLocation } from \"react-router-dom\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SWAP_PATH } from \"../../../../../consts\";\nimport HeaderBetween from \"../../../../components/HeaderBetween\";\nimport TruncatedAddress from \"../../../../components/TruncatedAddress\";\nimport { useOnChainData } from \"../../../../../common/hooks/use-onchain-data\";\n\nconst History = () => {\n  const { network } = useWallet();\n  const location = useLocation();\n  const params = queryString.parse(location.search);\n  const { tokenA, tokenB, page, symbolA, symbolB } = params;\n  const [currentPage, setPage] = useState(page ? page : \"1\");\n\n  const { isLoaded, error, data } = useOnChainData(() => {\n    return new SwapContract(network).getSwapHistory(\n      tokenA,\n      tokenB,\n      currentPage\n    );\n  }, [network, currentPage]);\n  return (\n    <div>\n      <HeaderBetween path={SWAP_PATH} title={\"Swap history\"} />\n      <hr />\n      <div className=\"table-container\">\n        <table className=\"table is-fullwidth\">\n          <thead>\n            <tr>\n              <th>In</th>\n              <th>Out</th>\n              <th>Address</th>\n              <th>At</th>\n            </tr>\n          </thead>\n          <tbody>\n            {!isLoaded ? (\n              <tr>\n                <td>Loading..</td>\n              </tr>\n            ) : error ? (\n              <div>{error}</div>\n            ) : data ? (\n              data.items.length > 0 ? (\n                data.items.map((swap, i) => {\n                  return (\n                    <tr key={`swap-${i}`}>\n                      <td>\n                        <strong>{data[swap.tokenIn]}</strong>&nbsp;\n                        {swap.amountIn}\n                      </td>\n                      <td>\n                        <strong>{data[swap.tokenOut]}</strong>&nbsp;\n                        {swap.amountOut}\n                      </td>\n                      <td>\n                        <TruncatedAddress address={swap.account} />\n                      </td>\n                      <td>{swap.createdAt}</td>\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td>No swap history</td>\n                </tr>\n              )\n            ) : (\n              <tr>\n                <td>Something went wrong</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        {data && data.totalPages > 1 && (\n          <div className=\"media\">\n            <div className=\"media-content\">\n              <Pagination\n                pages={data.totalPages}\n                currentPage={currentPage}\n                onChange={(_page) => {\n                  if (currentPage !== _page) {\n                    setPage(_page);\n                  }\n                }}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SWAP_PATH_LIQUIDITY_ADD } from \"../../../../../consts\";\n\nconst NoLPInfo = ({ tokenA, tokenB }) => {\n  return (\n    <>\n      <div className=\"notification is-info\">\n        No liquidity with the pairs. Provide liquidity and earn fees.\n        <br />\n        <br />\n        <Link\n          className=\"button is-info is-inverted\"\n          to={\n            tokenA && tokenB\n              ? `${SWAP_PATH_LIQUIDITY_ADD}?tokenA=${tokenA}&tokenB=${tokenB}`\n              : SWAP_PATH_LIQUIDITY_ADD\n          }\n        >\n          Provide liquidity\n        </Link>\n      </div>\n      <hr />\n    </>\n  );\n};\n\nexport default NoLPInfo;\n","import React, { useEffect, useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport { FaExchangeAlt } from \"react-icons/all\";\nimport { IPairInfo } from \"../../../../../packages/neo/contracts/ftw/swap/interfaces\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\n\ninterface ISwapInputsProps {\n  network: INetworkType;\n  tokenA: string;\n  tokenB: string;\n  symbolA: string;\n  symbolB: string;\n  amountA: string;\n  amountB: string;\n  onAssetChange: (type: \"A\" | \"B\") => void;\n  userTokenABalance: any;\n  userTokenBBalance: any;\n  onSwitch: () => void;\n  setAmountA: (val: string) => void;\n  setAmountB: (val: string) => void;\n  reserve?: IPairInfo;\n  noLiquidity?: boolean;\n}\n\ninterface ISearchTerm {\n  type: \"A\" | \"B\";\n  value: string;\n}\nconst SwapInputs = ({\n  network,\n  tokenA,\n  tokenB,\n  symbolA,\n  symbolB,\n  onAssetChange,\n  amountA,\n  amountB,\n  onSwitch,\n  userTokenABalance,\n  userTokenBBalance,\n  setAmountA,\n  setAmountB,\n  reserve,\n  noLiquidity,\n}: ISwapInputsProps) => {\n  const [searchTerm, setSearchTerm] = useState<ISearchTerm>();\n  const [isAmountALoading, setAmountALoading] = useState(false);\n  const [isAmountBLoading, setAmountBLoading] = useState(false);\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(async () => {\n      if (searchTerm) {\n        if (searchTerm.type === \"A\") {\n          setAmountBLoading(true);\n        } else {\n          setAmountALoading(true);\n        }\n        const estimated = await new SwapContract(network).getEstimate(\n          searchTerm.type === \"A\" ? tokenA : tokenB,\n          searchTerm.type === \"A\" ? tokenB : tokenA,\n          searchTerm.type === \"A\" ? tokenA : tokenB,\n          searchTerm.value\n        );\n        if (searchTerm.type === \"A\") {\n          setAmountBLoading(false);\n          setAmountB(estimated.toString());\n        } else {\n          setAmountALoading(false);\n          setAmountA(estimated.toString());\n        }\n      }\n    }, 500);\n\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchTerm]);\n  return (\n    <>\n      <Input\n        contractHash={tokenA}\n        symbol={symbolA}\n        isDisable={noLiquidity}\n        isReadOnly={!tokenA}\n        heading=\"Swap From\"\n        onClickAsset={() => onAssetChange(\"A\")}\n        val={amountA}\n        setValue={(value) => {\n          setAmountA(value);\n          setSearchTerm({\n            type: \"A\",\n            value,\n          });\n        }}\n        userBalance={userTokenABalance}\n        isLoading={isAmountALoading}\n      />\n      <div className=\"pt-4 pb-4\">\n        <button onClick={onSwitch} className=\"button is-white is-fullwidth\">\n          <FaExchangeAlt />\n        </button>\n      </div>\n      <Input\n        contractHash={tokenB}\n        symbol={symbolB}\n        isDisable={noLiquidity}\n        isReadOnly={!tokenB}\n        heading=\"Swap To\"\n        onClickAsset={() => {\n          onAssetChange(\"B\");\n        }}\n        val={amountB}\n        setValue={(value) => {\n          setAmountB(value);\n          setSearchTerm({\n            type: \"B\",\n            value,\n          });\n        }}\n        userBalance={userTokenBBalance}\n        isLoading={isAmountBLoading}\n      />\n    </>\n  );\n};\n\nexport default SwapInputs;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport Input from \"../../components/Input\";\nimport AssetListModal from \"../../components/AssetListModal\";\nimport { FaExchangeAlt } from \"react-icons/all\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { SWAP_PATH } from \"../../../../../consts\";\n// tslint:disable-next-line:no-implicit-dependencies\nimport queryString from \"query-string\";\nimport { LocalStorage } from \"../../../../../packages/neo/local-storage\";\nimport { IPairInfo } from \"../../../../../packages/neo/contracts/ftw/swap/interfaces\";\nimport { useApp } from \"../../../../../common/hooks/use-app\";\nimport NoLPInfo from \"./NoLPInfo\";\nimport ErrorNotificationWithRefresh from \"../../../../components/ErrorNotificationWithRefresh\";\nimport HeaderBetween from \"../../../../components/HeaderBetween\";\nimport ConnectWalletButton from \"../../../../components/ConnectWalletButton\";\nimport SwapInputs from \"./SwapInputs\";\n\nconst Swap = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const params = queryString.parse(location.search);\n  const { network, connectedWallet } = useWallet();\n  const [isAssetChangeModalActive, setAssetChangeModalActive] = useState<\n    \"A\" | \"B\" | \"\"\n  >(\"\");\n  // Temporary disabled\n  // const cachedTokenA = LocalStorage.getSwapTokenA();\n  // const cachedTokenB = LocalStorage.getSwapTokenB();\n\n  const [tokenA, setTokenA] = useState<any>(\n    params.tokenA ? params.tokenA : undefined\n  );\n  const [tokenB, setTokenB] = useState<any>(\n    params.tokenB ? params.tokenB : undefined\n  );\n  const [amountA, setAmountA] = useState<string>(\"\");\n  const [amountB, setAmountB] = useState<string>(\"\");\n  const [data, setData] = useState<IPairInfo | undefined>();\n  const [isPairLoading, setPairLoading] = useState(false);\n  const [txid, setTxid] = useState(\"\");\n  const [refresh, setRefresh] = useState(0);\n  const [error, setError] = useState(undefined);\n\n  const onAssetChange = (type: \"A\" | \"B\" | \"\") => {\n    // Temporary disable\n    setAssetChangeModalActive(type);\n  };\n\n  const onAssetClick = (assetHash, symbol) => {\n    if (isAssetChangeModalActive === \"A\") {\n      LocalStorage.setSwapTokenA(assetHash);\n      history.push(location.search.replace(tokenA, assetHash));\n      setTokenA(assetHash);\n    } else {\n      LocalStorage.setSwapTokenB(assetHash);\n      history.push(location.search.replace(tokenB, assetHash));\n      setTokenB(assetHash);\n    }\n    setAmountA(\"\");\n    setAmountB(\"\");\n    setAssetChangeModalActive(\"\");\n  };\n\n  const onRefresh = () => {\n    setRefresh(refresh + 1);\n  };\n\n  const onSuccess = () => {\n    setAmountA(\"\");\n    setAmountB(\"\");\n    setRefresh(refresh + 1);\n    setTxid(\"\");\n  };\n\n  const onSwap = async () => {\n    if (connectedWallet) {\n      if (tokenA && tokenB && amountA && amountB) {\n        try {\n          const res = await new SwapContract(network).swap(\n            connectedWallet,\n            tokenA,\n            amountA,\n            tokenB,\n            amountB\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.description ? e.description : e.message);\n        }\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onSwitch = async () => {\n    setTokenB(tokenA);\n    setTokenA(tokenB ? tokenB : \"\");\n    setAmountB(amountA);\n    setAmountA(amountB);\n  };\n\n  const getReserve = async () => {\n    try {\n      setError(undefined);\n      setPairLoading(true);\n      const res = await new SwapContract(network).getReserve(\n        tokenA,\n        tokenB,\n        connectedWallet\n      );\n      setData(res);\n      setPairLoading(false);\n    } catch (e: any) {\n      setError(e.message);\n      setPairLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    async function load() {\n      await getReserve();\n    }\n    if (tokenA && tokenB) {\n      load();\n    }\n  }, [location, refresh, tokenA, tokenB]);\n  const noLiquidity =\n    (data && data.pair[tokenA] === 0) || (data && data.pair[tokenB] === 0);\n\n  const priceImpact =\n    data && amountB ? (parseFloat(amountB) / data.pair[tokenB]) * 100 : 0;\n\n  const symbolA = data ? data.reserve.tokenASymbol : \"\";\n  const symbolB = data ? data.reserve.tokenBSymbol : \"\";\n  return (\n    <div>\n      <HeaderBetween\n        path={SWAP_PATH}\n        title={\"Swap\"}\n        isLoading={isPairLoading}\n      />\n      <hr />\n      <>\n        {noLiquidity && (\n          <NoLPInfo\n            tokenA={tokenA}\n            tokenB={tokenB}\n            // symbolA={symbolA}\n            // symbolB={symbolB}\n          />\n        )}\n\n        {error && (\n          <ErrorNotificationWithRefresh onRefresh={onRefresh} error={error} />\n        )}\n\n        <SwapInputs\n          noLiquidity={noLiquidity}\n          network={network}\n          tokenA={tokenA}\n          tokenB={tokenB}\n          symbolA={symbolA}\n          symbolB={symbolB}\n          amountA={amountA}\n          amountB={amountB}\n          onAssetChange={onAssetChange}\n          userTokenABalance={\n            connectedWallet && data ? data.balances[tokenA] : undefined\n          }\n          userTokenBBalance={\n            connectedWallet && data ? data.balances[tokenB] : undefined\n          }\n          onSwitch={onSwitch}\n          setAmountA={setAmountA}\n          setAmountB={setAmountB}\n          reserve={data}\n        />\n\n        {connectedWallet ? (\n          tokenA && tokenB && amountA && amountB ? (\n            <>\n              <hr />\n              <div>\n                {`1 ${symbolB} = ${(\n                  parseFloat(amountA) / parseFloat(amountB)\n                ).toFixed(8)} ${symbolA}`}\n              </div>\n              <hr />\n              <button\n                disabled={\n                  (data && data.balances[tokenA] < parseFloat(amountA)) ||\n                  (data && data.pair[tokenB] < parseFloat(amountB)) ||\n                  priceImpact > 10\n                }\n                onClick={onSwap}\n                className={`button is-fullwidth is-primary ${\n                  priceImpact > 10 ? \"is-danger\" : \"\"\n                }`}\n              >\n                {priceImpact > 10 ? \"Price impact is too high\" : \"Swap\"}\n              </button>\n            </>\n          ) : (\n            <div />\n          )\n        ) : (\n          <>\n            <hr />\n            <ConnectWalletButton />\n          </>\n        )}\n      </>\n\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onSuccess}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n\n      {isAssetChangeModalActive && (\n        <AssetListModal\n          tokenA={tokenA}\n          tokenB={tokenB}\n          onAssetClick={onAssetClick}\n          onClose={() => setAssetChangeModalActive(\"\")}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Swap;\n","import React from \"react\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\n\ninterface IPairIconsProps {\n  network: string;\n  token: string;\n  tokenSymbol: string;\n}\nconst PairIcons = ({ network, token, tokenSymbol }: IPairIconsProps) => {\n  const tokenALogo = ASSET_LIST[network][token]\n    ? ASSET_LIST[network][token].logo\n    : \"/symbols/unknown.png\";\n\n  return (\n    <div\n      id=\"PairIcons\"\n      className=\"is-centered\"\n      style={{ display: \"flex\", alignItems: \"center\" }}\n    >\n      <div className=\"circular--portrait mr-2\">\n        <img src={tokenALogo} />\n      </div>\n      {tokenSymbol}\n    </div>\n  );\n};\n\nexport default PairIcons;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  SWAP_PATH_HISTORY,\n  SWAP_PATH_LIQUIDITY_ADD,\n  SWAP_PATH_LP_LIST,\n  SWAP_PATH_TRADE,\n} from \"../../../../../consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { FaHistory, FaPlusSquare, RiHandCoinFill } from \"react-icons/all\";\nimport PairIcons from \"../PairIcons\";\nimport { IReserve } from \"../../../../../packages/neo/contracts/ftw/swap/interfaces\";\n\nconst PoolCard = ({\n  tokenA,\n  tokenB,\n  amountA,\n  amountB,\n  tokenASymbol,\n  tokenBSymbol,\n}: IReserve) => {\n  const { network } = useWallet();\n  const ratioAB = (amountB / amountA).toFixed(8);\n  const ratioBA = (amountA / amountB).toFixed(8);\n  return (\n    <div style={{ alignItems: \"center\" }} className=\"media\">\n      <div className=\"media-content\">\n        <div className=\"level is-mobile\">\n          <div className=\"level-left\">\n            <div className=\"level-item\">\n              <PairIcons\n                network={network}\n                token={tokenA}\n                tokenSymbol={tokenASymbol}\n              />\n            </div>\n            <div className=\"level-item\">\n              <PairIcons\n                network={network}\n                token={tokenB}\n                tokenSymbol={tokenBSymbol}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"content is-small mb-5\">\n          {`1 ${tokenASymbol}: ${ratioAB} ${tokenBSymbol}`}\n          <br />\n          {`1 ${tokenBSymbol}: ${ratioBA} ${tokenASymbol}`}\n        </div>\n\n        <div className=\"level is-mobile\">\n          <div className=\"level-left\">\n            <div className=\"level-item\">\n              <span className=\"icon is-small\">\n                <Link\n                  className=\"has-text-grey\"\n                  to={{\n                    pathname: `${SWAP_PATH_HISTORY}`,\n                    search: `?tokenA=${tokenA}&tokenB=${tokenB}`,\n                  }}\n                >\n                  <FaHistory />\n                </Link>\n              </span>\n            </div>\n\n            <div className=\"level-item\">\n              <span className=\"icon is-small\">\n                <Link\n                  className=\"has-text-grey\"\n                  to={{\n                    pathname: `${SWAP_PATH_LIQUIDITY_ADD}`,\n                    search: `?tokenA=${tokenA}&tokenB=${tokenB}`,\n                  }}\n                >\n                  <FaPlusSquare />\n                </Link>\n              </span>\n            </div>\n\n            <div className=\"level-item\">\n              <span className=\"icon is-small\">\n                <Link\n                  className=\"has-text-grey\"\n                  to={{\n                    pathname: `${SWAP_PATH_LP_LIST}`,\n                    search: `?tokenA=${tokenA}&tokenB=${tokenB}`,\n                  }}\n                >\n                  <RiHandCoinFill />\n                </Link>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"media-right\">\n        <Link\n          to={{\n            pathname: `${SWAP_PATH_TRADE}`,\n            search: `?tokenA=${tokenA}&tokenB=${tokenB}`,\n          }}\n          className=\"button is-primary\"\n        >\n          Trade\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default PoolCard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  SWAP_PATH_LIQUIDITY_ADD,\n  SWAP_PATH_LIQUIDITY_REMOVE,\n} from \"../../../../../consts\";\nimport { FaMinus, FaPlus } from \"react-icons/all\";\n\nconst PoolHeader = (props) => {\n  return (\n    <div className=\"level is-mobile\">\n      <div className=\"level-left\">\n        <div className=\"level-item\">\n          <h1 className=\"title is-5\">Pools</h1>\n        </div>\n      </div>\n      <div className=\"level-right\">\n        <div className=\"level-item\">\n          <div className=\"buttons\">\n            <Link\n              to={SWAP_PATH_LIQUIDITY_ADD}\n              // onClick={() => setCreateModalActive(true)}\n              className=\"button is-light is-small\"\n            >\n              <FaPlus />\n            </Link>\n            <Link\n              to={SWAP_PATH_LIQUIDITY_REMOVE}\n              // onClick={() => setCreateModalActive(true)}\n              className=\"button is-light is-small\"\n            >\n              <FaMinus />\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PoolHeader;\n","import React from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport PoolCard from \"../../components/PoolCard\";\nimport PoolHeader from \"./PoolHeader\";\nimport { useOnChainData } from \"../../../../../common/hooks/use-onchain-data\";\n\nconst PairList = () => {\n  const { network, connectedWallet } = useWallet();\n  const { isLoaded, error, data } = useOnChainData(() => {\n    return new SwapContract(network).getPairs();\n  }, [connectedWallet, network]);\n  return (\n    <div>\n      <PoolHeader />\n      <hr />\n      {!isLoaded ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        data.map((item, i) => {\n          return <PoolCard key={`pool-${i}`} {...item} />;\n        })\n      )}\n    </div>\n  );\n};\n\nexport default PairList;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { ILPTokens } from \"../../../../../packages/neo/contracts/ftw/swap/interfaces\";\ninterface ILPTokenListProps extends ILPTokens {\n  onRemove: (tokenId: string) => void;\n}\nconst LPTokenItem = ({\n  name,\n  amount,\n  lockUntil,\n  onRemove,\n  tokenId,\n}: ILPTokenListProps) => {\n  const now = moment.utc().valueOf();\n  const expired = lockUntil === \"None\" ? 0 : moment(lockUntil).valueOf();\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        {name} / {amount}\n        <br />\n        {lockUntil}\n      </div>\n      <div className=\"media-right\">\n        <button\n          disabled={now < expired}\n          onClick={() => onRemove(tokenId)}\n          className=\"button is-light is-small\"\n        >\n          Withdraw\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LPTokenItem;\n","import React from \"react\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport LPTokenItem from \"./LPTokenItem\";\nimport { useOnChainData } from \"../../../../../common/hooks/use-onchain-data\";\nimport { IConnectedWallet } from \"../../../../../packages/neo/wallet/interfaces\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\n\ninterface ILPTokenListProps {\n  connectedWallet: IConnectedWallet;\n  network: INetworkType;\n  refresh: number;\n  onRemoveLiquidity: (tokenId: string) => void;\n}\nconst LPTokenList = ({\n  network,\n  connectedWallet,\n  refresh,\n  onRemoveLiquidity,\n}: ILPTokenListProps) => {\n  const { isLoaded, error, data } = useOnChainData(() => {\n    return new SwapContract(network).getLPTokens(connectedWallet);\n  }, [connectedWallet, refresh]);\n\n  return (\n    <>\n      {!isLoaded ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div>\n          {data && data.length > 0 ? (\n            data.map((item, i) => (\n              <LPTokenItem\n                {...item}\n                onRemove={onRemoveLiquidity}\n                key={`${item.name}-${i}`}\n              />\n            ))\n          ) : (\n            <div>You don't have LP tokens in your wallet</div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default LPTokenList;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport HeaderBetween from \"../../../../components/HeaderBetween\";\nimport { SWAP_PATH } from \"../../../../../consts\";\nimport LPTokenList from \"./LPTokenList\";\nimport { useApp } from \"../../../../../common/hooks/use-app\";\nimport ConnectWalletButton from \"../../../../components/ConnectWalletButton\";\n\nconst RemoveLiquidity = () => {\n  const { network, connectedWallet } = useWallet();\n  const [txid, setTxid] = useState(\"\");\n  const [refresh, setRefresh] = useState(0);\n\n  const onRemoveLiquidity = async (tokenId: string) => {\n    if (connectedWallet) {\n      try {\n        const res = await new SwapContract(network).remove(\n          connectedWallet,\n          tokenId\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onSuccess = () => {\n    setRefresh(refresh + 1);\n    setTxid(\"\");\n  };\n\n  return (\n    <>\n      <HeaderBetween path={SWAP_PATH} title={\"Remove liquidity\"} />\n      <hr />\n      {connectedWallet ? (\n        <LPTokenList\n          connectedWallet={connectedWallet}\n          network={network}\n          refresh={refresh}\n          onRemoveLiquidity={onRemoveLiquidity}\n        />\n      ) : (\n        <ConnectWalletButton />\n      )}\n\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onSuccess}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default RemoveLiquidity;\n","import React from \"react\";\n// tslint:disable-next-line:no-implicit-dependencies\nimport queryString from \"query-string\";\nimport { useLocation } from \"react-router-dom\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SWAP_PATH } from \"../../../../../consts\";\nimport HeaderBetween from \"../../../../components/HeaderBetween\";\nimport TruncatedAddress from \"../../../../components/TruncatedAddress\";\nimport { useOnChainData } from \"../../../../../common/hooks/use-onchain-data\";\n\nconst Providers = () => {\n  const location = useLocation();\n  const params = queryString.parse(location.search);\n  const { tokenA, tokenB } = params;\n  const { network } = useWallet();\n\n  const { isLoaded, error, data } = useOnChainData(() => {\n    return new SwapContract(network).getLPList(tokenA, tokenB);\n  }, [network]);\n\n  return (\n    <div>\n      <HeaderBetween path={SWAP_PATH} title={\"LP list\"} />\n      <hr />\n      <div className=\"table-container is-small\">\n        <table className=\"table is-fullwidth is-small\">\n          <thead>\n            <tr>\n              <th>Amount</th>\n              <th>Lock</th>\n              <th>Owner</th>\n            </tr>\n          </thead>\n          <tbody>\n            {!isLoaded ? (\n              <tr>\n                <td>Loading..</td>\n              </tr>\n            ) : error ? (\n              <div>{error}</div>\n            ) : data && data.length === 0 ? (\n              <tr>\n                <td>No NP</td>\n              </tr>\n            ) : (\n              data.map((lp, i) => {\n                return (\n                  <tr key={`lp-${i}`}>\n                    <td>{lp.amount}</td>\n                    <td>{lp.lockUntil}</td>\n                    <td>\n                      <TruncatedAddress address={lp.owner} />\n                    </td>\n                  </tr>\n                );\n              })\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Providers;\n","import React from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport {\n  SWAP_PATH,\n  SWAP_PATH_HISTORY,\n  SWAP_PATH_LIQUIDITY_ADD,\n  SWAP_PATH_LIQUIDITY_REMOVE,\n  SWAP_PATH_LP_LIST,\n  SWAP_PATH_TRADE,\n} from \"../../../consts\";\nimport { Route } from \"react-router-dom\";\nimport Liquidity from \"./scenes/AddLiquidity\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { MAINNET } from \"../../../packages/neo/consts\";\nimport History from \"./scenes/History\";\nimport Trade from \"./scenes/Swap\";\nimport Pools from \"./scenes/Pools\";\nimport RemoveLiquidity from \"./scenes/RemoveLiquidity\";\nimport Providers from \"./scenes/Providers\";\n\nconst Swap = () => {\n  const { network } = useWallet();\n  if (network === MAINNET)\n    return (\n      <PageLayout>\n        <div className=\"notification is-info\">\n          FTW Swap is not on Mainnet yet.{\" \"}\n        </div>\n      </PageLayout>\n    );\n  return (\n    <div>\n      <PageLayout>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-half\">\n            <div className=\"box is-shadowless\">\n              <Route exact={true} path={SWAP_PATH} component={Pools} />\n              <Route path={SWAP_PATH_HISTORY} component={History} />\n              <Route path={SWAP_PATH_LP_LIST} component={Providers} />\n              <Route path={SWAP_PATH_LIQUIDITY_ADD} component={Liquidity} />\n              <Route\n                path={SWAP_PATH_LIQUIDITY_REMOVE}\n                component={RemoveLiquidity}\n              />\n              <Route path={SWAP_PATH_TRADE} component={Trade} />\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Swap;\n","import React from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaQuestionCircle } from \"react-icons/all\";\ninterface IFusionBoxProps {\n  src: string;\n}\nconst FusionBox = ({ src }: IFusionBoxProps) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n\t      height: \"300px\"\n      }}\n      className=\"is-clickable\"\n    >\n      {src ? <img src={src} /> : <FaQuestionCircle />}\n    </div>\n  );\n};\n\nexport default FusionBox;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../components/Modal\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../packages/provider\";\n\ninterface INFTListModalModal {\n  onClick: (data: any) => void;\n  onClose: () => void;\n}\nconst RuneListModal = ({ onClick, onClose }: INFTListModalModal) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <div>\n          <div className=\"block\">\n            <h5 className=\"title is-5\">Select a Rune</h5>\n          </div>\n          <div>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : error ? (\n              <div>{error}</div>\n            ) : tokens.length > 0 ? (\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => onClick(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n            ) : (\n              <div>You don't have runes</div>\n            )}\n          </div>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default RuneListModal;\n","import { CONST } from \"../../../index\";\n\nexport const TTM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"6112cdab35dbc101596ab940c9e741ada5b7c502\",\n  [CONST.TESTNET]: \"6112cdab35dbc101596ab940c9e741ada5b7c502\",\n  [CONST.MAINNET]: \"aa4fb927b3fe004e689a278d188689c9f050a8b2\",\n};\n","import { u } from \"@cityofzion/neon-core\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { parseProperties } from \"./helpers\";\nimport { TTM_SCRIPT_HASH } from \"./consts\";\nconst CRYPTONAUT_REGEX = /^C0/;\nexport class TTMNFTContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = TTM_SCRIPT_HASH[networkType];\n  }\n\n  static owner = TTM_SCRIPT_HASH;\n\n  getProperties = async (tokenId: string): Promise<object | null> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    if (res.state === \"FAULT\") {\n      console.error(res.exception);\n      return null;\n    }\n    return parseProperties(res.stack[0]);\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    if (res.state === \"FAULT\") {\n      console.error(res.exception);\n      return [];\n    }\n\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      if (CRYPTONAUT_REGEX.test(tokenId)) {\n        const meta = await this.getProperties(tokenId);\n        if (meta) {\n          metaList.push({ tokenId, ...meta });\n        }\n      }\n    }\n    return metaList;\n  };\n}\nexport { TTM_SCRIPT_HASH } from \"./consts\";\n","import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport AfterTransactionSubmitted from \"../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../components/Modal\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TTMNFTContract } from \"../../../../packages/neo/contracts/ttm/nft\";\n\ninterface INFTListModalModal {\n  onClick: (data: any) => void;\n  onClose: () => void;\n}\nconst CryptonatuListModal = ({ onClick, onClose }: INFTListModalModal) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TTMNFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <div>\n          <div className=\"block\">\n            <h5 className=\"title is-5\">Select a Cryptonaut</h5>\n          </div>\n          <div>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : error ? (\n              <div>{error}</div>\n            ) : tokens.length > 0 ? (\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => onClick(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n            ) : (\n              <div>You don't have runes</div>\n            )}\n          </div>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default CryptonatuListModal;\n","import { CONST, wallet } from \"../../../index\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { parseProperties } from \"../../ttm/nft/helpers\";\nimport { tx, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { DEFAULT_WITNESS_SCOPE, GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { RUNE_SCRIPT_HASH } from \"../nft\";\nimport { TTM_SCRIPT_HASH } from \"../../ttm/nft\";\n\nexport const FUSE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"f88481099b58a7ddff6693098037b23476a9dcee\",\n  [CONST.TESTNET]: \"f88481099b58a7ddff6693098037b23476a9dcee\",\n  [CONST.MAINNET]: \"\",\n};\n\nexport class FusionContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FUSE_SCRIPT_HASH[networkType];\n  }\n\n  fuse = async (\n    connectedWallet: IConnectedWallet,\n    cryptonautTokenId: string,\n    runeTokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"fuse\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: cryptonautTokenId,\n        },\n        {\n          type: \"String\",\n          value: runeTokenId,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [\n            this.contractHash,\n            RUNE_SCRIPT_HASH[this.network],\n            TTM_SCRIPT_HASH[this.network],\n            GAS_SCRIPT_HASH,\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  refund = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"refund\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [\n            this.contractHash,\n            RUNE_SCRIPT_HASH[this.network],\n            TTM_SCRIPT_HASH[this.network],\n            GAS_SCRIPT_HASH,\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  getProperties = async (tokenId: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n\n    const res = await Network.read(this.network, [script]);\n    return parseProperties(res.stack[0]);\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      const meta = await this.getProperties(tokenId);\n      // @ts-ignore\n      metaList.push({ tokenId, ...meta });\n    }\n    return metaList;\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { FusionContract } from \"../../../../packages/neo/contracts/ftw/fuse\";\nimport { toast } from \"react-hot-toast\";\nimport ModalCard from \"../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../packages/ui/AfterTransactionSubmitted\";\ninterface IFusedListProps {\n  onSubmitted: (txid: string) => void;\n  onReset: () => void;\n}\nconst FusedList = ({ onSubmitted, onReset }: IFusedListProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [detail, setDetail] = useState<any>();\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const [txid, setTxid] = useState(\"\");\n\n  const onRefund = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FusionContract(network).refund(\n          connectedWallet,\n          detail.tokenId\n        );\n        setDetail(false);\n        onSubmitted(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new FusionContract(network).getTokensOf(\n          connectedWallet ? connectedWallet.account.address : undefined\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n\n  return (\n    <>\n      <div>\n        <div>\n          {isLoading ? (\n            <div></div>\n          ) : error ? (\n            <div>{error}</div>\n          ) : tokens.length > 0 ? (\n            <>\n              <div className=\"block\">\n                <h5 className=\"title is-5\">Fused Cryptonaut</h5>\n              </div>\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => setDetail(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n              {detail ? (\n                <ModalCard onClose={() => setDetail(undefined)}>\n                  <>\n                    {txid ? (\n                      <AfterTransactionSubmitted\n                        network={network}\n                        txid={txid}\n                        onSuccess={() => {\n                          setDetail(undefined);\n                          setTxid(\"\");\n                        }}\n                        onError={() => setTxid(\"\")}\n                      />\n                    ) : (\n                      <div className=\"card\">\n                        <div className=\"card-image\">\n                          <figure className=\"image is-4by3\">\n                            <img src={detail.image} />\n                          </figure>\n                        </div>\n                        <div className=\"card-content\">\n                          <div className=\"media\">\n                            <div className=\"media-content\">\n                              <h1 className=\"title is-5\">Fused Cryptonaut</h1>\n                              <p className=\"subtitle is-7\">\n                                TokenId: {detail.tokenId}\n                              </p>\n                              <div className=\"field is-grouped is-grouped-multiline\">\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Element</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.element}\n                                    </span>\n                                  </div>\n                                </div>\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Phase</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.phase}\n                                    </span>\n                                  </div>\n                                </div>\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Luck</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.luck}\n                                    </span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"media-right\">\n                              <button\n                                onClick={onRefund}\n                                className=\"button is-danger\"\n                              >\n                                Un-Fuse\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </>\n                </ModalCard>\n              ) : (\n                <div></div>\n              )}\n            </>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FusedList;\n","import React, { useState } from \"react\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { MAINNET } from \"../../../packages/neo/consts\";\nimport PageLayout from \"../../components/PageLayout\";\nimport FusionBox from \"./components/FusionBox\";\nimport RuneListModal from \"./components/RuneListModal\";\nimport CryptonautListModal from \"./components/CryptonatuListModal\";\nimport { toast } from \"react-hot-toast\";\nimport { FusionContract } from \"../../../packages/neo/contracts/ftw/fuse\";\nimport FusedList from \"./components/FusedList\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\n\nconst Fusion = () => {\n  const { network, connectedWallet } = useWallet();\n  const [isTTMModalActive, setTTMModalActive] = useState(false);\n  const [isFTWModalActive, setFTWModalActive] = useState(false);\n  const [cryptonaut, setCryptonaut] = useState<any>();\n  const [rune, setRune] = useState<any>();\n  const [txid, setTxid] = useState(\"\");\n\n  const onFuse = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FusionContract(network).fuse(\n          connectedWallet,\n          cryptonaut.tokenId,\n          rune.tokenId\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  const onReset = () => {\n    setRune(undefined);\n    setCryptonaut(undefined);\n    setTxid(\"\");\n  };\n\n  if (network === MAINNET)\n    return (\n      <PageLayout>\n        <div className=\"notification is-info\">\n          Fusion is not on Mainnet yet.{\" \"}\n        </div>\n      </PageLayout>\n    );\n  return (\n    <div>\n      <PageLayout>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-half\">\n            <h1 className=\"title has-text-centered\">FUSION</h1>\n            {txid ? (\n              <AfterTransactionSubmitted\n                network={network}\n                txid={txid}\n                onSuccess={onReset}\n                onError={() => setTxid(\"\")}\n              />\n            ) : (\n              <>\n                <div className=\"block\">\n                  <div className=\"columns\">\n                    <div className=\"column\">\n                      <div\n                        className=\"box\"\n                        onClick={() => setFTWModalActive(true)}\n                      >\n                        <FusionBox\n                          src={rune ? rune.image : \"logo/FTW_512_512.svg\"}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"column\">\n                      <div\n                        className=\"box\"\n                        onClick={() => setTTMModalActive(true)}\n                      >\n                        <FusionBox\n                          src={\n                            cryptonaut\n                              ? cryptonaut.image\n                              : \"assets/Cryptonaut.001.svg\"\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <button\n                    onClick={onFuse}\n                    className=\"is-primary button is-fullwidth\"\n                    disabled={!rune || !cryptonaut}\n                  >\n                    Fuse\n                  </button>\n                </div>\n                <div className=\"block\">\n                  <FusedList\n                    onSubmitted={(_txid: string) => setTxid(_txid)}\n                    onReset={onReset}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </PageLayout>\n      {isFTWModalActive && (\n        <RuneListModal\n          onClick={(data) => {\n            setRune(data);\n            setFTWModalActive(false);\n          }}\n          onClose={() => setFTWModalActive(false)}\n        />\n      )}\n      {isTTMModalActive && (\n        <CryptonautListModal\n          onClick={(data) => {\n            setCryptonaut(data);\n            setTTMModalActive(false);\n          }}\n          onClose={() => setTTMModalActive(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Fusion;\n","import React, { useEffect, useRef, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport DOTS from \"vanta/dist/vanta.halo.min\";\nimport PageLayout from \"../../components/PageLayout\";\n// import * as THREE from \"three\";\n\nconst Migration = (props) => {\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        DOTS({\n          el: myRef.current,\n          mouseControls: true,\n          touchControls: true,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          backgroundColor: 0x80822,\n          size: 2.8,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) {\n        // @ts-ignore\n        vantaEffect.destroy();\n      }\n    };\n  }, [vantaEffect]);\n  return (\n    <div>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-flex\" style={{ alignItems: \"center\" }}>\n                <div>\n                  <h1 className=\"title\">Forthewin is back</h1>\n                  <p className=\"subtitle\">\n                    Migrate your Neo-legacy FTX to the new <span>N3 FTW</span>\n                  </p>\n                  <a\n                    target=\"_blank\"\n                    href=\"https://nepmigration.com/\"\n                    className=\"button is-primary\"\n                  >\n                    Go to Migrate\n                  </a>\n                </div>\n              </div>\n              <div className=\"column is-hidden-touch\">\n                <div\n                  className=\"block\"\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    minHeight: \"300px\",\n                  }}\n                >\n                  <video style={{ width: \"400px\" }} autoPlay loop>\n                    <source src={\"/assets/migration.mp4\"} type=\"video/mp4\" />\n                  </video>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns halo\" ref={myRef}>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>Neo-legacy</h3>\n                <h6>Symbol</h6>\n                <p>FTX</p>\n                <h6>Contract hash</h6>\n                <p>0xaac66f9779ca67d819d05492805d251dab02fc7b</p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://neotracker.io/asset/aac66f9779ca67d819d05492805d251dab02fc7b\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>N3</h3>\n                <h6>Symbol</h6>\n                <p>FTW</p>\n                <h6>Contract hash</h6>\n                <p>\n                  <a\n                    target=\"_blank\"\n                    className=\"has-text-dark\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\n                  </a>\n                </p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://explorer.onegate.space/NEP17tokeninfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Migration;\n","import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ReactGa = () => {\n  const location = useLocation();\n  useEffect(() => {\n    ReactGA.pageview(location.pathname);\n  }, [location]);\n  return <div></div>;\n};\n\nexport default ReactGa;\n","import { CONST } from \"../../../index\";\n\nexport const STAKING_COIN_SYMBOL = \"NEP\";\nexport const FARM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"d8659a335560a867a4c8074a4c6b5346b735f3b0\",\n  [CONST.TESTNET]: \"83b5d1377983d37e52ba02d673f0fc8e78ec4e6f\",\n  [CONST.MAINNET]: \"\",\n};\n","import React from \"react\";\nimport { FARM_STAKE_PATH } from \"../../../../consts\";\nimport { Link } from \"react-router-dom\";\nimport { IStakingPairs } from \"../../../../packages/neo/contracts/ftw/staking/interfaces\";\nimport { STAKING_COIN_SYMBOL } from \"../../../../packages/neo/contracts/ftw/staking/consts\";\n\n// interface IStakingPairCardProps extends IStakingPair {}\nconst StakingPairCard = (props: IStakingPairs) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        {props.tokenASymbol} / {props.tokenBSymbol}\n        <br />\n        <strong>\n          {props.dailyReward} {STAKING_COIN_SYMBOL}\n        </strong>{\" \"}\n        <small>per day</small>\n      </div>\n      <div className=\"media-right\">\n        <Link\n          to={`${FARM_STAKE_PATH}?tokenA=${props.tokenA}&tokenB=${props.tokenB}&tokenASymbol=${props.tokenASymbol}&tokenBSymbol=${props.tokenBSymbol}`}\n          className=\"button is-light\"\n        >\n          Stake\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default StakingPairCard;\n","import { INetworkType, Network } from \"../../../network\";\nimport { SWAP_SCRIPT_HASH } from \"../swap/consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { tx, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { wallet } from \"../../../index\";\nimport { DEFAULT_WITNESS_SCOPE } from \"../../../consts\";\nimport { FARM_SCRIPT_HASH } from \"./consts\";\nimport { SwapContract } from \"../swap\";\nimport { IClaimableRewards, ILPTokens, IStakingPairs } from \"./interfaces\";\nimport {\n  parseClaimableMap,\n  parsePairsMap,\n  parseStakedLPTokensMap,\n} from \"./helpers\";\n\nexport class StakingContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FARM_SCRIPT_HASH[networkType];\n  }\n\n  stake = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"stake\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: SWAP_SCRIPT_HASH[this.network],\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, SWAP_SCRIPT_HASH[this.network]],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  remove = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"withdraw\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  claimMulti = async (\n    connectedWallet: IConnectedWallet,\n    batch: IClaimableRewards[]\n  ) => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"claimMulti\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Array\",\n          value: batch.map((item) => {\n            return {\n              type: \"Array\",\n              value: [\n                {\n                  type: \"Hash160\",\n                  value: item.tokenA,\n                },\n                {\n                  type: \"Hash160\",\n                  value: item.tokenB,\n                },\n              ],\n            };\n          }),\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  getStakingPairs = async (): Promise<IStakingPairs[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPairs\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    return parsePairsMap(res as any);\n  };\n\n  getLPTokens = async (connectedWallet: IConnectedWallet, symbolA, symbolB) => {\n    const swapContract = new SwapContract(this.network);\n    const scripts = [\n      {\n        scriptHash: swapContract.contractHash,\n        operation: \"tokensOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      },\n    ];\n\n    const res = await Network.read(this.network, scripts);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    const tokens: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      if (tokenId.includes(`${symbolA}-${symbolB}`)) {\n        const properties = await swapContract.getProperties(tokenId);\n        if (properties) {\n          tokens.push({ tokenId, ...properties });\n        }\n      }\n    }\n    return tokens;\n  };\n\n  getStakedLPTokens = async (\n    connectedWallet: IConnectedWallet\n  ): Promise<ILPTokens[]> => {\n    const scripts = [\n      {\n        scriptHash: this.contractHash,\n        operation: \"getLPTokens\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      },\n    ];\n    const res = await Network.read(this.network, scripts);\n    if (res.state === \"FAULT\") {\n      throw new Error(res.exception as string);\n    }\n    return parseStakedLPTokensMap(res as any);\n  };\n\n  getClaimable = async (\n    connectedWallet: IConnectedWallet\n  ): Promise<IClaimableRewards[]> => {\n    const scripts = [\n      {\n        scriptHash: this.contractHash,\n        operation: \"getClaimable\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      },\n    ];\n    const res = await Network.read(this.network, scripts);\n    if (res.state !== \"FAULT\") {\n      return parseClaimableMap(res as any);\n    } else {\n      console.error(res.exception);\n      return [];\n    }\n  };\n}\n","import { StackItemLike } from \"@cityofzion/neon-core/lib/sc/StackItem\";\nimport { parseMapValue } from \"../../../utils\";\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport { IClaimableRewards, ILPTokens, IStakingPairs } from \"./interfaces\";\n\ninterface B extends Omit<InvokeResult, \"stack\"> {\n  stack: StackItemLike;\n}\n\nexport const parsePairsMap = (m: B): IStakingPairs[] => {\n  return m.stack[0].value.map((pair) => {\n    return parseMapValue(pair);\n  });\n};\n\nexport const parseStakedLPTokensMap = (m: B): ILPTokens[] => {\n  return m.stack[0].value.map((pair) => {\n    return parseMapValue(pair);\n  });\n};\n\nexport const parseClaimableMap = (m: B): IClaimableRewards[] => {\n  return m.stack[0].value.map((pair) => {\n    return parseMapValue(pair);\n  });\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FARM_STAKE_POSITIONS_PATH } from \"../../../../../consts\";\nimport StakingPairCard from \"../../components/StakingPairCard\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { StakingContract } from \"../../../../../packages/neo/contracts/ftw/staking\";\nimport { useOnChainData } from \"../../../../../common/hooks/use-onchain-data\";\nimport ErrorNotificationWithRefresh from \"../../../../components/ErrorNotificationWithRefresh\";\n\nconst StakingMain = () => {\n  const { network } = useWallet();\n  const [refresh, setRefresh] = useState(0);\n  const handleRefresh = () => setRefresh(refresh + 1);\n  const { isLoaded, error, data } = useOnChainData(() => {\n    return new StakingContract(network).getStakingPairs();\n  }, [network, refresh]);\n\n  return (\n    <div>\n      <div className=\"level is-mobile\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-5\">Farm</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <div className=\"buttons\">\n              <Link\n                to={FARM_STAKE_POSITIONS_PATH}\n                className=\"button is-primary is-small is-rounded\"\n              >\n                My positions\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n      <hr />\n      <div>\n        {!isLoaded ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <ErrorNotificationWithRefresh\n            error={error}\n            onRefresh={handleRefresh}\n          />\n        ) : data && data.length > 0 ? (\n          <div>\n            {data.map((item, i) => (\n              <StakingPairCard key={\"sc\" + i} {...item} />\n            ))}\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default StakingMain;\n","import React from \"react\";\nimport { toDecimal } from \"../../../../../packages/neo/utils\";\ninterface ILPTokenCardProps {\n  tokenId: string;\n  name: string;\n  amount: string;\n  lock: string;\n  onStakeLP: (tokenId: string) => void;\n}\nconst LPTokenCard = (props: ILPTokenCardProps) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        {props.tokenId}\n        <br /> {toDecimal(props.amount)}\n      </div>\n      <div className=\"media-right\">\n        <button\n          onClick={() => props.onStakeLP(props.tokenId)}\n          className=\"button is-primary\"\n        >\n          Stake\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LPTokenCard;\n","import React from \"react\";\nimport LPTokenCard from \"./LPTokenCard\";\nimport { useOnChainData } from \"../../../../../common/hooks/use-onchain-data\";\nimport { StakingContract } from \"../../../../../packages/neo/contracts/ftw/staking\";\nimport { IConnectedWallet } from \"../../../../../packages/neo/wallet/interfaces\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\nimport ErrorNotificationWithRefresh from \"../../../../components/ErrorNotificationWithRefresh\";\n\ninterface ILPTokenListProps {\n  connectedWallet: IConnectedWallet;\n  network: INetworkType;\n  symbolA: string;\n  symbolB: string;\n  onStakeLP: (tokenId: string) => void;\n  refresh: number;\n  onRefresh: () => void;\n}\nconst LPTokenList = ({\n  network,\n  symbolA,\n  symbolB,\n  connectedWallet,\n  onStakeLP,\n  refresh,\n  onRefresh,\n}: ILPTokenListProps) => {\n  const { isLoaded, error, data } = useOnChainData(() => {\n    return new StakingContract(network).getLPTokens(\n      connectedWallet,\n      symbolA,\n      symbolB\n    );\n  }, [connectedWallet, network, refresh]);\n  return (\n    <div>\n      {!isLoaded ? (\n        <div>Loading your LP tokens</div>\n      ) : error ? (\n        <ErrorNotificationWithRefresh error={error} onRefresh={onRefresh} />\n      ) : (\n        <div>\n          {data && data.length > 0 ? (\n            data.map((item, i) => (\n              <LPTokenCard\n                onStakeLP={onStakeLP}\n                {...item}\n                key={`${item.name}-${i}`}\n              />\n            ))\n          ) : (\n            <div>You don't have LP tokens in your wallet</div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LPTokenList;\n","import React, { useEffect, useState } from \"react\";\nimport { FARM_PATH } from \"../../../../../consts\";\nimport HeaderBetween from \"../../../../components/HeaderBetween\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { useLocation } from \"react-router-dom\";\nimport * as queryString from \"querystring\";\nimport { StakingContract } from \"../../../../../packages/neo/contracts/ftw/staking\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport ConnectWalletButton from \"../../../../components/ConnectWalletButton\";\nimport LPTokenList from \"./LPTokenList\";\n\nconst Stake = () => {\n  const { network, connectedWallet } = useWallet();\n  const [txid, setTxid] = useState(\"\");\n  const [refresh, setRefresh] = useState(0);\n\n  const location = useLocation();\n  const str =\n    location.search[0] === \"?\"\n      ? location.search.substr(1, location.search.length)\n      : location.search;\n\n  const params = queryString.parse(str);\n\n  const [symbolA] = useState<any>(\n    params.tokenASymbol ? params.tokenASymbol : undefined\n  );\n  const [symbolB] = useState<any>(\n    params.tokenBSymbol ? params.tokenBSymbol : undefined\n  );\n\n  const onStakeLP = async (tokenId) => {\n    if (connectedWallet) {\n      try {\n        const res = await new StakingContract(network).stake(\n          connectedWallet,\n          tokenId\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onSuccess = () => {\n    setRefresh(refresh + 1);\n    setTxid(\"\");\n  };\n  return (\n    <div>\n      <HeaderBetween path={FARM_PATH} title={`Stake ${symbolA}-${symbolB}`} />\n      <hr />\n      {connectedWallet ? (\n        <LPTokenList\n          refresh={refresh}\n          connectedWallet={connectedWallet}\n          network={network}\n          symbolA={symbolA}\n          symbolB={symbolB}\n          onStakeLP={onStakeLP}\n          onRefresh={() => setRefresh(refresh + 1)}\n        />\n      ) : (\n        <ConnectWalletButton />\n      )}\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onSuccess}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Stake;\n","import React from \"react\";\n\ninterface IPositionCardProps {\n  tokenId: string;\n  amount: string;\n  onUnStake: (tokenId: string) => void;\n}\nconst PositionCard = ({ tokenId, amount, onUnStake }: IPositionCardProps) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        {tokenId}\n        <br />\n        {amount}\n      </div>\n      <div className=\"media-right\">\n        <button onClick={() => onUnStake(tokenId)} className=\"button is-light\">\n          Withdraw\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PositionCard;\n","import React from \"react\";\nimport PositionCard from \"./PositionCard\";\nimport { useOnChainData } from \"../../../../../common/hooks/use-onchain-data\";\nimport { StakingContract } from \"../../../../../packages/neo/contracts/ftw/staking\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\nimport { IConnectedWallet } from \"../../../../../packages/neo/wallet/interfaces\";\nimport ErrorNotificationWithRefresh from \"../../../../components/ErrorNotificationWithRefresh\";\n\ninterface IPositionListProps {\n  network: INetworkType;\n  connectedWallet: IConnectedWallet;\n  refresh: number;\n  onRefresh: () => void;\n  onUnStake: (tokenId: string) => void;\n}\nconst PositionList = ({\n  network,\n  connectedWallet,\n  refresh,\n  onRefresh,\n  onUnStake,\n}: IPositionListProps) => {\n  const { isLoaded, error, data } = useOnChainData(() => {\n    return new StakingContract(network).getStakedLPTokens(connectedWallet);\n  }, [connectedWallet, refresh]);\n  return (\n    <div>\n      {!isLoaded ? (\n        <div>Loading</div>\n      ) : error ? (\n        <ErrorNotificationWithRefresh error={error} onRefresh={onRefresh} />\n      ) : data && data.length > 0 ? (\n        <div>\n          {data.map((item, i) => (\n            <PositionCard\n              key={\"position\" + i}\n              {...item}\n              onUnStake={onUnStake}\n            />\n          ))}\n        </div>\n      ) : (\n        <div>No staking found</div>\n      )}\n    </div>\n  );\n};\n\nexport default PositionList;\n","import React, { useState } from \"react\";\nimport HeaderBetween from \"../../../../components/HeaderBetween\";\nimport { FARM_PATH } from \"../../../../../consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { StakingContract } from \"../../../../../packages/neo/contracts/ftw/staking\";\nimport { toast } from \"react-hot-toast\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport ConnectWalletButton from \"../../../../components/ConnectWalletButton\";\nimport PositionList from \"./PositionList\";\n\nconst MyPositions = () => {\n  const { network, connectedWallet } = useWallet();\n  const [txid, setTxid] = useState(\"\");\n  const [refresh, setRefresh] = useState(0);\n\n  const onUnStake = async (tokenId) => {\n    if (connectedWallet) {\n      try {\n        const res = await new StakingContract(network).remove(\n          connectedWallet,\n          tokenId\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onSuccess = () => {\n    setRefresh(refresh + 1);\n    setTxid(\"\");\n  };\n\n  return (\n    <div>\n      <HeaderBetween path={FARM_PATH} title={`My staking`} />\n      <hr />\n      {connectedWallet ? (\n        <PositionList\n          network={network}\n          connectedWallet={connectedWallet}\n          refresh={refresh}\n          onRefresh={() => setRefresh(refresh + 1)}\n          onUnStake={onUnStake}\n        />\n      ) : (\n        <ConnectWalletButton />\n      )}\n\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onSuccess}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default MyPositions;\n","import React, { useState } from \"react\";\nimport { IClaimableRewards } from \"../../../../../packages/neo/contracts/ftw/staking/interfaces\";\nimport ModalCard from \"../../../../components/Modal\";\n\nconst ClaimModal = (props: {\n  items: IClaimableRewards[];\n  onClaim: (v: IClaimableRewards[]) => void;\n  onClose: () => void;\n}) => {\n  const [selectedItems, setSelectedItems] = useState<IClaimableRewards[]>(\n    props.items\n  );\n\n  const handleToggle = (v: IClaimableRewards) => {\n    let index: number | null = null;\n    const arr = selectedItems;\n    selectedItems.forEach((item, i) => {\n      if (item.tokenA === v.tokenA && item.tokenB === v.tokenB) {\n        index = i;\n      }\n    });\n    if (index != null) {\n      setSelectedItems(\n        arr.filter((f) => f.tokenA !== v.tokenA || f.tokenB !== v.tokenB)\n      );\n    } else {\n      setSelectedItems([...arr, v]);\n    }\n  };\n\n  return (\n    <>\n      <ModalCard onClose={() => props.onClose()}>\n        <div>\n          <h1 className=\"title\">Claim rewards</h1>\n          <nav className=\"panel is-primary\">\n            {props.items.map((item, i) => {\n              let isSelected = false;\n              selectedItems.forEach((_item) => {\n                if (\n                  item.tokenA === _item.tokenA &&\n                  item.tokenB === _item.tokenB\n                ) {\n                  isSelected = true;\n                }\n              });\n              return (\n                <label key={`select-${i}`} className=\"panel-block\">\n                  <div className=\"media-left\">\n                    <input\n                      onClick={() => handleToggle(item)}\n                      type=\"checkbox\"\n                      checked={isSelected}\n                    />\n                  </div>\n                  <div className=\"media\">\n                    <div className=\"media-content content is-small\">\n                      {item.tokenASymbol}-{item.tokenBSymbol}\n                      <br /> {item.claimable} NEP\n                    </div>\n                  </div>\n                </label>\n              );\n            })}\n            <div className=\"panel-block\">\n              <button\n                onClick={() => props.onClaim(selectedItems)}\n                className=\"button is-warning is-fullwidth\"\n              >\n                Claim\n              </button>\n            </div>\n          </nav>\n        </div>\n      </ModalCard>\n    </>\n  );\n};\n\nexport default ClaimModal;\n","import React, { useEffect, useState } from \"react\";\nimport { StakingContract } from \"../../../../../packages/neo/contracts/ftw/staking\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { IClaimableRewards } from \"../../../../../packages/neo/contracts/ftw/staking/interfaces\";\nimport { FaCoins, FaStar } from \"react-icons/all\";\nimport ClaimModal from \"./ClaimModal\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { toast } from \"react-hot-toast\";\nimport { useApp } from \"../../../../../common/hooks/use-app\";\n\nconst ClaimRewards = () => {\n  const { toggleWalletSidebar } = useApp();\n  const { network, connectedWallet } = useWallet();\n  const [txid, setTxid] = useState(\"\");\n  const [refresh, setRefresh] = useState(0);\n  const [items, setItems] = useState<IClaimableRewards[]>([]);\n  const [isLoading, setLoading] = useState(!!connectedWallet);\n  const [isClaimModalOpen, setClaimModalOpen] = useState(false);\n\n  const handleRefresh = () => {\n    setRefresh(refresh + 1);\n    setTxid(\"\");\n  };\n\n  const onClaim = async (selectedItems) => {\n    if (connectedWallet) {\n      try {\n        const res = await new StakingContract(network).claimMulti(\n          connectedWallet,\n          selectedItems\n        );\n        setClaimModalOpen(false);\n        setTxid(res);\n      } catch (e: any) {\n        console.error(e);\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetch(w) {\n      setLoading(true);\n      try {\n        const res = await new StakingContract(network).getClaimable(w);\n        setLoading(false);\n        setItems(res);\n      } catch (e: any) {\n        console.error(e);\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetch(connectedWallet);\n    } else {\n      setItems([]);\n    }\n  }, [connectedWallet, network, refresh]);\n\n  return (\n    <div>\n      <h3 className=\"title is-6\">\n        <span className=\"icon\">\n          <FaCoins />\n        </span>\n        <span>Rewards</span>\n      </h3>\n      <div className=\"mb-3\">\n        {items.map((item, i) => {\n          return (\n            <div key={`claim-${i}`} className=\"media\">\n              <div className=\"media-content content is-small\">\n                {item.tokenASymbol}-{item.tokenBSymbol}\n                <br /> {item.claimable}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <button\n        onClick={() => {\n          if (connectedWallet) {\n            setClaimModalOpen(true);\n          } else {\n            toggleWalletSidebar();\n          }\n        }}\n        className=\"button is-fullwidth is-primary mt-4\"\n      >\n        {connectedWallet ? \"Claim\" : \"Connect wallet\"}\n      </button>\n      {isClaimModalOpen && (\n        <ClaimModal\n          items={items}\n          onClose={() => setClaimModalOpen(false)}\n          onClaim={onClaim}\n        />\n      )}\n\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={handleRefresh}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default ClaimRewards;\n","import React from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { Route } from \"react-router-dom\";\nimport {\n  FARM_PATH,\n  FARM_STAKE_PATH,\n  FARM_STAKE_POSITIONS_PATH,\n} from \"../../../consts\";\nimport StakingMain from \"./scenes/Main\";\nimport Stake from \"./scenes/Stake\";\nimport MyPositions from \"./scenes/MyPositions\";\nimport ClaimRewards from \"./scenes/ClaimRewards\";\n\nconst Farm = () => {\n  return (\n    <PageLayout>\n      <div className=\"columns\">\n        <div className=\"column is-6 is-offset-3\">\n          <div className=\"columns\">\n            <div className=\"column is-9\">\n              <div className=\"box is-shadowless\">\n                <Route exact={true} path={FARM_PATH} component={StakingMain} />\n                <Route exact={true} path={FARM_STAKE_PATH} component={Stake} />\n                <Route\n                  path={FARM_STAKE_POSITIONS_PATH}\n                  component={MyPositions}\n                />\n              </div>\n            </div>\n            <div className=\"column is-4\">\n              <div className=\"box\">\n                <ClaimRewards />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default Farm;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport {\n  COLLECTION_PATH,\n  GASFI_PATH,\n  FUSION_PATH,\n  GALLERY_PATH,\n  HOME_PATH,\n  MIGRATION_PATH,\n  SMITH_PATH,\n  SWAP_PATH,\n  TOURNAMENT_PATH,\n  FARM_PATH,\n} from \"../consts\";\nimport { WalletContextProvider } from \"../packages/provider\";\nimport WalletSidebar from \"./components/WalletSidebar\";\nimport GASFI from \"./pages/GASFi\";\nimport { Toaster } from \"react-hot-toast\";\nimport MyCollection from \"./pages/MyCollection\";\nimport Gallery from \"./pages/Gallery\";\nimport MobileMenuSlider from \"./components/MobileMenuSlider\";\nimport Home from \"./pages/Home\";\nimport Smith from \"./pages/Smith\";\nimport Tournament from \"./pages/Tournament\";\nimport Swap from \"./pages/Swap\";\nimport Fusion from \"./pages/Fusion\";\nimport Migration from \"./pages/Migration\";\nimport ReactGa from \"./components/ReactGa\";\nimport Farm from \"./pages/Farm\";\n\nReactGA.initialize(\"UA-114435339-1\");\n\nconst App = () => {\n  return (\n    <WalletContextProvider\n      options={{\n        useLocalStorage: true,\n        useDevWallet: process.env.NODE_ENV === \"development\",\n      }}\n    >\n      <Router>\n        <Toaster position=\"bottom-center\" />\n        <Header />\n        <Route exact path={HOME_PATH} component={Home} />\n        <Route path={GALLERY_PATH} component={Gallery} />\n        <Route path={TOURNAMENT_PATH} component={Tournament} />\n        <Route path={SMITH_PATH} component={Smith} />\n        <Route path={GASFI_PATH} component={GASFI} />\n        <Route path={COLLECTION_PATH} component={MyCollection} />\n        <Route path={SWAP_PATH} component={Swap} />\n        <Route path={FARM_PATH} component={Farm} />\n        <Route path={GASFI_PATH} component={GASFI} />\n        <Route path={FUSION_PATH} component={Fusion} />\n        <Route exact path={MIGRATION_PATH} component={Migration} />\n        <MobileMenuSlider />\n        <WalletSidebar />\n        <ReactGa />\n      </Router>\n    </WalletContextProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppCContextProvider } from \"./common/hooks/use-app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/style.scss\";\nimport App from \"./ui\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppCContextProvider>\n      <App />\n    </AppCContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}