{"version":3,"sources":["common/hooks/use-app.tsx","reportWebVitals.ts","ui/components/Logo.tsx","packages/neo/consts/index.ts","packages/neo/utils/index.ts","packages/neo/network/index.ts","packages/neo/contracts/ftw/farm/helpers.ts","packages/neo/contracts/ftw/nep17/index.ts","packages/neo/contracts/ftw/farm/index.ts","packages/neo/contracts/ftw/nft/consts.ts","packages/neo/contracts/ftw/nft/helpers.ts","packages/neo/contracts/ftw/nft/index.ts","packages/neo/contracts/ftw/swap/consts.ts","packages/neo/contracts/ftw/bank/index.ts","packages/neo/contracts/ftw/swap/helpers.ts","packages/neo/contracts/ttm/nft/helpers.ts","packages/neo/contracts/ftw/swap/index.ts","packages/neo/wallet/dev-wallet.ts","packages/neo/wallet/index.ts","packages/neo/contracts/ftw/farm/consts.ts","packages/neo/local-storage/index.ts","packages/provider/wallet-provider.tsx","consts/pageRoutes.ts","packages/ui/Wallet/helpers.ts","ui/components/WalletDropdown.tsx","ui/components/NetworkSwitch.tsx","ui/components/NetworkSwitch2.tsx","ui/components/SocialLinkGroup.tsx","ui/components/Header.tsx","packages/ui/Wallet/WalletDropdown.tsx","packages/ui/Wallet/WalletList.tsx","packages/ui/Wallet/AssetCard.tsx","packages/ui/Wallet/index.tsx","ui/components/WalletSidebar.tsx","ui/components/PageLayout.tsx","ui/components/Modal.tsx","ui/components/TransactionSubmitted.tsx","ui/pages/GASFi/ActionModal.tsx","ui/pages/GASFi/SnapshotCountdown.tsx","ui/pages/GASFi/SnapshotCard.tsx","ui/pages/GASFi/SnapshotList.tsx","ui/components/NotifyError.tsx","ui/pages/GASFi/MyPosition.tsx","ui/pages/GASFi/Pool.tsx","ui/pages/GASFi/CancelModal.tsx","ui/pages/GASFi/ClaimModal.tsx","ui/pages/GASFi/Claims.tsx","ui/pages/GASFi/PositionModal.tsx","ui/pages/GASFi/About.tsx","ui/pages/GASFi/index.tsx","ui/pages/Gallery/PropertiesModal.tsx","ui/pages/MyCollection/index.tsx","ui/pages/Gallery/Banner.tsx","packages/neo/api/consts.ts","packages/neo/api/rest.ts","packages/ui/AfterTransactionSubmitted/RuneLoading.tsx","ui/pages/Tournament/scenes/Arena/Players/components/CheckMark.tsx","packages/ui/AfterTransactionSubmitted/index.tsx","ui/pages/Gallery/index.tsx","ui/components/SidebarNav.tsx","ui/components/MobileMenuSlider.tsx","ui/components/BgContainer.tsx","ui/pages/Home.tsx","packages/neo/contracts/ftw/smith/consts.ts","packages/neo/contracts/ftw/smith/helpers.ts","packages/neo/contracts/ftw/smith/index.ts","ui/pages/Smith/helpers.ts","ui/pages/Smith/components/Header.tsx","ui/pages/Smith/NEP17FormModal.tsx","ui/pages/Smith/NEP11FormModal.tsx","ui/pages/Smith/Banner.tsx","ui/pages/Smith/scenes/NEP17/ContractCard.tsx","ui/pages/Smith/scenes/NEP17/index.tsx","ui/pages/Smith/NEP11MintFormModal.tsx","ui/pages/Smith/scenes/NEP11/DisplayNFT.tsx","ui/pages/Smith/scenes/NEP11/Tokens.tsx","ui/pages/Smith/scenes/NEP11/ContractCard.tsx","ui/pages/Smith/scenes/NEP11/index.tsx","ui/pages/Smith/index.tsx","ui/pages/Tournament/pageRoutes.ts","packages/neo/contracts/ftw/tournament/consts.ts","packages/neo/contracts/ftw/tournament/helpers.ts","packages/neo/contracts/ftw/tournament/index.ts","ui/pages/Tournament/components/PlayButton.tsx","ui/pages/Tournament/scenes/Arena/Banner.tsx","ui/pages/Tournament/components/DisplayRuneWithProperties.tsx","ui/pages/Tournament/components/BetButton.tsx","ui/pages/Tournament/components/LeaveButton.tsx","ui/pages/Tournament/scenes/Arena/Players/components/PlayerModal.tsx","ui/pages/Tournament/scenes/Arena/Players/components/NFTListModal.tsx","ui/pages/Tournament/scenes/Arena/Players/components/ArenaRegisterButton.tsx","ui/pages/Tournament/scenes/Arena/Players/index.tsx","ui/pages/Tournament/scenes/Arena/History/NFTDetailModal.tsx","ui/pages/Tournament/components/ClaimButton.tsx","ui/pages/Tournament/scenes/Arena/History/HistoryTable.tsx","ui/pages/Tournament/scenes/Arena/helpers.ts","ui/pages/Tournament/scenes/Arena/History/TournamentTree.tsx","ui/pages/Tournament/scenes/Arena/History/Replay.tsx","ui/pages/Tournament/scenes/Arena/History/index.tsx","ui/pages/Tournament/scenes/Arena/index.tsx","ui/pages/Tournament/index.tsx","ui/pages/Swap/components/Input/index.tsx","ui/pages/Swap/components/AssetListModal/index.tsx","ui/components/HeaderBetween.tsx","ui/pages/Swap/scenes/AddLiquidity/index.tsx","ui/components/TruncatedAddress.tsx","ui/pages/Swap/scenes/History/index.tsx","ui/pages/Swap/components/PairSelect/index.tsx","ui/pages/Swap/scenes/Swap/index.tsx","ui/pages/Swap/scenes/Farm/scenes/Detail/index.tsx","ui/pages/Swap/scenes/Farm/scenes/CreatePool/index.tsx","ui/pages/Swap/components/PoolCard/index.tsx","ui/pages/Swap/scenes/Pools/index.tsx","ui/pages/Swap/scenes/RemoveLiquidity/LPTokenList.tsx","ui/pages/Swap/scenes/RemoveLiquidity/index.tsx","ui/pages/Swap/scenes/Providers/index.tsx","ui/pages/Swap/index.tsx","ui/pages/Fusion/components/FusionBox.tsx","ui/pages/Fusion/components/RuneListModal.tsx","packages/neo/contracts/ttm/nft/consts.ts","packages/neo/contracts/ttm/nft/index.ts","ui/pages/Fusion/components/CryptonatuListModal.tsx","packages/neo/contracts/ftw/fuse/index.ts","ui/pages/Fusion/components/FusedList.tsx","ui/pages/Fusion/index.tsx","ui/pages/Migration/index.tsx","ui/components/ReactGa.tsx","ui/pages/Farm/components/StakingPairCard.tsx","packages/neo/contracts/ftw/staking/consts.ts","packages/neo/contracts/ftw/staking/index.ts","ui/pages/Farm/scenes/Main/index.tsx","ui/pages/Farm/scenes/Stake/LPTokenCard.tsx","ui/pages/Farm/scenes/Stake/index.tsx","ui/pages/Farm/scenes/MyPositions/PositionCard.tsx","ui/pages/Farm/scenes/MyPositions/index.tsx","ui/pages/Farm/index.tsx","ui/index.tsx","index.tsx"],"names":["AppContext","createContext","AppCContextProvider","props","useState","sidebarStatus","setSidebarStatus","walletSidebarStatus","setWalletSidebarStatus","contextValue","openSidebar","closeSidebar","toggleSidebar","toggleWalletSidebar","Provider","value","children","useApp","useContext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Logo","alt","src","width","height","O3","NEO_LINE","DEV","ONE_GATE","WALLET_LIST","label","key","PRIVATENET","TESTNET","MAINNET","PRIVATE_CONFIG","url","TESTNET_CONFIG","TESTNET_CONFIG_2","MAINNET_CONFIG","MAINNET_CONFIG_2","GAS_SCRIPT_HASH","NEON_CONST","NATIVE_CONTRACT_HASH","GasToken","NEO_SCRIPT_HASH","NeoToken","TOKEN_LIST","DEV_WALLET_PRIVATE_KEY","DEFAULT_WITNESS_SCOPE","senderHash","account","scopes","tx","WitnessScope","CalledByEntry","truncateAddress","address","substring","substr","length","convertContractCallParam","param","type","sc","ContractParam","hash160","wallet","getScriptHashFromAddress","string","integer","array","map","i","byteArray","u","hex2base64","str2hexstring","Error","base64ToAddress","str","getAddressFromScriptHash","base64ToHash160","reverseHex","base642hex","base64ToString","HexString","fromBase64","toAscii","toString","base64ToFixed8","BigInteger","fromNumber","toDecimal","val","parseFloat","e","base64ToDate","moment","unix","format","truncateDecimal","v","p","s","Math","pow","trunc","balanceCheck","balances","requiredAmount","hasBalance","forEach","bal","symbol","amount","Network","READ_LOG_FREQUENCY","getRPCClient","networkType","config","rpc","RPCClient","getRawTx","txid","a","rpcClient","getApplicationLog","rawTx","sleep","findNotificationFromTxId","txId","scriptHash","eventName","getNotificationsFromTxId","notifications","find","n","contract","eventname","network","appLog","executions","push","read","scripts","passFaultCheck","sb","ScriptBuilder","script","params","args","arg","emitAppCall","operation","invokeScript","fromHex","build","res","state","console","error","exception","duration","Promise","resolve","setTimeout","parseDeposit","stackItem","position","lastClaimNo","createdAt","parseClaimPaginate","totalItems","totalPages","page","items","parseClaim","item","no","from","end","GAS","FTW","parseSnapshotItem","totalPositionPool","totalNeo","totalGas","range","winPosition","FTW_SCRIPT_HASH","CONST","TTM_SCRIPT_HASH","NUDES_SCRIPT_HASH","FarmContract","contractHash","deposit","connectedWallet","NeonWallet","signers","WalletAPI","invoke","remove","createSnapshot","claim","changePosition","getStatus","neoBalance","ftwBalance","timeLeft","interval","vote","snapshots","claims","stack","undefined","this","FARM_SCRIPT_HASH","RUNE_SCRIPT_HASH","RUNE_PRICE","RUNE_PHASE_FILTER","parseProperties","obj","base642utf8","NFTContract","mint","fromDecimal","withdrawFund","getTotalSupplyScript","getPropertiesScript","tokenId","getProperties","getTokensOfScript","ownerAddress","getTokensOf","metaList","iterator","meta","getTokens","SWAP_SCRIPT_HASH","ASSET_LIST","logo","PAIR_LIST","tokenA","tokenB","getEstimate","reserveA","reserveB","fixed8TokenAmount","estimated","floor","parsePair","amountA","amountB","totalShare","parseSwap","tokenIn","tokenOut","tokenInAmount","tokenOutAmount","parseLP","name","owner","lockUntil","defaultDeadLine","utc","add","valueOf","SwapContract","provide","CustomContracts","allowedContracts","swap","getReserve","script1","script2","pair","reserve","getPairs","swapToken","getSwapHistory","getLPList","getLPListWithId","getContractHashes","script3","script4","script5","decimals","getContractSymbol","getLPTokens","tokens","properties","DevWallet","version","website","compatibility","extra","currency","theme","chainId","defaultNetwork","networks","getNep17Balances","balance","assethash","includes","getVersion","txObj","sign","protocol","sendRawTransaction","nodeUrl","Account","createScript","getBlockCount","currentHeight","transaction","Transaction","validUntilBlock","calculateNetworkFee","networkFee","calculateSystemFee","systemFee","extraSystemFee","fee","invokeFunction","PolicyContract","invokeFunctionResponse","feePerByte","transactionByteSize","serialize","witnessProcessingFee","mul","gasconsumed","sender","transferScript","gasBalance","requiredGas","transferTokenBalance","Fixed8","fromRawNumber","toNumber","transferAmount","walletType","O3Wallet","instance","neo3Dapi","getProvider","provider","getAccount","getNetworks","getBalance","contracts","OneGate","NeoDapi","window","assetHashes","NeoLine","NEOLineN3","Init","instance2","NEOLine","Dev","init","_instance","description","message","currentNetwork","testInvoke","submittedTx","method","LocalStorage","addTransaction","list","CONNECTED_WALLET","TRANSACTIONS","NETWORK","SWAP_TOKEN_A","SWAP_TOKEN_B","validated","validateConnectedWallet","store","set","has","dispatchEvent","Event","transactions","get","status","initStorage","supportContracts","getTransactions","validatedTx","removeTransaction","getNetwork","setNetwork","getWallet","clearTransaction","setSwapTokenA","setSwapTokenB","getSwapTokenA","getSwapTokenB","WalletContext","WalletContextProvider","initNetwork","location","href","indexOf","totalTxSubmit","setTotalTxSubmit","isWalletModalActive","setWalletModalActive","options","useLocalStorage","setConnectedWallet","setInvokeScript","pendingTransactions","setPendingTransactions","connectWallet","toast","success","setWallet","useDevWallet","openWalletModal","closeWalletModal","disConnectWallet","removeWallet","doInvoke","closeInvoke","addPendingTransaction","removePendingTransaction","filter","switchNetwork","increaseTotalTxSubmit","useWallet","MIGRATION_PATH","GASFI_PATH","GALLERY_PATH","TOURNAMENT_PATH","SMITH_PATH","SMITH_PATH_NEP11","COLLECTION_PATH","SWAP_PATH","SWAP_PATH_HISTORY","SWAP_PATH_LP_LIST","SWAP_PATH_LIQUIDITY_ADD","SWAP_PATH_LIQUIDITY_REMOVE","SWAP_PATH_TRADE","FARM_PATH","FARM_STAKE_PATH","FARM_STAKE_POSITIONS_PATH","FUSION_PATH","MENU","path","category","getWalletIcon","svg","WalletDropdown","isActive","setActive","useEffect","refresh","disconnected","addEventListener","removeEventListener","Constants","EventName","ACCOUNT_CHANGED","NETWORK_CHANGED","DISCONNECTED","className","onClick","utils","id","role","to","NetworkSwitch","networkList","confirm","targetNetwork","SocialLinkGroup","target","Header","style","justifyContent","marginLeft","alignItems","NetworkSwitch2","route","index","activeClassName","WalletList","_wallet","AssetCard","Wallet","bottom","WalletSidebar","openFromRight","top","showNav","onHideNav","PageLayout","ModalCard","onClose","isLoading","React","$","addClass","removeClass","zIndex","TransactionSubmitted","ActionModal","setAmount","setPosition","setTxid","onDeposit","Modal","onChange","_","autoFocus","decimalScale","inputMode","onValueChange","thousandSeparator","suffix","allowLeadingZeros","disabled","SnapshotCountdown","onCreateSnapshot","CreateSnapshotBtn","date","Date","now","renderer","completed","hours","minutes","seconds","SnapshotCard","SnapshotList","contractStatus","NotifyError","msg","MyPosition","lastSnapshotNo","onCancel","onClaim","onPositionChange","isClaimable","Pool","CancelModal","Claims","PositionModal","currentPosition","tempTime","Farm","production","setRoute","modalActive","setModalActive","cancelModalActive","setCancelModalActive","claimModalActive","setClaimModalActive","positionModalActive","setPositionModalActive","setError","setContractStatus","onClaimModalActive","fetchContractStatus","About","ClaimModal","PropertiesModal","setItem","setLoading","phase","luck","image","MyCollection","setTokens","propertiesModalActive","setPropertiesModalActive","token","Banner","onMint","ENDPOINT","RestAPI","endpoint","fetchResult","fetch","mode","json","RuneLoading","random","colors","bg","setBg","dot1","setDot1","dot2","setDot2","dot3","setDot3","dot4","setDot4","body","setBody","timer","clearTimeout","CheckMark","xmlns","viewBox","fill","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","strokeLinecap","points","AfterTransactionSubmitted","onSuccess","onError","isDone","setDone","hasError","checkTxid","margin","display","size","marginTop","Gallery","setFilter","getRunes","document","title","onFilterChange","flexFlow","SidebarNav","MobileMenuSlider","BgContainer","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","CARDS","desc","img","link","Home","onSwitchNetwork","card","minHeight","SMITH_SCRIPT_HASH","parseRecord","contractOwner","totalSupply","author","parseNEP11Record","email","parseSmithProperties","SmithContract","createNEP17","contractName","createNEP11","mintNFT","records","getNEP11Records","emojiRegexExp","detectEmojiInString","values","detected","Object","keys","test","SmithModalHeader","NEP17FormModal","setValues","handleValueChange","hasEmoji","firstInput","useRef","current","focus","ref","max","allowNegative","NEP11FormModal","useLocation","isNep11FormModalActive","setNep11FormModalActive","isNep17FormModalActive","setNep17FormModalActive","pathname","ContractCard","data","toLocaleString","NEP17Smith","setPage","setStatus","pages","currentPage","NEP11MintFormModal","showForm","setShowForm","attributes","attValues","setAttValues","handleAttChange","JSON","stringify","attKeys","k","placeholder","DisplayRune","setToken","Tokens","DisplayNFT","isMintModalActive","setMintModalActive","NEP11Smith","setData","Smith","exact","component","NEP17","NEP11","ARENA_PATH","TOURNAMENT_SCRIPT_HASH","ADMIN_FOR_PLAY","SUPPORT_TICKET_PRICE","parsePlayer","tokenHash","parseGame","gameNo","tournamentTree","champion","nonce","betsOnChampion","totalBets","rollover","championPrize","champOwner","calculateClaimableAmount","history","betAmount","totalAmount","myClaimAble","TournamentContract","register","arenaNo","play","leave","bet","getPlayers","getGameHeight","getBetAmount","championTokenId","isClaimed","getBetOnPlayer","userBets","getCurrentPrize","prize","previousChampWallet","timeElapsedFromPreviousGame","PlayButton","onSubmitted","onPlay","playTxid","setPlayTxid","hasPermissionToPlay","DisplayRuneWithProperties","isOwner","getRune","fetchRune","left","BetButton","onBet","LeaveButton","onLeave","PlayerModal","player","_gameNo","gameOwner","NFTListModal","onRegister","RegisterButton","playerCount","Players","playerModalActive","setPlayerModalActive","players","setPlayers","onPlayerModalActive","NFTDetailModal","rune","ClaimButton","onClaimed","fetchBetAmount","HistoryTable","onReplay","fight","aPhase","aLuck","bPhase","bLuck","compareLuck","chunks","arr","slice","TournamentTree","champ","tree","capacity","stage","winners","match","rounds","reverse","arena","winner","opacity","Replay","gameHistory","backgroundColor","History","claimTxid","setClaimTxid","nftModalActive","setNftModalActive","replayModalActive","setReplayModalActive","setHistory","onNFTModalActive","fetchHistory","itemsPerPage","ceil","game","_page","Arena","defaultArena","useMemo","Tournament","ARENA_LIST","Input","heading","setValue","onClickAsset","isReadOnly","userBalance","readOnly","source","event","HashInput","onAssetClick","customContractHash","setContractHash","onAddContractHash","hash","isScriptHash","AssetListModal","isCustomInputMode","setCustomInputMode","assets","ASSETS","asset","HeaderBetween","Liquidity","queryString","parse","search","isNewPoolMode","isAssetChangeModalActive","setAssetChangeModalActive","setTokenA","setTokenB","symbolA","setSymbolA","symbolB","setSymbolB","setAmountA","setAmountB","selectedLock","setSelectedLock","setUntil","setReserve","isPairLoading","setPairLoading","onAssetChange","onAddLiquidity","milliseconds","onTokenAAmountChange","A","B","fetchPair","noLiquidity","checked","selected","timeInputLabel","dateFormat","showTimeInput","minDate","assetHash","TruncatedAddress","isFiltered","assetObj","symbolIn","symbolOut","PairSelect","onSelect","Swap","onSwap","onSwitch","loadPair","priceImpact","FarmDetail","claimable","reloadCnt","setReloadCnt","onRemoveLiquidity","userShare","totalShares","poolA","poolB","getUserShare","stake","log","CreatePool","useHistory","errors","setErrors","handleSubmit","_errors","err","PoolCard","tokenASymbol","setTokenASymbol","tokenBSymbol","setTokenBSymbol","fetchTokenInfo","PairList","setList","detail","setDetail","isCreateModalActive","setCreateModalActive","LPTokenList","lock","onRemove","RemoveLiquidity","w","fetchTokens","Providers","Pools","Trade","FusionBox","RuneListModal","CRYPTONAUT_REGEX","TTMNFTContract","CryptonatuListModal","FUSE_SCRIPT_HASH","FusionContract","fuse","cryptonautTokenId","runeTokenId","refund","FusedList","onReset","onRefund","element","Fusion","isTTMModalActive","setTTMModalActive","isFTWModalActive","setFTWModalActive","cryptonaut","setCryptonaut","setRune","onFuse","_txid","Migration","vantaEffect","setVantaEffect","myRef","DOTS","el","mouseControls","touchControls","gyroControls","minWidth","destroy","autoPlay","loop","ReactGa","ReactGA","pageview","StakingPairCard","dailyReward","StakingContract","swapContract","getPositions","StakingMain","LPTokenCard","onStakeLP","Stake","b","PositionCard","onUnStake","MyPositions","initialize","App","process","GASFI","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.085d00bc.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n// import toast from \"react-hot-toast\";\n\ninterface IAppContext {\n  sidebarStatus: boolean;\n  walletSidebarStatus: boolean;\n  openSidebar: () => void;\n  closeSidebar: () => void;\n  toggleSidebar: () => void;\n  toggleWalletSidebar: () => void;\n}\n\nexport const AppContext = createContext({} as IAppContext);\n\nexport const AppCContextProvider = (props: { children: any }) => {\n  const [sidebarStatus, setSidebarStatus] = useState(false);\n  const [walletSidebarStatus, setWalletSidebarStatus] = useState(false);\n  const openSidebar = () => setSidebarStatus(true);\n  const closeSidebar = () => setSidebarStatus(false);\n  const toggleSidebar = () => {\n    if (walletSidebarStatus) {\n      setWalletSidebarStatus(false);\n    }\n    setSidebarStatus(!sidebarStatus);\n  };\n  const toggleWalletSidebar = () => {\n    if (sidebarStatus) {\n      setSidebarStatus(false);\n    }\n    setWalletSidebarStatus(!walletSidebarStatus);\n  };\n\n  const contextValue = {\n    sidebarStatus,\n    openSidebar,\n    closeSidebar,\n    toggleSidebar,\n    walletSidebarStatus,\n    toggleWalletSidebar,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => useContext(AppContext);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nconst Logo = () => {\n  return (\n    <>\n      <img\n        alt=\"Forthewin Logo\"\n        src={\"/logo/FTW_512_512.svg\"}\n        width=\"36px\"\n        height=\"36px\"\n      />\n      {/*<DisplayRandomRune width=\"36px\" height=\"36px\" />*/}\n    </>\n  );\n};\n\nexport default Logo;\n","import { CONST as NEON_CONST, tx } from \"@cityofzion/neon-core\";\nimport { IWalletType } from \"../wallet/interfaces\";\n\n/* Wallets */\nexport const O3 = \"O3\";\nexport const NEO_LINE = \"NEO_LINE\";\nexport const DEV = \"DEV\";\nexport const ONE_GATE = \"ONE_GATE\";\nexport const WALLET_LIST: {\n  label: string;\n  key: IWalletType;\n}[] = [\n  {\n    label: \"Dev\",\n    key: DEV,\n  },\n  {\n    label: \"NEO Line\",\n    key: NEO_LINE,\n  },\n  {\n    label: \"O3\",\n    key: O3,\n  },\n  {\n    label: \"OneGate\",\n    key: ONE_GATE,\n  },\n];\n\n/* Network types */\nexport const PRIVATENET = \"N3PrivateNet\";\nexport const TESTNET = \"N3TestNet\";\nexport const MAINNET = \"N3MainNet\";\n\n/* Network configs */\nexport const PRIVATE_CONFIG = {\n  label: \"privateNet\",\n  url: \"http://127.0.0.1:50012\",\n};\n\nexport const TESTNET_CONFIG = {\n  label: \"N3TestNet\",\n  // url: \"https://testnet1.neo.coz.io:443\",\n  url: \"https://testnet2.neo.coz.io:443\",\n};\n\n// Using for tx monitor\nexport const TESTNET_CONFIG_2 = {\n  label: \"N3TestNet\",\n  url: \"https://testnet1.neo.coz.io:443\",\n};\n\nexport const MAINNET_CONFIG = {\n  label: \"N3MainNet\",\n  url: \"https://n3seed2.ngd.network:10332\",\n};\n\nexport const MAINNET_CONFIG_2 = {\n  label: \"N3MainNet\",\n  url: \"https://mainnet1.neo.coz.io:443\",\n};\n\n/* Contract hashes */\nexport const GAS_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.GasToken;\nexport const NEO_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.NeoToken;\n\nexport const TOKEN_LIST = () => [NEO_SCRIPT_HASH, GAS_SCRIPT_HASH];\n\n/* Dev wallet */\nexport const DEV_WALLET_PRIVATE_KEY =\n  \"7b5d7fda53932ed9d43eb848dd521455767a4d40b5a994e6f351605e5a4ce26a\";\n\nexport const DEFAULT_WITNESS_SCOPE = (senderHash: string) => {\n  return {\n    account: senderHash,\n    scopes: tx.WitnessScope.CalledByEntry,\n  };\n};\n","import { sc, u, wallet } from \"@cityofzion/neon-core\";\nimport moment from \"moment\";\nimport { IBalance } from \"../wallet/interfaces\";\n\nexport const truncateAddress = (address: string) => {\n  return `${address.substring(0, 4)}...${address.substr(address.length - 2)}`;\n};\n\n/**\n * It converts contract call params for dev wallet. Depending on 3rd wallet params.\n * @param param\n */\nexport const convertContractCallParam = (param: any) => {\n  switch (param.type) {\n    case \"Address\":\n      return sc.ContractParam.hash160(\n        wallet.getScriptHashFromAddress(param.value)\n      );\n    case \"Hash160\":\n      return sc.ContractParam.hash160(param.value);\n    case \"String\":\n      return sc.ContractParam.string(param.value);\n    case \"Integer\":\n      return sc.ContractParam.integer(param.value);\n    case \"Array\":\n      return sc.ContractParam.array(\n        ...param.value.map((i: any) => convertContractCallParam(i))\n      );\n    case \"ByteArray\":\n      return sc.ContractParam.byteArray(\n        u.hex2base64(u.str2hexstring(param.value))\n      );\n    default:\n      throw new Error(\"No support param\");\n  }\n};\n\nexport const base64ToAddress = (str: string) =>\n  wallet.getAddressFromScriptHash(base64ToHash160(str));\n\nexport const base64ToHash160 = (str: string) => u.reverseHex(u.base642hex(str));\n\nexport const base64ToString = (str: string) =>\n  u.HexString.fromBase64(str).toAscii().toString();\n\nexport const base64ToFixed8 = (str: string) => {\n  const no = u.BigInteger.fromNumber(str).toDecimal(8);\n  return no;\n};\n\nexport const toDecimal = (val: string): number => {\n  try {\n    const amount = parseFloat(\n      u.BigInteger.fromNumber(parseFloat(val)).toDecimal(8).toString()\n    );\n    return amount;\n  } catch (e) {\n    return 0;\n  }\n};\n\n// export const toNumber = () => {\n//\n// }\n\nexport const base64ToDate = (str: string) =>\n  moment.unix(parseFloat(str) / 1000).format(\"lll\");\n\nexport function truncateDecimal(v, p) {\n  const s = Math.pow(10, p || 0);\n  return Math.trunc(s * v) / s;\n}\n\nexport const balanceCheck = (\n  balances: IBalance[],\n  requiredAmount: number\n): boolean => {\n  let hasBalance = false;\n  balances.forEach((bal) => {\n    if (bal.symbol === \"GAS\") {\n      if (parseFloat(bal.amount) > requiredAmount) {\n        hasBalance = true;\n      }\n    }\n  });\n  return hasBalance;\n};\n","import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG,\n  TESTNET_CONFIG_2,\n  MAINNET_CONFIG_2,\n} from \"../consts\";\n// tslint:disable-next-line:no-submodule-imports\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport {\n  ApplicationLogJson,\n  GetRawTransactionResult,\n  // tslint:disable-next-line:no-submodule-imports\n} from \"@cityofzion/neon-core/lib/rpc/Query\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n  private static readonly READ_LOG_FREQUENCY = 6000;\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static getRawTx = async (txid: string, networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG_2;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG_2;\n        break;\n    }\n    const rpcClient = new rpc.RPCClient(config.url);\n    let rawTx: any;\n    do {\n      try {\n        rawTx = await rpcClient.getApplicationLog(txid);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!rawTx);\n\n    return rawTx;\n  };\n\n  static findNotificationFromTxId = async (\n    txId: string,\n    scriptHash: string,\n    eventName: string,\n    networkType: INetworkType\n  ) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(\n      txId,\n      networkType\n    );\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName\n    );\n  };\n\n  static getNotificationsFromTxId = async (\n    txId: string,\n    network: INetworkType\n  ) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[],\n    passFaultCheck?: boolean\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    const res = await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    if (!passFaultCheck && res.state === \"FAULT\") {\n      console.error(\"RPC read error\" + res);\n      throw new Error(res.exception ? res.exception : \"Network error\");\n    }\n    return res;\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","import { IFarmDepositRecord } from \"./interfaces\";\nimport { base64ToDate, base64ToFixed8, base64ToString } from \"../../../utils\";\n\nexport const parseDeposit = (\n  stackItem: any\n): IFarmDepositRecord | undefined => {\n  // TODO check if there no deposit\n  // if (!stackItem.value) return undefined;\n  return {\n    position: stackItem[0].value,\n    amount: stackItem[1].value,\n    lastClaimNo: stackItem[2].value,\n    createdAt: stackItem[3].value,\n  };\n};\n\nexport const parseClaimPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseClaim(stackItem[3].value),\n  };\n};\n\nexport const parseClaim = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      from: item.value[1].value,\n      end: item.value[2].value,\n      GAS: base64ToFixed8(item.value[3].value),\n      FTW: base64ToFixed8(item.value[4].value),\n      createdAt: base64ToDate(item.value[5].value),\n    };\n  });\n};\n\nexport const parseSnapshotPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSnapshotItem(stackItem[3].value),\n  };\n};\n\nconst parseSnapshotItem = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      totalPositionPool: item.value[1].value, // NEO amount\n      totalNeo: item.value[2].value, // NEO amount\n      totalGas: base64ToFixed8(item.value[3].value),\n      range: base64ToFixed8(item.value[4].value),\n      winPosition: item.value[5].value,\n      createdAt: base64ToDate(item.value[6].value),\n    };\n  });\n};\n","import { CONST } from \"../../../index\";\n\nexport const FTW_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"c1a56650f12420405c5b7e2634eb3779a0c3e396\",\n  [CONST.TESTNET]: \"c1a56650f12420405c5b7e2634eb3779a0c3e396\",\n  [CONST.MAINNET]: \"9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\",\n};\n\nexport const TTM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"\",\n  [CONST.TESTNET]: \"c0283310a5117b9d007941e8a0dc3dae9593f65c\",\n  [CONST.MAINNET]: \"c0283310a5117b9d007941e8a0dc3dae9593f65c\",\n};\n\nexport const NUDES_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"\",\n  [CONST.TESTNET]: \"340720c7107ef5721e44ed2ea8e314cce5c130fa\",\n  [CONST.MAINNET]: \"340720c7107ef5721e44ed2ea8e314cce5c130fa\",\n};\n\nexport const DOGE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"\",\n  [CONST.TESTNET]: \"cea6b1fac256c3c7aa704e599eb8a615b88e0c69\",\n  [CONST.MAINNET]: \"\",\n};\n\nexport const MOON_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"\",\n  [CONST.TESTNET]: \"15135cdb4e0130398ab95f830062bd316621230d\",\n  [CONST.MAINNET]: \"\",\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { DEFAULT_WITNESS_SCOPE, NEO_SCRIPT_HASH } from \"../../../consts\";\nimport { FARM_SCRIPT_HASH } from \"./consts\";\nimport { IFarmContractStatus } from \"./interfaces\";\nimport {\n  parseClaimPaginate,\n  parseDeposit,\n  parseSnapshotPaginate,\n} from \"./helpers\";\nimport { FTW_SCRIPT_HASH } from \"../nep17\";\nimport { base64ToFixed8 } from \"../../../utils\";\nimport { wallet as NeonWallet } from \"@cityofzion/neon-core\";\n\nexport class FarmContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FARM_SCRIPT_HASH[networkType];\n  }\n\n  deposit = async (\n    connectedWallet: IConnectedWallet,\n    amount: string,\n    position: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: amount,\n        },\n        {\n          type: \"Integer\",\n          value: parseFloat(position),\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  remove = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"removeFund\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  createSnapshot = async (\n    connectedWallet: IConnectedWallet\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"createSnapshot\",\n      scriptHash: this.contractHash,\n      args: [],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  claim = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  changePosition = async (\n    connectedWallet: IConnectedWallet,\n    position: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"changePosition\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Integer\",\n          value: position,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  getStatus = async (\n    connectedWallet?: IConnectedWallet\n  ): Promise<IFarmContractStatus> => {\n    const neoBalance = {\n      operation: \"balanceOf\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const ftwBalance = {\n      operation: \"balanceOf\",\n      scriptHash: FTW_SCRIPT_HASH[this.network],\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const timeLeft = {\n      operation: \"timeLeft\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const interval = {\n      operation: \"getSnapshotInterval\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const range = {\n      operation: \"getRange\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const vote = {\n      operation: \"getVote\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const snapshots = {\n      operation: \"getSnapshots\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n\n    const scripts = [\n      neoBalance,\n      ftwBalance,\n      timeLeft,\n      interval,\n      range,\n      vote,\n      snapshots,\n    ];\n\n    if (connectedWallet) {\n      const deposit = {\n        operation: \"getDeposit\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            type: \"Address\",\n            value: connectedWallet.account.address,\n          },\n        ],\n      };\n      const claims = {\n        operation: \"getClaims\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            // @ts-ignore\n            type: \"Address\",\n            // @ts-ignore\n            value: connectedWallet.account.address,\n          },\n          {\n            type: \"Integer\",\n            value: 1,\n          },\n        ],\n      };\n      scripts.push(deposit);\n      scripts.push(claims);\n    }\n    const res = await Network.read(this.network, scripts);\n    return {\n      neoBalance: res.stack[0].value as string,\n      ftwBalance: base64ToFixed8(res.stack[1].value as string),\n      timeLeft: res.stack[2].value as string,\n      interval: res.stack[3].value as string,\n      range: res.stack[4].value as string,\n      vote: res.stack[5].value as string,\n      snapshots: parseSnapshotPaginate(res.stack[6].value),\n      deposit:\n        connectedWallet && res.stack[7].value\n          ? parseDeposit(res.stack[7].value)\n          : undefined,\n      claims:\n        connectedWallet && res.stack[8].value\n          ? parseClaimPaginate(res.stack[8].value)\n          : undefined,\n    };\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const RUNE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.TESTNET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.MAINNET]: \"bebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\",\n};\n\nexport const RUNE_PRICE = {\n  [CONST.PRIVATENET]: \"10\",\n  [CONST.TESTNET]: \"0.1\", // Testnet mint is cheaper than mainnet\n  [CONST.MAINNET]: \"10\",\n};\n\nexport const RUNE_PHASE_FILTER = [\n  \"All\",\n  \"Fire\",\n  \"Water\",\n  \"Wood\",\n  \"Earth\",\n  \"Metal\",\n  \"Dark\",\n  \"Light\",\n];\n","import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { sc, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { DEFAULT_WITNESS_SCOPE, GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { RUNE_SCRIPT_HASH, RUNE_PRICE } from \"./consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { IRuneMeta } from \"./interfaces\";\nimport { parseProperties } from \"./helpers\";\n\nexport class NFTContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = RUNE_SCRIPT_HASH[networkType];\n  }\n\n  mint = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(\n            RUNE_PRICE[this.network],\n            8\n          ).toString(),\n        },\n        {\n          type: \"String\",\n          value: \"1\",\n        },\n      ],\n\t    signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      \"0.01\"\n    );\n  };\n\n  withdrawFund = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"withdrawFund\",\n      scriptHash: this.contractHash,\n      args: [],\n\t    signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  getTotalSupplyScript = (): sc.ContractCallJson => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"totalSupply\",\n      args: [],\n    };\n  };\n\n  getPropertiesScript = (tokenId: string) => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n  };\n\n  getProperties = async (tokenId: string): Promise<IRuneMeta> => {\n    const script = this.getPropertiesScript(tokenId);\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseProperties(res.stack);\n  };\n\n  getTokensOfScript = (ownerAddress: string) => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = this.getTokensOfScript(ownerAddress);\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      const meta = await this.getProperties(tokenId);\n      // @ts-ignore\n      metaList.push({ tokenId, ...meta });\n    }\n    return metaList;\n  };\n\n  getTokens = async (): Promise<string[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokens\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].iterator.map((item) => {\n      return u.HexString.fromBase64(item.value as string).toAscii();\n    });\n  };\n}\nexport { RUNE_SCRIPT_HASH } from \"./consts\";\n","import { CONST } from \"../../../index\";\nimport {\n  DOGE_SCRIPT_HASH,\n  FTW_SCRIPT_HASH,\n  MOON_SCRIPT_HASH,\n  NUDES_SCRIPT_HASH,\n  TTM_SCRIPT_HASH,\n} from \"../nep17\";\nimport { GAS_SCRIPT_HASH, MAINNET, PRIVATENET, TESTNET } from \"../../../consts\";\nimport { INetworkType } from \"../../../network\";\n\nexport const SWAP_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"aeac82f7830f4083b98089baa51060e621febb10\",\n  // [CONST.TESTNET]: \"428783fccfb6b194f7d33cd421e9f56f48efbde5\", // With WMOON\n  // [CONST.TESTNET]: \"9773f6d3faa8d016856bddcb39777bc8d64dec5b\",\n  [CONST.TESTNET]: \"50ae712ccb2760ad3f2ec3edebb25dbacc627fe2\",\n  [CONST.MAINNET]: \"\",\n};\n\nexport const ASSET_LIST = {\n  [PRIVATENET]: {\n    [GAS_SCRIPT_HASH]: {\n      contractHash: GAS_SCRIPT_HASH,\n      symbol: \"GAS\",\n      logo: \"/symbols/neo.svg\",\n    },\n    [FTW_SCRIPT_HASH[PRIVATENET]]: {\n      contractHash: FTW_SCRIPT_HASH[PRIVATENET],\n      symbol: \"FTW\",\n      logo: \"/symbols/ftw.svg\",\n    },\n    [NUDES_SCRIPT_HASH[PRIVATENET]]: {\n      contractHash: NUDES_SCRIPT_HASH[PRIVATENET],\n      symbol: \"NUDES\",\n      logo: \"/symbols/nudes.png\",\n    },\n  },\n  [TESTNET]: {\n    [GAS_SCRIPT_HASH]: {\n      contractHash: GAS_SCRIPT_HASH,\n      symbol: \"GAS\",\n      logo: \"/symbols/neo.svg\",\n    },\n    [FTW_SCRIPT_HASH[TESTNET]]: {\n      contractHash: FTW_SCRIPT_HASH[TESTNET],\n      symbol: \"FTW\",\n      logo: \"/symbols/ftw.svg\",\n    },\n    \"7e7a84abff782e9f0c60c2fe1cd6b550a32d5cee\": {\n      contractHash: \"7e7a84abff782e9f0c60c2fe1cd6b550a32d5cee\",\n      symbol: \"FRANK\",\n      logo: \"/symbols/frank.png\",\n    },\n    \"5afb6804ee3598a58f8a0994b1df99d8be43a313\": {\n      contractHash: \"5afb6804ee3598a58f8a0994b1df99d8be43a313\",\n      symbol: \"MAXI\",\n      logo: \"/symbols/maxi.png\",\n    },\n    [NUDES_SCRIPT_HASH[TESTNET]]: {\n      contractHash: NUDES_SCRIPT_HASH[TESTNET],\n      symbol: \"NUDES\",\n      logo: \"/symbols/nudes.png\",\n    },\n    [TTM_SCRIPT_HASH[TESTNET]]: {\n      contractHash: TTM_SCRIPT_HASH[TESTNET],\n      symbol: \"TTM\",\n      logo: \"/symbols/ttm.png\",\n    },\n    \"37fc2612dfe80a20b97470e57de60ffe81a8a0c0\": {\n      contractHash: \"37fc2612dfe80a20b97470e57de60ffe81a8a0c0\",\n      symbol: \"NPRZ\",\n      logo: \"/symbols/prezel.png\",\n    },\n  },\n  [MAINNET]: {\n    [GAS_SCRIPT_HASH]: {\n      contractHash: GAS_SCRIPT_HASH,\n      symbol: \"GAS\",\n      logo: \"/symbols/neo.svg\",\n    },\n    [FTW_SCRIPT_HASH[MAINNET]]: {\n      contractHash: FTW_SCRIPT_HASH[MAINNET],\n      symbol: \"FTW\",\n      logo: \"/symbols/ftw.svg\",\n    },\n    [NUDES_SCRIPT_HASH[MAINNET]]: {\n      contractHash: NUDES_SCRIPT_HASH[MAINNET],\n      symbol: \"NUDES\",\n      logo: \"/symbols/nudes.png\",\n    },\n    [TTM_SCRIPT_HASH[MAINNET]]: {\n      contractHash: TTM_SCRIPT_HASH[MAINNET],\n      symbol: \"TTM\",\n      logo: \"/symbols/ttm.png\",\n    },\n    \"461c3689e56a1d0c72ffeac3584af481d7642e7f\": {\n      contractHash: \"461c3689e56a1d0c72ffeac3584af481d7642e7f\",\n      symbol: \"MNGA\",\n      logo: \"/symbols/mnga.png\",\n    },\n    \"50b41a55c1d746eec2b86b8f0405fb49fbb96492\": {\n      contractHash: \"50b41a55c1d746eec2b86b8f0405fb49fbb96492\",\n      symbol: \"TEDS\",\n      logo: \"/symbols/ted.jpg\",\n    },\n  },\n};\n\nexport const PAIR_LIST = {\n  [PRIVATENET]: [\n    {\n      label: \"FTW - NUDES\",\n      value: {\n        tokenA: FTW_SCRIPT_HASH[PRIVATENET],\n        tokenB: NUDES_SCRIPT_HASH[PRIVATENET],\n      },\n    },\n  ],\n  [TESTNET]: [\n    {\n      label: \"FTW - NUDES\",\n      value: {\n        tokenA: FTW_SCRIPT_HASH[TESTNET],\n        tokenB: NUDES_SCRIPT_HASH[TESTNET],\n      },\n    },\n  ],\n  [MAINNET]: [],\n};\n\nexport const ASSETS = (network: INetworkType) => {\n  const keys = Object.keys(ASSET_LIST[network]);\n  return keys.map((key) => {\n    return ASSET_LIST[network][key];\n  });\n};\n","import { CONST } from \"../../../index\";\n\nexport const BANK_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.TESTNET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.MAINNET]: \"\",\n};\n","import { u } from \"@cityofzion/neon-core\";\nimport {\n  base64ToAddress,\n  base64ToDate,\n  base64ToFixed8,\n  base64ToHash160,\n  base64ToString,\n  toDecimal,\n} from \"../../../utils\";\nimport { IPair } from \"./interfaces\";\nimport moment from \"moment\";\n\nexport const getEstimate = (\n  amount: string,\n  reserveA: number,\n  reserveB: number\n): number => {\n  const fixed8TokenAmount = u.BigInteger.fromDecimal(amount, 8).toString();\n  // let keys = Object.keys(pairInfo);\n  // keys = keys.filter((k) => k !== token);\n  // const reservedA = pairInfo[token];\n  // const reservedB = pairInfo[keys[0]];\n  let estimated = (parseFloat(fixed8TokenAmount) * reserveB) / reserveA;\n  estimated = Math.floor(estimated);\n  return toDecimal(estimated.toString());\n};\n\nexport const getUserShare = (totalShares, userShare, poolA, poolB) => {\n  // totalShares = parseFloat(totalShares);\n  // userShare = parseFloat(userShare);\n  // poolA = parseFloat(poolA);\n  // poolB = parseFloat(poolB);\n  return {\n    amountA: (poolA * userShare) / totalShares,\n    amountB: (poolB * userShare) / totalShares,\n  };\n};\n\nexport const parseUserStake = (stackItem) => {\n  return {\n    tokenA: base64ToHash160(stackItem.value[0].value as string),\n    tokenB: base64ToHash160(stackItem.value[1].value as string),\n    amountA: toDecimal(stackItem.value[2].value),\n    amountB: toDecimal(stackItem.value[3].value),\n  };\n};\n\nexport const parsePair = (stackItem): IPair => {\n  return {\n    tokenA: base64ToHash160(stackItem.value[0].value as string),\n    tokenB: base64ToHash160(stackItem.value[1].value as string),\n    amountA: toDecimal(stackItem.value[2].value),\n    amountB: toDecimal(stackItem.value[3].value),\n    totalShare: toDecimal(stackItem.value[4].value),\n  };\n};\n\nexport const parseSwapPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSwap(stackItem[3].value),\n  };\n};\n\nconst parseSwap = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      account: base64ToAddress(item.value[0].value),\n      tokenIn: base64ToHash160(item.value[1].value),\n      tokenOut: base64ToHash160(item.value[2].value), // NEO amount\n      tokenInAmount: toDecimal(item.value[3].value), // NEO amount\n      tokenOutAmount: toDecimal(item.value[4].value),\n    };\n  });\n};\n\nexport const parseLP = (stackItem) => {\n  return {\n    name: base64ToString(stackItem[1].value),\n    owner: base64ToAddress(stackItem[0].value),\n    amount: stackItem[3].value, // NEO amount\n    lockUntil:\n      stackItem[4].value === \"0\" ? \"None\" : base64ToDate(stackItem[4].value),\n  };\n};\n\nexport const defaultDeadLine = () =>\n  moment().utc().add(\"10\", \"minutes\").valueOf();\n","import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  stackItem.value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value;\n    switch (key) {\n      case \"owner\":\n        value = base64ToAddress(item.value.value);\n        break;\n      case \"attributes\":\n        value = parseProperties(item.value);\n        break;\n      default:\n        if (item.value.type === \"Integer\" || item.value.type === \"Boolean\") {\n          value = item.value.value;\n        } else {\n          value = base64ToString(item.value.value);\n        }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { SWAP_SCRIPT_HASH } from \"./consts\";\nimport { base64ToHash160, base64ToString, toDecimal } from \"../../../utils\";\nimport { tx, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport {\n  defaultDeadLine,\n  parsePair,\n  parseSwapPaginate,\n  parseUserStake,\n  parseLP,\n} from \"./helpers\";\nimport { DEFAULT_WITNESS_SCOPE } from \"../../../consts\";\nimport { IPairInfo } from \"./interfaces\";\nimport { parseProperties } from \"../../ttm/nft/helpers\";\n\nexport class SwapContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = SWAP_SCRIPT_HASH[networkType];\n  }\n\n  provide = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    amountA: string,\n    tokenB: string,\n    amountB: string,\n    lockUntil: number\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    // const defaultDeadLine = moment().utc().add(\"10\", \"minutes\").valueOf();\n    const invokeScript = {\n      operation: \"addLiquidity\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountA, 8).toString(),\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountB, 8).toString(),\n        },\n        {\n          type: \"Integer\",\n          value: defaultDeadLine(),\n        },\n        {\n          type: \"Integer\",\n          value: lockUntil,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, tokenA, tokenB],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  remove = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"removeLiquidity\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n        {\n          type: \"Integer\",\n          value: defaultDeadLine(),\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  swap = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    amountA: string,\n    tokenB: string,\n    amountB: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"swap\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountA, 8).toString(),\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountB, 8).toString(),\n        },\n        {\n          type: \"Integer\",\n          value: defaultDeadLine(),\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, tokenA, tokenB],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  getReserve = async (\n    tokenA: string,\n    tokenB: string,\n    connectedWallet?: IConnectedWallet\n  ): Promise<IPairInfo> => {\n    const scripts: any = [];\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getReserve\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    scripts.push(script);\n    if (connectedWallet) {\n      const script1 = {\n        scriptHash: tokenA,\n        operation: \"balanceOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      };\n      const script2 = {\n        scriptHash: tokenB,\n        operation: \"balanceOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      };\n      scripts.push(script1);\n      scripts.push(script2);\n    }\n    const res = await Network.read(this.network, scripts, true);\n    const pair = parsePair(res.stack[0]);\n    const obj = {\n      reserve: pair,\n      pair: {\n        [pair.tokenA]: pair.amountA,\n        [pair.tokenB]: pair.amountB,\n      },\n      // [pair.tokenA]: pair.amountA,\n      // [pair.tokenB]: pair.amountB,\n      balances: {\n        [tokenA]: 0,\n        [tokenB]: 0,\n      },\n    };\n    if (connectedWallet) {\n      obj.balances[tokenA] = toDecimal(res.stack[1].value as string);\n      obj.balances[tokenB] = toDecimal(res.stack[2].value as string);\n    }\n    return obj;\n  };\n\n  getPairs = async () => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPairs\",\n      args: [],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      // @ts-ignore\n      return res.stack[0].iterator.map((item) => {\n        const tokenA = base64ToHash160(item.value[0].value as string);\n        const tokenB = base64ToHash160(item.value[1].value as string);\n        const amountA = item.value[2].value;\n        const amountB = item.value[3].value;\n        return {\n          tokenA,\n          tokenB,\n          amountA: toDecimal(amountA),\n          amountB: toDecimal(amountB),\n        };\n      });\n    } catch (e) {\n      return [];\n    }\n  };\n\n  getEstimate = async (tokenA, tokenB, swapToken, amount) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getEstimate\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n        { type: \"Hash160\", value: swapToken },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amount, 8).toString(),\n        },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      return toDecimal(res.stack[0].value as string);\n    } catch (e) {\n      return undefined;\n    }\n  };\n  //\n  // getUserStake = async (\n  //   connectedWallet: IConnectedWallet,\n  //   tokenA: string,\n  //   tokenB: string\n  // ) => {\n  //   const script = {\n  //     scriptHash: this.contractHash,\n  //     operation: \"getUserStake\",\n  //     args: [\n  //       { type: \"Address\", value: connectedWallet.account.address },\n  //       { type: \"Hash160\", value: tokenA },\n  //       { type: \"Hash160\", value: tokenB },\n  //     ],\n  //   };\n  //   const script1 = {\n  //     scriptHash: this.contractHash,\n  //     operation: \"getPair\",\n  //     args: [\n  //       { type: \"Hash160\", value: tokenA },\n  //       { type: \"Hash160\", value: tokenB },\n  //     ],\n  //   };\n  //   try {\n  //     const res = await Network.read(this.network, [script, script1], true);\n  //     return {\n  //       stake: parseUserStake(res.stack[0]),\n  //       pair: parsePair(res.stack[1]),\n  //     };\n  //   } catch (e) {\n  //     return undefined;\n  //   }\n  // };\n\n  // getClaimAble = async (\n  //   connectedWallet: IConnectedWallet,\n  //   tokenA: string,\n  //   tokenB: string\n  // ) => {\n  //   const script = {\n  //     scriptHash: this.contractHash,\n  //     operation: \"getClaimableFee\",\n  //     args: [\n  //       { type: \"Hash160\", value: tokenA },\n  //       { type: \"Hash160\", value: tokenB },\n  //       { type: \"Address\", value: connectedWallet.account.address },\n  //     ],\n  //   };\n  //   try {\n  //     const res = await Network.read(this.network, [script], true);\n  //     return parseUserStake(res.stack[0]);\n  //   } catch (e) {\n  //     return undefined;\n  //   }\n  // };\n\n  getSwapHistory = async (tokenA: string, tokenB: string, page: string) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getSwaps\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n        { type: \"Integer\", value: page },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script]);\n      return parseSwapPaginate(res.stack[0].value);\n    } catch (e) {\n      return undefined;\n    }\n  };\n\n  getLPList = async (tokenA: string, tokenB: string) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getLPTokens\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script]);\n      // @ts-ignore\n      return res.stack[0].iterator.map((item) => parseLP(item.value));\n    } catch (e) {\n      console.error(e);\n      return [];\n    }\n  };\n\n  getLPListWithId = async (tokenA: string, tokenB: string) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getLPTokensWithTokenId\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script]);\n      // @ts-ignore\n      return res.stack[0].iterator.map((item) => {\n        return {\n          tokenId: u.HexString.fromBase64(item.value[0].value).toAscii(),\n          ...parseLP(item.value[1].value),\n        };\n      });\n    } catch (e) {\n      console.error(e);\n      return [];\n    }\n  };\n\n  getContractHashes = async (tokenA: string, tokenB: string): Promise<any> => {\n    const script1 = {\n      scriptHash: tokenA,\n      operation: \"symbol\",\n      args: [],\n    };\n    const script2 = {\n      scriptHash: tokenA,\n      operation: \"decimals\",\n      args: [],\n    };\n    const script3 = {\n      scriptHash: tokenB,\n      operation: \"symbol\",\n      args: [],\n    };\n    const script4 = {\n      scriptHash: tokenB,\n      operation: \"decimals\",\n      args: [],\n    };\n    const script5 = {\n      scriptHash: this.contractHash,\n      operation: \"getReserve\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    const res = await Network.read(this.network, [\n      script1,\n      script2,\n      script3,\n      script4,\n      script5,\n    ]);\n    return {\n      tokenA: {\n        symbol: base64ToString(res.stack[0].value as string),\n        decimals: res.stack[1].value,\n      },\n      tokenB: {\n        symbol: base64ToString(res.stack[2].value as string),\n        decimals: res.stack[3].value,\n      },\n      reserve: parsePair(res.stack[4]),\n    };\n  };\n\n  getContractSymbol = async (tokenA: string): Promise<any> => {\n    const script1 = {\n      scriptHash: tokenA,\n      operation: \"symbol\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script1]);\n    return base64ToString(res.stack[0].value as string);\n  };\n\n  getProperties = async (tokenId: string): Promise<object | null> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n\n    const res = await Network.read(this.network, [script], true);\n\n    if (res.state !== \"FAULT\") {\n      return parseProperties(res.stack[0]);\n    } else {\n      console.error(res.exception);\n      return null;\n    }\n    // return res.stack[0] ? parseProperties(res.stack[0]) : false;\n  };\n\n  getLPTokens = async (connectedWallet: IConnectedWallet) => {\n    const scripts = [\n      {\n        scriptHash: this.contractHash,\n        operation: \"tokensOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      },\n    ];\n    const tokens: object[] = [];\n\n    const res = await Network.read(this.network, scripts, true);\n\n    if (res.state !== \"FAULT\") {\n      // @ts-ignore\n      for await (const item of res.stack[0].iterator) {\n        const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n        // if(tokenId)\n        const properties = await this.getProperties(tokenId);\n        if (properties) {\n          tokens.push({ tokenId, ...properties });\n        }\n      }\n    } else {\n      console.error(res.exception);\n    }\n    return tokens;\n  };\n}\n","import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\n// tslint:disable-next-line:no-submodule-imports\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpcClient = Network.getRPCClient(network);\n    const res = await rpcClient.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      let amount;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n        amount = u.BigInteger.fromNumber(item.amount).toDecimal(8).toString();\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n        amount = item.amount;\n      }\n      balances.push({\n        contract: item.assethash,\n        amount,\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    },\n    network: INetworkType\n  ) {\n    const rpcClient = Network.getRPCClient(network);\n    const version: any = await rpcClient.getVersion();\n    const txObj = await DevWallet.build(rpcClient, invokeScript);\n    txObj.sign(DevWallet.account, version.protocol.network);\n    const txid = await rpcClient.sendRawTransaction(txObj);\n    // // tslint:disable-next-line:no-console\n    //   JSON.stringify(\n    //     {\n    //       RPC: rpc,\n    //       Transaction: txObj,\n    //       Network: version,\n    //       \"Network Fee\": txObj.networkFee.toDecimal(8).toString(),\n    //       \"System Fee\": txObj.systemFee.toDecimal(8).toString(),\n    //     },\n    //     null,\n    //     4\n    //   )\n    // );\n    return {\n      txid,\n      nodeUrl: rpcClient.url,\n    };\n  }\n\n  static createScript = (invokeScript: sc.ContractCallJson) => {\n    return sc.createScript({\n      scriptHash: invokeScript.scriptHash,\n      operation: invokeScript.operation,\n      args: invokeScript.args\n        ? invokeScript.args.map((param: any) => convertContractCallParam(param))\n        : [],\n    });\n  };\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    }\n    // cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n\n    const script = this.createScript(invokeScript);\n\n    // if (cosignerAddress) {\n    //   signers.push({\n    //     account: wallet.getScriptHashFromAddress(cosignerAddress),\n    //     scopes: tx.WitnessScope.Global,\n    //   });\n    // }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers: invokeScript.signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    if (invokeScript.extraSystemFee) {\n      const fee = u.BigInteger.fromDecimal(\n        invokeScript.extraSystemFee,\n        8\n      ).toString();\n      transaction.systemFee = systemFee.add(parseFloat(fee));\n    }\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","import neo3Dapi from \"neo3-dapi\";\nimport { ITransaction, IWalletType } from \"./interfaces\";\nimport {\n  DEV,\n  MAINNET,\n  NEO_LINE,\n  O3,\n  ONE_GATE,\n  TESTNET,\n  WALLET_LIST,\n} from \"../consts\";\nimport { NeoDapi } from \"@neongd/neo-dapi\";\nimport { DevWallet } from \"./dev-wallet\";\nimport { u, wallet } from \"@cityofzion/neon-core\";\nimport { INetworkType, Network } from \"../network\";\nimport { LocalStorage } from \"../local-storage\";\nimport moment from \"moment\";\n\nexport class WalletAPI {\n  walletType: IWalletType;\n\n  constructor(walletType: IWalletType) {\n    this.walletType = walletType;\n  }\n\n  static list = WALLET_LIST;\n\n  private O3Wallet = async () => {\n    const instance = neo3Dapi;\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const network = await instance.getNetworks();\n    const balances = await instance.getBalance(\n      {\n        params: {\n          address: account.address,\n          contracts: [],\n        },\n      },\n      network.defaultNetwork\n    );\n    // TODO: Need to some sort of validation for balances in case wallet doesn't have any address?\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private OneGate = async () => {\n    // @ts-ignore\n    const instance = new NeoDapi(window.OneGate);\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const network = await instance.getNetworks();\n    network.defaultNetwork =\n      network.defaultNetwork === \"MainNet\" ? MAINNET : TESTNET;\n    const balances = await instance.getNep17Balances({\n      address: account.address,\n      assetHashes: [],\n    });\n    // TODO: Need to some sort of validation for balances in case wallet doesn't have any address?\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances,\n    };\n  };\n\n  private NeoLine = async () => {\n    // @ts-ignore\n    const instance = new NEOLineN3.Init();\n    // @ts-ignore\n    // NEOLineN3 doesn't have getNetworks function\n    const instance2 = new NEOLine.Init();\n    const network = await instance2.getNetworks();\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance({\n      params: {\n        address: account.address,\n        contracts: [],\n      },\n    });\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private Dev = async (defaultNetwork: INetworkType) => {\n    const instance = DevWallet;\n    const network = await instance.getNetworks(defaultNetwork);\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance(defaultNetwork);\n    return { instance, provider, account, network, balances };\n  };\n\n  /**\n   * TODO: Remove dev wallet when 3rd party has privatenet support\n   * @param defaultNetwork\n   */\n  init = async (defaultNetwork: INetworkType): Promise<any> => {\n    let _instance;\n    try {\n      switch (this.walletType) {\n        case O3:\n          _instance = await this.O3Wallet();\n          break;\n        case NEO_LINE:\n          _instance = await this.NeoLine();\n          break;\n        case ONE_GATE:\n          _instance = await this.OneGate();\n          break;\n        case DEV:\n          _instance = await this.Dev(defaultNetwork);\n          break;\n      }\n      return {\n        key: this.walletType,\n        ..._instance,\n      };\n    } catch (e: any) {\n      if (this.walletType === ONE_GATE) {\n        throw new Error(\"OneGate wallet only supports in OneGate web browser.\");\n      } else {\n        throw new Error(e.description ? e.description : e.message);\n      }\n    }\n  };\n\n  /* Control signing and send transaction. TODO:Need to improve type hardcoding later */\n  invoke = async (\n    currentNetwork: INetworkType,\n    invokeScript: any,\n    extraSystemFee?: string,\n    testInvoke?: boolean\n  ): Promise<string> => {\n    const { instance, network } = await this.init(currentNetwork);\n    if (network.defaultNetwork !== currentNetwork) {\n      throw new Error(\n        \"Your wallet's network doesn't match with the app network setting.\"\n      );\n    }\n\n    // Do test invoke if required.\n    if (testInvoke) {\n      const rpcClient = Network.getRPCClient(currentNetwork);\n      const transaction = await DevWallet.build(rpcClient, invokeScript);\n      const invokeFunctionResponse = await rpcClient.invokeScript(\n        transaction.script,\n        transaction.signers\n      );\n      if (invokeFunctionResponse.state === \"FAULT\") {\n        throw new Error(invokeFunctionResponse.exception as string);\n      }\n    }\n\n    // Hard coding for OG wallet\n    if (this.walletType === ONE_GATE) {\n      invokeScript.args = invokeScript.args.map((param: any) => {\n        if (param.type === \"Address\") {\n          return {\n            type: \"Hash160\",\n            value: wallet.getScriptHashFromAddress(param.value),\n          };\n        } else {\n          return param;\n        }\n      });\n      if (extraSystemFee) {\n        invokeScript.extraSystemFee = u.BigInteger.fromDecimal(\n          extraSystemFee,\n          8\n        ).toString();\n      }\n    } else {\n      if (extraSystemFee) {\n        invokeScript.extraSystemFee = extraSystemFee;\n      }\n    }\n\n    try {\n      const res = await instance.invoke(invokeScript, currentNetwork);\n      const submittedTx: ITransaction = {\n        network,\n        wallet: this.walletType,\n        txid: res.txid,\n        contractHash: invokeScript.scriptHash,\n        method: invokeScript.operation,\n        args: invokeScript.args,\n        createdAt: moment().format(\"lll\"),\n      };\n      LocalStorage.addTransaction(submittedTx);\n      return res.txid;\n    } catch (e: any) {\n      // TODO: Need to improve dev wallet error handling as dapi standard.\n      if (e.description) {\n        throw new Error(e.description);\n      }\n      throw e;\n    }\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const FARM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\",\n  [CONST.TESTNET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\", // 11/26\n  [CONST.MAINNET]: \"\",\n};\n","import store from \"store2\";\nimport { IConnectedWallet, ITransaction } from \"../wallet/interfaces\";\nimport { FARM_SCRIPT_HASH } from \"../contracts/ftw/farm/consts\";\nimport { RUNE_SCRIPT_HASH } from \"../contracts\";\nimport { MAINNET } from \"../consts\";\nimport { INetworkType } from \"../network\";\n\nconst CONNECTED_WALLET = \"CONNECTED_WALLET\";\nconst TRANSACTIONS = \"TRANSACTIONS\";\nconst NETWORK = \"NETWORK\";\nconst SWAP_TOKEN_A = \"SWAP_TOKEN_A\"\nconst SWAP_TOKEN_B = \"SWAP_TOKEN_B\"\n\nexport class LocalStorage {\n  public static initStorage = (network: string): ITransaction[] => {\n    const supportContracts = [\n      FARM_SCRIPT_HASH[network],\n      RUNE_SCRIPT_HASH[network],\n    ];\n    const transactions = LocalStorage.getTransactions();\n    const validatedTx: ITransaction[] = [];\n    transactions.forEach((tx) => {\n      if (supportContracts.includes(tx.contractHash)) {\n        validatedTx.push(tx);\n      } else {\n        LocalStorage.removeTransaction(tx);\n      }\n    });\n    return validatedTx;\n  };\n\n  public static getNetwork = () => {\n    return store.get(NETWORK) ? store.get(NETWORK) : MAINNET;\n  };\n\n  public static setNetwork = (network: INetworkType) => {\n    return store.set(NETWORK, network);\n  };\n\n  public static getWallet = (): IConnectedWallet | undefined =>\n    validateConnectedWallet(store.get(CONNECTED_WALLET));\n\n  public static setWallet(connectedWallet: IConnectedWallet) {\n    const validated = validateConnectedWallet(connectedWallet);\n    store.set(CONNECTED_WALLET, validated);\n  }\n\n  public static removeWallet() {\n    store.remove(CONNECTED_WALLET);\n  }\n\n  public static getTransactions = (): ITransaction[] =>\n    store.has(TRANSACTIONS) ? store.get(TRANSACTIONS) : [];\n\n  public static addTransaction(tx: ITransaction) {\n    if (store.has(TRANSACTIONS)) {\n      store.add(TRANSACTIONS, tx);\n    } else {\n      store.set(TRANSACTIONS, [tx]);\n    }\n    window.dispatchEvent(new Event(\"transactions\"));\n  }\n\n  public static updatePendingTransaction(txId: string) {\n    let transactions = store.get(TRANSACTIONS);\n    transactions = transactions.map((tx) => {\n      if (tx.txid === txId) {\n        tx.status = \"SUBMITTED\";\n      }\n      return tx;\n    });\n    store.set(TRANSACTIONS, transactions);\n  }\n\n  public static removeTransaction = (tx: ITransaction) =>\n    store.remove(TRANSACTIONS, tx);\n\n  public static clearTransaction = () => store.set(TRANSACTIONS, []);\n\n  static setSwapTokenA = (val: string) => store.set(SWAP_TOKEN_A, val);\n  static setSwapTokenB = (val: string) => store.set(SWAP_TOKEN_B, val);\n  static getSwapTokenA = () => store.get(SWAP_TOKEN_A);\n  static getSwapTokenB = () => store.get(SWAP_TOKEN_B);\n}\n\nconst validateConnectedWallet = (connectedWallet?: IConnectedWallet) => {\n  if (\n    !connectedWallet ||\n    !connectedWallet.account ||\n    !connectedWallet.provider ||\n    !connectedWallet.network\n  ) {\n    return undefined;\n  }\n  return connectedWallet;\n};\n//\n// const validateTransaction = (connectedWallet?: IConnectedWallet) => {\n//   if (\n//     !connectedWallet ||\n//     !connectedWallet.account ||\n//     !connectedWallet.provider ||\n//     !connectedWallet.network\n//   ) {\n//     return undefined;\n//   }\n//   return connectedWallet;\n// };\n","import { ContextOptions, IWalletStates } from \"./interfaces\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { IConnectedWallet, IWalletType } from \"../neo/wallet/interfaces\";\nimport { LocalStorage } from \"../neo/local-storage\";\nimport { sc } from \"@cityofzion/neon-core\";\nimport { WalletAPI } from \"../neo/wallet\";\nimport toast from \"react-hot-toast\";\nimport { INetworkType } from \"../neo/network\";\nimport { TESTNET } from \"../neo/consts\";\n\n// tslint:disable-next-line:no-object-literal-type-assertion\nexport const WalletContext = createContext({} as IWalletStates);\nexport const WalletContextProvider = (props: {\n  options: ContextOptions;\n  children: any;\n}) => {\n  let initNetwork = LocalStorage.getNetwork();\n  if (window.location.href.indexOf(\"network=testnet\") !== -1) {\n    initNetwork = TESTNET;\n    LocalStorage.setNetwork(TESTNET);\n  }\n  const [network, setNetwork] = useState(initNetwork);\n  const [totalTxSubmit, setTotalTxSubmit] = useState(0);\n\n  const [isWalletModalActive, setWalletModalActive] = useState(false);\n\n  const [connectedWallet, setConnectedWallet] = useState<\n    IConnectedWallet | undefined\n  >(props.options.useLocalStorage ? LocalStorage.getWallet() : undefined);\n\n  const [invokeScript, setInvokeScript] = useState<\n    sc.ContractCallJson | undefined\n  >();\n\n  // const [transactions, setTransactions] = useState(\n  //   props.options.useLocalStorage ? LocalStorage.initStorage(network) : []\n  // );\n\n  const [pendingTransactions, setPendingTransactions] = useState<string[]>([]);\n\n  const openWalletModal = () => setWalletModalActive(true);\n\n  const closeWalletModal = () => setWalletModalActive(false);\n\n  const connectWallet = async (walletType: IWalletType) => {\n    try {\n      const res = await new WalletAPI(walletType).init(network);\n      setConnectedWallet(res);\n      toast.success(\"Wallet connected\");\n      if (props.options.useLocalStorage) {\n        LocalStorage.setWallet(res);\n      }\n      setWalletModalActive(false);\n    } catch (e: any) {\n      toast.error(e.message);\n    }\n  };\n\n  const disConnectWallet = () => {\n    LocalStorage.removeWallet();\n    setConnectedWallet(undefined);\n    toast.success(\"Wallet disconnected\");\n  };\n\n  const doInvoke = (args: sc.ContractCallJson) => {\n    if (isWalletModalActive) setWalletModalActive(false);\n    setInvokeScript(args);\n  };\n\n  const closeInvoke = () => setInvokeScript(undefined);\n\n  const addPendingTransaction = (txid: string) => {\n    setPendingTransactions([...pendingTransactions, txid]);\n  };\n\n  const switchNetwork = (val: INetworkType) => {\n    setNetwork(val);\n    LocalStorage.setNetwork(val);\n  };\n\n  const removePendingTransaction = (txid: string) => {\n    setPendingTransactions(pendingTransactions.filter((i) => i !== txid));\n  };\n\n  const increaseTotalTxSubmit = () => {\n    setTotalTxSubmit(totalTxSubmit + 1);\n  };\n\n  const contextValue: IWalletStates = {\n    useDevWallet: props.options.useDevWallet,\n    network,\n    invokeScript,\n    list: WalletAPI.list,\n    connectedWallet,\n    isWalletModalActive,\n    openWalletModal,\n    closeWalletModal,\n    connectWallet,\n    disConnectWallet,\n    doInvoke,\n    closeInvoke,\n    addPendingTransaction,\n    removePendingTransaction,\n    pendingTransactions,\n    switchNetwork,\n    totalTxSubmit,\n    increaseTotalTxSubmit,\n  };\n\n  return (\n    <WalletContext.Provider value={contextValue}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n};\nexport const useWallet = () => useContext(WalletContext);\n","import { MAINNET, PRIVATENET, TESTNET } from \"../packages/neo/consts\";\n\nexport const HOME_PATH = \"/\";\nexport const MIGRATION_PATH = \"/migration\";\nexport const GASFI_PATH = \"/gas\";\nexport const GALLERY_PATH = \"/NFT/gallery\";\nexport const TOURNAMENT_PATH = \"/arena\";\nexport const SMITH_PATH = \"/smith\";\nexport const SMITH_PATH_NEP11 = \"/smith/nep11\";\nexport const COLLECTION_PATH = \"/NFT/collection\";\n// export const SWAP_PATH = \"/swap\";\n// export const SWAP_PATH_LIQUIDITY = \"/swap/liquidity\";\nexport const SWAP_PATH = \"/swap\";\nexport const SWAP_PATH_HISTORY = \"/swap/history\";\nexport const SWAP_PATH_LP_LIST = \"/swap/providers\";\nexport const SWAP_PATH_LIQUIDITY_ADD = \"/swap/liquidity/add\";\nexport const SWAP_PATH_LIQUIDITY_REMOVE = \"/swap/liquidity/remove\";\nexport const SWAP_PATH_TRADE = \"/swap/trade\";\nexport const FARM_PATH = \"/farm\";\nexport const FARM_STAKE_PATH = \"/farm/stake\";\nexport const FARM_STAKE_POSITIONS_PATH = \"/farm/stake/positions\";\nexport const FUSION_PATH = \"/fusion\";\nexport const INCUBATOR_PATH = \"/incubator\";\n\nexport const MENU = [\n  {\n    label: \"Swap\",\n    path: SWAP_PATH,\n    network: [PRIVATENET, TESTNET],\n  },\n  {\n    label: \"Farm\",\n    path: FARM_PATH,\n    network: [PRIVATENET, TESTNET],\n  },\n  {\n    label: \"Smith\",\n    path: SMITH_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n  {\n    label: \"NFT\",\n    path: GALLERY_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n    category: [\n      {\n        label: \"Rune\",\n        path: GALLERY_PATH,\n        network: [PRIVATENET, TESTNET, MAINNET],\n      },\n      {\n        label: \"Arena\",\n        path: TOURNAMENT_PATH,\n        network: [PRIVATENET, TESTNET, MAINNET],\n      },\n    ],\n  },\n  {\n    label: \"GAS-FI\",\n    path: GASFI_PATH,\n    network: [PRIVATENET],\n  },\n  {\n    label: \"Fusion\",\n    path: FUSION_PATH,\n    network: [PRIVATENET],\n  },\n  {\n    label: \"Migration\",\n    path: MIGRATION_PATH,\n    network: [PRIVATENET],\n  },\n];\n","import { CONST } from \"../../neo\";\n\nexport const getWalletIcon = (key: string) => {\n  let svg = \"\";\n  switch (key) {\n    case CONST.DEV:\n      svg = \"/icons/dev.png\";\n      break;\n    case CONST.O3:\n      svg = \"/icons/o3.svg\";\n      break;\n    case CONST.NEO_LINE:\n      svg = \"/icons/neoline.svg\";\n      break;\n    case CONST.ONE_GATE:\n      svg = \"/icons/onegate.png\";\n      break;\n  }\n  return svg;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { utils } from \"../../packages/neo\";\nimport { IConnectedWallet } from \"../../packages/neo/wallet/interfaces\";\nimport { useWallet } from \"../../packages/provider\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport { COLLECTION_PATH } from \"../../consts\";\nimport { NavLink } from \"react-router-dom\";\nimport { NEO_LINE, O3 } from \"../../packages/neo/consts\";\nimport neo3Dapi from \"neo3-dapi\";\ninterface IWalletDropdownProps {\n  connectedWallet: IConnectedWallet;\n}\nconst WalletDropdown = ({ connectedWallet }: IWalletDropdownProps) => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n\n  const onActive = () => setActive(!isActive);\n\n  useEffect(() => {\n    const refresh = () => {\n      connectWallet(connectedWallet.key);\n    };\n    const disconnected = () => {\n      disConnectWallet();\n    };\n\n    if (connectedWallet.key === NEO_LINE) {\n      window.addEventListener(\"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.NETWORK_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.DISCONNECTED\", disconnected);\n      return () => {\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.NETWORK_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.DISCONNECTED\",\n          disconnected\n        );\n      };\n    }\n    if (connectedWallet.key === O3) {\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.DISCONNECTED,\n        disconnected\n      );\n\n      return () => {\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.DISCONNECTED,\n          disconnected\n        );\n      };\n    }\n  }, []);\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className=\"button is-small is-black is-rounded\"\n          aria-controls=\"dropdown-wallet\"\n        >\n          <span>{utils.truncateAddress(connectedWallet.account.address)}</span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <img src={getWalletIcon(connectedWallet.key)} />\n              </div>\n              <div className=\"media-content\">\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </div>\n            </div>\n          </div>\n          <hr className=\"dropdown-divider\" />\n          <NavLink\n            className=\"dropdown-item has-text-dark\"\n            onClick={() => setActive(false)}\n            to={COLLECTION_PATH}\n          >\n            My NFT\n          </NavLink>\n          <hr className=\"dropdown-divider\" />\n          <a onClick={handleDisconnectWallet} className=\"dropdown-item\">\n            Disconnect\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React, { useState } from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, PRIVATENET, TESTNET } from \"../../packages/neo/consts\";\nimport { INetworkType } from \"../../packages/neo/network\";\n\nconst NetworkSwitch = () => {\n  const [isActive, setActive] = useState(false);\n  const { network, switchNetwork } = useWallet();\n  const onActive = () => setActive(!isActive);\n  const handleNetworkChange = (val: string) => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(\"Are you sure to switch network?\")) {\n      switchNetwork(val as INetworkType);\n      setActive(false);\n    }\n  };\n  const networkList = [PRIVATENET, TESTNET, MAINNET];\n\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className={`button is-small ${\n            network === MAINNET ? \"is-white\" : \"is-danger\"\n          }`}\n          aria-controls=\"dropdown-wallet\"\n        >\n          {network}\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {networkList.map((v) => {\n            if (\n              (process.env.NODE_ENV !== \"development\" && v === PRIVATENET) ||\n              network === v\n            ) {\n              return false;\n            }\n            return (\n              <div key={`network${v}`} className=\"dropdown-item\">\n                <a onClick={() => handleNetworkChange(v)}>Switch to {v}</a>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","import React from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, TESTNET } from \"../../packages/neo/consts\";\nimport toast from \"react-hot-toast\";\n\nconst NetworkSwitch = () => {\n  const { network, switchNetwork } = useWallet();\n  const handleSwitchNetwork = () => {\n    const targetNetwork = network === TESTNET ? MAINNET : TESTNET;\n    switchNetwork(targetNetwork);\n    toast.success(`Network switched. You are on ${targetNetwork}`);\n  };\n  return (\n    <div className=\"level is-mobile\">\n      <div className=\"level-left\">\n        <div className=\"level-item\">\n          Network:&nbsp;\n          <span\n            className={\n              network === TESTNET ? \"has-text-danger\" : \"has-text-info\"\n            }\n          >\n            {\" \"}\n            {network}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"level-right\">\n        <div className=\"level-item\">\n          <button onClick={handleSwitchNetwork} className=\"button is-small\">\n            Switch\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","import React from \"react\";\nimport { FaDiscord, FaMedium, FaTwitter, FaGithub } from \"react-icons/all\";\n\nconst SocialLinkGroup = () => {\n  return (\n    <>\n      <a\n        target=\"_blank\"\n        href=\"https://twitter.com/N3_FTW_NETWORK\"\n        className=\"button is-white is-small\"\n      >\n        <FaTwitter />\n      </a>\n      <a\n        target=\"_blank\"\n        href=\"https://github.com/ForTheWinn\"\n        className=\"button is-white is-small\"\n      >\n        <FaGithub />\n      </a>\n      <a\n        target=\"_blank\"\n        href=\"https://discord.gg/A83mtQqsfP\"\n        className=\"button is-white is-small\"\n      >\n        <FaDiscord />\n      </a>\n      <a\n        target=\"_blank\"\n        href=\"https://medium.com/@Forthewin_network\"\n        className=\"button is-white is-small\"\n      >\n        <FaMedium />\n      </a>\n    </>\n  );\n};\n\nexport default SocialLinkGroup;\n","import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaBars, FaGithub, FaWallet } from \"react-icons/fa\";\nimport Logo from \"./Logo\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { useWallet } from \"../../packages/provider\";\nimport { utils } from \"../../packages/neo\";\nimport { MENU } from \"../../consts\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport NetworkSwitch from \"./NetworkSwitch\";\nimport NetworkSwitch2 from \"./NetworkSwitch2\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaMedium, FaTwitter } from \"react-icons/all\";\nimport { MAINNET, TESTNET } from \"../../packages/neo/consts\";\nimport toast from \"react-hot-toast\";\nimport SocialLinkGroup from \"./SocialLinkGroup\";\n\nconst Header = () => {\n  const { toggleSidebar, toggleWalletSidebar } = useApp();\n  const { connectedWallet, network, disConnectWallet, switchNetwork } =\n    useWallet();\n  const [isActive, setActive] = useState(false);\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    disConnectWallet();\n  };\n\n  const handleSwitchNetwork = () => {\n    const targetNetwork = network === TESTNET ? MAINNET : TESTNET;\n    switchNetwork(targetNetwork);\n    setActive(false);\n    toast.success(`Network switched. You are on ${targetNetwork}`);\n  };\n\n  return (\n    <nav\n      className=\"navbar has-shadow is-white is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ height: \"52px\" }}\n    >\n      <div className=\"container\">\n        <div\n          className=\"navbar-brand\"\n          style={{ justifyContent: \"space-between\" }}\n        >\n          <div\n            role=\"button\"\n            className=\"navbar-burger is-center is-hidden-tablet\"\n            style={{ marginLeft: 0 }}\n            onClick={toggleSidebar}\n          >\n            <FaBars />\n          </div>\n          <Link className=\"has-text-white navbar-item is-center\" to=\"/\">\n            <Logo />\n          </Link>\n          <div\n            role=\"button\"\n            className={`navbar-burger is-center is-hidden-desktop`}\n            onClick={() => {\n              if (connectedWallet) {\n                setActive(!isActive);\n              } else {\n                toggleWalletSidebar();\n              }\n            }}\n            style={{ marginLeft: 0 }}\n          >\n            <FaWallet />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div\n            className={`navbar-menu  is-hidden-tablet ${\n              isActive && \"is-active\"\n            }`}\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item\">\n                <div className=\"media\" style={{ alignItems: \"center\" }}>\n                  <div className=\"media-left\">\n                    <img\n                      width=\"32px\"\n                      src={getWalletIcon(connectedWallet.key)}\n                    />\n                  </div>\n                  <div className=\"media-content\">\n                    {utils.truncateAddress(connectedWallet.account.address)}\n                  </div>\n                </div>\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <div className=\"navbar-item\">\n                <NetworkSwitch2 />\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <a onClick={handleDisconnectWallet} className=\"navbar-item\">\n                Disconnect wallet\n              </a>\n            </div>\n          </div>\n        )}\n\n        <div className=\"navbar-menu ml-3\">\n          <div className=\"navbar-start\">\n            {MENU.map((route, i) => {\n              if (!route.network.includes(network)) return false;\n              if (route.category) {\n                return (\n                  <div\n                    key={`header-${route.label}${i}`}\n                    className=\"navbar-item has-dropdown is-hoverable\"\n                  >\n                    <div className=\"navbar-link\">{route.label}</div>\n                    <div className=\"navbar-dropdown is-boxed\">\n                      {route.category.map((item, index) => {\n                        return (\n                          <NavLink\n                            key={`category-${item.label}-${item.label}${index}`}\n                            activeClassName=\"is-active\"\n                            to={item.path}\n                            className=\"navbar-item\"\n                          >\n                            {item.label}\n                          </NavLink>\n                        );\n                      })}\n                    </div>\n                  </div>\n                );\n              } else {\n                return (\n                  <NavLink\n                    key={`header-${route.label}${i}`}\n                    activeClassName=\"is-active\"\n                    to={route.path}\n                    className=\"navbar-item\"\n                  >\n                    {route.label}\n                  </NavLink>\n                );\n              }\n            })}\n          </div>\n        </div>\n        <div className=\"navbar-end is-hidden-touch\">\n          <div className=\"navbar-item\">\n            <SocialLinkGroup />\n          </div>\n          <div className=\"navbar-item\">\n            <NetworkSwitch />\n          </div>\n          {/*<PendingTransaction />*/}\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              {connectedWallet ? (\n                <WalletDropdown connectedWallet={connectedWallet} />\n              ) : (\n                <button\n                  onClick={toggleWalletSidebar}\n                  className=\"button is-small is-black is-rounded\"\n                >\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown } from \"react-icons/all\";\nimport { useApp } from \"../../../common/hooks/use-app\";\nimport { useWallet } from \"../../provider\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletDropdown = () => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectedWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n  if (!connectedWallet) {\n    return (\n      <button className=\"button is-white \" onClick={() => setActive(!isActive)}>\n        <strong>Wallet</strong>\n      </button>\n    );\n  }\n  return (\n    <div className={`dropdown ${isActive && \"is-active\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-white\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu3\"\n          onClick={() => setActive(!isActive)}\n        >\n          <span className=\"icon is-small\">\n            <img src={getWalletIcon(connectedWallet.key)} />\n          </span>\n          <span>\n            <strong>Wallet</strong>\n          </span>\n          <span className=\"icon is-small\">\n            <FaAngleDown />\n            {/*<i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>*/}\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a\n            onClick={handleDisconnectWallet}\n            href=\"#\"\n            className=\"dropdown-item\"\n          >\n            Disconnect\n          </a>\n          {/*<hr className=\"dropdown-divider\"/>*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletList = () => {\n  const { connectWallet, list, useDevWallet } = useWallet();\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          if (!useDevWallet && _wallet.key === DEV) return false;\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n","import React from \"react\";\nimport { IBalance } from \"../../neo/wallet/interfaces\";\n\nconst AssetCard = (props: IBalance) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        <strong>{props.symbol}</strong>\n      </div>\n      <div className=\"media-content\"></div>\n      <div className=\"media-right has-text-right\">{props.amount}</div>\n    </div>\n  );\n};\n\nexport default AssetCard;\n","import React from \"react\";\nimport { utils } from \"../../neo\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport WalletList from \"./WalletList\";\nimport AssetCard from \"./AssetCard\";\nimport { useWallet } from \"../../provider\";\nimport NetworkSwitch2 from \"../../../ui/components/NetworkSwitch2\";\n\nconst Wallet = () => {\n  const { connectedWallet } = useWallet();\n  return (\n    <>\n      <header className=\"level is-mobile p-3 is-marginless\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <WalletDropdown />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <small>\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </small>\n            </div>\n          </div>\n        )}\n      </header>\n      <hr className=\"m-0\" />\n      <section className=\"p-5\">\n        {connectedWallet ? (\n          <>\n            <div>\n              {connectedWallet &&\n                connectedWallet.balances.map((balance) => {\n                  return <AssetCard key={balance.symbol} {...balance} />;\n                })}\n            </div>\n          </>\n        ) : (\n          <WalletList />\n        )}\n      </section>\n\n      <div\n        className=\"p-5\"\n        style={{ position: \"absolute\", bottom: \"40px\", width: \"100%\" }}\n      >\n        <NetworkSwitch2 />\n      </div>\n    </>\n  );\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport Wallet from \"../../packages/ui/Wallet\";\nimport { useWallet } from \"../../packages/provider\";\n\nconst WalletSidebar = () => {\n  const { walletSidebarStatus, toggleWalletSidebar } = useApp();\n  const { connectedWallet } = useWallet();\n  if (connectedWallet) return <div></div>;\n  return (\n    <SideNav\n      openFromRight={true}\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={walletSidebarStatus}\n      onHideNav={toggleWalletSidebar}\n      children={<Wallet />}\n    />\n  );\n};\n\nexport default WalletSidebar;\n","import React from \"react\";\n\nconst PageLayout = (props) => {\n  return (\n    <section className=\"section\">\n      <div className=\"container\">{props.children}</div>\n    </section>\n  );\n};\n\nexport default PageLayout;\n","import React, { ReactElement } from \"react\";\nimport $ from \"jquery\";\n\ninterface IProps {\n  onClose: () => void;\n  children: ReactElement;\n  isLoading?: boolean;\n  error?: string;\n}\nconst ModalCard = ({ onClose, children, isLoading, error }: IProps) => {\n  React.useEffect(() => {\n    $(\"html\").addClass(\"is-clipped\");\n    return () => {\n      $(\"html\").removeClass(\"is-clipped\");\n    };\n  }, []);\n  return (\n    <div className=\"modal is-active\" style={{ zIndex: 99 }}>\n      <div className=\"modal-background\" onClick={onClose} />\n      <section className=\"modal-content\">\n        <div className=\"box\">\n          {isLoading ? <div>Loading</div> : error ? <div>Error</div> : children}\n        </div>\n      </section>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};\n\nexport default ModalCard;\n","import React from \"react\";\n\n/**\n * TODO: Better ux needed\n * @param props\n * @constructor\n */\ninterface ITransactionSuccessProps {\n  txid: string;\n  onClick: () => void;\n}\nconst TransactionSubmitted = ({ txid, onClick }: ITransactionSuccessProps) => {\n  return (\n    <div className=\"has-text-centered\">\n      <h1 className=\"title is-5\">Transaction submitted!</h1>\n      <p className=\"subtitle is-7\">{txid}</p>\n      <button onClick={onClick} className=\"button is-black\">\n        Close\n      </button>\n    </div>\n  );\n};\n\nexport default TransactionSubmitted;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport NumberFormat from \"react-number-format\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  onClose: () => void;\n}\nconst ActionModal = ({ range, onClose }: IActionModal) => {\n  const [amount, setAmount] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onDeposit = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).deposit(\n          connectedWallet,\n          amount,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">\n            {/*<img src={\"/neo_512_512.svg\"} />*/}\n            Deposit NEO\n          </h1>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Your position</label>\n                <div className=\"select is-fullwidth\">\n                  <select\n                    value={position}\n                    onChange={(e) => setPosition(e.target.value)}\n                  >\n                    <option value=\"\">Select your position</option>\n                    {_.range(0, range).map((i) => (\n                      <option key={i} value={i + 1}>\n                        {i + 1}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Amount</label>\n                <NumberFormat\n                  autoFocus={true}\n                  // ref={this.props, inputRef}\n                  decimalScale={0}\n                  inputMode=\"decimal\"\n                  className=\"input\"\n                  value={amount}\n                  onValueChange={(value) => {\n                    setAmount(value.value);\n                  }}\n                  thousandSeparator={true}\n                  suffix={\" NEO\"}\n                  allowLeadingZeros={false}\n                />\n              </div>\n            </div>\n          </div>\n          <button\n            onClick={onDeposit}\n            disabled={!position || !amount || parseFloat(amount) < 1}\n            className=\"button is-button is-black\"\n          >\n            Deposit\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default ActionModal;\n","import React from \"react\";\nimport Countdown from \"react-countdown\";\n\ninterface ISnapshotCountdownProps {\n  timeLeft: number;\n  onCreateSnapshot: () => void;\n}\nconst SnapshotCountdown = ({\n  timeLeft,\n  onCreateSnapshot,\n}: ISnapshotCountdownProps) => {\n  const CreateSnapshotBtn = () => (\n    <button onClick={onCreateSnapshot} className=\"button is-button is-black\">\n      Creat snapshot\n    </button>\n  );\n  if (timeLeft < 1) {\n    return <CreateSnapshotBtn />;\n  }\n  return (\n    <Countdown\n      date={Date.now() + timeLeft}\n      renderer={(props) => {\n        if (props.completed) {\n          return <CreateSnapshotBtn />;\n        } else {\n          return (\n            <span>\n              {props.hours}:{props.minutes}:{props.seconds}\n            </span>\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default SnapshotCountdown;\n","import React from \"react\";\nimport { IFarmSnapshot } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface ISnapshotListProps {\n  item: IFarmSnapshot;\n}\nconst SnapshotCard = ({ item }: ISnapshotListProps) => {\n  return (\n    <div key={item.createdAt} className=\"media\">\n      <div className=\"media-left\">#{item.no}</div>\n      <div className=\"media-content\">\n        Position: <span className=\"is-capitalized\">{item.winPosition}</span>\n        <br />\n        GAS: {item.totalGas}\n        <br />\n        {item.createdAt}\n      </div>\n    </div>\n  );\n};\n\nexport default SnapshotCard;\n","import React, { useState } from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\nimport SnapshotCard from \"./SnapshotCard\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCreateSnapshot = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).createSnapshot(\n          connectedWallet\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  if (!contractStatus) return <div></div>;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">Snapshots</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <SnapshotCountdown\n              timeLeft={parseFloat(contractStatus.timeLeft)}\n              onCreateSnapshot={onCreateSnapshot}\n            />\n          </div>\n        </div>\n      </div>\n\n      {contractStatus.snapshots.items.map((item) => (\n        <SnapshotCard key={item.no} item={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React from \"react\";\n\nconst NotifyError = ({ msg, onClose }) => {\n  if (!msg) return <></>;\n  return (\n    <div className=\"notification is-danger\">\n      <button onClick={onClose} className=\"delete\" />\n      {msg}\n    </div>\n  );\n};\n\nexport default NotifyError;\n","import React from \"react\";\nimport { IFarmDepositRecord } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface IMyPositionProps {\n  deposit?: IFarmDepositRecord;\n  lastSnapshotNo: string;\n  onCancel: () => void;\n  onPositionChange: () => void;\n  onClaim: () => void;\n}\nconst MyPosition = ({\n  deposit,\n  lastSnapshotNo,\n  onCancel,\n  onClaim,\n  onPositionChange,\n}: IMyPositionProps) => {\n  if (!deposit) return <div></div>;\n  const lastClaimNo = deposit.lastClaimNo ? parseFloat(deposit.lastClaimNo) : 0;\n  const isClaimable = parseFloat(lastSnapshotNo) > lastClaimNo;\n  return (\n    <>\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item is-block\">\n            <div className=\"\">\n              My position\n              <br />\n              <span className=\"is-capitalized\">\n                {deposit.position} / {deposit.amount} NEO\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"buttons\">\n            {!isClaimable && (\n              <button onClick={onPositionChange} className=\"button is-black\">\n                Change position\n              </button>\n            )}\n            <button onClick={onCancel} className=\"button is-light\">\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n      {isClaimable && (\n        <button onClick={onClaim} className=\"button is-primary is-fullwidth\">\n          Claim Reward\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default MyPosition;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport MyPosition from \"./MyPosition\";\n\ninterface IPoolProps {\n  contractStatus?: IFarmContractStatus;\n  onDeposit: () => void;\n  onCancel: () => void;\n  onPositionChange: () => void;\n  onClaim: () => void;\n}\nconst Pool = ({\n  contractStatus,\n  onDeposit,\n  onCancel,\n  onClaim,\n  onPositionChange,\n}: IPoolProps) => {\n  return (\n    <div className=\"\">\n      <div className=\"box\">\n        <div className=\"level\">\n          <div className=\"level-left\">\n            <div className=\"level-item is-block\">\n              <h1 className=\"title is-4 is-marginless\">Total</h1>\n            </div>\n          </div>\n          <div className=\"level-right\">\n            <div>\n              {contractStatus?.neoBalance} <strong>NEO</strong>\n              <br />\n              {contractStatus?.ftwBalance} <strong>FTW</strong>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {contractStatus && contractStatus.deposit ? (\n        <MyPosition\n          deposit={contractStatus.deposit}\n          lastSnapshotNo={contractStatus.snapshots.totalItems}\n          onCancel={onCancel}\n          onClaim={onClaim}\n          onPositionChange={onPositionChange}\n        />\n      ) : (\n        <button onClick={onDeposit} className=\"button is-primary is-fullwidth\">\n          Deposit\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Pool;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal, addPendingTransaction } =\n    useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).remove(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(txid);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm close</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Close my position\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).claim(connectedWallet);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm claim</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Claim my reward\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\n\ninterface IClaimsProps {\n  contractStatus?: IFarmContractStatus;\n  onClaim: () => void;\n}\nconst Claims = ({ contractStatus, onClaim }: IClaimsProps) => {\n  if (!contractStatus) return <div></div>;\n  if (!contractStatus.claims) return <div></div>;\n  if (!contractStatus.deposit) return <div></div>;\n  const lastClaimNo = contractStatus.deposit.lastClaimNo\n    ? parseFloat(contractStatus.deposit.lastClaimNo)\n    : 0;\n  const isClaimable =\n    parseFloat(contractStatus.snapshots.totalItems) > lastClaimNo;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">My Claims</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            {isClaimable && (\n              <button\n                onClick={onClaim}\n                className=\"button is-primary is-fullwidth\"\n              >\n                Claim Reward\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      {contractStatus.claims.items.length > 0 ? (\n        contractStatus.claims.items.map((item) => {\n          return (\n            <div key={item.createdAt} className=\"media\">\n              <div className=\"media-left\">#{item.no}</div>\n              <div className=\"media-content\">\n                Snapshots: {`${item.from} ~ ${item.end}`}\n                <br />\n                GAS: {item.GAS}\n                <br />\n                FTW: {item.FTW}\n                <br />\n                {item.createdAt}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>No claims to display</div>\n      )}\n    </div>\n  );\n};\n\nexport default Claims;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  currentPosition: string;\n  onClose: () => void;\n}\nconst PositionModal = ({ currentPosition, range, onClose }: IActionModal) => {\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onChange = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).changePosition(\n          connectedWallet,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-spaced\">Change your position</h1>\n          <p className=\"subtitle is-6\">\n            Your current position is <strong>{currentPosition}</strong>\n          </p>\n          <div className=\"field\">\n            <label className=\"label\">New position</label>\n            <div className=\"select is-fullwidth\">\n              <select\n                value={position}\n                onChange={(e) => setPosition(e.target.value)}\n              >\n                <option value=\"\">Select new position</option>\n                {_.range(0, range)\n                  .filter((i) => !(i + 1 === parseFloat(currentPosition)))\n                  .map((i) => (\n                    <option key={i} value={i + 1}>\n                      {i + 1}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <button\n            onClick={onChange}\n            disabled={!position}\n            className=\"button is-button is-black\"\n          >\n            Change\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PositionModal;\n","import React  from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport moment from \"moment\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  if (!contractStatus) return <div></div>;\n  const tempTime = moment.duration(contractStatus.interval);\n  const format = `Every ${\n    tempTime.hours() > 0\n      ? `${tempTime.hours()} hours ${tempTime.minutes()} mins`\n      : `${tempTime.minutes()} mins`\n  }`;\n  return (\n    <div className=\"\">\n      <h1 className=\"title is-4\">About</h1>\n      <h4 className=\"title is-6\">Current settings</h4>\n      <p className=\"subtitle is-6\">\n        Position range: {contractStatus.range}\n        <br />\n        Interval: {format}\n      </p>\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport ActionModal from \"./ActionModal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport toast from \"react-hot-toast\";\nimport SnapshotList from \"./SnapshotList\";\nimport NotifyError from \"../../components/NotifyError\";\nimport Pool from \"./Pool\";\nimport CancelModal from \"./CancelModal\";\nimport ClaimModal from \"./ClaimModal\";\nimport Claims from \"./Claims\";\nimport PositionModal from \"./PositionModal\";\nimport About from \"./About\";\nimport { TESTNET } from \"../../../packages/neo/consts\";\n\nconst Farm = () => {\n  // let location = useLocation();\n  const production = [TESTNET];\n  const [route, setRoute] = useState(\"POOL\");\n  const [modalActive, setModalActive] = useState(false);\n  const [cancelModalActive, setCancelModalActive] = useState(false);\n  const [claimModalActive, setClaimModalActive] = useState(false);\n  const [positionModalActive, setPositionModalActive] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [contractStatus, setContractStatus] = useState<IFarmContractStatus>();\n  const onActive = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onCancelModalActive = () => setCancelModalActive(true);\n  const onClaimModalActive = () => setClaimModalActive(true);\n  const onPositionChange = () => setPositionModalActive(true);\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new FarmContract(network).getStatus(connectedWallet);\n        setContractStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, route]);\n  if (!production.includes(network))\n    return (\n      <PageLayout>This smart contract is not support in {network}.</PageLayout>\n    );\n  return (\n    <PageLayout>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-half\">\n          <div className=\"box \">\n            <div className=\"tabs is-toggle\">\n              <ul>\n                <li className={route === \"POOL\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"POOL\")}>Pool</a>\n                </li>\n                {connectedWallet && contractStatus && contractStatus.deposit && (\n                  <li className={route === \"CLAIMS\" ? \"is-active\" : \"\"}>\n                    <a onClick={() => setRoute(\"CLAIMS\")}>Claims</a>\n                  </li>\n                )}\n                <li className={route === \"SNAPSHOTS\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"SNAPSHOTS\")}>Snapshots</a>\n                </li>\n                <li className={route === \"ABOUT\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"ABOUT\")}>About</a>\n                </li>\n              </ul>\n            </div>\n            <NotifyError msg={error} onClose={() => setError(\"\")} />\n            {route === \"POOL\" && (\n              <Pool\n                contractStatus={contractStatus}\n                onPositionChange={onPositionChange}\n                onDeposit={onActive}\n                onCancel={onCancelModalActive}\n                onClaim={onClaimModalActive}\n              />\n            )}\n            {route === \"SNAPSHOTS\" && (\n              <SnapshotList contractStatus={contractStatus} />\n            )}\n            {route === \"CLAIMS\" && (\n              <Claims\n                onClaim={onClaimModalActive}\n                contractStatus={contractStatus}\n              />\n            )}\n            {route === \"ABOUT\" && <About contractStatus={contractStatus} />}\n          </div>\n        </div>\n      </div>\n      {contractStatus && modalActive && (\n        <ActionModal\n          range={contractStatus.range}\n          onClose={() => setModalActive(false)}\n        />\n      )}\n      {contractStatus && contractStatus.deposit && positionModalActive && (\n        <PositionModal\n          currentPosition={contractStatus.deposit.position}\n          range={contractStatus.range}\n          onClose={() => setPositionModalActive(false)}\n        />\n      )}\n      {cancelModalActive && (\n        <CancelModal onClose={() => setCancelModalActive(false)} />\n      )}\n      {claimModalActive && (\n        <ClaimModal onClose={() => setClaimModalActive(false)} />\n      )}\n    </PageLayout>\n  );\n};\n\nexport default Farm;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\n\ninterface IPropertiesModal {\n  tokenId: string;\n  onClose: () => void;\n}\nconst PropertiesModal = ({ tokenId, onClose }: IPropertiesModal) => {\n  const [item, setItem] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getProperties(\n          tokenId.toString()\n        );\n        setItem(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network]);\n  return (\n    <Modal onClose={onClose}>\n      {isLoading ? (\n        <div>Loading the rune data from the chain..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <h1 className=\"title is-4\">{item.name}</h1>\n\n          <p className=\"subtitle is-7\">\n            <strong>Phase:</strong> {item.phase}, <strong>Luck:</strong>{\" \"}\n            {item.luck}\n          </p>\n          <figure className=\"image is-square\">\n            <img src={item.image} />\n          </figure>\n          <p className=\"subtitle is-7 has-text-right mt-3\">{item.owner}</p>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PropertiesModal;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport PropertiesModal from \"../Gallery/PropertiesModal\";\nimport { GALLERY_PATH } from \"../../../consts\";\nimport { Link } from \"react-router-dom\";\n\nconst MyCollection = () => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus(address: string) {\n      setError(\"\");\n      try {\n        const res = await new NFTContract(network).getTokensOf(address);\n        setTokens(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network]);\n  return (\n    <>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">My collection</h1>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"columns is-multiline\">\n            {tokens.length > 0 ? (\n              tokens.map((token) => (\n                <div className=\"column is-3\">\n                  <figure\n                    className=\"image\"\n                    onClick={() => onPropertiesModalActive(token.tokenId)}\n                  >\n                    <img src={token.image} />\n                  </figure>\n                </div>\n              ))\n            ) : (\n              <div className=\"column is-3\">\n                <div className=\"box\">\n                  <div className=\"block\">\n                    <p>You don't have any runes yet</p>\n                  </div>\n\n                  <Link className=\"button is-primary\" to={GALLERY_PATH}>\n                    Go Get Them\n                  </Link>\n                </div>\n                {/*<DisplayRandomRune width=\"100%\" height=\"100%\" />*/}\n              </div>\n            )}\n          </div>\n        )}\n      </PageLayout>\n      {/*<button onClick={onMint} className=\"button is-black\">Mint</button>*/}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MyCollection;\n","import React from \"react\";\nimport { RUNE_PRICE } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport DisplayRandomRune from \"../../components/RandomRune\";\ninterface IBannerProps {\n  network: INetworkType;\n  filter: string;\n  onMint: () => void;\n  onFilterChange: (val: string) => void;\n}\nconst Banner = ({ onMint, network }: IBannerProps) => {\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div>\n            <h1 className=\"title\">FTW Runes</h1>\n            <p className=\"subtitle\">Algorithms-generated, stored onchain NFT</p>\n            <div className=\"content is-small\">\n              <p>\n                <strong>Smart contract</strong>\n                <br />\n                <a\n                  className=\"has-text-dark is-size-7\"\n                  href=\"https://explorer.onegate.space/contractinfo/0xbebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\"\n                >\n                  0xbebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\n                </a>\n              </p>\n              <p>\n                <strong>Max supply</strong>\n                <br />\n                500 runes (Sold out)\n              </p>\n              <p>\n                <strong>Attribute #1</strong>\n                <br />\n                Dark, Light, Fire, Water, Wood, Earth, Metal\n              </p>\n              <p>\n                <strong>Attribute #2</strong>\n                <br /> Luck (1 ~ 10)\n              </p>\n              <p>\n                <strong>Press</strong>\n                <br />\n                <a\n                  // className=\"has-text-dark is-size-7\"\n                  href=\"https://neonewstoday.com/general/forthewin-network-launches-token-generator-and-ftw-rune-with-image-stored-onchain\"\n                >\n                  Article 1, &nbsp;\n                </a>\n                <a\n                  // className=\"has-text-dark is-size-7\"\n                  href=\"https://neonewstoday.com/nft/ftw-arena-tickets-now-on-sale/\"\n                >\n                  Article 2\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n","import { CONST } from \"..\";\n\nexport const ENDPOINT = {\n  [CONST.PRIVATENET]: \"http://localhost:3000\",\n  [CONST.TESTNET]:\n    \"https://jefzcuwe0e.execute-api.us-east-1.amazonaws.com/testnet\",\n  [CONST.MAINNET]:\n    \"https://z3fn74s0oa.execute-api.us-east-1.amazonaws.com/mainnet\",\n};\n","import { INetworkType } from \"../network\";\nimport { ENDPOINT } from \"./consts\";\n\n// interface IRuneFilter = \"All\" | \"Fire\" |  \"\"\n\nexport class RestAPI {\n  network: INetworkType;\n  endpoint: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.endpoint = ENDPOINT[networkType];\n  }\n\n  fetchResult = async (url: string) => {\n    const res = await fetch(url, { mode: \"cors\" });\n    const json = await res.json();\n    if (res.status === 200) {\n      return json;\n    } else {\n      // throw new Error(json.message);\n      throw new Error(\"Network error\");\n    }\n  };\n\n  async getRunes(filter) {\n    return this.fetchResult(this.endpoint + \"/runes/\" + filter);\n  }\n\n  async getRune(tokenId) {\n    return this.fetchResult(this.endpoint + \"/rune/\" + tokenId);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\nconst RuneLoading = () => {\n\tconst [colors, setColors] = useState(getColors());\n  const [bg, setBg] = useState(\"black\");\n  const [dot1, setDot1] = useState(\"black\");\n  const [dot2, setDot2] = useState(\"black\");\n  const [dot3, setDot3] = useState(\"black\");\n  const [dot4, setDot4] = useState(\"black\");\n  const [body, setBody] = useState(\"black\");\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setBody(\"white\");\n    }, 1000);\n    timer = setTimeout(() => {\n      setDot1(\"white\");\n    }, 2000);\n    timer = setTimeout(() => {\n      setDot2(\"white\");\n    }, 3000);\n    timer = setTimeout(() => {\n      setDot3(\"white\");\n    }, 4000);\n    timer = setTimeout(() => {\n      setDot4(\"white\");\n    }, 5000);\n    timer = setTimeout(() => {\n      setBg(\"rgb(\" + colors[0] + \",\" + colors[1] + \",\" + colors[2] + \")\");\n    }, 6000);\n    timer = setTimeout(() => {\n      setBody(\"rgb(\" + colors[3] + \",\" + colors[4] + \",\" + colors[5] + \")\");\n    }, 7000);\n    timer = setTimeout(() => {\n      setDot1(\"rgb(\" + colors[6] + \",\" + colors[7] + \",\" + colors[8] + \")\");\n    }, 8000);\n    timer = setTimeout(() => {\n      setDot2(\"rgb(\" + colors[9] + \",\" + colors[10] + \",\" + colors[11] + \")\");\n    }, 9000);\n    timer = setTimeout(() => {\n      setDot3(\"rgb(\" + colors[12] + \",\" + colors[13] + \",\" + colors[14] + \")\");\n    }, 10000);\n    timer = setTimeout(() => {\n      setDot4(\"rgb(\" + colors[15] + \",\" + colors[16] + \",\" + colors[17] + \")\");\n    }, 11000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <img width=\"100%\" height=\"100%\" src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default RuneLoading;\n","import React from \"react\";\n\nconst CheckMark = () => {\n  return (\n    <div style={{width:\"90px\", height:\"90px\"}}>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 130.2 130.2\"\n      >\n        <circle\n          className=\"path circle\"\n          fill=\"none\"\n          stroke=\"#73AF55\"\n          strokeWidth=\"6\"\n          strokeMiterlimit=\"10\"\n          cx=\"65.1\"\n          cy=\"65.1\"\n          r=\"62.1\"\n        />\n        <polyline\n          className=\"path check\"\n          fill=\"none\"\n          stroke=\"#73AF55\"\n          strokeWidth=\"6\"\n          strokeLinecap=\"round\"\n          strokeMiterlimit=\"10\"\n          points=\"100.2,40.2 51.5,88.8 29.8,67.5 \"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default CheckMark;\n","import React, { useEffect, useState } from \"react\";\nimport { INetworkType, Network } from \"../../neo/network\";\nimport RuneLoading from \"./RuneLoading\";\nimport CheckMark from \"../../../ui/pages/Tournament/scenes/Arena/Players/components/CheckMark\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExclamationCircle } from \"react-icons/all\";\nimport { TESTNET } from \"../../neo/consts\";\n\ninterface IAfterTransactionSubmittedProps {\n  txid: string;\n  network: INetworkType;\n  onSuccess: () => void;\n  onError: () => void;\n}\nconst AfterTransactionSubmitted = ({\n  txid,\n  network,\n  onSuccess,\n  onError,\n}: IAfterTransactionSubmittedProps) => {\n  const [isDone, setDone] = useState(false);\n  const [hasError, setError] = useState(\"\");\n\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        const res = await Network.getRawTx(txid, network);\n        if (res) {\n          setDone(true);\n        }\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    checkTxid();\n  }, [txid]);\n\n  return (\n    <div>\n      <div\n        style={{\n          width: \"200px\",\n          height: \"200px\",\n          margin: \"auto\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        className=\"\"\n      >\n        {hasError ? (\n          <FaExclamationCircle size={90} className=\"has-text-danger\" />\n        ) : isDone ? (\n          <CheckMark />\n        ) : (\n          <RuneLoading />\n        )}\n      </div>\n      <div className=\"has-background  has-text-centered mt-5\">\n        {hasError ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Error occurred</h1>\n            <p className=\"subtitle is-7\">{hasError}</p>\n            <button onClick={onError} className=\"button is-black\">\n              Close\n            </button>\n          </div>\n        ) : isDone ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Submitted</h1>\n            <p className=\"subtitle is-7\">Your transaction accepted</p>\n            <div className=\"block\">\n              <a\n                target=\"_blank\"\n                href={`https://${\n                  network === TESTNET ? \"testnet.\" : \"\"\n                }explorer.onegate.space/transactionInfo/${txid}`}\n              >\n                View txid on explorer\n              </a>\n            </div>\n            <div className=\"block\">\n              <button onClick={onSuccess} className=\"button is-black\">\n                Close\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <h1 className=\"title is-5\">Submitting..</h1>\n            <p className=\"subtitle is-7\">\n              Please wait until your transaction accepted\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AfterTransactionSubmitted;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport PropertiesModal from \"./PropertiesModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport Banner from \"./Banner\";\nimport { RestAPI } from \"../../../packages/neo/api\";\nimport { RUNE_PHASE_FILTER } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../components/Modal\";\n\nconst Gallery = () => {\n  const [txid, setTxid] = useState(\"\");\n  const [filter, setFilter] = useState<string>(RUNE_PHASE_FILTER[0]);\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n  const onFilterChange = (val: string) => setFilter(val);\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).mint(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    document.title =\n      \"Forthewin Rune: Algorithms-generated lucky runes NFT on NEO\";\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const items = await new RestAPI(network).getRunes(filter);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getTokens();\n        setTokens(items);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network, filter]);\n  return (\n    <section id=\"Rune\">\n      <Banner\n        network={network}\n        filter={filter}\n        onFilterChange={onFilterChange}\n        onMint={onMint}\n      />\n      {isLoading ? (\n        <PageLayout>\n          <div>Loading..</div>\n        </PageLayout>\n      ) : error ? (\n        <PageLayout>\n          <div>{error}</div>\n        </PageLayout>\n      ) : (\n        <div\n          className=\"container\"\n          style={{\n            display: \"flex\",\n            flexFlow: \"wrap\",\n          }}\n        >\n          {tokens.map((token) => (\n            <figure\n              style={{ width: \"5%\" }}\n              key={token.tokenId}\n              className=\"image rune\"\n              onClick={() => onPropertiesModalActive(token.tokenId.toString())}\n            >\n              <img src={token.image} />\n              {/*<small*/}\n              {/*  className=\"has-text-white\"*/}\n              {/*  style={{ position: \"absolute\", top: 0 }}*/}\n              {/*>*/}\n              {/*  #{token.tokenId}*/}\n              {/*</small>*/}\n              {/*<span className=\"has-text-white\">{token.phase}</span>*/}\n            </figure>\n          ))}\n        </div>\n      )}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={() => setTxid(\"\")}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { MENU } from \"../../consts\";\nimport { useWallet } from \"../../packages/provider\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaMedium, FaTwitter } from \"react-icons/all\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaGithub } from \"react-icons/fa\";\nimport SocialLinkGroup from \"./SocialLinkGroup\";\n\nconst SidebarNav = (props) => {\n  const { network } = useWallet();\n  const { toggleSidebar } = useApp();\n  return (\n    <>\n      <aside className=\"menu p-5\">\n        <p className=\"menu-label\">Menu</p>\n        <ul className=\"menu-list\">\n          {MENU.map((route, i) => {\n            if (!route.network.includes(network)) return false;\n            return (\n              <li key={`${route.label}${i}`}>\n                {route.category ? (\n                  <>\n                    <div\n                      onClick={toggleSidebar}\n                      // activeClassName={\"is-active\"}\n                      // to={route.path}\n                    >\n                      {route.label}\n                    </div>\n                    <ul>\n                      {route.category.map((item) => {\n                        return (\n                          <li key={item.label}>\n                            <NavLink\n                              key={`category-${item.label}`}\n                              activeClassName={\"is-active\"}\n                              to={item.path}\n                            >\n                              {item.label}\n                            </NavLink>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </>\n                ) : (\n                  <NavLink\n                    onClick={toggleSidebar}\n                    activeClassName={\"is-active\"}\n                    to={route.path}\n                  >\n                    {route.label}\n                  </NavLink>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n      </aside>\n      <div className=\"p-5\" style={{ position: \"absolute\", bottom: \"40px\" }}>\n        <div className=\"buttons\">\n          <SocialLinkGroup />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SidebarNav;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport SidebarNav from \"./SidebarNav\";\n\nconst MobileMenuSlider = (props) => {\n  const { sidebarStatus, toggleSidebar } = useApp();\n  return (\n    <SideNav\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={sidebarStatus}\n      onHideNav={toggleSidebar}\n      children={<SidebarNav />}\n    />\n  );\n};\n\nexport default MobileMenuSlider;\n","import React from \"react\";\n\ninterface IBackgroundImageContainerProps {\n  src: string;\n  height: string;\n}\nconst BgContainer = ({ src, height }: IBackgroundImageContainerProps) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"none\",\n        backgroundImage: `url(${src})`,\n        // padding: \"80px 16px\",\n      }}\n    />\n  );\n};\n\nexport default BgContainer;\n","import React from \"react\";\nimport PageLayout from \"../components/PageLayout\";\nimport BgContainer from \"../components/BgContainer\";\nimport {GALLERY_PATH, SMITH_PATH, SWAP_PATH, TOURNAMENT_PATH} from \"../../consts\";\nimport { ARENA_PATH } from \"./Tournament/pageRoutes\";\nimport { Link } from \"react-router-dom\";\nimport { useWallet } from \"../../packages/provider\";\nimport { TESTNET } from \"../../packages/neo/consts\";\nimport toast from \"react-hot-toast\";\n\nconst CARDS = [\n\t{\n\t\ttitle: \"FTW Smith\",\n\t\ttype: \"Utility\",\n\t\tdesc: \"FTW Smith helps users to create and deploy fungible/Non-fungible token smart contracts without any codes.\",\n\t\timg: \"assets/smith.png\",\n\t\tlink: SMITH_PATH,\n\t},\n  {\n    title: \"FTW Rune\",\n    type: \"NFT\",\n    desc: \"FTW Rune is an algorithmically generated NFT created and stored onchain.\",\n    img: \"assets/runes.png\",\n    link: GALLERY_PATH,\n  },\n  {\n    title: \"FTW Arena\",\n    type: \"GameFi\",\n    desc: \" FTW Runes against each other with the victor earning a GAS prize.\",\n    img: \"assets/arena-bg.jpeg\",\n    link: TOURNAMENT_PATH,\n  },\n  {\n    title: \"FTW Swap\",\n    type: \"DeFi\",\n    desc: \"Coming soon. Try on our Testnet.\",\n    img: \"assets/swap.png\",\n    link: SWAP_PATH,\n  },\n  // {\n  //   title: \"FTW Lab\",\n  //   type: \"Testnet\",\n  //   desc: \"Preview FTW future apps.\",\n  //   img: \"assets/testnet.png\",\n  //   link: SMITH_PATH,\n  // },\n];\n\nconst Home = () => {\n  const { network, switchNetwork } = useWallet();\n  const onSwitchNetwork = () => {\n    if (network !== TESTNET) {\n      // eslint-disable-next-line no-restricted-globals\n      if (confirm(\"Are you sure to switch network?\")) {\n        switchNetwork(TESTNET);\n        toast.success(\"Network switched\");\n      }\n    }\n  };\n  return (\n    <div>\n      <section className=\"hero is-black\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Forthewin Network</h1>\n            <p className=\"subtitle\">\n              Building some cool decentralized stuff on NEO blockchain.{\" \"}\n            </p>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns is-multiline\">\n          {CARDS.map((card) => {\n            return (\n              <div key={card.title} className=\"column is-3\">\n                <div className=\"card\">\n                  <div className=\"card-image is-clickable\">\n                    <Link to={card.link}>\n                      <figure className=\"image\">\n                        <BgContainer src={card.img} height=\"300px\" />\n                      </figure>\n                    </Link>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"media\">\n                      <div className=\"media-content\">\n                        <p className=\"title is-4\">\n                          <Link className={\"has-text-dark\"} to={card.link}>\n                            {card.title}\n                          </Link>\n                        </p>\n                        <span className=\"tag is-primary\">{card.type}</span>\n                      </div>\n                    </div>\n                    <div className=\"content\" style={{ minHeight: \"100px\" }}>\n                      {card.desc}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"column is-3\">\n            <div className=\"card\">\n              <div\n                className=\"card-image is-clickable\"\n                onClick={onSwitchNetwork}\n              >\n                <figure className=\"image\">\n                  <BgContainer src={\"assets/lab.png\"} height=\"300px\" />\n                </figure>\n              </div>\n              <div className=\"card-content\">\n                <div className=\"media\">\n                  <div className=\"media-content\">\n                    <p\n                      onClick={onSwitchNetwork}\n                      className=\"title is-4 is-clickable\"\n                    >\n                      FTW Lab\n                    </p>\n                    <span className=\"tag is-primary\">Testnet</span>\n                  </div>\n                </div>\n                <div className=\"content\" style={{ minHeight: \"100px\" }}>\n                  Preview FTW future apps.\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Home;\n","import { CONST } from \"../../../index\";\n\nexport const SMITH_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"f161ae138e0255b809612e4d26e540c94c83c0cc\",\n  [CONST.TESTNET]: \"799704f9d8588b183204e154f8eea1de35bb3ecd\",\n  [CONST.MAINNET]: \"f860bbdcc5091a9ae7812b047fd325dfa7905ee1\",\n};\n\nexport const DEPLOY_FEE = {\n  [CONST.PRIVATENET]: \"10\",\n  [CONST.TESTNET]: \"10\",\n  [CONST.MAINNET]: \"10\",\n};\n","import {\n  base64ToAddress,\n  base64ToDate,\n  base64ToHash160,\n  base64ToString,\n} from \"../../../utils\";\nimport { u } from \"@cityofzion/neon-core\";\n\nexport const parsePaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseRecord(stackItem[3].value),\n  };\n};\n\nconst parseRecord = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractOwner: base64ToAddress(item.value[1].value),\n      contractHash: base64ToHash160(item.value[2].value), // NEO amount\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      decimals: item.value[5].value, // NEO amount\n      totalSupply: item.value[6].value, // NEO amount\n      author: base64ToString(item.value[7].value), // NEO amount\n      description: base64ToString(item.value[8].value), // NEO amount\n      createdAt: base64ToDate(item.value[9].value),\n    };\n  });\n};\n\nexport const parseNEP11RecordPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseNEP11Record(stackItem[3].value),\n  };\n};\n\nconst parseNEP11Record = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractHash: base64ToHash160(item.value[1].value), // NEO amount\n      contractOwner: base64ToAddress(item.value[2].value),\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      description: base64ToString(item.value[5].value), // NEO amount\n      author: base64ToString(item.value[6].value), // NEO amount\n      email: base64ToString(item.value[7].value), // NEO amount\n      createdAt: base64ToDate(item.value[8].value),\n    };\n  });\n};\n\nexport const parseSmithProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { DEFAULT_WITNESS_SCOPE, GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { SMITH_SCRIPT_HASH } from \"./consts\";\nimport { ISmithNEP11RecordPaginate, ISmithRecordPaginate } from \"./interfaces\";\nimport {\n  parseNEP11RecordPaginate,\n  parsePaginate,\n  parseSmithProperties,\n} from \"./helpers\";\nimport { tx, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { IRuneMeta } from \"../nft/interfaces\";\n\nexport class SmithContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = SMITH_SCRIPT_HASH[networkType];\n  }\n\n  createNEP17 = async (\n    connectedWallet: IConnectedWallet,\n    contractName: string,\n    symbol: string,\n    decimals: string,\n    totalSupply: string,\n    author: string,\n    description: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"createNEP17\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: contractName,\n        },\n        {\n          type: \"String\",\n          value: author,\n        },\n        {\n          type: \"String\",\n          value: description,\n        },\n        {\n          type: \"String\",\n          value: symbol,\n        },\n        {\n          type: \"Integer\",\n          value: totalSupply,\n        },\n        {\n          type: \"Integer\",\n          value: decimals,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, GAS_SCRIPT_HASH],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  createNEP11 = async (\n    connectedWallet: IConnectedWallet,\n    contractName: string,\n    symbol: string,\n    author: string,\n    description: string,\n    email: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"createNEP11\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: symbol,\n        },\n        {\n          type: \"String\",\n          value: contractName,\n        },\n        {\n          type: \"String\",\n          value: description,\n        },\n        {\n          type: \"String\",\n          value: author,\n        },\n        {\n          type: \"String\",\n          value: email,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, GAS_SCRIPT_HASH],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  mintNFT = async (\n    connectedWallet: IConnectedWallet,\n    contractHash: string,\n    name: string,\n    description: string,\n    image: string,\n    json\n  ) => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"mintNFT\",\n      scriptHash: contractHash,\n      args: [\n        {\n          type: \"String\",\n          value: name,\n        },\n        {\n          type: \"String\",\n          value: description,\n        },\n        {\n          type: \"String\",\n          value: image,\n        },\n        {\n          type: \"String\",\n          value: json,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  getStatus = async (page: number): Promise<ISmithRecordPaginate> => {\n    const records = {\n      operation: \"getRecords\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: page,\n        },\n      ],\n    };\n\n    const scripts = [records];\n\n    const res = await Network.read(this.network, scripts);\n    return parsePaginate(res.stack[0].value);\n  };\n\n  getNEP11Records = async (): Promise<ISmithNEP11RecordPaginate> => {\n    const records = {\n      operation: \"getNep11Records\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n    const scripts = [records];\n    const res = await Network.read(this.network, scripts);\n    return parseNEP11RecordPaginate(res.stack[0].value);\n  };\n\n  getTokens = async (contract): Promise<string[]> => {\n    const script = {\n      scriptHash: contract,\n      operation: \"tokens\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].iterator.map((item) => {\n      return u.HexString.fromBase64(item.value as string).toAscii();\n    });\n  };\n\n  totalSupply = async (contract): Promise<number> => {\n    const script = {\n      scriptHash: contract,\n      operation: \"totalSupply\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseFloat(res.stack[0].value);\n  };\n\n  getProperties = async (\n    contractHash: string,\n    tokenId: string\n  ): Promise<IRuneMeta> => {\n    const script = {\n      scriptHash: contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseSmithProperties(res.stack);\n  };\n}\n","const emojiRegexExp =\n  /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/gi;\n\nexport const detectEmojiInString = (values: object) => {\n  let detected = 0;\n  const keys = Object.keys(values);\n  keys.forEach((i) => {\n    detected = emojiRegexExp.test(values[i]) ? detected + 1 : detected;\n  });\n  return detected;\n};\n","import React from \"react\";\n\ninterface SmithModalHeader {\n  title: string;\n}\nconst SmithModalHeader = (props: SmithModalHeader) => {\n  return (\n    <div>\n      <div className=\"level is-mobile mb-3\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-3\">{props.title}</h1>\n          </div>\n        </div>\n        <div className=\"level-right is-hidden-touch\">\n          <div className=\"level-item\">\n            <div className=\"field is-grouped is-grouped-multiline\">\n              <div className=\"control\">\n                <div className=\"tags has-addons\">\n                  <span className=\"tag is-dark\">Deploy fee</span>\n                  <span className=\"tag is-info\">10 GAS</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"field is-grouped is-grouped-multiline is-hidden-desktop\">\n        <div className=\"control\">\n          <div className=\"tags has-addons\">\n            <span className=\"tag is-dark\">Deploy fee</span>\n            <span className=\"tag is-info\">10 GAS</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"content is-small\">\n        <li>\n          We recommend to mint on Testnet first before you mint on Mainnet.\n        </li>\n        <li>Do not use EMOJI or Unicode.</li>\n      </div>\n    </div>\n  );\n};\n\nexport default SmithModalHeader;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport NumberFormat from \"react-number-format\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport SmithModalHeader from \"./components/Header\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\n\nconst NEP17FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    decimals: \"8\",\n    totalSupply: \"\",\n    author: \"\",\n    description: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        // if (balanceCheck(connectedWallet.balances, 20)) {\n        try {\n          const res = await new SmithContract(network).createNEP17(\n            connectedWallet,\n            values.name,\n            values.symbol,\n            values.decimals,\n            values.totalSupply,\n            values.author,\n            values.description\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.message);\n        }\n        // } else {\n        //   toast.error(\"You must have more than 20 GAS.\");\n        // }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n\n  const firstInput = useRef(null);\n\n  useEffect(() => {\n    // @ts-ignore\n    firstInput.current.focus();\n  }, []);\n\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <SmithModalHeader title={\"Token Smart Contract\"} />\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">Token Name</label>\n            <div className=\"control\">\n              <input\n                ref={firstInput}\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Symbol</label>\n                <div className=\"control\">\n                  <input\n                    value={values.symbol}\n                    onChange={(e) =>\n                      handleValueChange(\"symbol\", e.target.value)\n                    }\n                    className=\"input\"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Decimals</label>\n                <div className=\"control\">\n                  <NumberFormat\n                    decimalScale={0}\n                    inputMode=\"decimal\"\n                    className=\"input\"\n                    value={values.decimals}\n                    onValueChange={(value) => {\n                      handleValueChange(\"decimals\", value.value);\n                    }}\n                    max={18}\n                    allowNegative={false}\n                    allowLeadingZeros={false}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Total supply</label>\n            <div className=\"control\">\n              <NumberFormat\n                allowNegative={false}\n                decimalScale={0}\n                inputMode=\"decimal\"\n                className=\"input\"\n                value={values.totalSupply}\n                onValueChange={(value) => {\n                  handleValueChange(\"totalSupply\", value.value);\n                }}\n                allowLeadingZeros={false}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.decimals ||\n              parseFloat(values.decimals) > 18 ||\n              parseFloat(values.totalSupply) < 1 ||\n              !values.author ||\n              !values.description ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP17FormModal;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport { balanceCheck } from \"../../../packages/neo/utils\";\nimport SmithModalHeader from \"./components/Header\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst NEP11FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    author: \"\",\n    description: \"\",\n    email: \"\",\n  });\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        if (balanceCheck(connectedWallet.balances, 20)) {\n          try {\n            const res = await new SmithContract(network).createNEP11(\n              connectedWallet,\n              values.name,\n              values.symbol,\n              values.author,\n              values.description,\n              values.email\n            );\n            setTxid(res);\n          } catch (e: any) {\n            toast.error(e.message);\n          }\n        } else {\n          toast.error(\"You must have more than 20 GAS.\");\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  const firstInput = useRef(null);\n\n  useEffect(() => {\n    // @ts-ignore\n    firstInput.current.focus();\n  }, []);\n\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <SmithModalHeader title={\"NFT Smart Contract\"} />\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">NFT Contract Name</label>\n            <div className=\"control\">\n              <input\n                ref={firstInput}\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Symbol</label>\n            <div className=\"control\">\n              <input\n                value={values.symbol}\n                onChange={(e) => handleValueChange(\"symbol\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control\">\n              <input\n                value={values.email}\n                onChange={(e) => handleValueChange(\"email\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.author ||\n              !values.description ||\n              !values.email ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP11FormModal;\n","import React, { useState } from \"react\";\nimport { SMITH_PATH, SMITH_PATH_NEP11, TOURNAMENT_PATH } from \"../../../consts\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport NEP17FormModal from \"./NEP17FormModal\";\nimport NEP11FormModal from \"./NEP11FormModal\";\nimport {\n  BiCoinStack,\n  BsLightbulb,\n  FaCoins,\n  HiOutlinePhotograph,\n} from \"react-icons/all\";\n\nconst Banner = () => {\n  const location = useLocation();\n  const [isNep11FormModalActive, setNep11FormModalActive] = useState(false);\n  const [isNep17FormModalActive, setNep17FormModalActive] = useState(false);\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">Smith</h1>\n          <p className=\"subtitle\">\n            Create your token smart contracts without codes\n          </p>\n          <br />\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box content has-background-info has-text-white\">\n                <h5 className=\"has-text-light\">Token</h5>\n                <p>\n                  Neo blockchain's token smart contract. Like ERC20 Shiba Inu.\n                </p>\n                <button\n                  onClick={() => setNep17FormModalActive(true)}\n                  className=\"button is-light\"\n                >\n                  Create Token Contract\n                </button>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box content has-background-info  has-text-white\">\n                <h5 className=\"has-text-white\">NFT</h5>\n                <p>\n                  Neo blockchain's NFT smart contract. Like ERC721 Cryptopunk\n                  NFT.\n                </p>\n                <button\n                  onClick={() => setNep11FormModalActive(true)}\n                  className=\"button  is-light\"\n                >\n                  Create NFT Contract\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              <li\n                className={location.pathname === SMITH_PATH ? \"is-active\" : \"\"}\n              >\n                <Link to={SMITH_PATH}>\n                  <FaCoins />\n                  &nbsp; Token Showcase\n                </Link>\n              </li>\n              <li\n                className={\n                  location.pathname === SMITH_PATH_NEP11 ? \"is-active\" : \"\"\n                }\n              >\n                <Link to={SMITH_PATH_NEP11}>\n                  <BsLightbulb />\n                  &nbsp; NFT Showcase\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n      {isNep11FormModalActive && (\n        <NEP11FormModal onClose={() => setNep11FormModalActive(false)} />\n      )}\n      {isNep17FormModalActive && (\n        <NEP17FormModal onClose={() => setNep17FormModalActive(false)} />\n      )}\n    </section>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\nimport { ISmithRecord } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\n\ninterface IContractCardProps {\n  data: ISmithRecord;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network } = useWallet();\n  const logo = ASSET_LIST[network][data.contractHash]\n    ? ASSET_LIST[network][data.contractHash].logo\n    : undefined;\n  return (\n    <div className=\"media\">\n\n      <div className=\"media-content\">\n        <div className=\"level\">\n          <div className=\"level-left\">\n            {logo && (\n              <div className=\"level-item\">\n                <div className=\"image is-64x64\">\n                  <img src={logo} />\n                </div>\n              </div>\n            )}\n\n            <div className=\"level-item\">\n              <h5 className=\"title is-5 is-marginless\">\n                #{data.no} {data.name}\n              </h5>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/contractinfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n        </div>\n        <div className=\"field is-grouped is-grouped-multiline\">\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Symbol</span>\n              <span className=\"tag is-info\">{data.symbol}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Decimals</span>\n              <span className=\"tag is-info\">{data.decimals}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Total supply</span>\n              <span className=\"tag is-info\">\n                {parseFloat(data.totalSupply).toLocaleString()}\n              </span>\n            </div>\n          </div>\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Author</span>\n              <span className=\"tag is-info\">{data.author}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContractCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\nimport Pagination from \"bulma-pagination-react\";\n\nconst NEP17Smith = (props) => {\n  const [page, setPage] = useState(1);\n  const [isLoading, setLoading] = useState(true);\n  const [status, setStatus] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getStatus(page);\n        setStatus(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network, page]);\n\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {status && status.items.length > 0 ? (\n            status.items.map((item, i) => (\n              <ContractCard key={\"contact17\" + i} data={item} />\n            ))\n          ) : (\n            <div></div>\n          )}\n        </div>\n      )}\n      {status.totalItems > 1 && (\n        <Pagination\n          pages={status.totalPages}\n          currentPage={page}\n          onChange={(v) => {\n            if (page !== v) {\n              setPage(v);\n            }\n          }}\n        />\n      )}\n      {/*{isActionModalActive && (*/}\n      {/*  <ActionModal onClose={() => setActionModalActive(false)} />*/}\n      {/*)}*/}\n    </>\n  );\n};\n\nexport default NEP17Smith;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\n\ninterface IActionModal {\n  contractHash: string;\n  onClose: () => void;\n}\nconst NEP11MintFormModal = ({ contractHash, onClose }: IActionModal) => {\n  const { network, connectedWallet } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [showForm, setShowForm] = useState(false);\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    image: \"\",\n    attributes: {},\n  });\n  const [attValues, setAttValues] = useState({\n    key: \"\",\n    value: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n\n  const handleAttChange = (key: string, val: string) => {\n    setAttValues({\n      ...attValues,\n      [key]: val,\n    });\n  };\n\n  const handleAttributes = () => {\n    if (attValues.key && attValues.value) {\n      // @ts-ignore\n      const attributes = values.attributes;\n      attributes[attValues.key] = attValues.value;\n      setValues({\n        ...values,\n        attributes,\n      });\n      setAttValues({\n        key: \"\",\n        value: \"\",\n      });\n    }\n  };\n\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SmithContract(network).mintNFT(\n          connectedWallet,\n          contractHash,\n          values.name,\n          values.description,\n          values.image,\n          JSON.stringify(values.attributes)\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  const attKeys = Object.keys(values.attributes);\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Mint a NFT</h1>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">NFT Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Image</label>\n            <div className=\"control\">\n              <input\n                value={values.image}\n                onChange={(e) => handleValueChange(\"image\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"level\">\n            <div className=\"level-left\">\n              <div className=\"level-item\">\n                <label className=\"label\">NFT Attributes</label>\n              </div>\n            </div>\n\n            <div className=\"level-right\">\n              <div className=\"level-item\">\n                <button\n                  onClick={() => setShowForm(!showForm)}\n                  className=\"button is-dark\"\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"field is-grouped is-grouped-multiline\">\n              {attKeys.map((k) => {\n                return (\n                  <div className=\"control\">\n                    <div className=\"tags has-addons\">\n                      <span className=\"tag is-dark\">{k}</span>\n                      <span className=\"tag is-info\">\n                        {values.attributes[k]}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {showForm && (\n            <div className=\"block\">\n              <div className=\"columns is-mobile\">\n                <div className=\"column is-5\">\n                  <div className=\"control\">\n                    <input\n                      placeholder=\"KEY\"\n                      value={attValues.key}\n                      onChange={(e) => handleAttChange(\"key\", e.target.value)}\n                      className=\"input\"\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n                <div className=\"column\">\n                  <div className=\"control is-5\">\n                    <input\n                      placeholder=\"VALUE\"\n                      value={attValues.value}\n                      onChange={(e) => handleAttChange(\"value\", e.target.value)}\n                      className=\"input\"\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n                <div className=\"column is-2\">\n                  <button\n                    disabled={!attValues.key || !attValues.value}\n                    onClick={handleAttributes}\n                    className=\"button\"\n                  >\n                    Submit\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <hr />\n          <button\n            onClick={onMint}\n            disabled={!values.name || !values.description || !values.image}\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP11MintFormModal;\n","import React, { useEffect, useState } from \"react\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\n\ninterface IDisplayRuneProps {\n  contractHash: string;\n  tokenId: string;\n  network: INetworkType;\n}\n\nconst DisplayRune = ({ contractHash, tokenId, network }: IDisplayRuneProps) => {\n  const [token, setToken] = useState<any>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new SmithContract(network).getProperties(\n          contractHash,\n          tokenId\n        );\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return <img width=\"100%\" height=\"100%\" src={token.image} />;\n};\n\nexport default DisplayRune;\n","import React, { useEffect, useState } from \"react\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport DisplayNFT from \"./DisplayNFT\";\nimport _ from \"underscore\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport { wallet } from \"@cityofzion/neon-core\";\ninterface ITokensProps {\n  contractHash: string;\n}\nconst Tokens = ({ contractHash }: ITokensProps) => {\n  const [tokens, setTokens] = useState<number>(0);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new SmithContract(network).totalSupply(contractHash);\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [contractHash, network]);\n  return (\n    <>\n      <strong>Supply</strong>\n      <br />\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {tokens}\n          {tokens > 0 ? (\n            <>\n              <br />\n              <strong>Showcase</strong>\n              <div className=\"columns is-multiline is-mobile\">\n                {_.range(tokens > 12 ? 12 : tokens).map((i) => {\n                  const tokenId = i + 1;\n                  return (\n                    <div\n                      key={`token${i}`}\n                      className=\"column is-1-desktop is-3-mobile\"\n                    >\n                      <DisplayNFT\n                        network={network}\n                        contractHash={contractHash}\n                        tokenId={tokenId.toString()}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              {tokens > 12 && (\n                <a\n                  className=\"button is-black\"\n                  target=\"_blank\"\n                  href={`https://${\n                    network === MAINNET\n                      ? \"explorer.onegate.space\"\n                      : \"testnet.explorer.onegate.space\"\n                  }/NFTtokeninfo/0x${contractHash}`}\n                >\n                  <span className=\"icon\">\n                    <FaExternalLinkAlt />\n                  </span>\n                  <span>Browse more</span>\n                </a>\n              )}\n            </>\n          ) : (\n            <div></div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Tokens;\n","import React, { useState } from \"react\";\nimport { ISmithNEP11Record } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport NEP11MintFormModal from \"../../NEP11MintFormModal\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport Tokens from \"./Tokens\";\n\ninterface IContractCardProps {\n  data: ISmithNEP11Record;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network, connectedWallet } = useWallet();\n  const [isMintModalActive, setMintModalActive] = useState(\"\");\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">\n          #{data.no} {data.name}\n        </h5>\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/NFTtokeninfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n          <br />\n          <Tokens contractHash={data.contractHash} />\n        </div>\n      </div>\n      {connectedWallet &&\n        connectedWallet.account.address === data.contractOwner && (\n          <div className=\"media-right\">\n            <div className=\"block\">\n              <button\n                onClick={() => setMintModalActive(data.contractHash)}\n                className=\"button is-primary press-font\"\n              >\n                Mint\n              </button>\n            </div>\n          </div>\n        )}\n\n      {isMintModalActive && (\n        <NEP11MintFormModal\n          contractHash={isMintModalActive}\n          onClose={() => setMintModalActive(\"\")}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ContractCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\nimport { ISmithNEP11RecordPaginate } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\n\nconst NEP11Smith = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState<ISmithNEP11RecordPaginate>();\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getNEP11Records();\n        setData(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {data && data.items.length > 0 ? (\n            data.items.map((item, i) => (\n              <ContractCard key={\"contract\" + i} data={item} />\n            ))\n          ) : (\n            <div>No contracts to display</div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NEP11Smith;\n","import React, { useEffect } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { SMITH_PATH, SMITH_PATH_NEP11 } from \"../../../consts\";\nimport { Route } from \"react-router-dom\";\nimport Banner from \"./Banner\";\nimport NEP17Smith from \"./scenes/NEP17\";\nimport NEP11Smith from \"./scenes/NEP11\";\n\nconst Smith = () => {\n  useEffect(() => {\n    document.title =\n      \"Forthewin Smith: Create your NEP11 and NEP17 smart contracts without any codes.\";\n  }, []);\n  return (\n    <>\n      <Banner />\n      <PageLayout>\n        <Route exact path={SMITH_PATH} component={() => <NEP17Smith />} />\n        <Route path={SMITH_PATH_NEP11} component={() => <NEP11Smith />} />\n      </PageLayout>\n    </>\n  );\n};\n\nexport default Smith;\n","import { TOURNAMENT_PATH } from \"../../../consts\";\n\nexport const ARENA_PATH = TOURNAMENT_PATH + \"/:arenaNo\";\n","import { CONST } from \"../../../index\";\n\nexport const TOURNAMENT_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"d2016f40d26d420c696132e5dae453d93b0f3050\",\n  [CONST.TESTNET]: \"1666b9485e2faf13ccea24c9563dfa5cbd92a1ad\",\n  [CONST.MAINNET]: \"0eb288c413b5d5ec4aa0df5aea34d9538b28dd29\",\n};\n\nexport const ADMIN_FOR_PLAY = {\n  [CONST.PRIVATENET]: [\"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\"],\n  [CONST.TESTNET]: [\n    \"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\",\n    \"NS9QLsaY8RzN9fxTWj9AECyLaJvsk38XUb\",\n  ],\n  [CONST.MAINNET]: [\"NS9QLsaY8RzN9fxTWj9AECyLaJvsk38XUb\"],\n};\n\nexport const SUPPORT_TICKET_PRICE = \"0.2\";\nexport const TOURNAMENT_TIME_PADDING = 3600000;\n","import {\n  base64ToAddress,\n  base64ToHash160,\n  base64ToString,\n  toDecimal,\n} from \"../../../utils\";\nimport { IHistory, IHistoryGame, IPlayer } from \"./interfaces\";\n\nexport const parsePlayer = (stackItem): IPlayer => {\n  return stackItem.map((item) => {\n    return {\n      // no: item.value[0].value,\n      owner: base64ToAddress(item.value[0].value),\n      tokenHash: base64ToHash160(item.value[1].value),\n      tokenId: base64ToString(item.value[2].value),\n      phase: base64ToString(item.value[3].value),\n      luck: item.value[4].value,\n      createdAt: item.value[5].value,\n    };\n  });\n};\n\nexport const parseHistory = (stackItem: any): IHistory => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    currentPage: stackItem[2].value,\n    items: parseGame(stackItem[3].value),\n  };\n};\n\nconst parseGame = (stackItem): IHistoryGame[] => {\n  return stackItem.map((item) => {\n    return {\n      gameNo: item.value[0].value,\n      tournamentTree: parsePlayer(item.value[1].value),\n      champion: base64ToString(item.value[2].value), // NEO amount\n      nonce: item.value[3].value,\n      betsOnChampion: item.value[4].value,\n      totalBets: item.value[5].value,\n      rollover: item.value[6].value,\n      fee: item.value[7].value,\n      championPrize: item.value[8].value,\n      createdAt: item.value[9].value,\n      champOwner: item.value[10]\n        ? base64ToAddress(item.value[10].value)\n        : undefined,\n    };\n  });\n};\n\nexport const calculateClaimableAmount = (\n  history: IHistoryGame,\n  betAmount: number\n): number => {\n  let totalAmount =\n    parseFloat(history.totalBets) -\n    parseFloat(history.fee) -\n    parseFloat(history.championPrize);\n  totalAmount = totalAmount + parseFloat(history.rollover);\n  let myClaimAble =\n    (totalAmount * betAmount) / parseFloat(history.betsOnChampion);\n  myClaimAble = Math.floor(myClaimAble);\n  return toDecimal(myClaimAble.toString());\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { SUPPORT_TICKET_PRICE, TOURNAMENT_SCRIPT_HASH } from \"./consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { RUNE_SCRIPT_HASH } from \"../nft\";\nimport { parsePlayer, parseHistory } from \"./helpers\";\nimport { DEFAULT_WITNESS_SCOPE, GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { base64ToAddress, toDecimal } from \"../../../utils\";\nimport { u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\n\nexport class TournamentContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = TOURNAMENT_SCRIPT_HASH[networkType];\n  }\n\n  register = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: RUNE_SCRIPT_HASH[this.network],\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n        {\n          type: \"Array\",\n          value: [\n            {\n              type: \"Integer\",\n              value: arenaNo,\n            },\n          ],\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  play = async (\n    connectedWallet: IConnectedWallet,\n    arenaNo: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"play\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      \"0.05\",\n      true\n    );\n  };\n\n  leave = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"leave\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n      // \"0.1\"\n    );\n  };\n\n  bet = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        { type: \"Hash160\", value: senderHash },\n        { type: \"Hash160\", value: this.contractHash },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(SUPPORT_TICKET_PRICE, 8).toString(),\n        },\n        {\n          type: \"Array\",\n          value: [\n            { type: \"Integer\", value: arenaNo },\n            { type: \"String\", value: tokenId },\n          ],\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      true\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    arenaNo: string,\n    gameNo: string\n  ): Promise<string> => {\n\t  const senderHash = NeonWallet.getScriptHashFromAddress(\n\t\t  connectedWallet.account.address\n\t  );\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n      ],\n\t    signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  getPlayers = async (arenaNo: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPlayers\",\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parsePlayer(res.stack[0].value);\n  };\n\n  history = async (arenaNo: string, page: number): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getHistoryPaginate\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: page },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    return parseHistory(res.stack[0].value);\n  };\n\n  getGameHeight = async (arenaNo: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getGameHeight\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].value;\n  };\n\n  getBetAmount = async (\n    arenaNo: string,\n    gameNo: string,\n    championTokenId: string,\n    address: string\n  ): Promise<any> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getBetsOnAccount\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"String\", value: championTokenId },\n        { type: \"Address\", value: address },\n      ],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"isClaimed\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"Address\", value: address },\n      ],\n    };\n    const res = await Network.read(this.network, [script, script1]);\n    return {\n      // @ts-ignore\n      betAmount: parseFloat(res.stack[0].value),\n      // @ts-ignore\n      isClaimed: res.stack[1].value,\n    };\n  };\n\n  getBetOnPlayer = async (\n    arenaNo: string,\n    gameNo: string,\n    tokenId: string,\n    address: string\n  ): Promise<{\n    totalBets: string;\n    userBets: string;\n  }> => {\n    const scripts: any = [];\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getBetsOnPlayer\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"String\", value: tokenId },\n      ],\n    };\n    scripts.push(script);\n\n    if (address) {\n      const script1 = {\n        scriptHash: this.contractHash,\n        operation: \"getBetsOnAccount\",\n        args: [\n          { type: \"Integer\", value: arenaNo },\n          { type: \"Integer\", value: gameNo },\n          { type: \"String\", value: tokenId },\n          { type: \"Address\", value: address },\n        ],\n      };\n      scripts.push(script1);\n    }\n    const res = await Network.read(this.network, scripts);\n    return {\n      totalBets: res.stack[0].value as string,\n      userBets: res.stack[1] ? (res.stack[1].value as string) : \"\",\n    };\n  };\n\n  getCurrentPrize = async (\n    arenaNo: string\n  ): Promise<{\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  }> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getCurrentPrize\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"getGameHeight\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const script2 = {\n      scriptHash: this.contractHash,\n      operation: \"getPreviousWinner\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const script3 = {\n      scriptHash: this.contractHash,\n      operation: \"getTimeElapsed\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const res = await Network.read(this.network, [\n      script,\n      script1,\n      script2,\n      script3,\n    ]);\n    return {\n      prize: toDecimal(res.stack[0].value as string),\n      gameNo: parseFloat(res.stack[1].value as string) + 1,\n      previousChampWallet: res.stack[2].value\n        ? base64ToAddress(res.stack[2].value as string)\n        : undefined,\n      timeElapsedFromPreviousGame: res.stack[3].value\n        ? (res.stack[3].value as string)\n        : undefined,\n    };\n  };\n}\n","import React from \"react\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TOURNAMENT_TIME_PADDING } from \"../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IPlayButtonProps {\n  arenaNo: string;\n  onSubmitted: (txid: string) => void;\n  status?: {\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  };\n}\nconst PlayButton = ({ arenaNo, onSubmitted, status }: IPlayButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPlay = async () => {\n    if (connectedWallet && status) {\n      // try {\n      //   const res = await new TournamentContract(network).play(\n      //     connectedWallet,\n      //     arenaNo\n      //   );\n      //   addPendingTransaction(res);\n      //   onSubmitted(res);\n      // } catch (e: any) {\n      //   toast.error(e.message);\n      // }\n      // const timeLeft =\n      //   TOURNAMENT_TIME_PADDING -\n      //   parseFloat(status.timeElapsedFromPreviousGame);\n      // if (timeLeft <= 0) {\n      try {\n        const res = await new TournamentContract(network).play(\n          connectedWallet,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        onSubmitted(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n      // } else {\n      // }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <button className=\"button is-primary press-font\" onClick={onPlay}>\n      Start\n    </button>\n  );\n};\n\nexport default PlayButton;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TOURNAMENT_PATH } from \"../../../../../consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport PlayButton from \"../../components/PlayButton\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { ADMIN_FOR_PLAY } from \"../../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IBanner {\n  arenaNo: string;\n  pathname: string;\n  status?: {\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  };\n}\nconst Banner = ({ arenaNo, status, pathname }: IBanner) => {\n  const { connectedWallet, network } = useWallet();\n  const [playTxid, setPlayTxid] = useState(\"\");\n\n  let hasPermissionToPlay = false;\n  if (ADMIN_FOR_PLAY[network].includes(connectedWallet?.account.address)) {\n    hasPermissionToPlay = true;\n  }\n  if (\n    connectedWallet &&\n    status &&\n    connectedWallet.account.address === status.previousChampWallet\n  ) {\n    hasPermissionToPlay = true;\n  }\n  return (\n    <>\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4\">ARENA {arenaNo}</h1>\n          </div>\n        </div>\n\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            Round: #{status ? status.gameNo : \"\"}\n            <br />\n            Prize: {status ? status.prize + \" GAS\" : \"\"}\n            {hasPermissionToPlay && (\n              <div className=\"has-text-centered\">\n                <PlayButton\n                  onSubmitted={setPlayTxid}\n                  arenaNo={arenaNo}\n                  status={status}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          <li\n            className={\n              pathname === TOURNAMENT_PATH + \"/\" + arenaNo ? \"is-active\" : \"\"\n            }\n          >\n            <Link to={TOURNAMENT_PATH + \"/\" + arenaNo}>Players</Link>\n          </li>\n          <li\n            className={\n              pathname === TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"\n                ? \"is-active\"\n                : \"\"\n            }\n          >\n            <Link to={TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"}>\n              History\n            </Link>\n          </li>\n        </ul>\n      </div>\n\n      {playTxid && (\n        <Modal onClose={() => setPlayTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={playTxid}\n            network={network}\n            onSuccess={() => setPlayTxid(\"\")}\n            onError={() => setPlayTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\nimport { INetworkType } from \"../../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { RestAPI } from \"../../../../packages/neo/api\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaStar } from \"react-icons/fa\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  isOwner?: boolean;\n  onClick: (obj) => void;\n}\n\nconst DisplayRuneWithProperties = ({\n  width,\n  height,\n  tokenId,\n  network,\n  isOwner,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchRune() {\n      try {\n        const res = await new RestAPI(network).getRune(tokenId);\n        setToken(res);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getProperties(tokenId);\n        // setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchRune();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune is-relative\"\n      onClick={() => onClick({ ...token, tokenId })}\n    >\n      <img src={token.image} />\n      {isOwner && (\n        <FaStar\n          style={{ position: \"absolute\", top: \"2px\", left: \"3px\" }}\n          className=\"has-text-warning\"\n        />\n      )}\n    </figure>\n  );\n};\n\nexport default DisplayRuneWithProperties;\n","import React from \"react\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { balanceCheck } from \"../../../../packages/neo/utils\";\nimport { SUPPORT_TICKET_PRICE } from \"../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IBetButtonProps {\n  arenaNo: string;\n  tokenId: string;\n  setTxid: (txid: string) => void;\n}\nconst BetButton = ({ arenaNo, tokenId, setTxid }: IBetButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onBet = async () => {\n    if (connectedWallet) {\n      if (\n        balanceCheck(connectedWallet.balances, parseFloat(SUPPORT_TICKET_PRICE))\n      ) {\n        try {\n          const res = await new TournamentContract(network).bet(\n            connectedWallet,\n            tokenId,\n            arenaNo\n          );\n          addPendingTransaction(res);\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error(`You must have more than ${SUPPORT_TICKET_PRICE} GAS.`);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <button onClick={onBet} className=\"button is-primary is-fullwidth\">\n      Support {SUPPORT_TICKET_PRICE} GAS\n    </button>\n  );\n};\n\nexport default BetButton;\n","import React from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\n\ninterface ILeaveButtonProps {\n  arenaNo: string;\n  tokenId: string;\n  setTxid: (txid: string) => void;\n}\nconst LeaveButton = ({ arenaNo, tokenId, setTxid }: ILeaveButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onLeave = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).leave(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  return (\n    <button onClick={onLeave} className=\"button is-danger is-fullwidth\">\n      Leave\n    </button>\n  );\n};\n\nexport default LeaveButton;\n","import React, { useEffect, useState } from \"react\";\nimport { IRuneMeta } from \"../../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport BetButton from \"../../../../components/BetButton\";\nimport LeaveButton from \"../../../../components/LeaveButton\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toDecimal } from \"../../../../../../../packages/neo/utils\";\n\ninterface IPlayerModalProps {\n  arenaNo: string;\n  gameNo?: number;\n  player: IRuneMeta & { tokenId: string; gameOwner: string };\n  onClose: () => void;\n}\n\nconst PlayerModal = ({\n  arenaNo,\n  gameNo,\n  player,\n  onClose,\n}: IPlayerModalProps) => {\n  const [txid, setTxid] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const [status, setStatus] = useState({\n    totalBets: \"\",\n    userBets: \"\",\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    async function fetchContractStatus(_gameNo) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetOnPlayer(\n          arenaNo,\n          _gameNo,\n          player.tokenId,\n          connectedWallet ? connectedWallet.account.address : undefined\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (gameNo) {\n      fetchContractStatus(gameNo);\n    }\n  }, [gameNo, network]);\n  return (\n    <Modal onClose={onClose}>\n      <div>\n        {txid ? (\n          <AfterTransactionSubmitted\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n            txid={txid}\n            network={network}\n          />\n        ) : (\n          <div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <img src={player.image} />\n              </div>\n              <div className=\"column\">\n                <div className=\"content\">\n                  <strong>Name</strong>\n                  <br />\n                  <p>{player.name}</p>\n                  <strong>Phase</strong>\n                  <p>{player.phase}</p>\n                  <strong>Luck</strong>\n                  <p>{player.luck}</p>\n                  <strong>Owner</strong>\n                  <p>{player.gameOwner}</p>\n                  <strong>Current support amount</strong>\n                  <p>{toDecimal(status.totalBets)}</p>\n                  {connectedWallet && (\n                    <>\n                      <strong>My support amount</strong>\n                      <p>{toDecimal(status.userBets)}</p>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <BetButton\n                  setTxid={setTxid}\n                  arenaNo={arenaNo}\n                  tokenId={player.tokenId}\n                />\n              </div>\n              <div className=\"column\">\n                <button\n                  onClick={onClose}\n                  className=\"button is-light is-fullwidth\"\n                >\n                  Close\n                </button>\n              </div>\n              {connectedWallet &&\n              connectedWallet.account.address === player.gameOwner ? (\n                <div className=\"column\">\n                  <LeaveButton\n                    setTxid={setTxid}\n                    arenaNo={arenaNo}\n                    tokenId={player.tokenId}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default PlayerModal;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { NFTContract } from \"../../../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toast } from \"react-hot-toast\";\n\ninterface INFTListModalModal {\n  arenaNo: string;\n  onClose: () => void;\n}\nconst NFTListModal = ({ arenaNo, onClose }: INFTListModalModal) => {\n  const [txid, setTxid] = useState(\"\");\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n\n  const onRegister = async (tokenId: string) => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).register(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        {txid ? (\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n          />\n        ) : (\n          <div>\n            <div className=\"block\">\n              <h5 className=\"title is-5\">Select a NFT to send to the ARENA</h5>\n            </div>\n            <div>\n              {isLoading ? (\n                <div>Loading..</div>\n              ) : error ? (\n                <div>{error}</div>\n              ) : tokens.length > 0 ? (\n                <div\n                  style={{\n                    flexFlow: \"wrap\",\n                  }}\n                  className=\"is-flex\"\n                >\n                  {tokens.map((token) => {\n                    return (\n                      <figure\n                        key={token.tokenId}\n                        // style={{ width, height }}\n                        className=\"image is-64x64\"\n                        onClick={() => onRegister(token.tokenId)}\n                      >\n                        <img src={token.image} />\n                      </figure>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div>You don't have runes</div>\n              )}\n            </div>\n          </div>\n        )}\n      </>\n    </Modal>\n  );\n};\n\nexport default NFTListModal;\n","import React, { useState } from \"react\";\nimport NFTListModal from \"./NFTListModal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\n\ninterface IRegisterButtonProps {\n  arenaNo: string;\n  playerCount: number;\n}\nconst RegisterButton = ({ arenaNo, playerCount }: IRegisterButtonProps) => {\n  const [modalActive, setModalActive] = useState(false);\n  const { connectedWallet } = useWallet();\n  const onPickModal = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Connect your wallet.\");\n    }\n  };\n  return (\n    <>\n      <button\n        disabled={playerCount === parseFloat(arenaNo)}\n        className=\"button is-primary is-fullwidth\"\n        onClick={onPickModal}\n      >\n        Register ({playerCount}/{arenaNo})\n      </button>\n      {modalActive && connectedWallet && (\n        <NFTListModal arenaNo={arenaNo} onClose={() => setModalActive(false)} />\n      )}\n    </>\n  );\n};\n\nexport default RegisterButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport DisplayRuneWithProperties from \"../../../components/DisplayRuneWithProperties\";\nimport PlayerModal from \"./components/PlayerModal\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport RegisterButton from \"./components/ArenaRegisterButton\";\n\nconst Players = ({ arenaNo, gameNo }: { arenaNo: string; gameNo?: number }) => {\n  const [playerModalActive, setPlayerModalActive] = useState<\n    IRuneMeta & { tokenId: string; gameOwner: string }\n  >();\n\n  const onPlayerModalActive = (obj) => setPlayerModalActive(obj);\n  const [players, setPlayers] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getPlayers(arenaNo);\n        setPlayers(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network, arenaNo, gameNo]);\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"\">\n          <div className=\"columns\">\n            <div className=\"column is-10\">\n              {players.length > 0 ? (\n                <div className=\"columns is-multiline is-mobile\">\n                  {players.map(({ tokenId, owner }) => {\n                    return (\n                      <div\n                        key={tokenId}\n                        className=\"column is-1-desktop is-3-mobile\"\n                      >\n                        <DisplayRuneWithProperties\n                          key={tokenId}\n                          width={\"100%\"}\n                          height={\"100%\"}\n                          tokenId={tokenId}\n                          network={network}\n                          isOwner={\n                            connectedWallet\n                              ? connectedWallet.account.address === owner\n                              : false\n                          }\n                          onClick={(obj: any) =>\n                            onPlayerModalActive({ ...obj, gameOwner: owner })\n                          }\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div>No players</div>\n              )}\n            </div>\n            <div className=\"column is-2\">\n              <RegisterButton playerCount={players.length} arenaNo={arenaNo} />\n            </div>\n          </div>\n        </div>\n      )}\n      {playerModalActive && (\n        <PlayerModal\n          arenaNo={arenaNo}\n          gameNo={gameNo}\n          onClose={() => setPlayerModalActive(undefined)}\n          player={playerModalActive}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Players;\n","import React from \"react\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IPlayerModalProps {\n  rune: IRuneMeta;\n  onClose: () => void;\n}\nconst NFTDetailModal = ({ rune, onClose }: IPlayerModalProps) => {\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <img src={rune.image} />\n        </div>\n        <div className=\"column\">\n          <div className=\"content\">\n            <strong>Name</strong>\n            <br />\n            <p>{rune.name}</p>\n            <strong>Phase</strong>\n            <p>{rune.phase}</p>\n            <strong>Luck</strong>\n            <p>{rune.luck}</p>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NFTDetailModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { IHistoryGame } from \"../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport { calculateClaimableAmount } from \"../../../../packages/neo/contracts/ftw/tournament/helpers\";\n\ninterface IClaimButtonProps {\n  arenaNo: string;\n  history: IHistoryGame;\n  onClaimed: (txid: string) => void;\n}\nconst ClaimButton = ({ arenaNo, history, onClaimed }: IClaimButtonProps) => {\n  const [status, setStatus] = useState<any>({\n    betAmount: 0,\n    isClaimed: false,\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).claim(\n          connectedWallet,\n          arenaNo,\n          history.gameNo\n        );\n        addPendingTransaction(res);\n        onClaimed(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  useEffect(() => {\n    async function fetchBetAmount(address: string) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetAmount(\n          arenaNo,\n          history.gameNo,\n          history.champion,\n          address\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchBetAmount(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network, history]);\n  if (!connectedWallet) return <></>;\n\tif (history.betsOnChampion === \"0\") return <></>;\n  if (!status.betAmount) return <></>;\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {status.isClaimed ? (\n            <button disabled={true} className=\"button is-info is-fullwidth\">\n              Claimed\n            </button>\n          ) : (\n            <button className=\"button is-info is-fullwidth\" onClick={onClaim}>\n              Claim {calculateClaimableAmount(history, status.betAmount)} GAS\n            </button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ClaimButton;\n","import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaPlay } from \"react-icons/fa\";\nimport { NFTContract } from \"../../../../../../packages/neo/contracts\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { INetworkType } from \"../../../../../../packages/neo/network\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport ClaimButton from \"../../../components/ClaimButton\";\nimport { toDecimal } from \"../../../../../../packages/neo/utils\";\n\ninterface IDisplayRuneProps {\n  history: IHistoryGame;\n  arenaNo: string;\n  width: string;\n  height: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n  onReplay: () => void;\n  onClaimed: (txid: string) => void;\n}\n\nconst HistoryTable = ({\n  history,\n  arenaNo,\n  width,\n  height,\n  network,\n  onClick,\n  onReplay,\n  onClaimed,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(\n          history.champion\n        );\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [history]);\n  if (!token) return <></>;\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        {\" \"}\n        <figure\n          style={{ width, height }}\n          className=\"image rune\"\n          onClick={() => onClick(token)}\n        >\n          <img src={token.image} />\n        </figure>\n      </div>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          Game #{history.gameNo}\n          <br />\n          Champ: {token.name} ({token.phase} / {token.luck})\n          <br />\n          {history.champOwner && (\n            <>\n              Champ address: {history.champOwner} <br />\n            </>\n          )}\n          Total supports: {toDecimal(history.totalBets)}GAS\n          <br />\n          Rollover: {toDecimal(history.rollover)}GAS\n          <br />\n          Total supports on champ: {toDecimal(history.betsOnChampion)}GAS\n          <br />\n          Champ reward: {toDecimal(history.championPrize)}GAS\n          <br />\n          Operation reward: {toDecimal(history.fee)}GAS\n        </div>\n        <button onClick={() => onReplay()} className=\"button is-black is-small\">\n          <span className=\"icon\">\n            <FaPlay />\n          </span>\n          <span>Replay</span>\n        </button>\n      </div>\n      <div className=\"media-right\">\n        <div>\n          <ClaimButton\n            onClaimed={onClaimed}\n            arenaNo={arenaNo}\n            history={history}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryTable;\n","// Game formula was changed from game 5 except arena 4 and 2;\nexport const fight = (aPhase, aLuck, bPhase, bLuck, nonce, gameNo) => {\n  gameNo = parseFloat(gameNo);\n  aLuck = parseFloat(aLuck);\n  bLuck = parseFloat(bLuck);\n  nonce = parseFloat(nonce);\n  if (aPhase === bPhase) {\n    return compareLuck(aLuck, bLuck, nonce);\n  }\n\n  switch (aPhase) {\n    case \"Fire\":\n      switch (bPhase) {\n        case \"Metal\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Wood\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Earth\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Water\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Water\":\n      switch (bPhase) {\n        case \"Fire\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Metal\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Wood\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Earth\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Wood\":\n      switch (bPhase) {\n        case \"Earth\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Water\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Fire\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Metal\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Earth\":\n      switch (bPhase) {\n        case \"Water\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Fire\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Metal\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Wood\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Metal\":\n      switch (bPhase) {\n        case \"Wood\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Earth\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Water\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Fire\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Dark\":\n      switch (bPhase) {\n        case \"Light\":\n          // Formula changed from Game#5\n          aLuck = aLuck - (gameNo > 4 ? 5 : 3);\n          break;\n        default:\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Light\":\n      switch (bPhase) {\n        case \"Dark\":\n          // Formula changed from Game#5\n          aLuck = aLuck + (gameNo > 4 ? 5 : 3);\n          break;\n        default:\n          aLuck = aLuck - 3;\n          break;\n      }\n      break;\n  }\n  return compareLuck(aLuck, bLuck, nonce);\n};\n\nconst compareLuck = (aLuck, bLuck, nonce) => {\n  if (aLuck > bLuck) {\n    return \"A\";\n  } else if (bLuck > aLuck) {\n    return \"B\";\n  } else {\n    // tslint:disable-next-line:no-unused-expression\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    return nonce % 2 === 0 ? \"A\" : \"B\";\n  }\n  // else\n  // {\n  // \tvar tx = (Transaction)Runtime.ScriptContainer;\n  // \treturn tx.Nonce % 2 == 0 ? \"A\" : \"B\";\n  // }\n};\n","import React from \"react\";\nimport { IPlayer } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport DisplayRuneWithProperties from \"../../../components/DisplayRuneWithProperties\";\nimport { fight } from \"../helpers\";\nimport { useWallet } from \"../../../../../../packages/provider\";\n\ninterface ITournamentTree {\n  gameNo: string;\n  champ: string;\n  nonce: string;\n  tree: IPlayer[];\n  onClick: (obj) => void;\n}\n\nfunction* chunks(arr, n) {\n  for (let i = 0; i < arr.length; i += n) {\n    yield arr.slice(i, i + n);\n  }\n}\n\nconst TournamentTree = ({\n  gameNo,\n  onClick,\n  champ,\n  tree,\n  nonce,\n}: ITournamentTree) => {\n  const { network } = useWallet();\n\n  let capacity = tree.length;\n  let stage: IPlayer[] = tree;\n  let winners: IPlayer[] = [];\n  let match: IPlayer[] = [];\n  let rounds: any[] = [];\n  while (capacity >= 2) {\n    for (let i = 0; i < capacity; i++) {\n      match.push(stage[i]);\n      if (match.length === 2) {\n        const res = fight(\n          match[0].phase,\n          match[0].luck,\n          match[1].phase,\n          match[1].luck,\n          nonce,\n          gameNo\n        );\n        if (res === \"A\") {\n          winners.push(match[0]);\n        } else {\n          winners.push(match[1]);\n        }\n        match = [];\n      }\n    }\n    // @ts-ignore\n    rounds.push([...chunks(stage, 2)]);\n    stage = winners;\n    winners = [];\n    capacity = capacity / 2;\n  }\n  rounds = rounds.reverse();\n\n  return (\n    <>\n      <div className=\"is-flex mb-5\" style={{ justifyContent: \"safe center\" }}>\n        <DisplayRuneWithProperties\n          network={network}\n          onClick={(obj) => {\n            onClick(obj);\n          }}\n          width={\"128px\"}\n          height={\"128px\"}\n          tokenId={champ}\n        />\n      </div>\n      {rounds.map((arena) => {\n        return (\n          <div className=\"is-flex mb-5\" style={{ justifyContent: \"center\" }}>\n            {arena.map((arr, i) => {\n              const winner = fight(\n                arr[0].phase,\n                arr[0].luck,\n                arr[1].phase,\n                arr[1].luck,\n                nonce,\n                gameNo\n              );\n              return (\n                <div\n                  className={`is-flex ${arena.length - 1 !== i ? \"mr-5\" : \"\"} `}\n                >\n                  <div style={{ opacity: winner === \"A\" ? \"1\" : \"0.3\" }}>\n                    <DisplayRuneWithProperties\n                      network={network}\n                      onClick={(obj) => {\n                        onClick(obj);\n                      }}\n                      width={\"32px\"}\n                      height={\"32px\"}\n                      tokenId={arr[0].tokenId}\n                    />\n                  </div>\n                  <div style={{ opacity: winner === \"B\" ? \"1\" : \"0.3\" }}>\n                    <DisplayRuneWithProperties\n                      network={network}\n                      onClick={(obj) => {\n                        onClick(obj);\n                      }}\n                      width={\"32px\"}\n                      height={\"32px\"}\n                      tokenId={arr[1].tokenId}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default TournamentTree;\n","import React from \"react\";\nimport TournamentTree from \"./TournamentTree\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\n\ninterface IReplayProps {\n  arenaNo: string;\n  gameHistory: IHistoryGame;\n  onClick: (obj) => void;\n  onClose: () => void;\n}\nconst Replay = ({ arenaNo, gameHistory, onClick, onClose }: IReplayProps) => {\n  return (\n    <div className=\"modal is-active\">\n      <div\n        className=\"modal-background\"\n        onClick={onClose}\n        style={{ backgroundColor: \"black\" }}\n      />\n      <h1\n        className=\"title has-text-white\"\n        style={{ position: \"absolute\", top: \"20px\", left: \"20px\" }}\n      >\n        ARENA {arenaNo}\n      </h1>\n      <section className=\"modal-content\" style={{ width: \"100%\" }}>\n        <TournamentTree\n          // Game formula was changed from game 5 except arena 4 and 2;\n          gameNo={parseFloat(arenaNo) < 8 ? \"5\" : gameHistory.gameNo}\n          champ={gameHistory.champion}\n          tree={gameHistory.tournamentTree}\n          nonce={gameHistory.nonce}\n          onClick={onClick}\n        />\n      </section>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};\n\nexport default Replay;\n","import React, { useEffect, useState } from \"react\";\nimport Pagination from \"bulma-pagination-react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport NFTDetailModal from \"./NFTDetailModal\";\nimport HistoryTable from \"./HistoryTable\";\nimport Replay from \"./Replay\";\nimport AfterTransactionSubmitted from \"../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IHistoryProps {\n  arenaNo: string;\n}\nconst History = ({ arenaNo }: IHistoryProps) => {\n  const [claimTxid, setClaimTxid] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [nftModalActive, setNftModalActive] = useState();\n  const [replayModalActive, setReplayModalActive] = useState();\n  const [history, setHistory] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const onNFTModalActive = (obj) => setNftModalActive(obj);\n  const onReplayModalActive = (obj) => setReplayModalActive(obj);\n\n  useEffect(() => {\n    async function fetchHistory() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).history(\n          arenaNo,\n          page\n        );\n        setHistory(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchHistory();\n  }, [connectedWallet, network, page]);\n\n  let totalPages = 0;\n  if (history) {\n    const itemsPerPage = parseFloat(arenaNo) >= 64 ? 2 : 5;\n    totalPages = Math.ceil(history.totalItems / itemsPerPage);\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <div className=\"\">\n            {history.items && history.items.length > 0 ? (\n              history.items.map((game) => {\n                return (\n                  <HistoryTable\n                    key={game.gameNo}\n                    width={\"64px\"}\n                    height={\"64px\"}\n                    history={game}\n                    arenaNo={arenaNo}\n                    network={network}\n                    onClick={(obj) => {\n                      onNFTModalActive(obj);\n                    }}\n                    onReplay={() => onReplayModalActive(game)}\n                    onClaimed={setClaimTxid}\n                  />\n                );\n              })\n            ) : (\n              <div>Game hasn't been played</div>\n            )}\n            {totalPages > 1 && (\n              <div className=\"media\">\n                <div className=\"media-content\">\n                  <Pagination\n                    pages={totalPages}\n                    currentPage={page}\n                    onChange={(_page) => {\n                      if (page !== _page) {\n                        setPage(_page);\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      {nftModalActive && (\n        <NFTDetailModal\n          rune={nftModalActive}\n          onClose={() => setNftModalActive(undefined)}\n        />\n      )}\n\n      {replayModalActive && (\n        <Replay\n          arenaNo={arenaNo}\n          gameHistory={replayModalActive}\n          onClick={(obj) => {\n            onNFTModalActive(obj);\n          }}\n          onClose={() => setReplayModalActive(undefined)}\n        />\n      )}\n\n      {claimTxid && (\n        <Modal onClose={() => setClaimTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={claimTxid}\n            network={network}\n            onSuccess={() => setClaimTxid(\"\")}\n            onError={() => setClaimTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default History;\n","import React, { useEffect, useState } from \"react\";\nimport Banner from \"./Banner\";\nimport PageLayout from \"../../../../components/PageLayout\";\nimport { ARENA_PATH } from \"../../pageRoutes\";\nimport { Route, useLocation } from \"react-router-dom\";\nimport Players from \"./Players\";\nimport History from \"./History\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../packages/neo/contracts/ftw/tournament\";\n\nconst Arena = (props) => {\n  const location = useLocation();\n  let { arenaNo } = props.match.params;\n  arenaNo = arenaNo ? arenaNo : props.defaultArena;\n  const [status, setStatus] = useState<{\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  }>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchBetAmount() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getCurrentPrize(\n          arenaNo\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchBetAmount();\n  }, [network, location.pathname]);\n  return (\n    <div>\n      <Banner pathname={location.pathname} status={status} arenaNo={arenaNo} />\n      {React.useMemo(() => {\n        return (\n          <>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : (\n              <>\n                <Route\n                  exact\n                  path={ARENA_PATH}\n                  component={() => (\n                    <Players\n                      arenaNo={arenaNo}\n                      gameNo={status ? status.gameNo : undefined}\n                    />\n                  )}\n                />\n                <Route\n                  path={ARENA_PATH + \"/history\"}\n                  component={() => <History arenaNo={arenaNo} />}\n                />\n              </>\n            )}\n          </>\n        );\n      }, [status, isLoading])}\n    </div>\n  );\n};\n\nexport default Arena;\n","import React, { useEffect } from \"react\";\nimport { ARENA_PATH } from \"./pageRoutes\";\nimport { Link, NavLink, Route, useLocation } from \"react-router-dom\";\nimport Arena from \"./scenes/Arena\";\nimport { TOURNAMENT_PATH } from \"../../../consts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { MAINNET } from \"../../../packages/neo/consts\";\nimport PageLayout from \"../../components/PageLayout\";\n\nconst Tournament = () => {\n  const location = useLocation();\n  useEffect(() => {\n    document.title = \"Forthewin Arena: NFT tournament on NEO\";\n  }, []);\n  const { network } = useWallet();\n  let ARENA_LIST = [\"4\", \"8\", \"16\", \"32\", \"64\", \"128\", \"256\"];\n  if (network === MAINNET) {\n    ARENA_LIST = [\"8\", \"16\", \"32\", \"64\", \"128\"];\n  }\n  return (\n    <section>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div>\n              <h1 className=\"title\">Arenas</h1>\n              <div className=\"content is-small\">\n                <p>\n                  <strong>Smart contract</strong>\n                  <br />\n                  <a\n                    className=\"has-text-dark is-size-7\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x0eb288c413b5d5ec4aa0df5aea34d9538b28dd29\"\n                  >\n                    0x0eb288c413b5d5ec4aa0df5aea34d9538b28dd29\n                  </a>\n                </p>\n                <p>\n                  <strong>Press</strong>\n                  <br />\n                  <a\n                    // className=\"has-text-dark is-size-7\"\n                    href=\"https://neonewstoday.com/nft/ftw-arena-tickets-now-on-sale/\"\n                  >\n                    Article 1, &nbsp;\n                  </a>\n                  <a\n                    // className=\"has-text-dark is-size-7\"\n                    href=\"https://neonewstoday.com/gaming/forthewin-opens-the-arena-allowing-runes-to-battle-for-gas-prizes/\"\n                  >\n                    2\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"hero-foot\">\n          <nav className=\"tabs is-boxed\">\n            <div className=\"container\">\n              <ul>\n                {ARENA_LIST.map((arena) => {\n                  return (\n                    <li\n                      key={arena}\n                      className={\n                        location.pathname === TOURNAMENT_PATH + \"/\" + arena ||\n                        (location.pathname === TOURNAMENT_PATH &&\n                          arena === ARENA_LIST[0])\n                          ? \"is-active\"\n                          : \"\"\n                      }\n                    >\n                      <NavLink\n                        activeClassName=\"is-active\"\n                        to={TOURNAMENT_PATH + \"/\" + arena}\n                      >\n                        ARENA {arena}\n                      </NavLink>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </nav>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"box\">\n          <Route\n            exact={true}\n            path={TOURNAMENT_PATH}\n            component={(route) => (\n              <Arena defaultArena={ARENA_LIST[0]} {...route} />\n            )}\n          />\n          <Route\n            path={ARENA_PATH}\n            component={(route) => (\n              <Arena defaultArena={ARENA_LIST[0]} {...route} />\n            )}\n          />\n        </div>\n      </PageLayout>\n    </section>\n  );\n};\n\nexport default Tournament;\n","import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown, FaQuestionCircle } from \"react-icons/all\";\nimport NumberFormat from \"react-number-format\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\n\ninterface IInputProps {\n  contractHash: string;\n  symbol: string;\n  val: string;\n  heading?: string;\n  isLoading?: boolean;\n  setValue: (val: string, e: any) => void;\n  onClickAsset: () => void;\n  isReadOnly?: boolean;\n  userBalance?: number;\n}\nconst Input = ({\n  contractHash,\n  symbol,\n  val,\n  heading,\n  setValue,\n  onClickAsset,\n  isLoading,\n  isReadOnly,\n  userBalance,\n}: IInputProps) => {\n  const { network } = useWallet();\n  const logo = ASSET_LIST[network][contractHash]\n    ? ASSET_LIST[network][contractHash].logo\n    : undefined;\n  return (\n    <div className=\"\">\n      <div className=\"columns\">\n        <div className=\"column is-narrow\">\n          <div style={{ width: \"150px\" }}>\n            <div\n              className=\"media\"\n              style={{ alignItems: \"center\", display: \"flex\" }}\n            >\n              <div className=\"media-left\">\n                <div\n                  onClick={onClickAsset}\n                  style={{\n                    width: \"50px\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                  className=\"image is-clickable is-flex\"\n                >\n                  {logo ? <img src={logo} /> : <FaQuestionCircle size={35} />}\n                </div>\n              </div>\n              <div\n                onClick={onClickAsset}\n                className=\"media-content is-clickable\"\n              >\n                {heading && <p className=\"heading\">{heading}</p>}\n                <div style={{ alignItems: \"center\", display: \"flex\" }}>\n                  <span className=\"has-text-weight-bold\">\n                    {symbol ? symbol : \"Select\"}\n                  </span>\n                  <span className=\"icon\">\n                    <FaAngleDown />\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <div className={`control ${isLoading ? \"is-loading\" : \"\"}`}>\n            <NumberFormat\n              readOnly={isReadOnly}\n              // ref={this.props, inputRef}\n              // decimalScale={0}\n              inputMode=\"decimal\"\n              className=\"input\"\n              value={val}\n              onValueChange={(value, e) => {\n                if (e.source === \"event\") {\n                  setValue(value.value, e.event);\n                }\n              }}\n              thousandSeparator={true}\n              suffix={\" \" + symbol}\n              allowLeadingZeros={false}\n              // format={(val) => {} }\n            />\n            <div className=\"level is-mobile mt-1\">\n              <div className=\"level-left\">\n                <div className=\"level-item\">\n                  <small className=\"is-size-7\">Your balance</small>\n                </div>\n              </div>\n              <div className=\"level-right\">\n                <div className=\"level-item\">\n                  <small\n                    onClick={(e) => {\n                      if (userBalance) {\n                        // @ts-ignore\n                        setValue(userBalance, e);\n                      }\n                    }}\n                    className={`is-size-7 ${userBalance ? \"is-clickable\" : \"\"}`}\n                  >\n                    {userBalance ? userBalance : 0} {symbol}\n                  </small>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Modal from \"../../../../components/Modal\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { ASSETS } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaPlus } from \"react-icons/all\";\nimport { wallet } from \"@cityofzion/neon-core\";\nimport { toast } from \"react-hot-toast\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts/ftw/swap\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\ninterface IAssetListModalProps {\n  tokenA?: string;\n  tokenB?: string;\n  onClose: () => void;\n  onAssetClick: (assetHash: string, symbol: string) => void;\n}\n\ninterface IHashInputProp {\n  network: INetworkType;\n  onAssetClick: (assetHash: string, symbol: string) => void;\n}\nconst HashInput = ({ network, onAssetClick }: IHashInputProp) => {\n  const [customContractHash, setContractHash] = useState(\"\");\n  const firstInput = useRef(null);\n  const onAddContractHash = async () => {\n    let hash = customContractHash;\n    const ox = customContractHash.substring(0, 2);\n    if (ox === \"0x\") {\n      hash = customContractHash.substring(2);\n    }\n    if (wallet.isScriptHash(hash)) {\n      try {\n        const res = await new SwapContract(network).getContractSymbol(hash);\n        if (res) {\n          onAssetClick(hash, res);\n        } else {\n          toast.error(\"We cannot find token info with the given hash.\");\n        }\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please enter a valid contract script hash.\");\n    }\n  };\n\n  useEffect(() => {\n    // @ts-ignore\n    firstInput.current.focus();\n  }, []);\n\n  return (\n    <>\n      <label className=\"label is-marginless\">Enter a contract hash</label>\n      <p className=\"help has-text-grey\">\n        Example: 0xef4073a0f2b305a38ec4050e4d3d28bc40ea63f5\n      </p>\n      <hr />\n      <input\n        ref={firstInput}\n        className=\"input\"\n        value={customContractHash}\n        onChange={(e) => setContractHash(e.target.value)}\n      />\n      <hr />\n      <button\n        onClick={onAddContractHash}\n        disabled={!customContractHash}\n        className=\"button is-primary\"\n      >\n        Submit\n      </button>\n    </>\n  );\n};\n\nconst AssetListModal = ({\n  tokenA,\n  tokenB,\n  onAssetClick,\n  onClose,\n}: IAssetListModalProps) => {\n  const { network } = useWallet();\n  const [isCustomInputMode, setCustomInputMode] = useState(false);\n  const [customContractHash, setContractHash] = useState(\"\");\n  const assets = ASSETS(network).filter((asset) => {\n    return asset.contractHash !== tokenA && asset.contractHash !== tokenB;\n  });\n  const onAddContractHash = async () => {\n    let hash = customContractHash;\n    const ox = customContractHash.substring(0, 2);\n    if (ox === \"0x\") {\n      hash = customContractHash.substring(2);\n    }\n    if (wallet.isScriptHash(hash)) {\n      try {\n        const res = await new SwapContract(network).getContractSymbol(hash);\n        if (res) {\n          onAssetClick(hash, res);\n        } else {\n          toast.error(\"We cannot find token info with the given hash.\");\n        }\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please enter a valid contract script hash.\");\n    }\n  };\n\n  return (\n    <Modal onClose={onClose}>\n      {isCustomInputMode ? (\n        <HashInput network={network} onAssetClick={onAssetClick} />\n      ) : (\n        <div>\n          <h5 className=\"title is-6\">Select a token</h5>\n          <nav className=\"panel\">\n            {/*<div className=\"panel-block\">*/}\n            {/*  <p className=\"control has-icons-left\">*/}\n            {/*    <input className=\"input\" type=\"text\" placeholder=\"Search\" />*/}\n            {/*    <span className=\"icon is-left\">*/}\n            {/*      <i className=\"fas fa-search\" aria-hidden=\"true\"></i>*/}\n            {/*    </span>*/}\n            {/*  </p>*/}\n            {/*</div>*/}\n\n            {assets.length > 0 ? (\n              assets.map(({ contractHash, logo, symbol }) => {\n                return (\n                  <a\n                    onClick={() => onAssetClick(contractHash, symbol)}\n                    className=\"panel-block\"\n                    key={contractHash}\n                  >\n                    <div className=\"panel-icon\">\n                      <img src={logo} />\n                    </div>\n                    {symbol}\n                  </a>\n                );\n              })\n            ) : (\n              <div></div>\n            )}\n            <a\n              onClick={() => setCustomInputMode(true)}\n              className=\"panel-block\"\n              // key={contractHash}\n            >\n              <div className=\"panel-icon\">\n                <FaPlus />\n              </div>\n              Custom contract hash\n            </a>\n          </nav>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default AssetListModal;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleLeft } from \"react-icons/all\";\ninterface IHeaderBetweenProps {\n  path: string;\n  title: string;\n}\nconst HeaderBetween = (props: IHeaderBetweenProps) => {\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <div style={{ width: \"50px\" }}>\n        <Link className=\"button is-white is-small\" to={props.path}>\n          <span className=\"icon\">\n            <FaAngleLeft />\n          </span>\n          <span>Main</span>\n        </Link>\n      </div>\n\n      <h1 className=\"title is-5 has-text-centered is-marginless\">\n        {props.title}\n      </h1>\n      <div style={{ width: \"50px\" }} />\n    </div>\n  );\n};\n\nexport default HeaderBetween;\n","import React, { useEffect, useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport AssetListModal from \"../../components/AssetListModal\";\nimport { toast } from \"react-hot-toast\";\nimport { getEstimate } from \"../../../../../packages/neo/contracts/ftw/swap/helpers\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleLeft, FaExchangeAlt } from \"react-icons/all\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { Link, useLocation } from \"react-router-dom\";\n// tslint:disable-next-line:no-implicit-dependencies\nimport queryString from \"query-string\";\nimport { SWAP_PATH } from \"../../../../../consts\";\nimport HeaderBetween from \"../../../../components/HeaderBetween\";\nimport Switch from \"react-switch\";\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nconst Liquidity = (props) => {\n  const location = useLocation();\n  const params = queryString.parse(location.search);\n  const isNewPoolMode = !params.tokenA && !params.tokenB;\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [isAssetChangeModalActive, setAssetChangeModalActive] = useState<\n    \"A\" | \"B\" | \"\"\n  >(\"\");\n\n  const [tokenA, setTokenA] = useState<any>(\n    params.tokenA ? params.tokenA : undefined\n  );\n  const [tokenB, setTokenB] = useState<any>(\n    params.tokenB ? params.tokenB : undefined\n  );\n  const [symbolA, setSymbolA] = useState<any>(\n    params.symbolA ? params.symbolA : undefined\n  );\n  const [symbolB, setSymbolB] = useState<any>(\n    params.symbolB ? params.symbolB : undefined\n  );\n\n  const [amountA, setAmountA] = useState(\"\");\n  const [amountB, setAmountB] = useState(\"\");\n\n  const [selectedLock, setSelectedLock] = useState(false);\n  const [lockUntil, setUntil] = useState(new Date());\n  const [reserve, setReserve] = useState<any>();\n  const [isPairLoading, setPairLoading] = useState(false);\n  const [txid, setTxid] = useState(\"\");\n\n  const onAssetChange = (type: \"A\" | \"B\" | \"\") => {\n    if (isNewPoolMode) {\n      setAssetChangeModalActive(type);\n    }\n  };\n\n  const onAssetClick = (assetHash, symbol) => {\n    if (isAssetChangeModalActive === \"A\") {\n      setTokenA(assetHash);\n      setSymbolA(symbol);\n    } else {\n      setTokenB(assetHash);\n      setSymbolB(symbol);\n    }\n    setAssetChangeModalActive(\"\");\n  };\n\n  const onSuccess = () => {\n    setAmountA(\"\");\n    setAmountB(\"\");\n    setTxid(\"\");\n  };\n\n  const onAddLiquidity = async () => {\n    if (connectedWallet) {\n      if (tokenA && tokenB && amountA && amountB) {\n        try {\n          const milliseconds = selectedLock ? moment(lockUntil).valueOf() : 0;\n          const res = await new SwapContract(network).provide(\n            connectedWallet,\n            tokenA,\n            amountA,\n            tokenB,\n            amountB,\n            milliseconds\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.description ? e.description : e.message);\n        }\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onTokenAAmountChange = (type: \"A\" | \"B\", val: string) => {\n    if (type === \"A\") {\n      if (\n        tokenB &&\n        reserve &&\n        reserve.pair[tokenA] !== 0 &&\n        reserve.pair[tokenB] !== 0\n      ) {\n        const estimated = getEstimate(\n          val,\n          reserve.pair[tokenA],\n          reserve.pair[tokenB]\n        );\n        setAmountB(estimated.toString());\n      }\n      setAmountA(val);\n    } else {\n      if (\n        tokenA &&\n        tokenB &&\n        reserve &&\n        reserve.pair[tokenA] !== 0 &&\n        reserve.pair[tokenB] !== 0\n      ) {\n        const estimated = getEstimate(\n          val,\n          reserve.pair[tokenB],\n          reserve.pair[tokenA]\n        );\n        setAmountA(estimated.toString());\n      }\n      setAmountB(val);\n    }\n  };\n\n  const onSwitch = () => {\n    setTokenB(tokenA);\n    setTokenA(tokenB ? tokenB : \"\");\n    setAmountB(amountA);\n    setAmountA(amountB);\n    setSymbolA(symbolB);\n    setSymbolB(symbolA);\n  };\n\n  useEffect(() => {\n    async function fetchPair(A, B) {\n      try {\n        setPairLoading(true);\n        const res = await new SwapContract(network).getReserve(\n          A,\n          B,\n          connectedWallet\n        );\n        setPairLoading(false);\n        setReserve(res);\n        if (\n          tokenA &&\n          tokenB &&\n          amountA &&\n          !amountB &&\n          res[tokenA] !== 0 &&\n          res[tokenB] !== 0\n        ) {\n          const estimated = getEstimate(amountA, res[tokenA], res[tokenB]);\n          setAmountB(estimated.toString());\n        }\n        if (\n          tokenA &&\n          tokenB &&\n          amountB &&\n          !amountA &&\n          res[tokenA] !== 0 &&\n          res[tokenB] !== 0\n        ) {\n          // @ts-ignore\n          const estimated = getEstimate(amountB, res[tokenB], res[tokenA]);\n          setAmountA(estimated.toString());\n        }\n      } catch (e: any) {\n        console.error(e);\n        // setError(e.message);\n      }\n    }\n    if (tokenA && tokenB) {\n      fetchPair(tokenA, tokenB);\n    }\n  }, [tokenA, tokenB]);\n\n  const noLiquidity =\n    reserve && reserve.pair[tokenA] === 0 && reserve.pair[tokenB] === 0;\n  return (\n    <>\n      <HeaderBetween\n        path={SWAP_PATH}\n        title={noLiquidity ? \"Create a new pool\" : \"Provide liquidity\"}\n      />\n      <hr />\n      {noLiquidity && (\n        <div className=\"notification is-info\">\n          <strong>Liquidity Provider Rewards</strong>\n          <br />\n          Liquidity providers earn a 0.25% fee on all trades proportional to\n          their share of the pool. Fees are added to the pool, accrue in real\n          time and can be claimed by withdrawing your liquidity.\n        </div>\n      )}\n\n      <div className=\"is-relative\">\n        <Input\n          heading=\"Pair A\"\n          onClickAsset={() => {\n            onAssetChange(\"A\");\n          }}\n          contractHash={tokenA}\n          symbol={symbolA}\n          val={amountA}\n          setValue={(val, e) => onTokenAAmountChange(\"A\", val)}\n          userBalance={reserve ? reserve.balances[tokenA] : undefined}\n        />\n        <div className=\"pt-4 pb-4\">\n          <button onClick={onSwitch} className=\"button is-white is-fullwidth\">\n            <FaExchangeAlt />\n          </button>\n        </div>\n        <Input\n          heading=\"Pair B\"\n          isLoading={isPairLoading}\n          onClickAsset={() => {\n            onAssetChange(\"B\");\n          }}\n          contractHash={tokenB}\n          symbol={symbolB}\n          val={amountB}\n          setValue={(val, e) => onTokenAAmountChange(\"B\", val)}\n          userBalance={reserve && tokenB ? reserve.balances[tokenB] : undefined}\n        />\n        {connectedWallet ? (\n          tokenA && tokenB && amountA && amountB ? (\n            <>\n              <hr />\n              <div className=\"mb-4\">\n                <div className=\"level is-mobile\">\n                  <div className=\"level-left\">\n                    <div className=\"level-item\">\n                      <label style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <span className=\"mr-3\">Lock liquidity</span>\n                        <Switch\n                          onChange={() => setSelectedLock(!selectedLock)}\n                          checked={selectedLock}\n                        />\n                      </label>\n                    </div>\n                  </div>\n                  {selectedLock && (\n                    <div className=\"level-right\">\n                      <div className=\"level-item\">\n                        <DatePicker\n                          selected={lockUntil}\n                          onChange={(date) => setUntil(date)}\n                          timeInputLabel=\"Time:\"\n                          dateFormat=\"MM/dd/yyyy h:mm aa\"\n                          showTimeInput\n                          minDate={lockUntil}\n                        />\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <button\n                disabled={\n                  reserve.balances[tokenA] < parseFloat(amountA) ||\n                  reserve.balances[tokenB] < parseFloat(amountB)\n                }\n                onClick={onAddLiquidity}\n                className=\"button is-fullwidth is-primary\"\n              >\n                Add Liquidity\n              </button>\n            </>\n          ) : (\n            <div />\n          )\n        ) : (\n          <>\n            <hr />\n            <button\n              onClick={openWalletModal}\n              className=\"button is-fullwidth is-primary\"\n            >\n              Connect wallet\n            </button>\n          </>\n        )}\n      </div>\n\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onSuccess}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n\n      {isAssetChangeModalActive && (\n        <AssetListModal\n          tokenA={tokenA}\n          tokenB={tokenB}\n          onAssetClick={onAssetClick}\n          onClose={() => setAssetChangeModalActive(\"\")}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Liquidity;\n","import React, { useState } from \"react\";\nimport { truncateAddress } from \"../../packages/neo/utils\";\ninterface ITruncatedAddressProps {\n  address: string;\n}\nconst TruncatedAddress = ({ address }: ITruncatedAddressProps) => {\n  const [isFiltered, setFilter] = useState(true);\n  return (\n    <span onClick={() => setFilter(!isFiltered)}>\n      {isFiltered ? truncateAddress(address) : address}\n    </span>\n  );\n};\n\nexport default TruncatedAddress;\n","import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-implicit-dependencies\nimport queryString from \"query-string\";\nimport Pagination from \"bulma-pagination-react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SWAP_PATH } from \"../../../../../consts\";\nimport HeaderBetween from \"../../../../components/HeaderBetween\";\nimport TruncatedAddress from \"../../../../components/TruncatedAddress\";\n\nconst History = () => {\n  const location = useLocation();\n  const params = queryString.parse(location.search);\n  const { tokenA, tokenB, page, symbolA, symbolB } = params;\n  const { network } = useWallet();\n  const [isLoading, setLoading] = useState(false);\n  const [data, setData] = useState<any>();\n  const [currentPage, setPage] = useState(page ? page : \"1\");\n\n  const assetObj = {\n    [tokenA]: symbolA,\n    [tokenB]: symbolB,\n  };\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      try {\n        const res = await new SwapContract(network).getSwapHistory(\n          tokenA,\n          tokenB,\n          currentPage\n        );\n        setData(res);\n\t      setLoading(false);\n      } catch (e: any) {\n        console.error(e.message);\n        setLoading(false);\n      }\n    }\n    fetch();\n  }, [location, currentPage]);\n  // if (isLoading) return <div>History loading..</div>;\n  // if (!data) return <div>Failed to load data from the chain</div>;\n  return (\n    <div>\n      <HeaderBetween path={SWAP_PATH} title={\"Swap history\"} />\n      <hr />\n\n      <div className=\"table-container\">\n        <table className=\"table is-fullwidth\">\n          <thead>\n            <tr>\n              <th>In</th>\n              <th>Out</th>\n              <th>Address</th>\n            </tr>\n          </thead>\n          <tbody>\n            {isLoading ? (\n              <tr>\n                <td>Loading..</td>\n              </tr>\n            ) : data ? (\n              data.items.length > 0 ? (\n                data.items.map((swap, i) => {\n                  const symbolIn = assetObj[swap.tokenIn];\n                  const symbolOut = assetObj[swap.tokenOut];\n                  return (\n                    <tr key={`swap-${i}`}>\n                      <td>\n                        <strong>{symbolIn}</strong>&nbsp;{swap.tokenInAmount}\n                      </td>\n                      <td>\n                        <strong>{symbolOut}</strong>&nbsp;{swap.tokenOutAmount}\n                      </td>\n                      <td>\n                        <TruncatedAddress address={swap.account} />\n                      </td>\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr>\n                  <td>No swap history</td>\n                </tr>\n              )\n            ) : (\n              <tr>\n                <td>Something went wrong</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        {data && data.totalPages > 1 && (\n          <div className=\"media\">\n            <div className=\"media-content\">\n              <Pagination\n                pages={data.totalPages}\n                currentPage={currentPage}\n                onChange={(_page) => {\n                  if (currentPage !== _page) {\n                    setPage(_page);\n                  }\n                }}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport { PAIR_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\ninterface IPairSelectProps {\n  onSelect: (val: { tokenA: string; tokenB: string }) => void;\n}\nconst PairSelect = ({ onSelect }: IPairSelectProps) => {\n  const { network } = useWallet();\n  return (\n    <Select\n      onChange={(target) => {\n        if (target) {\n          onSelect(target.value);\n        }\n      }}\n      options={PAIR_LIST[network]}\n    />\n  );\n};\n\nexport default PairSelect;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport {\n  FTW_SCRIPT_HASH,\n  SwapContract,\n} from \"../../../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport Input from \"../../components/Input\";\nimport AssetListModal from \"../../components/AssetListModal\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleLeft, FaExchangeAlt } from \"react-icons/all\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { SWAP_PATH, SWAP_PATH_LIQUIDITY_ADD } from \"../../../../../consts\";\n// tslint:disable-next-line:no-implicit-dependencies\nimport queryString from \"query-string\";\nimport { LocalStorage } from \"../../../../../packages/neo/local-storage\";\nimport PairSelect from \"../../components/PairSelect\";\nimport { IPairInfo } from \"../../../../../packages/neo/contracts/ftw/swap/interfaces\";\n\nconst Swap = () => {\n  const location = useLocation();\n  const params = queryString.parse(location.search);\n\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [isAssetChangeModalActive, setAssetChangeModalActive] = useState<\n    \"A\" | \"B\" | \"\"\n  >(\"\");\n  // Temporary disabled\n  // const cachedTokenA = LocalStorage.getSwapTokenA();\n  // const cachedTokenB = LocalStorage.getSwapTokenB();\n\n  const [tokenA, setTokenA] = useState<any>(\n    params.tokenA ? params.tokenA : undefined\n  );\n  const [tokenB, setTokenB] = useState<any>(\n    params.tokenB ? params.tokenB : undefined\n  );\n  const [symbolA, setSymbolA] = useState<any>(\n    params.symbolA ? params.symbolA : undefined\n  );\n  const [symbolB, setSymbolB] = useState<any>(\n    params.symbolB ? params.symbolB : undefined\n  );\n  const [amountA, setAmountA] = useState(\"\");\n  const [amountB, setAmountB] = useState(\"\");\n  const [data, setData] = useState<IPairInfo | undefined>();\n  const [isPairLoading, setPairLoading] = useState(false);\n  const [txid, setTxid] = useState(\"\");\n  const onAssetChange = (type: \"A\" | \"B\" | \"\") => {\n    // Temporary disable\n    // setAssetChangeModalActive(type);\n  };\n\n  const onAssetClick = (assetHash) => {\n    if (isAssetChangeModalActive === \"A\") {\n      LocalStorage.setSwapTokenA(assetHash);\n      setTokenA(assetHash);\n      if (tokenB) {\n        loadPair(assetHash, tokenB);\n      }\n    } else {\n      LocalStorage.setSwapTokenB(assetHash);\n      setTokenB(assetHash);\n      if (tokenA) {\n        loadPair(tokenA, assetHash);\n      }\n    }\n    setAssetChangeModalActive(\"\");\n  };\n\n  const onTokenAAmountChange = async (val: string) => {\n    setAmountA(val);\n    if (tokenB) {\n      const res = await new SwapContract(network).getEstimate(\n        tokenA,\n        tokenB,\n        tokenA,\n        val\n      );\n      setAmountB(res as any);\n    }\n  };\n\n  const onSuccess = () => {\n    setAmountA(\"0\");\n    setAmountB(\"0\");\n    setTxid(\"\");\n  };\n\n  const onPairSelect = (pair: { tokenA: string; tokenB: string }) => {\n    loadPair(pair.tokenA, pair.tokenB);\n    setTokenA(pair.tokenA);\n    setTokenB(pair.tokenB);\n  };\n\n  const onSwap = async () => {\n    if (connectedWallet) {\n      if (tokenA && tokenB && amountA && amountB) {\n        try {\n          const res = await new SwapContract(network).swap(\n            connectedWallet,\n            tokenA,\n            amountA,\n            tokenB,\n            amountB\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.description ? e.description : e.message);\n        }\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n  const onSwitch = async () => {\n    setTokenB(tokenA);\n    setTokenA(tokenB ? tokenB : \"\");\n    setAmountB(amountA);\n    setAmountA(amountB);\n    setSymbolA(symbolB);\n    setSymbolB(symbolA);\n    if (tokenB && amountB && amountB !== \"0\" && tokenA) {\n      const estimated = await new SwapContract(network).getEstimate(\n        tokenB,\n        tokenA,\n        tokenB,\n        amountB\n      );\n      setTokenB(tokenA);\n      setTokenA(tokenB ? tokenB : \"\");\n      setAmountA(amountB);\n      setAmountB(estimated ? estimated.toString() : \"\");\n    } else {\n      setTokenB(tokenA);\n      setTokenA(tokenB ? tokenB : \"\");\n      setAmountB(amountA);\n      setAmountA(amountB);\n    }\n  };\n\n  const loadPair = async (A, B) => {\n    setPairLoading(true);\n    const res = await new SwapContract(network).getReserve(\n      A,\n      B,\n      connectedWallet\n    );\n    setData(res);\n    setPairLoading(false);\n    if (amountA && res.pair[tokenA] !== 0) {\n      const estimated = await new SwapContract(network).getEstimate(\n        A,\n        B,\n        A,\n        amountA\n      );\n      // @ts-ignore\n      // const estimated = getEstimate(amountA, res[A], res[B]);\n      setAmountB(estimated ? estimated.toString() : \"\");\n    } else {\n      setAmountB(\"\");\n    }\n  };\n\n  useEffect(() => {\n    if (params.tokenA && params.tokenB) {\n      loadPair(params.tokenA, params.tokenB);\n    }\n  }, [location]);\n\n  const noLiquidity =\n    data && data.pair[tokenA] === 0 && data.pair[tokenB] === 0;\n\n  const priceImpact =\n    data && amountB ? (parseFloat(amountB) / data.pair[tokenB]) * 100 : 0;\n  return (\n    <div>\n      <Link className=\"button is-white\" to={SWAP_PATH}>\n        <span className=\"icon\">\n          <FaAngleLeft />\n        </span>\n        <span>Pools</span>\n      </Link>\n      <hr />\n      <>\n        {noLiquidity && (\n          <div className=\"notification is-info\">\n            No liquidity with the pairs. Provide liquidity and earn fees.\n            <br />\n            <br />\n            <Link\n              className=\"button is-small is-light\"\n              to={\n                tokenA && tokenB && symbolA && symbolB\n                  ? `${SWAP_PATH_LIQUIDITY_ADD}?tokenA=${tokenA}&tokenB=${tokenB}&symbolA=${symbolA}&symbolB=${symbolB}`\n                  : SWAP_PATH_LIQUIDITY_ADD\n              }\n            >\n              Go to liquidity page\n            </Link>\n          </div>\n        )}\n\n        {tokenA && tokenB ? (\n          <>\n            <Input\n              contractHash={tokenA}\n              symbol={symbolA}\n              heading=\"Swap From\"\n              onClickAsset={() => onAssetChange(\"A\")}\n              val={amountA}\n              setValue={(val, e) => onTokenAAmountChange(val)}\n              userBalance={\n                connectedWallet && data ? data.balances[tokenA] : undefined\n              }\n            />\n            <div className=\"pt-4 pb-4\">\n              <button\n                onClick={onSwitch}\n                className=\"button is-white is-fullwidth\"\n              >\n                <FaExchangeAlt />\n              </button>\n            </div>\n            <Input\n              contractHash={tokenB}\n              symbol={symbolB}\n              isReadOnly={true}\n              heading=\"Swap To\"\n              isLoading={isPairLoading}\n              onClickAsset={() => {\n                onAssetChange(\"B\");\n              }}\n              val={amountB}\n              // setValue={(val, e) => onTokenAAmountChange(\"B\", val, e)}\n              setValue={(val, e) => {\n                return false;\n              }}\n              userBalance={\n                connectedWallet && data ? data.balances[tokenB] : undefined\n              }\n            />\n            {connectedWallet ? (\n              tokenA && tokenB && amountA && amountB ? (\n                <>\n                  {/*<div className=\"box\">*/}\n                  {/*  {`${tokenBofA} ${ASSET_LIST[tokenB].symbol} per ${ASSET_LIST[tokenA].symbol}`}*/}\n                  {/*  /!*<br />*!/*/}\n                  {/*  /!*{`${tokenAofB} ${ASSET_LIST[tokenA].symbol} per ${ASSET_LIST[tokenB].symbol}`}*!/*/}\n                  {/*</div>*/}\n                  <hr />\n                  <button\n                    disabled={\n                      (data && data.balances[tokenA] < parseFloat(amountA)) ||\n                      (data && data.pair[tokenB] < parseFloat(amountB)) ||\n                      priceImpact > 10\n                    }\n                    onClick={onSwap}\n                    className={`button is-fullwidth is-primary ${\n                      priceImpact > 10 ? \"is-danger\" : \"\"\n                    }`}\n                  >\n                    {priceImpact > 10 ? \"Price impact is too high\" : \"Swap\"}\n                  </button>\n                </>\n              ) : (\n                <div />\n              )\n            ) : (\n              <>\n                <hr />\n                <button\n                  onClick={openWalletModal}\n                  className=\"button is-fullwidth is-primary\"\n                >\n                  Connect wallet\n                </button>\n              </>\n            )}\n          </>\n        ) : (\n          <>\n            <label className=\"label\">Select a pair</label>\n            <PairSelect onSelect={onPairSelect} />\n          </>\n        )}\n      </>\n\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onSuccess}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n\n      {isAssetChangeModalActive && (\n        <AssetListModal\n          tokenA={tokenA}\n          tokenB={tokenB}\n          onAssetClick={onAssetClick}\n          onClose={() => setAssetChangeModalActive(\"\")}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Swap;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../../../packages/neo/contracts\";\nimport { IConnectedWallet } from \"../../../../../../../packages/neo/wallet/interfaces\";\nimport { toast } from \"react-hot-toast\";\nimport { getUserShare } from \"../../../../../../../packages/neo/contracts/ftw/swap/helpers\";\nimport { ASSET_LIST } from \"../../../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\ninterface IFarmDetailProps {\n  tokenA: string;\n  tokenB: string;\n  amountA: string;\n  amountB: string;\n  connectedWallet: IConnectedWallet;\n}\nconst FarmDetail = ({ connectedWallet, tokenA, tokenB }: IFarmDetailProps) => {\n  const [data, setData] = useState<any>();\n  const [claimable, setClaimable] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const { network } = useWallet();\n  const [txid, setTxid] = useState(\"\");\n  const [reloadCnt, setReloadCnt] = useState(0);\n\n  const onRemoveLiquidity = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SwapContract(network).remove(\n          connectedWallet,\n          tokenA\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SwapContract(network).claim(\n          connectedWallet,\n          tokenA,\n          tokenB\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onActionSuccess = () => {\n    setReloadCnt(reloadCnt + 1);\n    setTxid(\"\");\n  };\n  //\n  // useEffect(() => {\n  //   async function fetch() {\n  //     setLoading(true);\n  //     const res1 = await new SwapContract(network).getUserStake(\n  //       connectedWallet,\n  //       tokenA,\n  //       tokenB\n  //     );\n  //     const res2 = await new SwapContract(network).getClaimAble(\n  //       connectedWallet,\n  //       tokenA,\n  //       tokenB\n  //     );\n  //     setLoading(false);\n  //     setData(res1);\n  //     setClaimable(res2);\n  //   }\n  //   fetch();\n  // }, [reloadCnt]);\n\n  if (isLoading) return <div>Loading..</div>;\n\n  const userShare = data\n    ? getUserShare(\n        data.pair.totalShare,\n        data.stake.amountA,\n        data.pair.amountA,\n        data.pair.amountB\n      )\n    : undefined;\n  console.log(\n    data\n      ? \"original staking: \" + data.stake.amountA + \"/\" + data.stake.amountB\n      : \"No staking info\"\n  );\n  return (\n    <div>\n      {txid ? (\n        <AfterTransactionSubmitted\n          txid={txid}\n          network={network}\n          onSuccess={onActionSuccess}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title is-5\">My liquidity</h1>\n          {data ? (\n            <div>\n              <div style={{ alignItems: \"center\" }} className=\"media\">\n                <div className=\"media-content is-vcentered\">\n                  {ASSET_LIST[network][tokenA].symbol} /{\" \"}\n                  {ASSET_LIST[network][tokenB].symbol}\n                  <br />\n                  <small>\n                    {/*{data.stake.amountA} / {data.stake.amountB}*/}\n                    {/*<br />*/}\n                    {userShare ? userShare.amountA : 0} /{\" \"}\n                    {userShare ? userShare.amountB : 0}\n                  </small>\n                </div>\n                <div className=\"media-right\">\n                  <button\n                    onClick={onRemoveLiquidity}\n                    className=\"button is-light\"\n                  >\n                    Remove\n                  </button>\n                </div>\n              </div>\n              <hr />\n              <div style={{ alignItems: \"center\" }} className=\"media\">\n                <div className=\"media-content is-vcentered\">\n                  Claimable\n                  <br />\n                  {ASSET_LIST[network][tokenA].symbol} /{\" \"}\n                  {ASSET_LIST[network][tokenB].symbol}\n                  <br />\n                  <small>\n                    {claimable ? claimable.amountA : 0} /{\" \"}\n                    {claimable ? claimable.amountB : 0}\n                  </small>\n                </div>\n                <div className=\"media-right\">\n                  <button onClick={onClaim} className=\"button is-primary\">\n                    Claim\n                  </button>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div>There is no liquidity with your connected wallet</div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FarmDetail;\n","import React, { useState } from \"react\";\nimport { wallet } from \"@cityofzion/neon-core\";\nimport { toast } from \"react-hot-toast\";\nimport {\n  FTW_SCRIPT_HASH,\n  NUDES_SCRIPT_HASH,\n  SwapContract,\n} from \"../../../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { useHistory } from \"react-router-dom\";\nimport { SWAP_PATH_LIQUIDITY_ADD } from \"../../../../../../../consts\";\n\nconst CreatePool = (props) => {\n  const { network } = useWallet();\n  const history = useHistory();\n  const [tokenA, setTokenA] = useState<string | undefined>();\n  const [tokenB, setTokenB] = useState<string | undefined>();\n  const [isLoading, setLoading] = useState(false);\n  const [errors, setErrors] = useState<string[]>([]);\n  const handleSubmit = async () => {\n    setErrors([]);\n    setLoading(true);\n    const _errors: string[] = [];\n\n    if (\n      !wallet.isScriptHash(tokenA as string) ||\n      !wallet.isScriptHash(tokenB as string)\n    ) {\n      _errors.push(\"Check contract hashes\");\n    }\n\n    if (tokenA === tokenB) {\n      _errors.push(\"Token A and Token B cannot be the same.\");\n    }\n\n    if (_errors.length === 0) {\n      const res = await new SwapContract(network).getContractHashes(\n        // @ts-ignore\n        tokenA,\n        tokenB\n      );\n\n      if (res.tokenA.decimals !== \"8\" || res.tokenB.decimals !== \"8\") {\n        _errors.push(\"We only can support tokens with 8 decimals.\");\n      }\n\n      if (res.reserve.amountA === 0 || res.reserve.amountB !== 0) {\n        _errors.push(\"There is existing pool.\");\n      }\n    }\n\n    if (_errors.length === 0) {\n      history.push(\n        `${SWAP_PATH_LIQUIDITY_ADD}?tokenA=${tokenA}&tokenB=${tokenB}`\n      );\n    } else {\n      setLoading(false);\n      setErrors(_errors);\n    }\n  };\n  return (\n    <div>\n      <h1 className=\"title\">Create a new swap pool</h1>\n      {errors.length > 0 ? (\n        <div className=\"notification is-danger content\">\n          <strong>Please check following messages</strong>\n          <br />\n          <ul>\n            {errors.map((err) => (\n              <li key={err}>{err}</li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div className=\"notification is-info\">\n          <strong>Liquidity Provider Rewards</strong>\n          <br />\n          Liquidity providers earn a 0.25% fee on all trades proportional to\n          their share of the pool. Fees are added to the pool, accrue in real\n          time and can be claimed by withdrawing your liquidity.\n        </div>\n      )}\n\n      <hr />\n      <div className=\"field\">\n        <label className=\"label\">Token A</label>\n        <input\n          value={tokenA}\n          onChange={(e: any) => setTokenA(e.target.value)}\n          className=\"input\"\n        />\n      </div>\n      <div className=\"field\">\n        <label className=\"label\">Token B</label>\n        <input\n          value={tokenB}\n          onChange={(e: any) => setTokenB(e.target.value)}\n          className=\"input\"\n        />\n      </div>\n      <hr />\n      <button\n        onClick={handleSubmit}\n        disabled={!tokenA || !tokenB}\n        className={`button is-primary ${isLoading ? \"is-loading\" : \"\"}`}\n      >\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default CreatePool;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  SWAP_PATH_HISTORY,\n  SWAP_PATH_LIQUIDITY_ADD,\n  SWAP_PATH_LP_LIST,\n  SWAP_PATH_TRADE,\n} from \"../../../../../consts\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport {\n  FaHistory,\n  FaPlusCircle,\n  FaPlusSquare,\n  FaUsers,\n  RiHandCoinFill,\n} from \"react-icons/all\";\n\ninterface IPoolCardProps {\n  tokenA: string;\n  tokenB: string;\n  amountA: number;\n  amountB: number;\n}\nconst PoolCard = ({ tokenA, tokenB, amountA, amountB }: IPoolCardProps) => {\n  const { network } = useWallet();\n  const [tokenASymbol, setTokenASymbol] = useState(\"\");\n  const [tokenBSymbol, setTokenBSymbol] = useState(\"\");\n  useEffect(() => {\n    async function fetchTokenInfo() {\n      const res = await new SwapContract(network).getContractHashes(\n        tokenA,\n        tokenB\n      );\n      setTokenASymbol(res.tokenA.symbol);\n      setTokenBSymbol(res.tokenB.symbol);\n    }\n    fetchTokenInfo();\n  }, [tokenA, tokenB]);\n  return (\n    <div style={{ alignItems: \"center\" }} className=\"media\">\n      <div className=\"media-left\">\n        <strong>TVL</strong>\n      </div>\n      <div className=\"media-content is-vcentered\">\n        <div className=\"content\">\n          {tokenASymbol} / {tokenBSymbol}\n          <br />\n          <small>\n            {amountA.toLocaleString()} / {amountB.toLocaleString()}\n          </small>\n        </div>\n\n        <div className=\"level is-mobile\">\n          <div className=\"level-left\">\n            <div className=\"level-item\">\n              <span className=\"icon is-small\">\n                <Link\n                  className=\"has-text-grey\"\n                  to={{\n                    pathname: `${SWAP_PATH_HISTORY}`,\n                    search: `?tokenA=${tokenA}&tokenB=${tokenB}&symbolA=${tokenASymbol}&symbolB=${tokenBSymbol}`,\n                  }}\n                >\n                  <FaHistory />\n                </Link>\n              </span>\n            </div>\n\n            <div className=\"level-item\">\n              <span className=\"icon is-small\">\n                <Link\n\t                className=\"has-text-grey\"\n                  to={{\n                    pathname: `${SWAP_PATH_LIQUIDITY_ADD}`,\n                    search: `?tokenA=${tokenA}&tokenB=${tokenB}&symbolA=${tokenASymbol}&symbolB=${tokenBSymbol}`,\n                  }}\n                >\n                  <FaPlusSquare />\n                </Link>\n              </span>\n            </div>\n\n\t          <div className=\"level-item\">\n\t\t          <span className=\"icon is-small\">\n\t\t\t          <Link\n\t\t\t\t          className=\"has-text-grey\"\n\t\t\t\t          to={{\n\t\t\t\t\t          pathname: `${SWAP_PATH_LP_LIST}`,\n\t\t\t\t\t          search: `?tokenA=${tokenA}&tokenB=${tokenB}&symbolA=${tokenASymbol}&symbolB=${tokenBSymbol}`,\n\t\t\t\t          }}\n\t\t\t          >\n\t\t\t\t          <RiHandCoinFill />\n\t\t\t          </Link>\n\t\t          </span>\n\t          </div>\n\n          </div>\n        </div>\n      </div>\n      <div className=\"media-right\">\n        <Link\n          to={{\n            pathname: `${SWAP_PATH_TRADE}`,\n            search: `?tokenA=${tokenA}&tokenB=${tokenB}&symbolA=${tokenASymbol}&symbolB=${tokenBSymbol}`,\n          }}\n          // onClick={() => setDetail(item)}\n          className=\"button is-primary\"\n        >\n          Trade\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default PoolCard;\n","import React, { useEffect, useState } from \"react\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport { Link } from \"react-router-dom\";\nimport {\n  SWAP_PATH_HISTORY,\n  SWAP_PATH_LIQUIDITY_ADD,\n  SWAP_PATH_LIQUIDITY_REMOVE,\n  SWAP_PATH_TRADE,\n} from \"../../../../../consts\";\nimport Modal from \"../../../../components/Modal\";\nimport FarmDetail from \"../Farm/scenes/Detail\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport CreatePool from \"../Farm/scenes/CreatePool\";\nimport PoolCard from \"../../components/PoolCard\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaMinus, FaPlus } from \"react-icons/all\";\n\nconst PairList = (props) => {\n  const { network, connectedWallet } = useWallet();\n  const [list, setList] = useState<any[]>([]);\n  const [detail, setDetail] = useState();\n  const [isCreateModalActive, setCreateModalActive] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      try {\n        const res = await new SwapContract(network).getPairs();\n        setLoading(false);\n        setList(res);\n      } catch (e: any) {\n        setLoading(false);\n        setError(e.message);\n      }\n    }\n    fetch();\n  }, []);\n  // if (isLoading) return <div>Loading..</div>;\n  return (\n    <div>\n      <div className=\"level is-mobile\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-5\">Pools</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <div className=\"buttons\">\n              <Link\n                to={SWAP_PATH_LIQUIDITY_ADD}\n                // onClick={() => setCreateModalActive(true)}\n                className=\"button is-light is-small\"\n              >\n                <FaPlus />\n              </Link>\n              <Link\n                to={SWAP_PATH_LIQUIDITY_REMOVE}\n                // onClick={() => setCreateModalActive(true)}\n                className=\"button is-light is-small\"\n              >\n                <FaMinus />\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n      <hr />\n\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : (\n        list.map((item, i) => {\n          return <PoolCard key={`pool-${i}`} {...item} />;\n        })\n      )}\n\n      {isCreateModalActive && (\n        <Modal onClose={() => setCreateModalActive(false)}>\n          <CreatePool />\n        </Modal>\n      )}\n\n      {detail && connectedWallet && (\n        <Modal onClose={() => setDetail(undefined)}>\n          <div>\n            <FarmDetail connectedWallet={connectedWallet} {...detail} />\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default PairList;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { toDecimal } from \"../../../../../packages/neo/utils\";\ninterface ILPTokenListProps {\n  tokenId: string;\n  name: string;\n  amount: string;\n  lock: string;\n  onRemove: (tokenId: string) => void;\n}\nconst LPTokenList = (props: ILPTokenListProps) => {\n  const now = moment.utc().valueOf();\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        {props.name} / {toDecimal(props.amount)}\n        <br />\n        {props.lock && props.lock !== \"0\" ? (\n          <div>Locked until {moment(parseFloat(props.lock)).format(\"lll\")}</div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n      <div className=\"media-right\">\n        <button\n          disabled={\n            props.lock && props.lock !== \"0\"\n              ? now < parseFloat(props.lock)\n              : false\n          }\n          onClick={() => props.onRemove(props.tokenId)}\n          className=\"button is-light is-small\"\n        >\n          Withdraw\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LPTokenList;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport LPTokenList from \"./LPTokenList\";\nimport HeaderBetween from \"../../../../components/HeaderBetween\";\nimport { SWAP_PATH } from \"../../../../../consts\";\n\nconst RemoveLiquidity = (props) => {\n  const { network, connectedWallet } = useWallet();\n  const [isLoading, setLoading] = useState<any>(true);\n  const [tokens, setTokens] = useState<any>([]);\n  const [txid, setTxid] = useState(\"\");\n\n  const onRemoveLiquidity = async (tokenId) => {\n    if (connectedWallet) {\n      try {\n        const res = await new SwapContract(network).remove(\n          connectedWallet,\n          tokenId\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onSuccess = () => {\n    setTxid(\"\");\n  };\n\n  useEffect(() => {\n    async function fetchTokens(w) {\n      const res = await new SwapContract(network).getLPTokens(w);\n      setLoading(false);\n      setTokens(res);\n    }\n    if (connectedWallet) {\n      fetchTokens(connectedWallet);\n    }\n  }, [connectedWallet]);\n\n  return (\n    <>\n      <HeaderBetween path={SWAP_PATH} title={\"Remove liquidity\"} />\n      <hr />\n      {connectedWallet ? (\n        <div>\n          {isLoading ? (\n            <div>Loading your LP tokens</div>\n          ) : (\n            <div>\n              {tokens.length > 0 ? (\n                tokens.map((item, i) => (\n                  <LPTokenList\n                    {...item}\n                    onRemove={onRemoveLiquidity}\n                    key={`${item.name}-${i}`}\n                  />\n                ))\n              ) : (\n                <div>You don't have LP tokens in your wallet</div>\n              )}\n            </div>\n          )}\n        </div>\n      ) : (\n        <div>Please connect your wallet to see your LP tokens.</div>\n      )}\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onSuccess}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default RemoveLiquidity;\n","import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-implicit-dependencies\nimport queryString from \"query-string\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SWAP_PATH } from \"../../../../../consts\";\nimport HeaderBetween from \"../../../../components/HeaderBetween\";\nimport TruncatedAddress from \"../../../../components/TruncatedAddress\";\n\nconst Providers = () => {\n  const location = useLocation();\n  const params = queryString.parse(location.search);\n  const { tokenA, tokenB, page, symbolA, symbolB } = params;\n  const { network } = useWallet();\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState<any>([]);\n  const [currentPage, setPage] = useState(page ? page : \"1\");\n\n  const assetObj = {\n    [tokenA]: symbolA,\n    [tokenB]: symbolB,\n  };\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      try {\n        const res = await new SwapContract(network).getLPList(\n          tokenA,\n          tokenB,\n          // currentPage\n        );\n        setLoading(false);\n        setData(res);\n      } catch (e: any) {\n        setLoading(false);\n        setError(e.message);\n      }\n    }\n    fetch();\n  }, [location, currentPage]);\n\n  return (\n    <div>\n      <HeaderBetween path={SWAP_PATH} title={\"LP list\"} />\n      <hr />\n\n      <div className=\"table-container is-small\">\n        <table className=\"table is-fullwidth is-small\">\n          <thead>\n            <tr>\n              <th>Amount</th>\n              <th>Lock</th>\n              <th>Owner</th>\n            </tr>\n          </thead>\n          <tbody>\n            {isLoading ? (\n              <tr>\n                <td>Loading..</td>\n              </tr>\n            ) : data.length === 0 ? (\n              <tr>\n                <td>No NP</td>\n              </tr>\n            ) : (\n              data.map((swap, i) => {\n                return (\n                  <tr key={`swap-${i}`}>\n                    <td>{swap.amount}</td>\n                    <td>{swap.lockUntil}</td>\n                    <td>\n                      <TruncatedAddress address={swap.owner} />\n                    </td>\n                  </tr>\n                );\n              })\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Providers;\n","import React from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport {\n  SWAP_PATH,\n  SWAP_PATH_HISTORY,\n  SWAP_PATH_LIQUIDITY_ADD,\n\tSWAP_PATH_LIQUIDITY_REMOVE,\n\tSWAP_PATH_LP_LIST,\n  SWAP_PATH_TRADE,\n} from \"../../../consts\";\nimport { Route } from \"react-router-dom\";\nimport Liquidity from \"./scenes/AddLiquidity\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { MAINNET } from \"../../../packages/neo/consts\";\nimport List from \"./scenes/Pools\";\nimport History from \"./scenes/History\";\nimport Trade from \"./scenes/Swap\";\nimport Pools from \"./scenes/Pools\";\nimport RemoveLiquidity from \"./scenes/RemoveLiquidity\";\nimport Providers from \"./scenes/Providers\";\n\nconst Swap = () => {\n  const { network } = useWallet();\n  if (network === MAINNET)\n    return (\n      <PageLayout>\n        <div className=\"notification is-info\">\n          FTW Swap is not on Mainnet yet.{\" \"}\n        </div>\n      </PageLayout>\n    );\n  return (\n    <div>\n      <PageLayout>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-half\">\n            <div className=\"box is-shadowless\">\n              <Route exact={true} path={SWAP_PATH} component={Pools} />\n              <Route path={SWAP_PATH_HISTORY} component={History} />\n              <Route path={SWAP_PATH_LP_LIST} component={Providers} />\n              <Route path={SWAP_PATH_LIQUIDITY_ADD} component={Liquidity} />\n              <Route\n                path={SWAP_PATH_LIQUIDITY_REMOVE}\n                component={RemoveLiquidity}\n              />\n              <Route path={SWAP_PATH_TRADE} component={Trade} />\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Swap;\n","import React from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaQuestionCircle } from \"react-icons/all\";\ninterface IFusionBoxProps {\n  src: string;\n}\nconst FusionBox = ({ src }: IFusionBoxProps) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n\t      height: \"300px\"\n      }}\n      className=\"is-clickable\"\n    >\n      {src ? <img src={src} /> : <FaQuestionCircle />}\n    </div>\n  );\n};\n\nexport default FusionBox;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../components/Modal\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../packages/provider\";\n\ninterface INFTListModalModal {\n  onClick: (data: any) => void;\n  onClose: () => void;\n}\nconst RuneListModal = ({ onClick, onClose }: INFTListModalModal) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <div>\n          <div className=\"block\">\n            <h5 className=\"title is-5\">Select a Rune</h5>\n          </div>\n          <div>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : error ? (\n              <div>{error}</div>\n            ) : tokens.length > 0 ? (\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => onClick(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n            ) : (\n              <div>You don't have runes</div>\n            )}\n          </div>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default RuneListModal;\n","import { CONST } from \"../../../index\";\n\nexport const TTM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"6112cdab35dbc101596ab940c9e741ada5b7c502\",\n  [CONST.TESTNET]: \"6112cdab35dbc101596ab940c9e741ada5b7c502\",\n  [CONST.MAINNET]: \"aa4fb927b3fe004e689a278d188689c9f050a8b2\",\n};\n","import { u } from \"@cityofzion/neon-core\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { parseProperties } from \"./helpers\";\nimport { TTM_SCRIPT_HASH } from \"./consts\";\nconst CRYPTONAUT_REGEX = /^C0/;\nexport class TTMNFTContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = TTM_SCRIPT_HASH[networkType];\n  }\n\n  static owner = TTM_SCRIPT_HASH;\n\n  getProperties = async (tokenId: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n\n    const res = await Network.read(this.network, [script]);\n    const properties = parseProperties(res.stack[0]);\n    return properties;\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      if (CRYPTONAUT_REGEX.test(tokenId)) {\n        const meta = await this.getProperties(tokenId);\n        // @ts-ignore\n        metaList.push({ tokenId, ...meta });\n      }\n    }\n    return metaList;\n  };\n}\nexport { TTM_SCRIPT_HASH } from \"./consts\";\n","import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport AfterTransactionSubmitted from \"../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../components/Modal\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TTMNFTContract } from \"../../../../packages/neo/contracts/ttm/nft\";\n\ninterface INFTListModalModal {\n  onClick: (data: any) => void;\n  onClose: () => void;\n}\nconst CryptonatuListModal = ({ onClick, onClose }: INFTListModalModal) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TTMNFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <div>\n          <div className=\"block\">\n            <h5 className=\"title is-5\">Select a Cryptonaut</h5>\n          </div>\n          <div>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : error ? (\n              <div>{error}</div>\n            ) : tokens.length > 0 ? (\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => onClick(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n            ) : (\n              <div>You don't have runes</div>\n            )}\n          </div>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default CryptonatuListModal;\n","import { CONST, wallet } from \"../../../index\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { parseProperties } from \"../../ttm/nft/helpers\";\nimport { tx, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { DEFAULT_WITNESS_SCOPE, GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { RUNE_SCRIPT_HASH } from \"../nft\";\nimport { TTM_SCRIPT_HASH } from \"../../ttm/nft\";\n\nexport const FUSE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"f88481099b58a7ddff6693098037b23476a9dcee\",\n  [CONST.TESTNET]: \"f88481099b58a7ddff6693098037b23476a9dcee\",\n  [CONST.MAINNET]: \"\",\n};\n\nexport class FusionContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FUSE_SCRIPT_HASH[networkType];\n  }\n\n  fuse = async (\n    connectedWallet: IConnectedWallet,\n    cryptonautTokenId: string,\n    runeTokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"fuse\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: cryptonautTokenId,\n        },\n        {\n          type: \"String\",\n          value: runeTokenId,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [\n            this.contractHash,\n            RUNE_SCRIPT_HASH[this.network],\n            TTM_SCRIPT_HASH[this.network],\n            GAS_SCRIPT_HASH,\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  refund = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"refund\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [\n            this.contractHash,\n            RUNE_SCRIPT_HASH[this.network],\n            TTM_SCRIPT_HASH[this.network],\n            GAS_SCRIPT_HASH,\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  getProperties = async (tokenId: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n\n    const res = await Network.read(this.network, [script], true);\n    return parseProperties(res.stack[0]);\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      const meta = await this.getProperties(tokenId);\n      // @ts-ignore\n      metaList.push({ tokenId, ...meta });\n    }\n    return metaList;\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { FusionContract } from \"../../../../packages/neo/contracts/ftw/fuse\";\nimport { toast } from \"react-hot-toast\";\nimport ModalCard from \"../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../packages/ui/AfterTransactionSubmitted\";\ninterface IFusedListProps {\n  onSubmitted: (txid: string) => void;\n  onReset: () => void;\n}\nconst FusedList = ({ onSubmitted, onReset }: IFusedListProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [detail, setDetail] = useState<any>();\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const [txid, setTxid] = useState(\"\");\n\n  const onRefund = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FusionContract(network).refund(\n          connectedWallet,\n          detail.tokenId\n        );\n        setDetail(false);\n        onSubmitted(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new FusionContract(network).getTokensOf(\n          connectedWallet ? connectedWallet.account.address : undefined\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n\n  return (\n    <>\n      <div>\n        <div>\n          {isLoading ? (\n            <div></div>\n          ) : error ? (\n            <div>{error}</div>\n          ) : tokens.length > 0 ? (\n            <>\n              <div className=\"block\">\n                <h5 className=\"title is-5\">Fused Cryptonaut</h5>\n              </div>\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => setDetail(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n              {detail ? (\n                <ModalCard onClose={() => setDetail(undefined)}>\n                  <>\n                    {txid ? (\n                      <AfterTransactionSubmitted\n                        network={network}\n                        txid={txid}\n                        onSuccess={() => {\n                          setDetail(undefined);\n                          setTxid(\"\");\n                        }}\n                        onError={() => setTxid(\"\")}\n                      />\n                    ) : (\n                      <div className=\"card\">\n                        <div className=\"card-image\">\n                          <figure className=\"image is-4by3\">\n                            <img src={detail.image} />\n                          </figure>\n                        </div>\n                        <div className=\"card-content\">\n                          <div className=\"media\">\n                            <div className=\"media-content\">\n                              <h1 className=\"title is-5\">Fused Cryptonaut</h1>\n                              <p className=\"subtitle is-7\">\n                                TokenId: {detail.tokenId}\n                              </p>\n                              <div className=\"field is-grouped is-grouped-multiline\">\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Element</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.element}\n                                    </span>\n                                  </div>\n                                </div>\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Phase</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.phase}\n                                    </span>\n                                  </div>\n                                </div>\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Luck</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.luck}\n                                    </span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"media-right\">\n                              <button\n                                onClick={onRefund}\n                                className=\"button is-danger\"\n                              >\n                                Un-Fuse\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </>\n                </ModalCard>\n              ) : (\n                <div></div>\n              )}\n            </>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FusedList;\n","import React, { useState } from \"react\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { MAINNET } from \"../../../packages/neo/consts\";\nimport PageLayout from \"../../components/PageLayout\";\nimport FusionBox from \"./components/FusionBox\";\nimport RuneListModal from \"./components/RuneListModal\";\nimport CryptonautListModal from \"./components/CryptonatuListModal\";\nimport { toast } from \"react-hot-toast\";\nimport { FusionContract } from \"../../../packages/neo/contracts/ftw/fuse\";\nimport FusedList from \"./components/FusedList\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\n\nconst Fusion = () => {\n  const { network, connectedWallet } = useWallet();\n  const [isTTMModalActive, setTTMModalActive] = useState(false);\n  const [isFTWModalActive, setFTWModalActive] = useState(false);\n  const [cryptonaut, setCryptonaut] = useState<any>();\n  const [rune, setRune] = useState<any>();\n  const [txid, setTxid] = useState(\"\");\n\n  const onFuse = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FusionContract(network).fuse(\n          connectedWallet,\n          cryptonaut.tokenId,\n          rune.tokenId\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  const onReset = () => {\n    setRune(undefined);\n    setCryptonaut(undefined);\n    setTxid(\"\");\n  };\n\n  if (network === MAINNET)\n    return (\n      <PageLayout>\n        <div className=\"notification is-info\">\n          Fusion is not on Mainnet yet.{\" \"}\n        </div>\n      </PageLayout>\n    );\n  return (\n    <div>\n      <PageLayout>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-half\">\n            <h1 className=\"title has-text-centered\">FUSION</h1>\n            {txid ? (\n              <AfterTransactionSubmitted\n                network={network}\n                txid={txid}\n                onSuccess={onReset}\n                onError={() => setTxid(\"\")}\n              />\n            ) : (\n              <>\n                <div className=\"block\">\n                  <div className=\"columns\">\n                    <div className=\"column\">\n                      <div\n                        className=\"box\"\n                        onClick={() => setFTWModalActive(true)}\n                      >\n                        <FusionBox\n                          src={rune ? rune.image : \"logo/FTW_512_512.svg\"}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"column\">\n                      <div\n                        className=\"box\"\n                        onClick={() => setTTMModalActive(true)}\n                      >\n                        <FusionBox\n                          src={\n                            cryptonaut\n                              ? cryptonaut.image\n                              : \"assets/Cryptonaut.001.svg\"\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <button\n                    onClick={onFuse}\n                    className=\"is-primary button is-fullwidth\"\n                    disabled={!rune || !cryptonaut}\n                  >\n                    Fuse\n                  </button>\n                </div>\n                <div className=\"block\">\n                  <FusedList\n                    onSubmitted={(_txid: string) => setTxid(_txid)}\n                    onReset={onReset}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </PageLayout>\n      {isFTWModalActive && (\n        <RuneListModal\n          onClick={(data) => {\n            setRune(data);\n            setFTWModalActive(false);\n          }}\n          onClose={() => setFTWModalActive(false)}\n        />\n      )}\n      {isTTMModalActive && (\n        <CryptonautListModal\n          onClick={(data) => {\n            setCryptonaut(data);\n            setTTMModalActive(false);\n          }}\n          onClose={() => setTTMModalActive(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Fusion;\n","import React, { useEffect, useRef, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport DOTS from \"vanta/dist/vanta.halo.min\";\nimport PageLayout from \"../../components/PageLayout\";\n// import * as THREE from \"three\";\n\nconst Migration = (props) => {\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        DOTS({\n          el: myRef.current,\n          mouseControls: true,\n          touchControls: true,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          backgroundColor: 0x80822,\n          size: 2.8,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) {\n        // @ts-ignore\n        vantaEffect.destroy();\n      }\n    };\n  }, [vantaEffect]);\n  return (\n    <div>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-flex\" style={{ alignItems: \"center\" }}>\n                <div>\n                  <h1 className=\"title\">Forthewin is back</h1>\n                  <p className=\"subtitle\">\n                    Migrate your Neo-legacy FTX to the new <span>N3 FTW</span>\n                  </p>\n                  <a\n                    target=\"_blank\"\n                    href=\"https://nepmigration.com/\"\n                    className=\"button is-primary\"\n                  >\n                    Go to Migrate\n                  </a>\n                </div>\n              </div>\n              <div className=\"column is-hidden-touch\">\n                <div\n                  className=\"block\"\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    minHeight: \"300px\",\n                  }}\n                >\n                  <video style={{ width: \"400px\" }} autoPlay loop>\n                    <source src={\"/assets/migration.mp4\"} type=\"video/mp4\" />\n                  </video>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns halo\" ref={myRef}>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>Neo-legacy</h3>\n                <h6>Symbol</h6>\n                <p>FTX</p>\n                <h6>Contract hash</h6>\n                <p>0xaac66f9779ca67d819d05492805d251dab02fc7b</p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://neotracker.io/asset/aac66f9779ca67d819d05492805d251dab02fc7b\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>N3</h3>\n                <h6>Symbol</h6>\n                <p>FTW</p>\n                <h6>Contract hash</h6>\n                <p>\n                  <a\n                    target=\"_blank\"\n                    className=\"has-text-dark\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\n                  </a>\n                </p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://explorer.onegate.space/NEP17tokeninfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Migration;\n","import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ReactGa = () => {\n  const location = useLocation();\n  useEffect(() => {\n    ReactGA.pageview(location.pathname);\n  }, [location]);\n  return <div></div>;\n};\n\nexport default ReactGa;\n","import React from \"react\";\nimport { IStakingPair } from \"../interfaces\";\nimport { FARM_STAKE_PATH } from \"../../../../consts\";\nimport { Link } from \"react-router-dom\";\n\n// interface IStakingPairCardProps extends IStakingPair {}\nconst StakingPairCard = (props: IStakingPair) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        {props.tokenASymbol} / {props.tokenBSymbol}\n        <br />\n        {props.dailyReward}NEP per day\n      </div>\n      <div className=\"media-right\">\n        <Link\n          to={`${FARM_STAKE_PATH}?tokenA=${props.tokenA}&tokenB=${props.tokenB}&tokenASymbol=${props.tokenASymbol}&tokenBSymbol=${props.tokenBSymbol}`}\n          className=\"button is-light\"\n        >\n          Stake\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default StakingPairCard;\n","import { CONST } from \"../../../index\";\n\nexport const FARM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"d8659a335560a867a4c8074a4c6b5346b735f3b0\",\n  [CONST.TESTNET]: \"de27ff88eac865bc1f0ddc5fe5fd159d3cfc3d47\",\n  [CONST.MAINNET]: \"\",\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { SWAP_SCRIPT_HASH } from \"../swap/consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { tx, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport {\n  defaultDeadLine,\n  parseLP,\n  parsePair,\n  parseSwapPaginate,\n} from \"../swap/helpers\";\nimport { wallet } from \"../../../index\";\nimport { DEFAULT_WITNESS_SCOPE } from \"../../../consts\";\nimport { IPairInfo } from \"../swap/interfaces\";\nimport {\n  base64ToFixed8,\n  base64ToHash160,\n  base64ToString,\n  toDecimal,\n} from \"../../../utils\";\nimport { parseProperties } from \"../../ttm/nft/helpers\";\nimport { FARM_SCRIPT_HASH } from \"./consts\";\nimport { IStakingPair } from \"../../../../../ui/pages/Farm/interfaces\";\nimport { SwapContract } from \"../swap\";\n\nexport class StakingContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FARM_SCRIPT_HASH[networkType];\n  }\n\n  stake = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"stake\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: SWAP_SCRIPT_HASH[this.network],\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, SWAP_SCRIPT_HASH[this.network]],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  remove = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"withdraw\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  getPairs = async (): Promise<IStakingPair[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPairs\",\n      args: [],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      // @ts-ignore\n      return res.stack[0].iterator.map((item) => {\n        const tokenA = base64ToHash160(item.value[0].value as string);\n        const tokenB = base64ToHash160(item.value[1].value as string);\n        const tokenASymbol = base64ToString(item.value[2].value as string);\n        const tokenBSymbol = base64ToString(item.value[3].value as string);\n        const dailyReward = toDecimal(item.value[4].value as string);\n\n        return {\n          tokenA,\n          tokenB,\n          tokenASymbol,\n          tokenBSymbol,\n          dailyReward,\n        };\n      });\n    } catch (e) {\n      return [];\n    }\n  };\n\n  getLPTokens = async (connectedWallet: IConnectedWallet, symbolA, symbolB) => {\n    const swapContract = new SwapContract(this.network);\n    const scripts = [\n      {\n        scriptHash: swapContract.contractHash,\n        operation: \"tokensOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      },\n    ];\n    const tokens: object[] = [];\n\n    const res = await Network.read(this.network, scripts, true);\n    if (res.state !== \"FAULT\") {\n      // @ts-ignore\n      for await (const item of res.stack[0].iterator) {\n        const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n        if (tokenId.includes(`${symbolA}-${symbolB}`)) {\n          const properties = await swapContract.getProperties(tokenId);\n          if (properties) {\n            tokens.push({ tokenId, ...properties });\n          }\n        }\n      }\n    } else {\n      console.error(res.exception);\n    }\n    return tokens;\n  };\n\n  getPositions = async (connectedWallet: IConnectedWallet) => {\n    const scripts = [\n      {\n        scriptHash: this.contractHash,\n        operation: \"getPositions\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      },\n    ];\n    const tokens: object[] = [];\n\n    const res = await Network.read(this.network, scripts, true);\n    if (res.state !== \"FAULT\") {\n      // @ts-ignore\n      for await (const item of res.stack[0].iterator) {\n        const tokenId = u.HexString.fromBase64(item.value[0].value).toAscii();\n        const amount = item.value[1].value[3].value;\n        tokens.push({ tokenId, amount });\n        // if (tokenId.includes(`${symbolA}-${symbolB}`)) {\n        //   const properties = await swapContract.getProperties(tokenId);\n        //   if (properties) {\n        //     tokens.push({ tokenId, ...properties });\n        //   }\n        // }\n      }\n    } else {\n      console.error(res.exception);\n    }\n    return tokens;\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FARM_STAKE_POSITIONS_PATH } from \"../../../../../consts\";\nimport StakingPairCard from \"../../components/StakingPairCard\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { StakingContract } from \"../../../../../packages/neo/contracts/ftw/staking\";\n\nconst StakingMain = (props) => {\n  const { network, connectedWallet } = useWallet();\n  const [list, setList] = useState<any[]>([]);\n  const [detail, setDetail] = useState();\n  const [isCreateModalActive, setCreateModalActive] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      try {\n        const res = await new StakingContract(network).getPairs();\n        setLoading(false);\n        setList(res);\n      } catch (e: any) {\n        setLoading(false);\n        setError(e.message);\n      }\n    }\n    fetch();\n  }, []);\n  return (\n    <div>\n      <div className=\"level is-mobile\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-5\">Farm</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <div className=\"buttons\">\n              <Link\n                to={FARM_STAKE_POSITIONS_PATH}\n                // onClick={() => setCreateModalActive(true)}\n                className=\"button is-light is-small is-rounded\"\n              >\n                My positions\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n\t    <hr/>\n      <div>\n        {isLoading ? (\n          <div>Loading</div>\n        ) : list.length > 0 ? (\n          <div>\n            {list.map((item, i) => (\n              <StakingPairCard key={\"sc\" + 1} {...item} />\n            ))}\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default StakingMain;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { toDecimal } from \"../../../../../packages/neo/utils\";\ninterface ILPTokenCardProps {\n  tokenId: string;\n  name: string;\n  amount: string;\n  lock: string;\n  onStakeLP: (tokenId: string) => void;\n}\nconst LPTokenCard = (props: ILPTokenCardProps) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        {props.name} / {toDecimal(props.amount)}\n        <br />\n        {props.lock && props.lock !== \"0\" ? (\n          <div>Locked until {moment(parseFloat(props.lock)).format(\"lll\")}</div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n      <div className=\"media-right\">\n        <button\n          onClick={() => props.onStakeLP(props.tokenId)}\n          className=\"button is-primary\"\n        >\n          Stake\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LPTokenCard;\n","import React, { useEffect, useState } from \"react\";\nimport { FARM_PATH, SWAP_PATH } from \"../../../../../consts\";\nimport HeaderBetween from \"../../../../components/HeaderBetween\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport LPTokenList from \"../../../Swap/scenes/RemoveLiquidity/LPTokenList\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport * as queryString from \"querystring\";\nimport LPTokenCard from \"./LPTokenCard\";\nimport { StakingContract } from \"../../../../../packages/neo/contracts/ftw/staking\";\ninterface IStakeProps {\n  tokenA: string;\n  tokenB: string;\n  tokenASymbol: string;\n  tokenBSymbol: string;\n}\nconst Stake = (props) => {\n  const { network, connectedWallet } = useWallet();\n  const [isLoading, setLoading] = useState<any>(true);\n  const [tokens, setTokens] = useState<any>([]);\n  const [txid, setTxid] = useState(\"\");\n  const location = useLocation();\n  const str =\n    location.search[0] === \"?\"\n      ? location.search.substr(1, location.search.length)\n      : location.search;\n  const params = queryString.parse(str);\n  const [tokenA, setTokenA] = useState<any>(\n    params.tokenA ? params.tokenA : undefined\n  );\n  const [tokenB, setTokenB] = useState<any>(\n    params.tokenB ? params.tokenB : undefined\n  );\n  const [symbolA, setSymbolA] = useState<any>(\n    params.tokenASymbol ? params.tokenASymbol : undefined\n  );\n  const [symbolB, setSymbolB] = useState<any>(\n    params.tokenBSymbol ? params.tokenBSymbol : undefined\n  );\n\n  const onStakeLP = async (tokenId) => {\n    if (connectedWallet) {\n      try {\n        const res = await new StakingContract(network).stake(\n          connectedWallet,\n          tokenId\n        );\n\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onSuccess = () => {\n    setTxid(\"\");\n  };\n\n  useEffect(() => {\n    async function fetchTokens(w, a, b) {\n      const res = await new StakingContract(network).getLPTokens(w, a, b);\n      setLoading(false);\n      setTokens(res);\n    }\n    if (connectedWallet) {\n      fetchTokens(connectedWallet, symbolA, symbolB);\n    }\n  }, [connectedWallet, symbolA, symbolB]);\n  return (\n    <div>\n      <HeaderBetween path={FARM_PATH} title={`Stake ${symbolA}-${symbolB}`} />\n      <hr />\n      {connectedWallet ? (\n        <div>\n          {isLoading ? (\n            <div>Loading your LP tokens</div>\n          ) : (\n            <div>\n              {tokens.length > 0 ? (\n                tokens.map((item, i) => (\n                  <LPTokenCard\n                    onStakeLP={onStakeLP}\n                    {...item}\n                    key={`${item.name}-${i}`}\n                  />\n                ))\n              ) : (\n                <div>You don't have LP tokens in your wallet</div>\n              )}\n            </div>\n          )}\n        </div>\n      ) : (\n        <div>Please connect your wallet to see your LP tokens.</div>\n      )}\n    </div>\n  );\n};\n\nexport default Stake;\n","import React from \"react\";\ninterface IPositionCardProps {\n  tokenId: string;\n  amount: string;\n  onUnStake: (tokenId: string) => void;\n}\nconst PositionCard = ({ tokenId, amount, onUnStake }: IPositionCardProps) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        {tokenId}\n        <br />\n        {amount}\n      </div>\n      <div className=\"media-right\">\n        <button\n          onClick={() => onUnStake(tokenId)}\n          className=\"button is-primary\"\n        >\n          Withdraw\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PositionCard;\n","import React, { useEffect, useState } from \"react\";\nimport HeaderBetween from \"../../../../components/HeaderBetween\";\nimport { FARM_PATH } from \"../../../../../consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { useLocation } from \"react-router-dom\";\nimport queryString from \"querystring\";\nimport { StakingContract } from \"../../../../../packages/neo/contracts/ftw/staking\";\nimport { toast } from \"react-hot-toast\";\nimport StakingPairCard from \"../../components/StakingPairCard\";\nimport PositionCard from \"./PositionCard\";\n\nconst MyPositions = (props) => {\n  const { network, connectedWallet } = useWallet();\n  const [isLoading, setLoading] = useState<any>(true);\n  const [tokens, setTokens] = useState<any>([]);\n  const [txid, setTxid] = useState(\"\");\n  const location = useLocation();\n  const str =\n    location.search[0] === \"?\"\n      ? location.search.substr(1, location.search.length)\n      : location.search;\n  const params = queryString.parse(str);\n  const [tokenA, setTokenA] = useState<any>(\n    params.tokenA ? params.tokenA : undefined\n  );\n  const [tokenB, setTokenB] = useState<any>(\n    params.tokenB ? params.tokenB : undefined\n  );\n  const [symbolA, setSymbolA] = useState<any>(\n    params.tokenASymbol ? params.tokenASymbol : undefined\n  );\n  const [symbolB, setSymbolB] = useState<any>(\n    params.tokenBSymbol ? params.tokenBSymbol : undefined\n  );\n\n  const onUnStake = async (tokenId) => {\n    if (connectedWallet) {\n      try {\n        const res = await new StakingContract(network).remove(\n          connectedWallet,\n          tokenId\n        );\n\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onSuccess = () => {\n    setTxid(\"\");\n  };\n\n  useEffect(() => {\n    async function fetchTokens(w) {\n      const res = await new StakingContract(network).getPositions(w);\n      setLoading(false);\n      setTokens(res);\n    }\n    if (connectedWallet) {\n      fetchTokens(connectedWallet);\n    }\n  }, [connectedWallet]);\n  return (\n    <div>\n      <HeaderBetween path={FARM_PATH} title={`My staking`} />\n      <hr />\n      {isLoading ? (\n        <div>Loading</div>\n      ) : tokens.length > 0 ? (\n        <div>\n          {tokens.map((item, i) => (\n            <PositionCard\n              key={\"position\" + i}\n              {...item}\n              onUnStake={onUnStake}\n            />\n          ))}\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nexport default MyPositions;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { SwapContract } from \"../../../packages/neo/contracts\";\nimport { StakingContract } from \"../../../packages/neo/contracts/ftw/staking\";\nimport { Link, Route } from \"react-router-dom\";\nimport {\n\tFARM_PATH,\n\tFARM_STAKE_PATH, FARM_STAKE_POSITIONS_PATH,\n\tSWAP_PATH_LIQUIDITY_ADD,\n\tSWAP_PATH_LIQUIDITY_REMOVE,\n} from \"../../../consts\";\nimport { FaMinus, FaPlus } from \"react-icons/all\";\nimport StakingPairCard from \"./components/StakingPairCard\";\nimport StakingMain from \"./scenes/Main\";\nimport Stake from \"./scenes/Stake\";\nimport MyPositions from \"./scenes/MyPositions\";\n\nconst Farm = (props) => {\n  // const { network, connectedWallet } = useWallet();\n  // const [list, setList] = useState<any[]>([]);\n  // const [detail, setDetail] = useState();\n  // const [isCreateModalActive, setCreateModalActive] = useState(false);\n  // const [isLoading, setLoading] = useState(true);\n  // const [error, setError] = useState(false);\n  //\n  // useEffect(() => {\n  //   async function fetch() {\n  //     setLoading(true);\n  //     try {\n  //       const res = await new StakingContract(network).getPairs();\n  //       console.log(res);\n  //       setLoading(false);\n  //       setList(res);\n  //     } catch (e: any) {\n  //       setLoading(false);\n  //       setError(e.message);\n  //     }\n  //   }\n  //   fetch();\n  // }, []);\n  return (\n    <PageLayout>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-half\">\n          <div className=\"box is-shadowless\">\n            <Route exact={true} path={FARM_PATH} component={StakingMain} />\n            <Route exact={true} path={FARM_STAKE_PATH} component={Stake} />\n            <Route path={FARM_STAKE_POSITIONS_PATH} component={MyPositions} />\n          </div>\n        </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default Farm;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport {\n  COLLECTION_PATH,\n  GASFI_PATH,\n  FUSION_PATH,\n  GALLERY_PATH,\n  HOME_PATH,\n  MIGRATION_PATH,\n  SMITH_PATH,\n  SWAP_PATH,\n  TOURNAMENT_PATH,\n  FARM_PATH,\n} from \"../consts\";\nimport { WalletContextProvider } from \"../packages/provider\";\nimport WalletSidebar from \"./components/WalletSidebar\";\nimport GASFI from \"./pages/GASFi\";\nimport { Toaster } from \"react-hot-toast\";\nimport MyCollection from \"./pages/MyCollection\";\nimport Gallery from \"./pages/Gallery\";\nimport MobileMenuSlider from \"./components/MobileMenuSlider\";\nimport Home from \"./pages/Home\";\nimport Smith from \"./pages/Smith\";\nimport Tournament from \"./pages/Tournament\";\nimport Swap from \"./pages/Swap\";\nimport Fusion from \"./pages/Fusion\";\nimport Migration from \"./pages/Migration\";\nimport ReactGa from \"./components/ReactGa\";\nimport Farm from \"./pages/Farm\";\n\nReactGA.initialize(\"UA-114435339-1\");\n\nconst App = () => {\n  return (\n    <WalletContextProvider\n      options={{\n        useLocalStorage: true,\n        useDevWallet: process.env.NODE_ENV === \"development\",\n      }}\n    >\n      <Router>\n        <Toaster position=\"bottom-center\" />\n        <Header />\n        <Route exact path={HOME_PATH} component={Home} />\n        <Route path={GALLERY_PATH} component={Gallery} />\n        <Route path={TOURNAMENT_PATH} component={Tournament} />\n        <Route path={SMITH_PATH} component={Smith} />\n        <Route path={GASFI_PATH} component={GASFI} />\n        <Route path={COLLECTION_PATH} component={MyCollection} />\n        <Route path={SWAP_PATH} component={Swap} />\n        <Route path={FARM_PATH} component={Farm} />\n        <Route path={GASFI_PATH} component={GASFI} />\n        <Route path={FUSION_PATH} component={Fusion} />\n        <Route exact path={MIGRATION_PATH} component={Migration} />\n        <MobileMenuSlider />\n        <WalletSidebar />\n        <ReactGa />\n      </Router>\n    </WalletContextProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppCContextProvider } from \"./common/hooks/use-app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/style.scss\";\nimport App from \"./ui\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppCContextProvider>\n      <App />\n    </AppCContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}