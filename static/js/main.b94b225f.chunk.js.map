{"version":3,"sources":["common/hooks/use-app.tsx","reportWebVitals.ts","ui/components/DisplayRune.tsx","ui/pages/Home.tsx","packages/neo/local-storage/index.ts","packages/neo/consts/index.ts","packages/neo/utils/index.ts","packages/neo/network/index.ts","packages/neo/wallet/dev-wallet.ts","packages/neo/wallet/index.ts","packages/provider/wallet-provider.tsx","packages/neo/contracts/ttm/nft/consts.ts","packages/neo/api/consts.ts","packages/neo/contracts/ttm/trade/consts.ts","packages/neo/contracts/ftw/farm/consts.ts","packages/ui/Wallet/helpers.ts","packages/ui/Wallet/WalletDropdown.tsx","packages/ui/Wallet/WalletList.tsx","packages/ui/Wallet/AssetCard.tsx","packages/ui/Wallet/index.tsx","ui/components/WalletSidebar.tsx","ui/index.tsx","consts/pageRoutes.ts","index.tsx"],"names":["AppContext","createContext","AppCContextProvider","props","useState","sidebarStatus","setSidebarStatus","walletSidebarStatus","setWalletSidebarStatus","contextValue","openSidebar","closeSidebar","toggleSidebar","toggleWalletSidebar","Provider","value","children","useApp","useContext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getColors","_","range","map","i","Math","floor","random","DisplayRune","colors","setColors","bg","dot1","dot2","dot3","dot4","body","svg","useEffect","interval","setInterval","clearInterval","src","Home","className","href","CONNECTED_WALLET","TRANSACTIONS","LocalStorage","connectedWallet","validated","validateConnectedWallet","store","set","remove","tx","has","add","window","dispatchEvent","Event","txId","transactions","get","txid","status","getWallet","getTransactions","removeTransaction","clearTransaction","account","provider","network","O3","NEO_LINE","DEV","WALLET_LIST","label","key","PRIVATENET","TESTNET","MAINNET","PRIVATE_CONFIG","url","TESTNET_CONFIG","MAINNET_CONFIG","GAS_SCRIPT_HASH","NEON_CONST","NATIVE_CONTRACT_HASH","GasToken","NEO_SCRIPT_HASH","NeoToken","TOKEN_LIST","DEV_WALLET_PRIVATE_KEY","truncateAddress","address","substring","substr","length","convertContractCallParam","param","type","sc","ContractParam","hash160","wallet","getScriptHashFromAddress","string","integer","array","byteArray","u","hex2base64","str2hexstring","Error","base64ToAddress","str","getAddressFromScriptHash","base64ToHash160","reverseHex","base642hex","base64ToString","HexString","fromBase64","toAscii","toString","base64ToFixed8","BigInteger","fromNumber","toDecimal","base64ToDate","moment","unix","parseInt","format","truncateDecimal","v","p","s","pow","trunc","Network","READ_LOG_FREQUENCY","getRPCClient","networkType","config","rpc","RPCClient","findNotificationFromTxId","scriptHash","eventName","a","getNotificationsFromTxId","notifications","find","n","contract","eventname","rpcClient","getApplicationLog","appLog","sleep","executions","forEach","e","push","read","scripts","sb","ScriptBuilder","script","params","args","arg","emitAppCall","operation","invokeScript","fromHex","build","res","state","console","error","exception","duration","Promise","resolve","setTimeout","DevWallet","name","version","website","compatibility","extra","currency","theme","chainId","defaultNetwork","networks","getNep17Balances","balances","balance","item","symbol","assethash","includes","amount","log","getVersion","sign","protocol","systemFee","networkFee","sendRawTransaction","nodeUrl","Account","senderAddress","cosignerAddress","getBlockCount","currentHeight","createScript","signers","scopes","WitnessScope","Global","transaction","Transaction","validUntilBlock","calculateNetworkFee","calculateSystemFee","invokeFunction","CONST","PolicyContract","invokeFunctionResponse","feePerByte","stack","transactionByteSize","serialize","witnessProcessingFee","mul","gasconsumed","balanceCheck","sender","transferScript","gasBalance","requiredGas","transferTokenBalance","Fixed8","fromRawNumber","toNumber","transferAmount","WalletAPI","walletType","getInstance","instance","neo3Dapi","NEOLineN3","Init","init","neoline","NEOLine","getNetworks","getProvider","getAccount","getBalance","contracts","testInvoke","invoke","NeonWallet","submittedTx","contractHash","method","createdAt","addTransaction","this","list","WalletContext","WalletContextProvider","options","isWalletModalActive","setWalletModalActive","useLocalStorage","undefined","setConnectedWallet","setInvokeScript","connectWallet","setWallet","toast","useDevWallet","openWalletModal","closeWalletModal","disConnectWallet","removeWallet","doInvoke","closeInvoke","useWallet","getWalletIcon","WalletDropdown","isActive","setActive","aria-haspopup","aria-controls","onClick","id","role","WalletList","_wallet","alt","AssetCard","Wallet","utils","WalletSidebar","openFromRight","style","top","showNav","onHideNav","App","position","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b94b225f.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n// import toast from \"react-hot-toast\";\n\ninterface IAppContext {\n  sidebarStatus: boolean\n  walletSidebarStatus: boolean\n  openSidebar: () => void\n  closeSidebar: () => void\n  toggleSidebar: () => void\n  toggleWalletSidebar: () => void\n}\n\nexport const AppContext = createContext({} as IAppContext);\n\nexport const AppCContextProvider = (props: { children: any }) => {\n  const [sidebarStatus, setSidebarStatus] = useState(false);\n  const [walletSidebarStatus, setWalletSidebarStatus] = useState(false);\n  const openSidebar = () => setSidebarStatus(true);\n  const closeSidebar = () => setSidebarStatus(false);\n  const toggleSidebar = () => setSidebarStatus(!sidebarStatus);\n  const toggleWalletSidebar = () => setWalletSidebarStatus(!walletSidebarStatus);\n\n  const contextValue = {\n    sidebarStatus,\n    openSidebar,\n    closeSidebar,\n    toggleSidebar,\n    walletSidebarStatus,\n    toggleWalletSidebar\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => useContext(AppContext);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map(i => Math.floor(Math.random() * 256));\nconst DisplayRune = (props) => {\n  const [colors, setColors] = useState(getColors())\n  const bg = \"rgb(\" + colors[0] + \",\" + colors[6] + \",\" + colors[12] + \")\";\n  const dot1 = \"rgb(\" + colors[1] + \",\" + colors[7] + \",\" + colors[13] + \")\";\n  const dot2 = \"rgb(\" + colors[2] + \",\" + colors[8] + \",\" + colors[14] + \")\";\n  const dot3 = \"rgb(\" + colors[3] + \",\" + colors[9] + \",\" + colors[15] + \")\";\n  const dot4 = \"rgb(\" + colors[4] + \",\" + colors[10] + \",\" + colors[16] + \")\";\n  const body = \"rgb(\" + colors[5] + \",\" + colors[11] + \",\" + colors[17] + \")\";\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setColors(getColors());\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div>\n      <img src={`data:image/svg+xml;utf8,${svg}`} />\n    </div>\n  );\n\n};\n\nexport default DisplayRune;\n","import React from \"react\";\nimport DisplayRune from \"../components/DisplayRune\";\n\nconst Home = (props) => {\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <div className=\"block\">\n            <DisplayRune />\n          </div>\n          <p className=\"title\">NEO FTW</p>\n          <p className=\"subtitle\">\n            N3 migration soon. Building something cool.\n          </p>\n          <a\n            className=\"has-text-grey-darker\"\n            href={\"https://forthewinn.github.io/legacy-app\"}\n          >\n            <small>Neo-legacy archive</small>\n          </a>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import store from \"store2\";\nimport { IConnectedWallet, ITransaction } from \"../wallet/interfaces\";\n\nconst CONNECTED_WALLET = \"CONNECTED_WALLET\";\nconst TRANSACTIONS = \"TRANSACTIONS\";\n\nexport class LocalStorage {\n  public static getWallet = (): IConnectedWallet | undefined =>\n    validateConnectedWallet(store.get(CONNECTED_WALLET));\n\n  public static setWallet(connectedWallet: IConnectedWallet) {\n    const validated = validateConnectedWallet(connectedWallet);\n    store.set(CONNECTED_WALLET, validated);\n  }\n\n  public static removeWallet() {\n    store.remove(CONNECTED_WALLET);\n  }\n\n  public static getTransactions = (): ITransaction[] =>\n    store.has(TRANSACTIONS) ? store.get(TRANSACTIONS) : [];\n\n  public static addTransaction(tx: ITransaction) {\n    if (store.has(TRANSACTIONS)) {\n      store.add(TRANSACTIONS, tx);\n    } else {\n      store.set(TRANSACTIONS, [tx]);\n    }\n    window.dispatchEvent(new Event(\"transactions\"));\n  }\n  public static updatePendingTransaction(txId: string) {\n    let transactions = store.get(TRANSACTIONS);\n    transactions = transactions.map((tx) => {\n      if (tx.txid === txId) {\n        tx.status = \"SUBMITTED\";\n      }\n      return tx;\n    });\n    store.set(TRANSACTIONS, transactions);\n  }\n\n  public static removeTransaction = (tx: ITransaction) =>\n    store.remove(TRANSACTIONS, tx);\n\n  public static clearTransaction = () => store.set(TRANSACTIONS, []);\n}\n\nconst validateConnectedWallet = (connectedWallet?: IConnectedWallet) => {\n  if (\n    !connectedWallet ||\n    !connectedWallet.account ||\n    !connectedWallet.provider ||\n    !connectedWallet.network\n  ) {\n    return undefined;\n  }\n  return connectedWallet;\n};\n//\n// const validateTransaction = (connectedWallet?: IConnectedWallet) => {\n//   if (\n//     !connectedWallet ||\n//     !connectedWallet.account ||\n//     !connectedWallet.provider ||\n//     !connectedWallet.network\n//   ) {\n//     return undefined;\n//   }\n//   return connectedWallet;\n// };\n","import { CONST as NEON_CONST } from \"@cityofzion/neon-core\";\nimport { INetworkType } from \"../network\";\nimport { IWalletType } from \"../wallet/interfaces\";\n\n/* Wallets */\nexport const O3 = \"O3\";\nexport const NEO_LINE = \"NEO_LINE\";\nexport const DEV = \"DEV\";\nexport const WALLET_LIST: {\n  label: string;\n  key: IWalletType;\n}[] = [\n  {\n    label: \"Dev\",\n    key: DEV,\n  },\n  {\n    label: \"NEO Line\",\n    key: NEO_LINE,\n  },\n  {\n    label: \"O3\",\n    key: O3,\n  },\n];\n\n/* Network types */\nexport const PRIVATENET = \"N3PrivateNet\";\nexport const TESTNET = \"N3TestNet\";\nexport const MAINNET = \"N3MainNet\";\n\n/* Network configs */\nexport const PRIVATE_CONFIG = {\n  label: \"privateNet\",\n  url: \"http://127.0.0.1:50012\",\n};\n\nexport const TESTNET_CONFIG = {\n  label: \"N3TestNet\",\n  url: \"http://seed2t4.neo.org:20332\",\n};\n\nexport const MAINNET_CONFIG = {\n  label: \"N3MainNet\",\n  url: \"http://127.0.0.1:50012\",\n};\n\n/* Contract hashes */\nexport const GAS_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.GasToken;\nexport const NEO_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.NeoToken;\n\nexport const TOKEN_LIST = (network: INetworkType) => [\n  NEO_SCRIPT_HASH,\n  GAS_SCRIPT_HASH,\n  // NFT_SCRIPT_HASH[network]\n];\n\n/* Dev wallet */\nexport const DEV_WALLET_PRIVATE_KEY =\n  \"7b5d7fda53932ed9d43eb848dd521455767a4d40b5a994e6f351605e5a4ce26a\";\n","import { sc, u, wallet } from \"@cityofzion/neon-core\";\nimport moment from \"moment\";\n\nexport const truncateAddress = (address: string) => {\n  return `${address.substring(0, 4)}...${address.substr(address.length - 2)}`;\n};\n\n/**\n * It converts contract call params for dev wallet. Depending on 3rd wallet params.\n * @param param\n */\nexport const convertContractCallParam = (param: any) => {\n  switch (param.type) {\n    case \"Address\":\n      return sc.ContractParam.hash160(\n        wallet.getScriptHashFromAddress(param.value),\n      );\n\n    case \"Hash160\":\n      return sc.ContractParam.hash160(param.value);\n    case \"String\":\n      return sc.ContractParam.string(param.value);\n    case \"Integer\":\n      return sc.ContractParam.integer(param.value);\n    case \"Array\":\n      return sc.ContractParam.array(\n        ...param.value.map((i: any) => convertContractCallParam(i)),\n      );\n    case \"ByteArray\":\n      return sc.ContractParam.byteArray(\n        u.hex2base64(u.str2hexstring(param.value)),\n      );\n    default:\n      throw new Error(\"No support param\");\n  }\n};\n\nexport const base64ToAddress = (str: string) =>\n  wallet.getAddressFromScriptHash(base64ToHash160(str));\n\nexport const base64ToHash160 = (str: string) => u.reverseHex(u.base642hex(str));\n\nexport const base64ToString = (str: string) => u.HexString.fromBase64(str).toAscii().toString()\n\nexport const base64ToFixed8 = (str: string) => u.BigInteger.fromNumber(str).toDecimal(8)\n\nexport const base64ToDate = (str: string) => moment.unix(parseInt(str) / 1000).format(\"lll\")\n\nexport function truncateDecimal(v, p) {\n  const s = Math.pow(10, p || 0);\n  return Math.trunc(s * v) / s;\n}\n","import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG\n} from \"../consts\";\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport { ApplicationLogJson } from \"@cityofzion/neon-core/lib/rpc/Query\";\nimport { convertContractCallParam } from \"../utils\";\nimport { StackItemJson } from \"@cityofzion/neon-core/lib/sc\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n\n  private static readonly READ_LOG_FREQUENCY = 6000; //ms\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static findNotificationFromTxId = async (txId: string, scriptHash: string, eventName: string, networkType: INetworkType) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(txId, networkType);\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName,\n    );\n  };\n\n  static getNotificationsFromTxId = async (txId: string, network: INetworkType) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[]\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    const res =await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    if(res.state === \"FAULT\"){\n      console.error(\"RPC read error\" + res)\n      throw new Error(res.exception ? res.exception : \"Network error\");\n    }\n    return res;\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpc = Network.getRPCClient(network);\n    const res = await rpc.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n      }\n      balances.push({\n        contract: item.assethash,\n        amount: u.BigInteger.fromNumber(item.amount).toDecimal(8).toString(),\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    network: INetworkType,\n    invokeScript: sc.ContractCallJson\n  ) {\n    const rpc = Network.getRPCClient(network);\n    console.log(\"Dev wallet invoking\");\n    console.log(\"RPC:\", rpc);\n    const tx = await DevWallet.build(\n      rpc,\n      invokeScript,\n      DevWallet.account.address\n    );\n    console.log(\"Transaction:\", tx);\n    const version: any = await rpc.getVersion();\n    console.log(\"Network\", version);\n    tx.sign(DevWallet.account, version.protocol.network);\n    console.log(\"System fee\", tx.systemFee.toDecimal(8).toString());\n    console.log(\"Network fee\", tx.networkFee.toDecimal(8).toString());\n    const txid = await rpc.sendRawTransaction(tx);\n    return {\n      txid,\n      nodeUrl: rpc.url,\n    };\n  }\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson,\n    senderAddress: string,\n    cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n    // @ts-ignore\n    invokeScript.args = invokeScript.args.map((param: any) =>\n      convertContractCallParam(param)\n    );\n    const script = sc.createScript({ ...invokeScript });\n\n    const signers = [\n      {\n        account: wallet.getScriptHashFromAddress(senderAddress),\n        scopes: tx.WitnessScope.Global,\n      },\n    ];\n    if (cosignerAddress) {\n      signers.push({\n        account: wallet.getScriptHashFromAddress(cosignerAddress),\n        scopes: tx.WitnessScope.Global,\n      });\n    }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","import neo3Dapi from \"neo3-dapi\";\nimport { IConnectedWallet, ITransaction, IWalletType } from \"./interfaces\";\nimport { DEV, NEO_LINE, O3, TOKEN_LIST, WALLET_LIST } from \"../consts\";\nimport { DevWallet } from \"./dev-wallet\";\nimport { sc, tx, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { INetworkType } from \"../network\";\nimport { LocalStorage } from \"../local-storage\";\nimport moment from \"moment\";\n\nexport class WalletAPI {\n  walletType: IWalletType;\n\n  constructor(walletType: IWalletType) {\n    this.walletType = walletType;\n  }\n\n  static list = WALLET_LIST;\n\n  private getInstance = async (walletType: IWalletType): Promise<any> => {\n    let instance: any;\n    switch (walletType) {\n      case O3:\n        instance = neo3Dapi;\n        break;\n      case NEO_LINE:\n        // @ts-ignore\n        instance = new NEOLineN3.Init();\n        break;\n      case DEV:\n        instance = DevWallet;\n        break;\n      default:\n        throw new Error(\"No support wallet!\");\n    }\n    return instance;\n  };\n\n  /**\n   * TODO: Remove dev wallet when 3rd party has privatenet support\n   * @param defaultNetwork\n   */\n  init = async (defaultNetwork: INetworkType): Promise<IConnectedWallet> => {\n    try {\n      const wallet = await this.getInstance(this.walletType);\n      let network;\n      let balances;\n      /* Temporary hard coding because of neoline */\n      if (this.walletType === NEO_LINE) {\n        // @ts-ignore\n        const neoline = new NEOLine.Init();\n        network = await neoline.getNetworks();\n      } else if (this.walletType === DEV) {\n        network = await wallet.getNetworks(defaultNetwork);\n      }\n\n      const provider = await wallet.getProvider();\n      const account = await wallet.getAccount();\n\n      if (this.walletType === DEV) {\n        balances = await wallet.getBalance(defaultNetwork);\n      } else {\n        const res = await wallet.getBalance({\n          params: {\n            address: account.address,\n            contracts: TOKEN_LIST(network.defaultNetwork),\n          },\n        });\n        balances = res[account.address];\n        // console.log(res)\n      }\n      return {\n        key: this.walletType,\n        provider,\n        account,\n        network,\n        balances,\n      };\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n  };\n\n  testInvoke = () => {};\n\n  /* Control signing and send transaction. TODO:Need to improve type hardcoding later */\n  invoke = async (\n    network: INetworkType,\n    senderAddress: string,\n    invokeScript: sc.ContractCallJson\n  ): Promise<string> => {\n    const wallet = await this.getInstance(this.walletType);\n    let res;\n    if (this.walletType === DEV) {\n      res = await wallet.invoke(network, invokeScript);\n    } else {\n      // @ts-ignore\n      invokeScript.signers = [\n        {\n          account: NeonWallet.getScriptHashFromAddress(senderAddress),\n          scopes: tx.WitnessScope.Global,\n        },\n      ];\n      res = await wallet.invoke(invokeScript);\n    }\n    const submittedTx: ITransaction = {\n      network,\n      wallet: this.walletType,\n      status: \"PENDING\",\n      txid: res.txid,\n      contractHash: invokeScript.scriptHash,\n      method: invokeScript.operation,\n      args: invokeScript.args,\n      createdAt: moment().format(\"MMMM Do YYYY, h:mm:ss a\"),\n    };\n    LocalStorage.addTransaction(submittedTx);\n    return res.txid;\n  };\n}\n","import { ContextOptions, IWalletStates } from \"./interfaces\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { IConnectedWallet, IWalletType } from \"../neo/wallet/interfaces\";\nimport { LocalStorage } from \"../neo/local-storage\";\nimport { sc } from \"@cityofzion/neon-core\";\nimport { WalletAPI } from \"../neo/wallet\";\nimport toast from \"react-hot-toast\";\n\nexport const WalletContext = createContext({} as IWalletStates);\nexport const WalletContextProvider = (props: {\n  options: ContextOptions;\n  children: any;\n}) => {\n  const [network] = useState(props.options.network);\n\n  const [isWalletModalActive, setWalletModalActive] = useState(false);\n\n  const [connectedWallet, setConnectedWallet] = useState<IConnectedWallet | undefined>(props.options.useLocalStorage ? LocalStorage.getWallet() : undefined);\n\n  const [invokeScript, setInvokeScript] = useState<sc.ContractCallJson | undefined>();\n\n  const [transactions, setTransactions] = useState(props.options.useLocalStorage ? LocalStorage.getTransactions() : []);\n\n  const openWalletModal = () => setWalletModalActive(true);\n\n  const closeWalletModal = () => setWalletModalActive(false);\n\n  const connectWallet = async (walletType: IWalletType) => {\n    try {\n      const connectedWallet = await new WalletAPI(walletType).init(network);\n      setConnectedWallet(connectedWallet);\n      if (props.options.useLocalStorage) {\n        LocalStorage.setWallet(connectedWallet);\n      }\n      setWalletModalActive(false);\n    } catch (e) {\n      console.error(e);\n      toast.error(`Failed to connect`);\n    }\n  };\n\n  const disConnectWallet = () => {\n    LocalStorage.removeWallet();\n    setConnectedWallet(undefined);\n  };\n\n  const doInvoke = (invokeScript: sc.ContractCallJson) => {\n    if (isWalletModalActive) setWalletModalActive(false);\n    setInvokeScript(invokeScript);\n  };\n\n  const closeInvoke = () => setInvokeScript(undefined);\n\n  const contextValue: IWalletStates = {\n    useDevWallet: props.options.useDevWallet,\n    network,\n    invokeScript,\n    list: WalletAPI.list,\n    connectedWallet,\n    isWalletModalActive,\n    openWalletModal,\n    closeWalletModal,\n    connectWallet,\n    disConnectWallet,\n    doInvoke,\n    closeInvoke,\n    transactions,\n  };\n\n  return (\n    <WalletContext.Provider value={contextValue}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n};\nexport const useWallet = () => useContext(WalletContext);\n","import { CONST } from \"../../../index\";\n\nexport const CATEGORY_CRYPTONAUT = \"Cryptonaut\";\nexport const CATEGORY_MOONBABY = \"Moon Baby\";\nexport const CATEGORY_MOONCREATURE = \"Moon Creature\";\nexport const CATEGORY_MOONTRAINER = \"Moon Trainer\";\nexport const NFT_ORACLE_FEE = 100000000; /* TODO::Confirm the price */\nexport const NFT_CONTRACT_OWNER = \"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\";\n\nexport const charactersForMint = [\n  {\n    category: CATEGORY_CRYPTONAUT,\n    images: [\n      \"https://marketplace-demo-ttm.s3.amazonaws.com/marketplace/cryptonauts/Cryptonaut.001.png\",\n      \"https://marketplace-demo-ttm.s3.amazonaws.com/marketplace/cryptonauts/Cryptonaut.002.png\",\n    ],\n    // price: 10,\n    price: 1,\n    saleLimit: 2500,\n  },\n  {\n    category: CATEGORY_MOONTRAINER,\n    images: [\n      \"https://marketplace-demo-ttm.s3.amazonaws.com/marketplace/trainers/JAX.png\",\n    ],\n    // price: 25,\n    price: 1,\n    saleLimit: 200,\n  },\n  {\n    category: CATEGORY_MOONCREATURE,\n    images: [\n      \"https://marketplace-demo-ttm.s3.amazonaws.com/marketplace/creatures/Baxlee_G1.png\",\n    ],\n    // price: 10,\n    price: 1,\n    saleLimit: 5000,\n  },\n  {\n    category: CATEGORY_MOONBABY,\n    images: [\n      \"https://marketplace-demo-ttm.s3.amazonaws.com/marketplace/babies/ORBA.png\",\n    ],\n    price: 1,\n    // price: 50,\n    saleLimit: 100,\n  },\n];\nexport const NFT_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"fe2b49f936f291b05cc70c374e1787f0facb3682\",\n  [CONST.TESTNET]: \"e2a31abcc11a235b29c11d8b32368f4d4337ee34\",\n  [CONST.MAINNET]: \"66e5f2ac49778023d2d64fdc9534d53fdb7cef90\",\n};\n\n","import { CONST } from \"..\";\n\nexport const ENDPOINT = {\n  [CONST.PRIVATENET]: \"http://localhost:3000\",\n  [CONST.TESTNET]: \"https://1lgc0avhu9.execute-api.us-east-1.amazonaws.com/testnet\",\n  [CONST.MAINNET]: \"66e5f2ac49778023d2d64fdc9534d53fdb7cef90\",\n};\n\n","import { CONST } from \"../../../index\";\n\nexport const TRADE_CONTRACT_OWNER = \"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\";\n\nexport const TRADE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"81c23e8197b1c7f34052c303b3ed7220705cbc26\",\n  [CONST.TESTNET]: \"81c23e8197b1c7f34052c303b3ed7220705cbc26\",\n  [CONST.MAINNET]: \"66e5f2ac49778023d2d64fdc9534d53fdb7cef90\",\n};\n\n","import { CONST } from \"../../../index\";\n\nexport const FARM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"57db3c9ebd0ab58fbad1ed6eeb3357bdaab9f5f0\",\n  [CONST.TESTNET]: \"75f9e00801936325ccb9e1246c5cbf3b0882f0b4\",\n  [CONST.MAINNET]: \"66e5f2ac49778023d2d64fdc9534d53fdb7cef90\",\n};\n\n","import { CONST } from \"../../neo\";\n\nexport const getWalletIcon = (key: string) => {\n  let svg = \"\";\n  switch (key){\n    case CONST.DEV:\n      svg = \"/dev.png\"\n      break;\n    case CONST.O3:\n      svg = \"/o3.svg\"\n      break;\n    case CONST.NEO_LINE:\n      svg = \"/neoline.svg\"\n      break;\n  }\n  return svg\n}\n","import React, { useState } from \"react\";\nimport { FaAngleDown } from \"react-icons/all\";\nimport { useApp } from \"../../../common/hooks/use-app\";\nimport { useWallet } from \"../../provider\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletDropdown = () => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectedWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false)\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n  if (!connectedWallet) {\n    return (\n      <button className=\"button is-white \" onClick={() => setActive(!isActive)}>\n        <strong>Wallet</strong>\n      </button>\n    );\n  }\n  return (\n    <div className={`dropdown ${isActive && \"is-active\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-white\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu3\"\n          onClick={() => setActive(!isActive)}\n        >\n          <span className=\"icon is-small\">\n            <img src={getWalletIcon(connectedWallet.key)} />\n          </span>\n          <span><strong>Wallet</strong></span>\n          <span className=\"icon is-small\">\n            <FaAngleDown />\n            {/*<i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>*/}\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a\n            onClick={handleDisconnectWallet}\n            href=\"#\"\n            className=\"dropdown-item\"\n          >\n            Disconnect\n          </a>\n          {/*<hr className=\"dropdown-divider\"/>*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletList = (props) => {\n  const { connectWallet, list, useDevWallet } = useWallet();\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          if (!useDevWallet && _wallet.key === DEV) return false;\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} alt=\"React Logo\" />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n","import React from \"react\";\nimport { IBalance } from \"../../neo/wallet/interfaces\";\n\nconst AssetCard = (props: IBalance) => {\n  return (\n    <div className=\"media box\">\n      <div className=\"media-left\">\n        <strong>{props.symbol}</strong>\n      </div>\n      <div className=\"media-content\"></div>\n      <div className=\"media-right has-text-right\">{props.amount}</div>\n    </div>\n  );\n};\n\nexport default AssetCard;\n","import React from \"react\";\nimport { utils } from \"../../neo\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport WalletList from \"./WalletList\";\nimport AssetCard from \"./AssetCard\";\nimport { useWallet } from \"../../provider\";\n\nconst Wallet = (props) => {\n  const { connectedWallet } = useWallet();\n  return (\n    <>\n      <header className=\"level is-mobile p-3 is-marginless\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <WalletDropdown />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <small>\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </small>\n            </div>\n          </div>\n        )}\n      </header>\n      <hr className=\"m-0\" />\n      <section className=\"p-5\">\n        {connectedWallet ? (\n          <div>\n            {connectedWallet && connectedWallet.balances.map((balance) => {\n              return  <AssetCard key={balance.symbol} {...balance} />\n            })}\n          </div>\n        ) : (\n          <WalletList />\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport Wallet from \"../../packages/ui/Wallet\";\n\nconst WalletSidebar = (props) => {\n  const { walletSidebarStatus, toggleWalletSidebar } = useApp();\n  return (\n    <SideNav\n      openFromRight={true}\n      style={{ top: \"52px\"}}\n      // navStyle={{ width: \"80%\" }}\n      showNav={walletSidebarStatus}\n      onHideNav={toggleWalletSidebar}\n      children={<Wallet />}\n    />\n  );\n};\n\nexport default WalletSidebar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"react-pro-sidebar/dist/css/styles.css\";\nimport { useResponsive } from \"../common/hooks/use-responsive\";\nimport { useApp } from \"../common/hooks/use-app\";\nimport Home from \"./pages/Home\";\n\nimport { HOME_PATH } from \"../consts\";\nimport { WalletContextProvider } from \"../packages/provider\";\nimport { CONST } from \"../packages/neo\";\nimport WalletSidebar from \"./components/WalletSidebar\";\nimport { Toaster } from \"react-hot-toast\";\n\nconst App = () => {\n  // const { sidebarStatus, openSidebar, closeSidebar } = useApp();\n  return (\n    <WalletContextProvider\n      options={{\n        // network: CONST.PRIVATENET,\n        network: CONST.TESTNET,\n        useLocalStorage: true,\n        useDevWallet: true,\n      }}\n    >\n      <Router>\n        <Toaster position=\"bottom-center\" />\n        {/*<Header />*/}\n        <Route exact path={HOME_PATH} component={Home} />\n        {/*<Route path={FARM_PATH} component={Farm} />*/}\n        {/*<Route path={\"*\"} component={NotFound} />*/}\n        {/*<Sidebar*/}\n        {/*  rootClassName=\"sidebar\"*/}\n        {/*  sidebarClassName=\"sidebar-sidebar\"*/}\n        {/*  contentClassName=\"sidebar-content\"*/}\n        {/*  docked={!isMobileAndBelow}*/}\n        {/*  open={isMobileAndBelow ? sidebarStatus : false}*/}\n        {/*  sidebar={<SidebarNav />}*/}\n        {/*  onSetOpen={() => (!sidebarStatus ? openSidebar() : closeSidebar())}*/}\n        {/*>*/}\n        {/*  <Switch>*/}\n        {/*    <Route exact path={HOME_PATH} component={Home} />*/}\n        {/*    /!*<Route exact path=\"/neofi\">*!/*/}\n        {/*    /!*  <NeoFi />*!/*/}\n        {/*    /!*</Route>*!/*/}\n        {/*    /!*<Route exact path=\"/migration\">*!/*/}\n        {/*    /!*  <Migration />*!/*/}\n        {/*    /!*</Route>*!/*/}\n        {/*  </Switch>*/}\n        {/*</Sidebar>*/}\n        <WalletSidebar />\n      </Router>\n    </WalletContextProvider>\n  );\n};\n\nexport default App;\n","export const HOME_PATH = \"/\";\nexport const FARM_PATH = \"/farm\";\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppCContextProvider } from \"./common/hooks/use-app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/style.scss\";\nimport App from \"./ui\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppCContextProvider>\n      <App />\n    </AppCContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}