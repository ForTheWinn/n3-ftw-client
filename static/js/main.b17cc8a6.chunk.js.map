{"version":3,"sources":["common/hooks/use-app.tsx","reportWebVitals.ts","ui/components/Logo.tsx","packages/neo/consts/index.ts","packages/neo/utils/index.ts","packages/neo/network/index.ts","packages/neo/contracts/ftw/farm/helpers.ts","packages/neo/contracts/ftw/nep17/index.ts","packages/neo/contracts/ftw/farm/index.ts","packages/neo/contracts/ftw/nft/consts.ts","packages/neo/contracts/ftw/nft/helpers.ts","packages/neo/contracts/ftw/nft/index.ts","packages/neo/contracts/ftw/swap/consts.ts","packages/neo/contracts/ftw/bank/index.ts","packages/neo/contracts/ftw/swap/helpers.ts","packages/neo/contracts/ftw/swap/index.ts","packages/neo/wallet/dev-wallet.ts","packages/neo/wallet/index.ts","packages/neo/contracts/ftw/farm/consts.ts","packages/neo/local-storage/index.ts","packages/provider/wallet-provider.tsx","consts/pageRoutes.ts","packages/ui/Wallet/helpers.ts","ui/components/WalletDropdown.tsx","ui/components/NetworkSwitch.tsx","ui/components/NetworkSwitch2.tsx","ui/components/Header.tsx","packages/ui/Wallet/WalletDropdown.tsx","packages/ui/Wallet/WalletList.tsx","packages/ui/Wallet/AssetCard.tsx","packages/ui/Wallet/index.tsx","ui/components/WalletSidebar.tsx","ui/components/PageLayout.tsx","ui/components/Modal.tsx","ui/components/TransactionSubmitted.tsx","ui/pages/Farm/ActionModal.tsx","ui/pages/Farm/SnapshotCountdown.tsx","ui/pages/Farm/SnapshotCard.tsx","ui/pages/Farm/SnapshotList.tsx","ui/components/NotifyError.tsx","ui/pages/Farm/MyPosition.tsx","ui/pages/Farm/Pool.tsx","ui/pages/Farm/CancelModal.tsx","ui/pages/Farm/ClaimModal.tsx","ui/pages/Farm/Claims.tsx","ui/pages/Farm/PositionModal.tsx","ui/pages/Farm/About.tsx","ui/pages/Farm/index.tsx","ui/pages/Gallery/PropertiesModal.tsx","ui/pages/MyCollection/index.tsx","ui/pages/Gallery/Banner.tsx","packages/neo/api/consts.ts","packages/neo/api/rest.ts","packages/ui/AfterTransactionSubmitted/RuneLoading.tsx","ui/pages/Tournament/scenes/Arena/Players/components/CheckMark.tsx","packages/ui/AfterTransactionSubmitted/index.tsx","ui/pages/Gallery/index.tsx","ui/components/SidebarNav.tsx","ui/components/MobileMenuSlider.tsx","ui/components/BgContainer.tsx","ui/pages/Tournament/pageRoutes.ts","ui/pages/Home.tsx","packages/neo/contracts/ftw/smith/consts.ts","packages/neo/contracts/ftw/smith/helpers.ts","packages/neo/contracts/ftw/smith/index.ts","ui/pages/Smith/helpers.ts","ui/pages/Smith/NEP17FormModal.tsx","ui/pages/Smith/NEP11FormModal.tsx","ui/pages/Smith/Banner.tsx","ui/pages/Smith/scenes/NEP17/ContractCard.tsx","ui/pages/Smith/scenes/NEP17/index.tsx","ui/pages/Smith/NEP11MintFormModal.tsx","ui/pages/Smith/scenes/NEP11/DisplayNFT.tsx","ui/pages/Smith/scenes/NEP11/Tokens.tsx","ui/pages/Smith/scenes/NEP11/ContractCard.tsx","ui/pages/Smith/scenes/NEP11/index.tsx","ui/pages/Smith/index.tsx","ui/pages/Tournament/scenes/Home/index.tsx","packages/neo/contracts/ftw/tournament/consts.ts","packages/neo/contracts/ftw/tournament/helpers.ts","packages/neo/contracts/ftw/tournament/index.ts","ui/pages/Tournament/components/PlayButton.tsx","ui/pages/Tournament/scenes/Arena/Banner.tsx","ui/pages/Tournament/components/DisplayRuneWithProperties.tsx","ui/pages/Tournament/components/BetButton.tsx","ui/pages/Tournament/components/LeaveButton.tsx","ui/pages/Tournament/scenes/Arena/Players/components/PlayerModal.tsx","ui/pages/Tournament/scenes/Arena/Players/components/NFTListModal.tsx","ui/pages/Tournament/scenes/Arena/Players/components/ArenaRegisterButton.tsx","ui/pages/Tournament/scenes/Arena/Players/index.tsx","ui/pages/Tournament/scenes/Arena/History/NFTDetailModal.tsx","ui/pages/Tournament/components/ClaimButton.tsx","ui/pages/Tournament/scenes/Arena/History/HistoryTable.tsx","ui/pages/Tournament/scenes/Arena/helpers.ts","ui/pages/Tournament/scenes/Arena/History/TournamentTree.tsx","ui/pages/Tournament/scenes/Arena/History/Replay.tsx","ui/pages/Tournament/scenes/Arena/History/index.tsx","ui/pages/Tournament/scenes/Arena/index.tsx","ui/pages/Tournament/index.tsx","ui/pages/Swap/components/NavSwitch/index.tsx","ui/pages/Swap/components/Input/index.tsx","ui/pages/Swap/components/AssetListModal/index.tsx","ui/pages/Swap/components/PairSelect/index.tsx","ui/pages/Swap/scenes/Swap/index.tsx","ui/pages/Swap/scenes/Farm/scenes/Detail/index.tsx","ui/pages/Swap/scenes/Farm/scenes/CreatePool/index.tsx","ui/pages/Swap/scenes/Farm/scenes/List/index.tsx","ui/pages/Swap/scenes/Farm/scenes/History/index.tsx","ui/pages/Swap/scenes/Liquidity/index.tsx","ui/pages/Swap/scenes/Farm/index.tsx","ui/pages/Swap/index.tsx","packages/neo/contracts/ftw/incubator/helpers.ts","packages/neo/contracts/ftw/incubator/consts.ts","packages/neo/contracts/ftw/incubator/index.ts","ui/pages/Incubator/scenes/Register/Form.tsx","ui/pages/Incubator/scenes/Register/index.tsx","ui/pages/Incubator/scenes/Pools/index.tsx","ui/pages/Incubator/index.tsx","ui/pages/Fusion/components/FusionBox.tsx","ui/pages/Fusion/components/RuneListModal.tsx","packages/neo/contracts/ttm/nft/helpers.ts","packages/neo/contracts/ttm/nft/consts.ts","packages/neo/contracts/ttm/nft/index.ts","ui/pages/Fusion/components/CryptonatuListModal.tsx","packages/neo/contracts/ftw/fuse/index.ts","ui/pages/Fusion/components/FusedList.tsx","ui/pages/Fusion/index.tsx","ui/pages/Migration/index.tsx","ui/components/ReactGa.tsx","ui/index.tsx","index.tsx"],"names":["AppContext","createContext","AppCContextProvider","props","useState","sidebarStatus","setSidebarStatus","walletSidebarStatus","setWalletSidebarStatus","contextValue","openSidebar","closeSidebar","toggleSidebar","toggleWalletSidebar","Provider","value","children","useApp","useContext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Logo","alt","src","width","height","O3","NEO_LINE","DEV","ONE_GATE","WALLET_LIST","label","key","PRIVATENET","TESTNET","MAINNET","PRIVATE_CONFIG","url","TESTNET_CONFIG","TESTNET_CONFIG_2","MAINNET_CONFIG","MAINNET_CONFIG_2","GAS_SCRIPT_HASH","NEON_CONST","NATIVE_CONTRACT_HASH","GasToken","NEO_SCRIPT_HASH","NeoToken","TOKEN_LIST","DEV_WALLET_PRIVATE_KEY","DEFAULT_WITNESS_SCOPE","senderHash","account","scopes","tx","WitnessScope","CalledByEntry","truncateAddress","address","substring","substr","length","convertContractCallParam","param","type","sc","ContractParam","hash160","wallet","getScriptHashFromAddress","string","integer","array","map","i","byteArray","u","hex2base64","str2hexstring","Error","base64ToAddress","str","getAddressFromScriptHash","base64ToHash160","reverseHex","base642hex","base64ToString","HexString","fromBase64","toAscii","toString","base64ToFixed8","BigInteger","fromNumber","toDecimal","val","parseFloat","e","base64ToDate","moment","unix","format","truncateDecimal","v","p","s","Math","pow","trunc","balanceCheck","balances","requiredAmount","hasBalance","forEach","bal","symbol","amount","Network","READ_LOG_FREQUENCY","getRPCClient","networkType","config","rpc","RPCClient","getRawTx","txid","a","rpcClient","getApplicationLog","rawTx","sleep","findNotificationFromTxId","txId","scriptHash","eventName","getNotificationsFromTxId","notifications","find","n","contract","eventname","network","appLog","executions","push","read","scripts","passFaultCheck","sb","ScriptBuilder","script","params","args","arg","emitAppCall","operation","invokeScript","fromHex","build","res","state","console","error","exception","duration","Promise","resolve","setTimeout","parseDeposit","stackItem","position","lastClaimNo","createdAt","parseClaimPaginate","totalItems","totalPages","page","items","parseClaim","item","no","from","end","GAS","FTW","parseSnapshotItem","totalPositionPool","totalNeo","totalGas","range","winPosition","FTW_SCRIPT_HASH","CONST","NUDES_SCRIPT_HASH","DOGE_SCRIPT_HASH","MOON_SCRIPT_HASH","FarmContract","contractHash","deposit","connectedWallet","NeonWallet","signers","WalletAPI","invoke","remove","createSnapshot","claim","changePosition","getStatus","neoBalance","ftwBalance","timeLeft","interval","vote","snapshots","claims","stack","undefined","this","FARM_SCRIPT_HASH","RUNE_SCRIPT_HASH","RUNE_PRICE","RUNE_PHASE_FILTER","parseProperties","obj","base642utf8","NFTContract","mint","fromDecimal","withdrawFund","getTotalSupplyScript","getPropertiesScript","tokenId","getProperties","getTokensOfScript","ownerAddress","getTokensOf","metaList","iterator","meta","getTokens","SWAP_SCRIPT_HASH","ASSET_LIST","logo","PAIR_LIST","tokenA","tokenB","getEstimate","reserveA","reserveB","fixed8TokenAmount","estimated","floor","parseUserStake","amountA","amountB","parsePair","totalShare","parseSwap","tokenIn","tokenOut","tokenInAmount","tokenOutAmount","SwapContract","provide","CustomContracts","allowedContracts","swap","getPair","script1","script2","pair","reserve","getPairs","swapToken","getUserStake","stake","getClaimAble","getSwapHistory","getContractHashes","script3","script4","script5","decimals","getContractSymbol","DevWallet","name","version","website","compatibility","extra","currency","theme","chainId","defaultNetwork","networks","getNep17Balances","balance","assethash","includes","getVersion","txObj","sign","protocol","sendRawTransaction","nodeUrl","Account","createScript","getBlockCount","currentHeight","transaction","Transaction","validUntilBlock","calculateNetworkFee","networkFee","calculateSystemFee","systemFee","extraSystemFee","fee","add","invokeFunction","PolicyContract","invokeFunctionResponse","feePerByte","transactionByteSize","serialize","witnessProcessingFee","mul","gasconsumed","sender","transferScript","gasBalance","requiredGas","transferTokenBalance","Fixed8","fromRawNumber","toNumber","transferAmount","walletType","O3Wallet","instance","neo3Dapi","getProvider","provider","getAccount","getNetworks","getBalance","contracts","OneGate","NeoDapi","window","assetHashes","NeoLine","NEOLineN3","Init","instance2","NEOLine","Dev","init","_instance","description","message","currentNetwork","testInvoke","submittedTx","method","LocalStorage","addTransaction","list","CONNECTED_WALLET","TRANSACTIONS","NETWORK","SWAP_TOKEN_A","SWAP_TOKEN_B","validated","validateConnectedWallet","store","set","has","dispatchEvent","Event","transactions","get","status","initStorage","supportContracts","getTransactions","validatedTx","removeTransaction","getNetwork","setNetwork","getWallet","clearTransaction","setSwapTokenA","setSwapTokenB","getSwapTokenA","getSwapTokenB","WalletContext","WalletContextProvider","totalTxSubmit","setTotalTxSubmit","isWalletModalActive","setWalletModalActive","options","useLocalStorage","setConnectedWallet","setInvokeScript","pendingTransactions","setPendingTransactions","connectWallet","toast","success","setWallet","useDevWallet","openWalletModal","closeWalletModal","disConnectWallet","removeWallet","doInvoke","closeInvoke","addPendingTransaction","removePendingTransaction","filter","switchNetwork","increaseTotalTxSubmit","useWallet","MIGRATION_PATH","FARM_PATH","GALLERY_PATH","TOURNAMENT_PATH","SMITH_PATH","SMITH_PATH_NEP11","COLLECTION_PATH","SWAP_PATH","SWAP_PATH_FARM","SWAP_PATH_HISTORY","SWAP_PATH_LIQUIDITY","FUSION_PATH","INCUBATOR_PATH","INCUBATOR_REGISTER_PATH","MENU","path","getWalletIcon","svg","WalletDropdown","isActive","setActive","useEffect","refresh","disconnected","addEventListener","removeEventListener","Constants","EventName","ACCOUNT_CHANGED","NETWORK_CHANGED","DISCONNECTED","className","onClick","utils","id","role","to","NetworkSwitch","networkList","confirm","targetNetwork","Header","style","justifyContent","marginLeft","alignItems","NetworkSwitch2","route","activeClassName","target","href","WalletList","_wallet","AssetCard","Wallet","bottom","WalletSidebar","openFromRight","top","showNav","onHideNav","PageLayout","ModalCard","onClose","isLoading","React","$","addClass","removeClass","zIndex","TransactionSubmitted","ActionModal","setAmount","setPosition","setTxid","onDeposit","Modal","onChange","_","autoFocus","decimalScale","inputMode","onValueChange","thousandSeparator","suffix","allowLeadingZeros","disabled","SnapshotCountdown","onCreateSnapshot","CreateSnapshotBtn","date","Date","now","renderer","completed","hours","minutes","seconds","SnapshotCard","SnapshotList","contractStatus","NotifyError","msg","MyPosition","lastSnapshotNo","onCancel","onClaim","onPositionChange","isClaimable","Pool","CancelModal","Claims","PositionModal","currentPosition","tempTime","Farm","production","setRoute","modalActive","setModalActive","cancelModalActive","setCancelModalActive","claimModalActive","setClaimModalActive","positionModalActive","setPositionModalActive","setError","setContractStatus","onClaimModalActive","fetchContractStatus","About","ClaimModal","PropertiesModal","setItem","setLoading","phase","luck","image","owner","MyCollection","tokens","setTokens","propertiesModalActive","setPropertiesModalActive","token","Banner","onMint","ENDPOINT","RestAPI","endpoint","fetchResult","fetch","mode","json","RuneLoading","random","colors","bg","setBg","dot1","setDot1","dot2","setDot2","dot3","setDot3","dot4","setDot4","body","setBody","timer","clearTimeout","CheckMark","xmlns","viewBox","fill","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","strokeLinecap","points","AfterTransactionSubmitted","onSuccess","onError","isDone","setDone","hasError","checkTxid","margin","display","size","marginTop","Gallery","setFilter","getRunes","document","title","onFilterChange","flexFlow","SidebarNav","MobileMenuSlider","BgContainer","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","ARENA_PATH","CARDS","desc","img","link","Home","onSwitchNetwork","card","minHeight","SMITH_SCRIPT_HASH","DEPLOY_FEE","parseRecord","contractOwner","totalSupply","author","parseNEP11Record","email","parseSmithProperties","SmithContract","createNEP17","contractName","createNEP11","mintNFT","records","getNEP11Records","emojiRegexExp","detectEmojiInString","values","detected","Object","keys","test","NEP17FormModal","setValues","handleValueChange","hasEmoji","max","allowNegative","NEP11FormModal","location","useLocation","isNep11FormModalActive","setNep11FormModalActive","isNep17FormModalActive","setNep17FormModalActive","pathname","ContractCard","data","NEP17Smith","setStatus","NEP11MintFormModal","showForm","setShowForm","attributes","attValues","setAttValues","handleAttChange","JSON","stringify","attKeys","k","placeholder","DisplayRune","setToken","Tokens","DisplayNFT","isMintModalActive","setMintModalActive","NEP11Smith","setData","Smith","exact","component","NEP17","NEP11","ArenaHome","ARENA_LIST","arena","TOURNAMENT_SCRIPT_HASH","ADMIN_FOR_PLAY","SUPPORT_TICKET_PRICE","parsePlayer","tokenHash","parseGame","gameNo","tournamentTree","champion","nonce","betsOnChampion","totalBets","rollover","championPrize","champOwner","calculateClaimableAmount","history","betAmount","totalAmount","myClaimAble","TournamentContract","register","arenaNo","play","leave","bet","getPlayers","currentPage","getGameHeight","getBetAmount","championTokenId","isClaimed","getBetOnPlayer","userBets","getCurrentPrize","prize","previousChampWallet","timeElapsedFromPreviousGame","PlayButton","onSubmitted","onPlay","playTxid","setPlayTxid","hasPermissionToPlay","DisplayRuneWithProperties","isOwner","getRune","fetchRune","left","BetButton","onBet","LeaveButton","onLeave","PlayerModal","player","_gameNo","gameOwner","NFTListModal","onRegister","RegisterButton","playerCount","Players","playerModalActive","setPlayerModalActive","players","setPlayers","onPlayerModalActive","NFTDetailModal","rune","ClaimButton","onClaimed","fetchBetAmount","HistoryTable","onReplay","fight","aPhase","aLuck","bPhase","bLuck","compareLuck","chunks","arr","slice","TournamentTree","champ","tree","capacity","stage","winners","match","rounds","reverse","winner","opacity","Replay","gameHistory","backgroundColor","History","claimTxid","setClaimTxid","setPage","nftModalActive","setNftModalActive","replayModalActive","setReplayModalActive","setHistory","onNFTModalActive","fetchHistory","itemsPerPage","ceil","game","pages","_page","Arena","useMemo","Tournament","ArenaMenu","NavSwitch","Input","asset","heading","setValue","onClickAsset","isReadOnly","userBalance","setSymbol","setLogo","_hash","fetchTokenInfo","readOnly","source","event","AssetListModal","onAssetClick","isCustomInputMode","setCustomInputMode","setContractHash","assets","ASSETS","hash","isScriptHash","PairSelect","onSelect","Swap","queryString","parse","search","isAssetChangeModalActive","setAssetChangeModalActive","setTokenA","setTokenB","setAmountA","setAmountB","setReserve","isPairLoading","setPairLoading","onTokenAAmountChange","onSwap","onSwitch","loadPair","A","B","noLiquidity","assetHash","FarmDetail","claimable","setClaimable","reloadCnt","setReloadCnt","onRemoveLiquidity","res1","res2","userShare","totalShares","poolA","poolB","getUserShare","log","CreatePool","useHistory","errors","setErrors","handleSubmit","_errors","err","PairList","setList","detail","setDetail","isCreateModalActive","setCreateModalActive","symbolIn","symbolOut","Liquidity","isNewPoolMode","tokenBv","onAssetChange","onAddLiquidity","fetchPair","List","SwapBox","parsePoolInfo","initialFTWAmount","initialAmount","creator","INCUBATOR_SCRIPT_HASH","IncubatorContract","createPool","pools","Form","Register","Pools","lockedPercent","INCUBATOR_POOL_PATH","FusionBox","RuneListModal","TTM_SCRIPT_HASH","CRYPTONAUT_REGEX","TTMNFTContract","properties","CryptonatuListModal","FUSE_SCRIPT_HASH","FusionContract","fuse","cryptonautTokenId","runeTokenId","refund","FusedList","onReset","onRefund","element","Fusion","isTTMModalActive","setTTMModalActive","isFTWModalActive","setFTWModalActive","cryptonaut","setCryptonaut","setRune","onFuse","_txid","Migration","vantaEffect","setVantaEffect","myRef","useRef","DOTS","el","current","mouseControls","touchControls","gyroControls","minWidth","destroy","autoPlay","loop","ref","ReactGa","ReactGA","pageview","initialize","App","process","Incubator","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b17cc8a6.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n// import toast from \"react-hot-toast\";\n\ninterface IAppContext {\n  sidebarStatus: boolean;\n  walletSidebarStatus: boolean;\n  openSidebar: () => void;\n  closeSidebar: () => void;\n  toggleSidebar: () => void;\n  toggleWalletSidebar: () => void;\n}\n\nexport const AppContext = createContext({} as IAppContext);\n\nexport const AppCContextProvider = (props: { children: any }) => {\n  const [sidebarStatus, setSidebarStatus] = useState(false);\n  const [walletSidebarStatus, setWalletSidebarStatus] = useState(false);\n  const openSidebar = () => setSidebarStatus(true);\n  const closeSidebar = () => setSidebarStatus(false);\n  const toggleSidebar = () => {\n    if (walletSidebarStatus) {\n      setWalletSidebarStatus(false);\n    }\n    setSidebarStatus(!sidebarStatus);\n  };\n  const toggleWalletSidebar = () => {\n    if (sidebarStatus) {\n      setSidebarStatus(false);\n    }\n    setWalletSidebarStatus(!walletSidebarStatus);\n  };\n\n  const contextValue = {\n    sidebarStatus,\n    openSidebar,\n    closeSidebar,\n    toggleSidebar,\n    walletSidebarStatus,\n    toggleWalletSidebar,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => useContext(AppContext);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nconst Logo = () => {\n  return (\n    <>\n      <img\n        alt=\"Forthewin Logo\"\n        src={\"/logo/FTW_512_512.svg\"}\n        width=\"36px\"\n        height=\"36px\"\n      />\n      {/*<DisplayRandomRune width=\"36px\" height=\"36px\" />*/}\n    </>\n  );\n};\n\nexport default Logo;\n","import { CONST as NEON_CONST, tx } from \"@cityofzion/neon-core\";\nimport { IWalletType } from \"../wallet/interfaces\";\n\n/* Wallets */\nexport const O3 = \"O3\";\nexport const NEO_LINE = \"NEO_LINE\";\nexport const DEV = \"DEV\";\nexport const ONE_GATE = \"ONE_GATE\";\nexport const WALLET_LIST: {\n  label: string;\n  key: IWalletType;\n}[] = [\n  {\n    label: \"Dev\",\n    key: DEV,\n  },\n  {\n    label: \"NEO Line\",\n    key: NEO_LINE,\n  },\n  {\n    label: \"O3\",\n    key: O3,\n  },\n  {\n    label: \"OneGate\",\n    key: ONE_GATE,\n  },\n];\n\n/* Network types */\nexport const PRIVATENET = \"N3PrivateNet\";\nexport const TESTNET = \"N3TestNet\";\nexport const MAINNET = \"N3MainNet\";\n\n/* Network configs */\nexport const PRIVATE_CONFIG = {\n  label: \"privateNet\",\n  url: \"http://127.0.0.1:50012\",\n};\n\nexport const TESTNET_CONFIG = {\n  label: \"N3TestNet\",\n  // url: \"https://testnet1.neo.coz.io:443\",\n  url: \"https://testnet2.neo.coz.io:443\",\n};\n\n// Using for tx monitor\nexport const TESTNET_CONFIG_2 = {\n  label: \"N3TestNet\",\n  url: \"https://testnet1.neo.coz.io:443\",\n};\n\nexport const MAINNET_CONFIG = {\n  label: \"N3MainNet\",\n  url: \"https://n3seed2.ngd.network:10332\",\n};\n\nexport const MAINNET_CONFIG_2 = {\n  label: \"N3MainNet\",\n  url: \"https://mainnet1.neo.coz.io:443\",\n};\n\n/* Contract hashes */\nexport const GAS_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.GasToken;\nexport const NEO_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.NeoToken;\n\nexport const TOKEN_LIST = () => [NEO_SCRIPT_HASH, GAS_SCRIPT_HASH];\n\n/* Dev wallet */\nexport const DEV_WALLET_PRIVATE_KEY =\n  \"7b5d7fda53932ed9d43eb848dd521455767a4d40b5a994e6f351605e5a4ce26a\";\n\nexport const DEFAULT_WITNESS_SCOPE = (senderHash: string) => {\n  return {\n    account: senderHash,\n    scopes: tx.WitnessScope.CalledByEntry,\n  };\n};\n","import { sc, u, wallet } from \"@cityofzion/neon-core\";\nimport moment from \"moment\";\nimport { IBalance } from \"../wallet/interfaces\";\n\nexport const truncateAddress = (address: string) => {\n  return `${address.substring(0, 4)}...${address.substr(address.length - 2)}`;\n};\n\n/**\n * It converts contract call params for dev wallet. Depending on 3rd wallet params.\n * @param param\n */\nexport const convertContractCallParam = (param: any) => {\n  switch (param.type) {\n    case \"Address\":\n      return sc.ContractParam.hash160(\n        wallet.getScriptHashFromAddress(param.value)\n      );\n    case \"Hash160\":\n      return sc.ContractParam.hash160(param.value);\n    case \"String\":\n      return sc.ContractParam.string(param.value);\n    case \"Integer\":\n      return sc.ContractParam.integer(param.value);\n    case \"Array\":\n      return sc.ContractParam.array(\n        ...param.value.map((i: any) => convertContractCallParam(i))\n      );\n    case \"ByteArray\":\n      return sc.ContractParam.byteArray(\n        u.hex2base64(u.str2hexstring(param.value))\n      );\n    default:\n      throw new Error(\"No support param\");\n  }\n};\n\nexport const base64ToAddress = (str: string) =>\n  wallet.getAddressFromScriptHash(base64ToHash160(str));\n\nexport const base64ToHash160 = (str: string) => u.reverseHex(u.base642hex(str));\n\nexport const base64ToString = (str: string) =>\n  u.HexString.fromBase64(str).toAscii().toString();\n\nexport const base64ToFixed8 = (str: string) => {\n  const no = u.BigInteger.fromNumber(str).toDecimal(8);\n  return no;\n};\n\nexport const toDecimal = (val: string): number => {\n  try {\n    const amount = parseFloat(\n      u.BigInteger.fromNumber(parseFloat(val)).toDecimal(8).toString()\n    );\n    return amount;\n  } catch (e) {\n    return 0;\n  }\n};\n\n// export const toNumber = () => {\n//\n// }\n\nexport const base64ToDate = (str: string) =>\n  moment.unix(parseFloat(str) / 1000).format(\"lll\");\n\nexport function truncateDecimal(v, p) {\n  const s = Math.pow(10, p || 0);\n  return Math.trunc(s * v) / s;\n}\n\nexport const balanceCheck = (\n  balances: IBalance[],\n  requiredAmount: number\n): boolean => {\n  let hasBalance = false;\n  balances.forEach((bal) => {\n    if (bal.symbol === \"GAS\") {\n      if (parseFloat(bal.amount) > requiredAmount) {\n        hasBalance = true;\n      }\n    }\n  });\n  return hasBalance;\n};\n","import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG,\n  TESTNET_CONFIG_2,\n  MAINNET_CONFIG_2,\n} from \"../consts\";\n// tslint:disable-next-line:no-submodule-imports\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport {\n  ApplicationLogJson,\n  GetRawTransactionResult,\n  // tslint:disable-next-line:no-submodule-imports\n} from \"@cityofzion/neon-core/lib/rpc/Query\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n  private static readonly READ_LOG_FREQUENCY = 6000;\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static getRawTx = async (txid: string, networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG_2;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG_2;\n        break;\n    }\n    const rpcClient = new rpc.RPCClient(config.url);\n    let rawTx: any;\n    do {\n      try {\n        rawTx = await rpcClient.getApplicationLog(txid);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!rawTx);\n\n    return rawTx;\n  };\n\n  static findNotificationFromTxId = async (\n    txId: string,\n    scriptHash: string,\n    eventName: string,\n    networkType: INetworkType\n  ) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(\n      txId,\n      networkType\n    );\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName\n    );\n  };\n\n  static getNotificationsFromTxId = async (\n    txId: string,\n    network: INetworkType\n  ) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[],\n    passFaultCheck?: boolean\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    const res = await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    if (!passFaultCheck && res.state === \"FAULT\") {\n      console.error(\"RPC read error\" + res);\n      throw new Error(res.exception ? res.exception : \"Network error\");\n    }\n    return res;\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","import { IFarmDepositRecord } from \"./interfaces\";\nimport { base64ToDate, base64ToFixed8, base64ToString } from \"../../../utils\";\n\nexport const parseDeposit = (\n  stackItem: any\n): IFarmDepositRecord | undefined => {\n  // TODO check if there no deposit\n  // if (!stackItem.value) return undefined;\n  return {\n    position: stackItem[0].value,\n    amount: stackItem[1].value,\n    lastClaimNo: stackItem[2].value,\n    createdAt: stackItem[3].value,\n  };\n};\n\nexport const parseClaimPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseClaim(stackItem[3].value),\n  };\n};\n\nexport const parseClaim = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      from: item.value[1].value,\n      end: item.value[2].value,\n      GAS: base64ToFixed8(item.value[3].value),\n      FTW: base64ToFixed8(item.value[4].value),\n      createdAt: base64ToDate(item.value[5].value),\n    };\n  });\n};\n\nexport const parseSnapshotPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSnapshotItem(stackItem[3].value),\n  };\n};\n\nconst parseSnapshotItem = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      totalPositionPool: item.value[1].value, // NEO amount\n      totalNeo: item.value[2].value, // NEO amount\n      totalGas: base64ToFixed8(item.value[3].value),\n      range: base64ToFixed8(item.value[4].value),\n      winPosition: item.value[5].value,\n      createdAt: base64ToDate(item.value[6].value),\n    };\n  });\n};\n","import { CONST } from \"../../../index\";\n\nexport const FTW_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"c1a56650f12420405c5b7e2634eb3779a0c3e396\",\n  [CONST.TESTNET]: \"c1a56650f12420405c5b7e2634eb3779a0c3e396\",\n  [CONST.MAINNET]: \"9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20 \",\n};\n\nexport const NUDES_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"\",\n  [CONST.TESTNET]: \"340720c7107ef5721e44ed2ea8e314cce5c130fa\",\n  [CONST.MAINNET]: \"340720c7107ef5721e44ed2ea8e314cce5c130fa \",\n};\n\nexport const DOGE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"\",\n  [CONST.TESTNET]: \"cea6b1fac256c3c7aa704e599eb8a615b88e0c69\",\n  [CONST.MAINNET]: \"\",\n};\n\nexport const MOON_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"\",\n  [CONST.TESTNET]: \"15135cdb4e0130398ab95f830062bd316621230d\",\n  [CONST.MAINNET]: \"\",\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { DEFAULT_WITNESS_SCOPE, NEO_SCRIPT_HASH } from \"../../../consts\";\nimport { FARM_SCRIPT_HASH } from \"./consts\";\nimport { IFarmContractStatus } from \"./interfaces\";\nimport {\n  parseClaimPaginate,\n  parseDeposit,\n  parseSnapshotPaginate,\n} from \"./helpers\";\nimport { FTW_SCRIPT_HASH } from \"../nep17\";\nimport { base64ToFixed8 } from \"../../../utils\";\nimport { wallet as NeonWallet } from \"@cityofzion/neon-core\";\n\nexport class FarmContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FARM_SCRIPT_HASH[networkType];\n  }\n\n  deposit = async (\n    connectedWallet: IConnectedWallet,\n    amount: string,\n    position: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: amount,\n        },\n        {\n          type: \"Integer\",\n          value: parseFloat(position),\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  remove = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"removeFund\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  createSnapshot = async (\n    connectedWallet: IConnectedWallet\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"createSnapshot\",\n      scriptHash: this.contractHash,\n      args: [],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  claim = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  changePosition = async (\n    connectedWallet: IConnectedWallet,\n    position: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"changePosition\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Integer\",\n          value: position,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  getStatus = async (\n    connectedWallet?: IConnectedWallet\n  ): Promise<IFarmContractStatus> => {\n    const neoBalance = {\n      operation: \"balanceOf\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const ftwBalance = {\n      operation: \"balanceOf\",\n      scriptHash: FTW_SCRIPT_HASH[this.network],\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const timeLeft = {\n      operation: \"timeLeft\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const interval = {\n      operation: \"getSnapshotInterval\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const range = {\n      operation: \"getRange\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const vote = {\n      operation: \"getVote\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const snapshots = {\n      operation: \"getSnapshots\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n\n    const scripts = [\n      neoBalance,\n      ftwBalance,\n      timeLeft,\n      interval,\n      range,\n      vote,\n      snapshots,\n    ];\n\n    if (connectedWallet) {\n      const deposit = {\n        operation: \"getDeposit\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            type: \"Address\",\n            value: connectedWallet.account.address,\n          },\n        ],\n      };\n      const claims = {\n        operation: \"getClaims\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            // @ts-ignore\n            type: \"Address\",\n            // @ts-ignore\n            value: connectedWallet.account.address,\n          },\n          {\n            type: \"Integer\",\n            value: 1,\n          },\n        ],\n      };\n      scripts.push(deposit);\n      scripts.push(claims);\n    }\n    const res = await Network.read(this.network, scripts);\n    return {\n      neoBalance: res.stack[0].value as string,\n      ftwBalance: base64ToFixed8(res.stack[1].value as string),\n      timeLeft: res.stack[2].value as string,\n      interval: res.stack[3].value as string,\n      range: res.stack[4].value as string,\n      vote: res.stack[5].value as string,\n      snapshots: parseSnapshotPaginate(res.stack[6].value),\n      deposit:\n        connectedWallet && res.stack[7].value\n          ? parseDeposit(res.stack[7].value)\n          : undefined,\n      claims:\n        connectedWallet && res.stack[8].value\n          ? parseClaimPaginate(res.stack[8].value)\n          : undefined,\n    };\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const RUNE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.TESTNET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.MAINNET]: \"bebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\",\n};\n\nexport const RUNE_PRICE = {\n  [CONST.PRIVATENET]: \"10\",\n  [CONST.TESTNET]: \"0.1\", // Testnet mint is cheaper than mainnet\n  [CONST.MAINNET]: \"10\",\n};\n\nexport const RUNE_PHASE_FILTER = [\n  \"All\",\n  \"Fire\",\n  \"Water\",\n  \"Wood\",\n  \"Earth\",\n  \"Metal\",\n  \"Dark\",\n  \"Light\",\n];\n","import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { sc, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { DEFAULT_WITNESS_SCOPE, GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { RUNE_SCRIPT_HASH, RUNE_PRICE } from \"./consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { IRuneMeta } from \"./interfaces\";\nimport { parseProperties } from \"./helpers\";\n\nexport class NFTContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = RUNE_SCRIPT_HASH[networkType];\n  }\n\n  mint = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(\n            RUNE_PRICE[this.network],\n            8\n          ).toString(),\n        },\n        {\n          type: \"String\",\n          value: \"1\",\n        },\n      ],\n\t    signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      \"0.01\"\n    );\n  };\n\n  withdrawFund = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"withdrawFund\",\n      scriptHash: this.contractHash,\n      args: [],\n\t    signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  getTotalSupplyScript = (): sc.ContractCallJson => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"totalSupply\",\n      args: [],\n    };\n  };\n\n  getPropertiesScript = (tokenId: string) => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n  };\n\n  getProperties = async (tokenId: string): Promise<IRuneMeta> => {\n    const script = this.getPropertiesScript(tokenId);\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseProperties(res.stack);\n  };\n\n  getTokensOfScript = (ownerAddress: string) => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = this.getTokensOfScript(ownerAddress);\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      const meta = await this.getProperties(tokenId);\n      // @ts-ignore\n      metaList.push({ tokenId, ...meta });\n    }\n    return metaList;\n  };\n\n  getTokens = async (): Promise<string[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokens\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].iterator.map((item) => {\n      return u.HexString.fromBase64(item.value as string).toAscii();\n    });\n  };\n}\nexport { RUNE_SCRIPT_HASH } from \"./consts\";\n","import { CONST } from \"../../../index\";\nimport {\n  DOGE_SCRIPT_HASH,\n  FTW_SCRIPT_HASH,\n  MOON_SCRIPT_HASH,\n  NUDES_SCRIPT_HASH,\n} from \"../nep17\";\nimport { GAS_SCRIPT_HASH, MAINNET, PRIVATENET, TESTNET } from \"../../../consts\";\nimport { INetworkType } from \"../../../network\";\n\nexport const SWAP_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"aeac82f7830f4083b98089baa51060e621febb10\",\n  // [CONST.TESTNET]: \"428783fccfb6b194f7d33cd421e9f56f48efbde5\", // With WMOON\n  [CONST.TESTNET]: \"e25b035daf36caef983f010fbc03885e76fc7c3c\",\n  [CONST.MAINNET]: \"\",\n};\n\nexport const ASSET_LIST = {\n  [PRIVATENET]: {\n    [GAS_SCRIPT_HASH]: {\n      contractHash: GAS_SCRIPT_HASH,\n      symbol: \"GAS\",\n      logo: \"/symbols/neo.svg\",\n    },\n    [FTW_SCRIPT_HASH[PRIVATENET]]: {\n      contractHash: FTW_SCRIPT_HASH[PRIVATENET],\n      symbol: \"FTW\",\n      logo: \"/symbols/ftw.svg\",\n    },\n    [NUDES_SCRIPT_HASH[PRIVATENET]]: {\n      contractHash: NUDES_SCRIPT_HASH[PRIVATENET],\n      symbol: \"NUDES\",\n      logo: \"/symbols/nudes.png\",\n    },\n  },\n  [TESTNET]: {\n    [GAS_SCRIPT_HASH]: {\n      contractHash: GAS_SCRIPT_HASH,\n      symbol: \"GAS\",\n      logo: \"/symbols/neo.svg\",\n    },\n    [FTW_SCRIPT_HASH[TESTNET]]: {\n      contractHash: FTW_SCRIPT_HASH[TESTNET],\n      symbol: \"FTW\",\n      logo: \"/symbols/ftw.svg\",\n    },\n    [NUDES_SCRIPT_HASH[TESTNET]]: {\n      contractHash: NUDES_SCRIPT_HASH[TESTNET],\n      symbol: \"NUDES\",\n      logo: \"/symbols/nudes.png\",\n    },\n    [DOGE_SCRIPT_HASH[TESTNET]]: {\n      contractHash: DOGE_SCRIPT_HASH[TESTNET],\n      symbol: \"DOGE\",\n      logo: \"/symbols/unknown.png\",\n    },\n    [MOON_SCRIPT_HASH[TESTNET]]: {\n      contractHash: MOON_SCRIPT_HASH[TESTNET],\n      symbol: \"WMOON\",\n      logo: \"/symbols/unknown.png\",\n    },\n  },\n  [MAINNET]: {\n    [GAS_SCRIPT_HASH]: {\n      contractHash: GAS_SCRIPT_HASH,\n      symbol: \"GAS\",\n      logo: \"/symbols/neo.svg\",\n    },\n    [FTW_SCRIPT_HASH[MAINNET]]: {\n      contractHash: FTW_SCRIPT_HASH[MAINNET],\n      symbol: \"FTW\",\n      logo: \"/symbols/ftw.svg\",\n    },\n    [NUDES_SCRIPT_HASH[MAINNET]]: {\n      contractHash: NUDES_SCRIPT_HASH[MAINNET],\n      symbol: \"NUDES\",\n      logo: \"/symbols/nudes.png\",\n    },\n  },\n};\n\nexport const PAIR_LIST = {\n  [PRIVATENET]: [\n    {\n      label: \"FTW - NUDES\",\n      value: {\n        tokenA: FTW_SCRIPT_HASH[PRIVATENET],\n        tokenB: NUDES_SCRIPT_HASH[PRIVATENET],\n      },\n    },\n  ],\n  [TESTNET]: [\n    {\n      label: \"FTW - NUDES\",\n      value: {\n        tokenA: FTW_SCRIPT_HASH[TESTNET],\n        tokenB: NUDES_SCRIPT_HASH[TESTNET],\n      },\n    },\n  ],\n  [MAINNET]: [],\n};\n\nexport const ASSETS = (network: INetworkType) => {\n  const keys = Object.keys(ASSET_LIST[network]);\n  return keys.map((key) => {\n    return ASSET_LIST[network][key];\n  });\n};\n","import { CONST } from \"../../../index\";\n\nexport const BANK_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.TESTNET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.MAINNET]: \"\",\n};\n","import { u } from \"@cityofzion/neon-core\";\nimport {\n  base64ToDate,\n  base64ToFixed8,\n  base64ToHash160,\n  toDecimal,\n} from \"../../../utils\";\nimport { IPair } from \"./interfaces\";\n\nexport const getEstimate = (\n  amount: string,\n  reserveA: number,\n  reserveB: number\n): number => {\n  const fixed8TokenAmount = u.BigInteger.fromDecimal(amount, 8).toString();\n  // let keys = Object.keys(pairInfo);\n  // keys = keys.filter((k) => k !== token);\n  // const reservedA = pairInfo[token];\n  // const reservedB = pairInfo[keys[0]];\n  let estimated = (parseFloat(fixed8TokenAmount) * reserveB) / reserveA;\n  estimated = Math.floor(estimated);\n  return toDecimal(estimated.toString());\n};\n\nexport const getUserShare = (totalShares, userShare, poolA, poolB) => {\n  // totalShares = parseFloat(totalShares);\n  // userShare = parseFloat(userShare);\n  // poolA = parseFloat(poolA);\n  // poolB = parseFloat(poolB);\n  return {\n    amountA: (poolA * userShare) / totalShares,\n    amountB: (poolB * userShare) / totalShares,\n  };\n};\n\nexport const parseUserStake = (stackItem) => {\n  return {\n    tokenA: base64ToHash160(stackItem.value[0].value as string),\n    tokenB: base64ToHash160(stackItem.value[1].value as string),\n    amountA: toDecimal(stackItem.value[2].value),\n    amountB: toDecimal(stackItem.value[3].value),\n  };\n};\n\nexport const parsePair = (stackItem): IPair => {\n  return {\n    tokenA: base64ToHash160(stackItem.value[0].value as string),\n    tokenB: base64ToHash160(stackItem.value[1].value as string),\n    amountA: toDecimal(stackItem.value[2].value),\n    amountB: toDecimal(stackItem.value[3].value),\n    totalShare: toDecimal(stackItem.value[4].value),\n  };\n};\n\nexport const parseSwapPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSwap(stackItem[3].value),\n  };\n};\n\nconst parseSwap = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      tokenIn: base64ToHash160(item.value[0].value),\n      tokenOut: base64ToHash160(item.value[1].value), // NEO amount\n      tokenInAmount: toDecimal(item.value[2].value), // NEO amount\n      tokenOutAmount: toDecimal(item.value[3].value),\n    };\n  });\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { SWAP_SCRIPT_HASH } from \"./consts\";\nimport { base64ToHash160, base64ToString, toDecimal } from \"../../../utils\";\nimport { tx, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { parsePair, parseSwapPaginate, parseUserStake } from \"./helpers\";\nimport { DEFAULT_WITNESS_SCOPE } from \"../../../consts\";\nimport { IPairInfo } from \"./interfaces\";\n\nexport class SwapContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = SWAP_SCRIPT_HASH[networkType];\n  }\n\n  provide = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    amountA: string,\n    tokenB: string,\n    amountB: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"addPair\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountA, 8).toString(),\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountB, 8).toString(),\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, tokenA, tokenB],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  remove = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"removeLiquidity\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  swap = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    amountA: string,\n    tokenB: string,\n    amountB: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"swap\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountA, 8).toString(),\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountB, 8).toString(),\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, tokenA],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  getPair = async (\n    tokenA: string,\n    tokenB: string,\n    connectedWallet?: IConnectedWallet\n  ): Promise<IPairInfo> => {\n    const scripts: any = [];\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPair\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    scripts.push(script);\n    if (connectedWallet) {\n      const script1 = {\n        scriptHash: tokenA,\n        operation: \"balanceOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      };\n      const script2 = {\n        scriptHash: tokenB,\n        operation: \"balanceOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      };\n      scripts.push(script1);\n      scripts.push(script2);\n    }\n    const res = await Network.read(this.network, scripts);\n    const pair = parsePair(res.stack[0]);\n    const obj = {\n      reserve: pair,\n      pair: {\n        [pair.tokenA]: pair.amountA,\n        [pair.tokenB]: pair.amountB,\n      },\n      // [pair.tokenA]: pair.amountA,\n      // [pair.tokenB]: pair.amountB,\n      balances: {\n        [tokenA]: 0,\n        [tokenB]: 0,\n      },\n    };\n    if (connectedWallet) {\n      obj.balances[tokenA] = toDecimal(res.stack[1].value as string);\n      obj.balances[tokenB] = toDecimal(res.stack[2].value as string);\n    }\n    return obj;\n  };\n\n  getPairs = async () => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPairs\",\n      args: [],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      // @ts-ignore\n      return res.stack[0].iterator.map((item) => {\n        const tokenA = base64ToHash160(item.value[0].value as string);\n        const tokenB = base64ToHash160(item.value[1].value as string);\n        const amountA = item.value[2].value;\n        const amountB = item.value[3].value;\n        return {\n          tokenA,\n          tokenB,\n          amountA: toDecimal(amountA),\n          amountB: toDecimal(amountB),\n        };\n      });\n    } catch (e) {\n      return [];\n    }\n  };\n\n  getEstimate = async (tokenA, tokenB, swapToken, amount) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getEstimate\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n        { type: \"Hash160\", value: swapToken },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amount, 8).toString(),\n        },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      return toDecimal(res.stack[0].value as string);\n    } catch (e) {\n      return undefined;\n    }\n  };\n\n  getUserStake = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getUserStake\",\n      args: [\n        { type: \"Address\", value: connectedWallet.account.address },\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"getPair\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script, script1], true);\n      return {\n        stake: parseUserStake(res.stack[0]),\n        pair: parsePair(res.stack[1]),\n      };\n    } catch (e) {\n      return undefined;\n    }\n  };\n\n  getClaimAble = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getClaimableFee\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n        { type: \"Address\", value: connectedWallet.account.address },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      return parseUserStake(res.stack[0]);\n    } catch (e) {\n      return undefined;\n    }\n  };\n\n  getSwapHistory = async (tokenA: string, tokenB: string, page: string) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getSwaps\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n        { type: \"Integer\", value: page },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script]);\n      return parseSwapPaginate(res.stack[0].value);\n    } catch (e) {\n      return undefined;\n    }\n  };\n\n  getContractHashes = async (tokenA: string, tokenB: string): Promise<any> => {\n    const script1 = {\n      scriptHash: tokenA,\n      operation: \"symbol\",\n      args: [],\n    };\n    const script2 = {\n      scriptHash: tokenA,\n      operation: \"decimals\",\n      args: [],\n    };\n    const script3 = {\n      scriptHash: tokenB,\n      operation: \"symbol\",\n      args: [],\n    };\n    const script4 = {\n      scriptHash: tokenB,\n      operation: \"decimals\",\n      args: [],\n    };\n    const script5 = {\n      scriptHash: this.contractHash,\n      operation: \"getPair\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    const res = await Network.read(this.network, [\n      script1,\n      script2,\n      script3,\n      script4,\n      script5,\n    ]);\n    return {\n      tokenA: {\n        symbol: base64ToString(res.stack[0].value as string),\n        decimals: res.stack[1].value,\n      },\n      tokenB: {\n        symbol: base64ToString(res.stack[2].value as string),\n        decimals: res.stack[3].value,\n      },\n      reserve: parsePair(res.stack[4]),\n    };\n  };\n\n  getContractSymbol = async (tokenA: string): Promise<any> => {\n    const script1 = {\n      scriptHash: tokenA,\n      operation: \"symbol\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script1]);\n    return base64ToString(res.stack[0].value as string);\n  };\n}\n","import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\n// tslint:disable-next-line:no-submodule-imports\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpcClient = Network.getRPCClient(network);\n    const res = await rpcClient.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      let amount;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n        amount = u.BigInteger.fromNumber(item.amount).toDecimal(8).toString();\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n        amount = item.amount;\n      }\n      balances.push({\n        contract: item.assethash,\n        amount,\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    },\n    network: INetworkType\n  ) {\n    const rpcClient = Network.getRPCClient(network);\n    const version: any = await rpcClient.getVersion();\n    const txObj = await DevWallet.build(rpcClient, invokeScript);\n    txObj.sign(DevWallet.account, version.protocol.network);\n    const txid = await rpcClient.sendRawTransaction(txObj);\n    // // tslint:disable-next-line:no-console\n    //   JSON.stringify(\n    //     {\n    //       RPC: rpc,\n    //       Transaction: txObj,\n    //       Network: version,\n    //       \"Network Fee\": txObj.networkFee.toDecimal(8).toString(),\n    //       \"System Fee\": txObj.systemFee.toDecimal(8).toString(),\n    //     },\n    //     null,\n    //     4\n    //   )\n    // );\n    return {\n      txid,\n      nodeUrl: rpcClient.url,\n    };\n  }\n\n  static createScript = (invokeScript: sc.ContractCallJson) => {\n    return sc.createScript({\n      scriptHash: invokeScript.scriptHash,\n      operation: invokeScript.operation,\n      args: invokeScript.args\n        ? invokeScript.args.map((param: any) => convertContractCallParam(param))\n        : [],\n    });\n  };\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    }\n    // cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n\n    const script = this.createScript(invokeScript);\n\n    // if (cosignerAddress) {\n    //   signers.push({\n    //     account: wallet.getScriptHashFromAddress(cosignerAddress),\n    //     scopes: tx.WitnessScope.Global,\n    //   });\n    // }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers: invokeScript.signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    if (invokeScript.extraSystemFee) {\n      const fee = u.BigInteger.fromDecimal(\n        invokeScript.extraSystemFee,\n        8\n      ).toString();\n      transaction.systemFee = systemFee.add(parseFloat(fee));\n    }\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","import neo3Dapi from \"neo3-dapi\";\nimport { ITransaction, IWalletType } from \"./interfaces\";\nimport {\n  DEV,\n  MAINNET,\n  NEO_LINE,\n  O3,\n  ONE_GATE,\n  TESTNET,\n  WALLET_LIST,\n} from \"../consts\";\nimport { NeoDapi } from \"@neongd/neo-dapi\";\nimport { DevWallet } from \"./dev-wallet\";\nimport { u, wallet } from \"@cityofzion/neon-core\";\nimport { INetworkType, Network } from \"../network\";\nimport { LocalStorage } from \"../local-storage\";\nimport moment from \"moment\";\n\nexport class WalletAPI {\n  walletType: IWalletType;\n\n  constructor(walletType: IWalletType) {\n    this.walletType = walletType;\n  }\n\n  static list = WALLET_LIST;\n\n  private O3Wallet = async () => {\n    const instance = neo3Dapi;\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const network = await instance.getNetworks();\n    const balances = await instance.getBalance(\n      {\n        params: {\n          address: account.address,\n          contracts: [],\n        },\n      },\n      network.defaultNetwork\n    );\n    // TODO: Need to some sort of validation for balances in case wallet doesn't have any address?\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private OneGate = async () => {\n    // @ts-ignore\n    const instance = new NeoDapi(window.OneGate);\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const network = await instance.getNetworks();\n    network.defaultNetwork =\n      network.defaultNetwork === \"MainNet\" ? MAINNET : TESTNET;\n    const balances = await instance.getNep17Balances({\n      address: account.address,\n      assetHashes: [],\n    });\n    // TODO: Need to some sort of validation for balances in case wallet doesn't have any address?\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances,\n    };\n  };\n\n  private NeoLine = async () => {\n    // @ts-ignore\n    const instance = new NEOLineN3.Init();\n    // @ts-ignore\n    // NEOLineN3 doesn't have getNetworks function\n    const instance2 = new NEOLine.Init();\n    const network = await instance2.getNetworks();\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance({\n      params: {\n        address: account.address,\n        contracts: [],\n      },\n    });\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private Dev = async (defaultNetwork: INetworkType) => {\n    const instance = DevWallet;\n    const network = await instance.getNetworks(defaultNetwork);\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance(defaultNetwork);\n    return { instance, provider, account, network, balances };\n  };\n\n  /**\n   * TODO: Remove dev wallet when 3rd party has privatenet support\n   * @param defaultNetwork\n   */\n  init = async (defaultNetwork: INetworkType): Promise<any> => {\n    let _instance;\n    try {\n      switch (this.walletType) {\n        case O3:\n          _instance = await this.O3Wallet();\n          break;\n        case NEO_LINE:\n          _instance = await this.NeoLine();\n          break;\n        case ONE_GATE:\n          _instance = await this.OneGate();\n          break;\n        case DEV:\n          _instance = await this.Dev(defaultNetwork);\n          break;\n      }\n      return {\n        key: this.walletType,\n        ..._instance,\n      };\n    } catch (e: any) {\n      if (this.walletType === ONE_GATE) {\n        throw new Error(\"OneGate wallet only supports in OneGate web browser.\");\n      } else {\n        throw new Error(e.description ? e.description : e.message);\n      }\n    }\n  };\n\n  /* Control signing and send transaction. TODO:Need to improve type hardcoding later */\n  invoke = async (\n    currentNetwork: INetworkType,\n    invokeScript: any,\n    extraSystemFee?: string,\n    testInvoke?: boolean\n  ): Promise<string> => {\n    const { instance, network } = await this.init(currentNetwork);\n    if (network.defaultNetwork !== currentNetwork) {\n      throw new Error(\n        \"Your wallet's network doesn't match with the app network setting.\"\n      );\n    }\n\n    // Do test invoke if required.\n    if (testInvoke) {\n      const rpcClient = Network.getRPCClient(currentNetwork);\n      const transaction = await DevWallet.build(rpcClient, invokeScript);\n      const invokeFunctionResponse = await rpcClient.invokeScript(\n        transaction.script,\n        transaction.signers\n      );\n      if (invokeFunctionResponse.state === \"FAULT\") {\n        throw new Error(invokeFunctionResponse.exception as string);\n      }\n    }\n\n    // Hard coding for OG wallet\n    if (this.walletType === ONE_GATE) {\n      invokeScript.args = invokeScript.args.map((param: any) => {\n        if (param.type === \"Address\") {\n          return {\n            type: \"Hash160\",\n            value: wallet.getScriptHashFromAddress(param.value),\n          };\n        } else {\n          return param;\n        }\n      });\n      if (extraSystemFee) {\n        invokeScript.extraSystemFee = u.BigInteger.fromDecimal(\n          extraSystemFee,\n          8\n        ).toString();\n      }\n    } else {\n      if (extraSystemFee) {\n        invokeScript.extraSystemFee = extraSystemFee;\n      }\n    }\n\n    try {\n      const res = await instance.invoke(invokeScript, currentNetwork);\n      const submittedTx: ITransaction = {\n        network,\n        wallet: this.walletType,\n        txid: res.txid,\n        contractHash: invokeScript.scriptHash,\n        method: invokeScript.operation,\n        args: invokeScript.args,\n        createdAt: moment().format(\"MMMM Do YYYY, h:mm:ss a\"),\n      };\n      LocalStorage.addTransaction(submittedTx);\n      return res.txid;\n    } catch (e: any) {\n      // TODO: Need to improve dev wallet error handling as dapi standard.\n      if (e.description) {\n        throw new Error(e.description);\n      }\n      throw e;\n    }\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const FARM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\",\n  [CONST.TESTNET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\", // 11/26\n  [CONST.MAINNET]: \"\",\n};\n","import store from \"store2\";\nimport { IConnectedWallet, ITransaction } from \"../wallet/interfaces\";\nimport { FARM_SCRIPT_HASH } from \"../contracts/ftw/farm/consts\";\nimport { RUNE_SCRIPT_HASH } from \"../contracts\";\nimport { MAINNET } from \"../consts\";\nimport { INetworkType } from \"../network\";\n\nconst CONNECTED_WALLET = \"CONNECTED_WALLET\";\nconst TRANSACTIONS = \"TRANSACTIONS\";\nconst NETWORK = \"NETWORK\";\nconst SWAP_TOKEN_A = \"SWAP_TOKEN_A\"\nconst SWAP_TOKEN_B = \"SWAP_TOKEN_B\"\n\nexport class LocalStorage {\n  public static initStorage = (network: string): ITransaction[] => {\n    const supportContracts = [\n      FARM_SCRIPT_HASH[network],\n      RUNE_SCRIPT_HASH[network],\n    ];\n    const transactions = LocalStorage.getTransactions();\n    const validatedTx: ITransaction[] = [];\n    transactions.forEach((tx) => {\n      if (supportContracts.includes(tx.contractHash)) {\n        validatedTx.push(tx);\n      } else {\n        LocalStorage.removeTransaction(tx);\n      }\n    });\n    return validatedTx;\n  };\n\n  public static getNetwork = () => {\n    return store.get(NETWORK) ? store.get(NETWORK) : MAINNET;\n  };\n\n  public static setNetwork = (network: INetworkType) => {\n    return store.set(NETWORK, network);\n  };\n\n  public static getWallet = (): IConnectedWallet | undefined =>\n    validateConnectedWallet(store.get(CONNECTED_WALLET));\n\n  public static setWallet(connectedWallet: IConnectedWallet) {\n    const validated = validateConnectedWallet(connectedWallet);\n    store.set(CONNECTED_WALLET, validated);\n  }\n\n  public static removeWallet() {\n    store.remove(CONNECTED_WALLET);\n  }\n\n  public static getTransactions = (): ITransaction[] =>\n    store.has(TRANSACTIONS) ? store.get(TRANSACTIONS) : [];\n\n  public static addTransaction(tx: ITransaction) {\n    if (store.has(TRANSACTIONS)) {\n      store.add(TRANSACTIONS, tx);\n    } else {\n      store.set(TRANSACTIONS, [tx]);\n    }\n    window.dispatchEvent(new Event(\"transactions\"));\n  }\n\n  public static updatePendingTransaction(txId: string) {\n    let transactions = store.get(TRANSACTIONS);\n    transactions = transactions.map((tx) => {\n      if (tx.txid === txId) {\n        tx.status = \"SUBMITTED\";\n      }\n      return tx;\n    });\n    store.set(TRANSACTIONS, transactions);\n  }\n\n  public static removeTransaction = (tx: ITransaction) =>\n    store.remove(TRANSACTIONS, tx);\n\n  public static clearTransaction = () => store.set(TRANSACTIONS, []);\n\n  static setSwapTokenA = (val: string) => store.set(SWAP_TOKEN_A, val);\n  static setSwapTokenB = (val: string) => store.set(SWAP_TOKEN_B, val);\n  static getSwapTokenA = () => store.get(SWAP_TOKEN_A);\n  static getSwapTokenB = () => store.get(SWAP_TOKEN_B);\n}\n\nconst validateConnectedWallet = (connectedWallet?: IConnectedWallet) => {\n  if (\n    !connectedWallet ||\n    !connectedWallet.account ||\n    !connectedWallet.provider ||\n    !connectedWallet.network\n  ) {\n    return undefined;\n  }\n  return connectedWallet;\n};\n//\n// const validateTransaction = (connectedWallet?: IConnectedWallet) => {\n//   if (\n//     !connectedWallet ||\n//     !connectedWallet.account ||\n//     !connectedWallet.provider ||\n//     !connectedWallet.network\n//   ) {\n//     return undefined;\n//   }\n//   return connectedWallet;\n// };\n","import { ContextOptions, IWalletStates } from \"./interfaces\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { IConnectedWallet, IWalletType } from \"../neo/wallet/interfaces\";\nimport { LocalStorage } from \"../neo/local-storage\";\nimport { sc } from \"@cityofzion/neon-core\";\nimport { WalletAPI } from \"../neo/wallet\";\nimport toast from \"react-hot-toast\";\nimport { INetworkType } from \"../neo/network\";\n\n// tslint:disable-next-line:no-object-literal-type-assertion\nexport const WalletContext = createContext({} as IWalletStates);\nexport const WalletContextProvider = (props: {\n  options: ContextOptions;\n  children: any;\n}) => {\n  const [network, setNetwork] = useState(LocalStorage.getNetwork());\n  const [totalTxSubmit, setTotalTxSubmit] = useState(0);\n\n  const [isWalletModalActive, setWalletModalActive] = useState(false);\n\n  const [connectedWallet, setConnectedWallet] = useState<\n    IConnectedWallet | undefined\n  >(props.options.useLocalStorage ? LocalStorage.getWallet() : undefined);\n\n  const [invokeScript, setInvokeScript] = useState<\n    sc.ContractCallJson | undefined\n  >();\n\n  // const [transactions, setTransactions] = useState(\n  //   props.options.useLocalStorage ? LocalStorage.initStorage(network) : []\n  // );\n\n  const [pendingTransactions, setPendingTransactions] = useState<string[]>([]);\n\n  const openWalletModal = () => setWalletModalActive(true);\n\n  const closeWalletModal = () => setWalletModalActive(false);\n\n  const connectWallet = async (walletType: IWalletType) => {\n    try {\n      const res = await new WalletAPI(walletType).init(network);\n      setConnectedWallet(res);\n      toast.success(\"Wallet connected\");\n      if (props.options.useLocalStorage) {\n        LocalStorage.setWallet(res);\n      }\n      setWalletModalActive(false);\n    } catch (e: any) {\n      toast.error(e.message);\n    }\n  };\n\n  const disConnectWallet = () => {\n    LocalStorage.removeWallet();\n    setConnectedWallet(undefined);\n    toast.success(\"Wallet disconnected\");\n  };\n\n  const doInvoke = (args: sc.ContractCallJson) => {\n    if (isWalletModalActive) setWalletModalActive(false);\n    setInvokeScript(args);\n  };\n\n  const closeInvoke = () => setInvokeScript(undefined);\n\n  const addPendingTransaction = (txid: string) => {\n    setPendingTransactions([...pendingTransactions, txid]);\n  };\n\n  const switchNetwork = (val: INetworkType) => {\n    setNetwork(val);\n    LocalStorage.setNetwork(val);\n  };\n\n  const removePendingTransaction = (txid: string) => {\n    setPendingTransactions(pendingTransactions.filter((i) => i !== txid));\n  };\n\n  const increaseTotalTxSubmit = () => {\n    setTotalTxSubmit(totalTxSubmit + 1);\n  };\n\n  const contextValue: IWalletStates = {\n    useDevWallet: props.options.useDevWallet,\n    network,\n    invokeScript,\n    list: WalletAPI.list,\n    connectedWallet,\n    isWalletModalActive,\n    openWalletModal,\n    closeWalletModal,\n    connectWallet,\n    disConnectWallet,\n    doInvoke,\n    closeInvoke,\n    addPendingTransaction,\n    removePendingTransaction,\n    pendingTransactions,\n    switchNetwork,\n    totalTxSubmit,\n    increaseTotalTxSubmit,\n  };\n\n  return (\n    <WalletContext.Provider value={contextValue}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n};\nexport const useWallet = () => useContext(WalletContext);\n","import { MAINNET, PRIVATENET, TESTNET } from \"../packages/neo/consts\";\n\nexport const HOME_PATH = \"/\";\nexport const MIGRATION_PATH = \"/migration\";\nexport const FARM_PATH = \"/gas\";\nexport const GALLERY_PATH = \"/NFT/gallery\";\nexport const TOURNAMENT_PATH = \"/arena\";\nexport const SMITH_PATH = \"/smith\";\nexport const SMITH_PATH_NEP11 = \"/smith/nep11\";\nexport const COLLECTION_PATH = \"/NFT/collection\";\nexport const SWAP_PATH = \"/swap\";\n// export const SWAP_PATH_LIQUIDITY = \"/swap/liquidity\";\nexport const SWAP_PATH_FARM = \"/swap/pools\";\nexport const SWAP_PATH_HISTORY = \"/swap/pools/history\";\nexport const SWAP_PATH_LIQUIDITY = \"/swap/pools/liquidity\";\nexport const FUSION_PATH = \"/fusion\";\nexport const INCUBATOR_PATH = \"/incubator\";\nexport const INCUBATOR_POOL_PATH = \"/incubator/pool\";\nexport const INCUBATOR_REGISTER_PATH = \"/incubator/register\";\n\nexport const MENU = [\n  {\n    label: \"Rune\",\n    path: GALLERY_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n  {\n    label: \"Arena\",\n    path: TOURNAMENT_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n  {\n    label: \"Smith\",\n    path: SMITH_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n  {\n    label: \"DAO Incubator\",\n    path: INCUBATOR_PATH,\n    network: [PRIVATENET],\n  },\n  {\n    label: \"Swap\",\n    path: SWAP_PATH,\n    network: [PRIVATENET, TESTNET],\n  },\n  {\n    label: \"GAS-FI\",\n    path: FARM_PATH,\n    network: [PRIVATENET, TESTNET],\n  },\n  {\n    label: \"Fusion\",\n    path: FUSION_PATH,\n    network: [PRIVATENET],\n  },\n  {\n    label: \"Migration\",\n    path: MIGRATION_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n];\n","import { CONST } from \"../../neo\";\n\nexport const getWalletIcon = (key: string) => {\n  let svg = \"\";\n  switch (key) {\n    case CONST.DEV:\n      svg = \"/icons/dev.png\";\n      break;\n    case CONST.O3:\n      svg = \"/icons/o3.svg\";\n      break;\n    case CONST.NEO_LINE:\n      svg = \"/icons/neoline.svg\";\n      break;\n    case CONST.ONE_GATE:\n      svg = \"/icons/onegate.png\";\n      break;\n  }\n  return svg;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { utils } from \"../../packages/neo\";\nimport { IConnectedWallet } from \"../../packages/neo/wallet/interfaces\";\nimport { useWallet } from \"../../packages/provider\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport { COLLECTION_PATH } from \"../../consts\";\nimport { NavLink } from \"react-router-dom\";\nimport { NEO_LINE, O3 } from \"../../packages/neo/consts\";\nimport neo3Dapi from \"neo3-dapi\";\ninterface IWalletDropdownProps {\n  connectedWallet: IConnectedWallet;\n}\nconst WalletDropdown = ({ connectedWallet }: IWalletDropdownProps) => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n\n  const onActive = () => setActive(!isActive);\n\n  useEffect(() => {\n    const refresh = () => {\n      connectWallet(connectedWallet.key);\n    };\n    const disconnected = () => {\n      disConnectWallet();\n    };\n\n    if (connectedWallet.key === NEO_LINE) {\n      window.addEventListener(\"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.NETWORK_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.DISCONNECTED\", disconnected);\n      return () => {\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.NETWORK_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.DISCONNECTED\",\n          disconnected\n        );\n      };\n    }\n    if (connectedWallet.key === O3) {\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.DISCONNECTED,\n        disconnected\n      );\n\n      return () => {\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.DISCONNECTED,\n          disconnected\n        );\n      };\n    }\n  }, []);\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className=\"button is-small is-black is-rounded\"\n          aria-controls=\"dropdown-wallet\"\n        >\n          <span>{utils.truncateAddress(connectedWallet.account.address)}</span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <img src={getWalletIcon(connectedWallet.key)} />\n              </div>\n              <div className=\"media-content\">\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </div>\n            </div>\n          </div>\n          <hr className=\"dropdown-divider\" />\n          <NavLink\n            className=\"dropdown-item has-text-dark\"\n            onClick={() => setActive(false)}\n            to={COLLECTION_PATH}\n          >\n            My NFT\n          </NavLink>\n          <hr className=\"dropdown-divider\" />\n          <a onClick={handleDisconnectWallet} className=\"dropdown-item\">\n            Disconnect\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React, { useState } from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, PRIVATENET, TESTNET } from \"../../packages/neo/consts\";\nimport { INetworkType } from \"../../packages/neo/network\";\n\nconst NetworkSwitch = () => {\n  const [isActive, setActive] = useState(false);\n  const { network, switchNetwork } = useWallet();\n  const onActive = () => setActive(!isActive);\n  const handleNetworkChange = (val: string) => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(\"Are you sure to switch network?\")) {\n      switchNetwork(val as INetworkType);\n      setActive(false);\n    }\n  };\n  const networkList = [PRIVATENET, TESTNET, MAINNET];\n\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className={`button is-small ${\n            network === MAINNET ? \"is-white\" : \"is-danger\"\n          }`}\n          aria-controls=\"dropdown-wallet\"\n        >\n          {network}\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {networkList.map((v) => {\n            if (\n              (process.env.NODE_ENV !== \"development\" && v === PRIVATENET) ||\n              network === v\n            ) {\n              return false;\n            }\n            return (\n              <div key={`network${v}`} className=\"dropdown-item\">\n                <a onClick={() => handleNetworkChange(v)}>Switch to {v}</a>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","import React from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, TESTNET } from \"../../packages/neo/consts\";\nimport toast from \"react-hot-toast\";\n\nconst NetworkSwitch = () => {\n  const { network, switchNetwork } = useWallet();\n  const handleSwitchNetwork = () => {\n    const targetNetwork = network === TESTNET ? MAINNET : TESTNET;\n    switchNetwork(targetNetwork);\n    toast.success(`Network switched. You are on ${targetNetwork}`);\n  };\n  return (\n    <div className=\"level is-mobile\">\n      <div className=\"level-left\">\n        <div className=\"level-item\">\n          Network:&nbsp;\n          <span\n            className={\n              network === TESTNET ? \"has-text-danger\" : \"has-text-info\"\n            }\n          >\n            {\" \"}\n            {network}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"level-right\">\n        <div className=\"level-item\">\n          <button onClick={handleSwitchNetwork} className=\"button is-small\">\n            Switch\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaBars, FaGithub, FaWallet } from \"react-icons/fa\";\nimport Logo from \"./Logo\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { useWallet } from \"../../packages/provider\";\nimport { utils } from \"../../packages/neo\";\nimport { MENU } from \"../../consts\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport NetworkSwitch from \"./NetworkSwitch\";\nimport NetworkSwitch2 from \"./NetworkSwitch2\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaMedium, FaTwitter } from \"react-icons/all\";\nimport { MAINNET, TESTNET } from \"../../packages/neo/consts\";\nimport toast from \"react-hot-toast\";\n\nconst Header = () => {\n  const { toggleSidebar, toggleWalletSidebar } = useApp();\n  const { connectedWallet, network, disConnectWallet, switchNetwork } =\n    useWallet();\n  const [isActive, setActive] = useState(false);\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    disConnectWallet();\n  };\n  const handleSwitchNetwork = () => {\n    const targetNetwork = network === TESTNET ? MAINNET : TESTNET;\n    switchNetwork(targetNetwork);\n    setActive(false);\n    toast.success(`Network switched. You are on ${targetNetwork}`);\n  };\n  return (\n    <nav\n      className=\"navbar has-shadow is-white is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ height: \"52px\" }}\n    >\n      <div className=\"container\">\n        <div\n          className=\"navbar-brand\"\n          style={{ justifyContent: \"space-between\" }}\n        >\n          <div\n            role=\"button\"\n            className=\"navbar-burger is-center is-hidden-tablet\"\n            style={{ marginLeft: 0 }}\n            onClick={toggleSidebar}\n          >\n            <FaBars />\n          </div>\n          <Link className=\"has-text-white navbar-item is-center\" to=\"/\">\n            <Logo />\n          </Link>\n          <div\n            role=\"button\"\n            className={`navbar-burger is-center is-hidden-desktop`}\n            onClick={() => {\n              if (connectedWallet) {\n                setActive(!isActive);\n              } else {\n                toggleWalletSidebar();\n              }\n            }}\n            style={{ marginLeft: 0 }}\n          >\n            <FaWallet />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div\n            className={`navbar-menu  is-hidden-tablet ${\n              isActive && \"is-active\"\n            }`}\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item\">\n                <div className=\"media\" style={{ alignItems: \"center\" }}>\n                  <div className=\"media-left\">\n                    <img\n                      width=\"32px\"\n                      src={getWalletIcon(connectedWallet.key)}\n                    />\n                  </div>\n                  <div className=\"media-content\">\n                    {utils.truncateAddress(connectedWallet.account.address)}\n                  </div>\n                </div>\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <div className=\"navbar-item\">\n                <NetworkSwitch2 />\n              </div>\n              {/*<hr className=\"dropdown-divider\" />*/}\n              {/*<Link*/}\n              {/*  onClick={() => setActive(false)}*/}\n              {/*  className=\"navbar-item has-text-dark\"*/}\n              {/*  to={COLLECTION_PATH}*/}\n              {/*>*/}\n              {/*  My NFT*/}\n              {/*</Link>*/}\n              <hr className=\"dropdown-divider\" />\n              <a onClick={handleDisconnectWallet} className=\"navbar-item\">\n                Disconnect wallet\n              </a>\n            </div>\n          </div>\n        )}\n\n        <div className=\"navbar-menu ml-3\">\n          <div className=\"navbar-start\">\n            {MENU.map((route, i) => {\n              if (!route.network.includes(network)) return false;\n              return (\n                <NavLink\n                  key={`header-${route.label}${i}`}\n                  activeClassName=\"is-active\"\n                  to={route.path}\n                  className=\"navbar-item\"\n                >\n                  <strong>{route.label}</strong>\n                </NavLink>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"navbar-end is-hidden-touch\">\n          <div className=\"navbar-item\">\n            <a\n              target=\"_blank\"\n              href=\"https://twitter.com/N3_FTW_NETWORK\"\n              className=\"button is-white is-small \"\n            >\n              <FaTwitter />\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://github.com/ForTheWinn\"\n              className=\"button is-white is-small\"\n            >\n              <FaGithub />\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://medium.com/@Forthewin_network\"\n              className=\"button is-white is-small\"\n            >\n              <FaMedium />\n            </a>\n          </div>\n          <div className=\"navbar-item\">\n            <NetworkSwitch />\n          </div>\n          {/*<PendingTransaction />*/}\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              {connectedWallet ? (\n                <WalletDropdown connectedWallet={connectedWallet} />\n              ) : (\n                <button\n                  onClick={toggleWalletSidebar}\n                  className=\"button is-small is-black is-rounded\"\n                >\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown } from \"react-icons/all\";\nimport { useApp } from \"../../../common/hooks/use-app\";\nimport { useWallet } from \"../../provider\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletDropdown = () => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectedWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n  if (!connectedWallet) {\n    return (\n      <button className=\"button is-white \" onClick={() => setActive(!isActive)}>\n        <strong>Wallet</strong>\n      </button>\n    );\n  }\n  return (\n    <div className={`dropdown ${isActive && \"is-active\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-white\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu3\"\n          onClick={() => setActive(!isActive)}\n        >\n          <span className=\"icon is-small\">\n            <img src={getWalletIcon(connectedWallet.key)} />\n          </span>\n          <span>\n            <strong>Wallet</strong>\n          </span>\n          <span className=\"icon is-small\">\n            <FaAngleDown />\n            {/*<i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>*/}\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a\n            onClick={handleDisconnectWallet}\n            href=\"#\"\n            className=\"dropdown-item\"\n          >\n            Disconnect\n          </a>\n          {/*<hr className=\"dropdown-divider\"/>*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletList = () => {\n  const { connectWallet, list, useDevWallet } = useWallet();\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          if (!useDevWallet && _wallet.key === DEV) return false;\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n","import React from \"react\";\nimport { IBalance } from \"../../neo/wallet/interfaces\";\n\nconst AssetCard = (props: IBalance) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        <strong>{props.symbol}</strong>\n      </div>\n      <div className=\"media-content\"></div>\n      <div className=\"media-right has-text-right\">{props.amount}</div>\n    </div>\n  );\n};\n\nexport default AssetCard;\n","import React from \"react\";\nimport { utils } from \"../../neo\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport WalletList from \"./WalletList\";\nimport AssetCard from \"./AssetCard\";\nimport { useWallet } from \"../../provider\";\nimport NetworkSwitch2 from \"../../../ui/components/NetworkSwitch2\";\n\nconst Wallet = () => {\n  const { connectedWallet } = useWallet();\n  return (\n    <>\n      <header className=\"level is-mobile p-3 is-marginless\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <WalletDropdown />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <small>\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </small>\n            </div>\n          </div>\n        )}\n      </header>\n      <hr className=\"m-0\" />\n      <section className=\"p-5\">\n        {connectedWallet ? (\n          <>\n            <div>\n              {connectedWallet &&\n                connectedWallet.balances.map((balance) => {\n                  return <AssetCard key={balance.symbol} {...balance} />;\n                })}\n            </div>\n          </>\n        ) : (\n          <WalletList />\n        )}\n      </section>\n\n      <div\n        className=\"p-5\"\n        style={{ position: \"absolute\", bottom: \"40px\", width: \"100%\" }}\n      >\n        <NetworkSwitch2 />\n      </div>\n    </>\n  );\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport Wallet from \"../../packages/ui/Wallet\";\nimport { useWallet } from \"../../packages/provider\";\n\nconst WalletSidebar = () => {\n  const { walletSidebarStatus, toggleWalletSidebar } = useApp();\n  const { connectedWallet } = useWallet();\n  if (connectedWallet) return <div></div>;\n  return (\n    <SideNav\n      openFromRight={true}\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={walletSidebarStatus}\n      onHideNav={toggleWalletSidebar}\n      children={<Wallet />}\n    />\n  );\n};\n\nexport default WalletSidebar;\n","import React from \"react\";\n\nconst PageLayout = (props) => {\n  return (\n    <section className=\"section\">\n      <div className=\"container\">{props.children}</div>\n    </section>\n  );\n};\n\nexport default PageLayout;\n","import React, { ReactElement } from \"react\";\nimport $ from \"jquery\";\n\ninterface IProps {\n  onClose: () => void;\n  children: ReactElement;\n  isLoading?: boolean;\n  error?: string;\n}\nconst ModalCard = ({ onClose, children, isLoading, error }: IProps) => {\n  React.useEffect(() => {\n    $(\"html\").addClass(\"is-clipped\");\n    return () => {\n      $(\"html\").removeClass(\"is-clipped\");\n    };\n  }, []);\n  return (\n    <div className=\"modal is-active\" style={{ zIndex: 99 }}>\n      <div className=\"modal-background\" onClick={onClose} />\n      <section className=\"modal-content\">\n        <div className=\"box\">\n          {isLoading ? <div>Loading</div> : error ? <div>Error</div> : children}\n        </div>\n      </section>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};\n\nexport default ModalCard;\n","import React from \"react\";\n\n/**\n * TODO: Better ux needed\n * @param props\n * @constructor\n */\ninterface ITransactionSuccessProps {\n  txid: string;\n  onClick: () => void;\n}\nconst TransactionSubmitted = ({ txid, onClick }: ITransactionSuccessProps) => {\n  return (\n    <div className=\"has-text-centered\">\n      <h1 className=\"title is-5\">Transaction submitted!</h1>\n      <p className=\"subtitle is-7\">{txid}</p>\n      <button onClick={onClick} className=\"button is-black\">\n        Close\n      </button>\n    </div>\n  );\n};\n\nexport default TransactionSubmitted;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport NumberFormat from \"react-number-format\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  onClose: () => void;\n}\nconst ActionModal = ({ range, onClose }: IActionModal) => {\n  const [amount, setAmount] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onDeposit = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).deposit(\n          connectedWallet,\n          amount,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">\n            {/*<img src={\"/neo_512_512.svg\"} />*/}\n            Deposit NEO\n          </h1>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Your position</label>\n                <div className=\"select is-fullwidth\">\n                  <select\n                    value={position}\n                    onChange={(e) => setPosition(e.target.value)}\n                  >\n                    <option value=\"\">Select your position</option>\n                    {_.range(0, range).map((i) => (\n                      <option key={i} value={i + 1}>\n                        {i + 1}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Amount</label>\n                <NumberFormat\n                  autoFocus={true}\n                  // ref={this.props, inputRef}\n                  decimalScale={0}\n                  inputMode=\"decimal\"\n                  className=\"input\"\n                  value={amount}\n                  onValueChange={(value) => {\n                    setAmount(value.value);\n                  }}\n                  thousandSeparator={true}\n                  suffix={\" NEO\"}\n                  allowLeadingZeros={false}\n                />\n              </div>\n            </div>\n          </div>\n          <button\n            onClick={onDeposit}\n            disabled={!position || !amount || parseFloat(amount) < 1}\n            className=\"button is-button is-black\"\n          >\n            Deposit\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default ActionModal;\n","import React from \"react\";\nimport Countdown from \"react-countdown\";\n\ninterface ISnapshotCountdownProps {\n  timeLeft: number;\n  onCreateSnapshot: () => void;\n}\nconst SnapshotCountdown = ({\n  timeLeft,\n  onCreateSnapshot,\n}: ISnapshotCountdownProps) => {\n  const CreateSnapshotBtn = () => (\n    <button onClick={onCreateSnapshot} className=\"button is-button is-black\">\n      Creat snapshot\n    </button>\n  );\n  if (timeLeft < 1) {\n    return <CreateSnapshotBtn />;\n  }\n  return (\n    <Countdown\n      date={Date.now() + timeLeft}\n      renderer={(props) => {\n        if (props.completed) {\n          return <CreateSnapshotBtn />;\n        } else {\n          return (\n            <span>\n              {props.hours}:{props.minutes}:{props.seconds}\n            </span>\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default SnapshotCountdown;\n","import React from \"react\";\nimport { IFarmSnapshot } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface ISnapshotListProps {\n  item: IFarmSnapshot;\n}\nconst SnapshotCard = ({ item }: ISnapshotListProps) => {\n  return (\n    <div key={item.createdAt} className=\"media\">\n      <div className=\"media-left\">#{item.no}</div>\n      <div className=\"media-content\">\n        Position: <span className=\"is-capitalized\">{item.winPosition}</span>\n        <br />\n        GAS: {item.totalGas}\n        <br />\n        {item.createdAt}\n      </div>\n    </div>\n  );\n};\n\nexport default SnapshotCard;\n","import React, { useState } from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\nimport SnapshotCard from \"./SnapshotCard\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCreateSnapshot = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).createSnapshot(\n          connectedWallet\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  if (!contractStatus) return <div></div>;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">Snapshots</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <SnapshotCountdown\n              timeLeft={parseFloat(contractStatus.timeLeft)}\n              onCreateSnapshot={onCreateSnapshot}\n            />\n          </div>\n        </div>\n      </div>\n\n      {contractStatus.snapshots.items.map((item) => (\n        <SnapshotCard key={item.no} item={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React from \"react\";\n\nconst NotifyError = ({ msg, onClose }) => {\n  if (!msg) return <></>;\n  return (\n    <div className=\"notification is-danger\">\n      <button onClick={onClose} className=\"delete\" />\n      {msg}\n    </div>\n  );\n};\n\nexport default NotifyError;\n","import React from \"react\";\nimport { IFarmDepositRecord } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface IMyPositionProps {\n  deposit?: IFarmDepositRecord;\n  lastSnapshotNo: string;\n  onCancel: () => void;\n  onPositionChange: () => void;\n  onClaim: () => void;\n}\nconst MyPosition = ({\n  deposit,\n  lastSnapshotNo,\n  onCancel,\n  onClaim,\n  onPositionChange,\n}: IMyPositionProps) => {\n  if (!deposit) return <div></div>;\n  const lastClaimNo = deposit.lastClaimNo ? parseFloat(deposit.lastClaimNo) : 0;\n  const isClaimable = parseFloat(lastSnapshotNo) > lastClaimNo;\n  return (\n    <>\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item is-block\">\n            <div className=\"\">\n              My position\n              <br />\n              <span className=\"is-capitalized\">\n                {deposit.position} / {deposit.amount} NEO\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"buttons\">\n            {!isClaimable && (\n              <button onClick={onPositionChange} className=\"button is-black\">\n                Change position\n              </button>\n            )}\n            <button onClick={onCancel} className=\"button is-light\">\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n      {isClaimable && (\n        <button onClick={onClaim} className=\"button is-primary is-fullwidth\">\n          Claim Reward\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default MyPosition;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport MyPosition from \"./MyPosition\";\n\ninterface IPoolProps {\n  contractStatus?: IFarmContractStatus;\n  onDeposit: () => void;\n  onCancel: () => void;\n  onPositionChange: () => void;\n  onClaim: () => void;\n}\nconst Pool = ({\n  contractStatus,\n  onDeposit,\n  onCancel,\n  onClaim,\n  onPositionChange,\n}: IPoolProps) => {\n  return (\n    <div className=\"\">\n      <div className=\"box\">\n        <div className=\"level\">\n          <div className=\"level-left\">\n            <div className=\"level-item is-block\">\n              <h1 className=\"title is-4 is-marginless\">Total</h1>\n            </div>\n          </div>\n          <div className=\"level-right\">\n            <div>\n              {contractStatus?.neoBalance} <strong>NEO</strong>\n              <br />\n              {contractStatus?.ftwBalance} <strong>FTW</strong>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {contractStatus && contractStatus.deposit ? (\n        <MyPosition\n          deposit={contractStatus.deposit}\n          lastSnapshotNo={contractStatus.snapshots.totalItems}\n          onCancel={onCancel}\n          onClaim={onClaim}\n          onPositionChange={onPositionChange}\n        />\n      ) : (\n        <button onClick={onDeposit} className=\"button is-primary is-fullwidth\">\n          Deposit\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Pool;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal, addPendingTransaction } =\n    useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).remove(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(txid);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm close</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Close my position\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).claim(connectedWallet);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm claim</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Claim my reward\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\n\ninterface IClaimsProps {\n  contractStatus?: IFarmContractStatus;\n  onClaim: () => void;\n}\nconst Claims = ({ contractStatus, onClaim }: IClaimsProps) => {\n  if (!contractStatus) return <div></div>;\n  if (!contractStatus.claims) return <div></div>;\n  if (!contractStatus.deposit) return <div></div>;\n  const lastClaimNo = contractStatus.deposit.lastClaimNo\n    ? parseFloat(contractStatus.deposit.lastClaimNo)\n    : 0;\n  const isClaimable =\n    parseFloat(contractStatus.snapshots.totalItems) > lastClaimNo;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">My Claims</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            {isClaimable && (\n              <button\n                onClick={onClaim}\n                className=\"button is-primary is-fullwidth\"\n              >\n                Claim Reward\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      {contractStatus.claims.items.length > 0 ? (\n        contractStatus.claims.items.map((item) => {\n          return (\n            <div key={item.createdAt} className=\"media\">\n              <div className=\"media-left\">#{item.no}</div>\n              <div className=\"media-content\">\n                Snapshots: {`${item.from} ~ ${item.end}`}\n                <br />\n                GAS: {item.GAS}\n                <br />\n                FTW: {item.FTW}\n                <br />\n                {item.createdAt}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>No claims to display</div>\n      )}\n    </div>\n  );\n};\n\nexport default Claims;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  currentPosition: string;\n  onClose: () => void;\n}\nconst PositionModal = ({ currentPosition, range, onClose }: IActionModal) => {\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onChange = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).changePosition(\n          connectedWallet,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-spaced\">Change your position</h1>\n          <p className=\"subtitle is-6\">\n            Your current position is <strong>{currentPosition}</strong>\n          </p>\n          <div className=\"field\">\n            <label className=\"label\">New position</label>\n            <div className=\"select is-fullwidth\">\n              <select\n                value={position}\n                onChange={(e) => setPosition(e.target.value)}\n              >\n                <option value=\"\">Select new position</option>\n                {_.range(0, range)\n                  .filter((i) => !(i + 1 === parseFloat(currentPosition)))\n                  .map((i) => (\n                    <option key={i} value={i + 1}>\n                      {i + 1}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <button\n            onClick={onChange}\n            disabled={!position}\n            className=\"button is-button is-black\"\n          >\n            Change\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PositionModal;\n","import React  from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport moment from \"moment\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  if (!contractStatus) return <div></div>;\n  const tempTime = moment.duration(contractStatus.interval);\n  const format = `Every ${\n    tempTime.hours() > 0\n      ? `${tempTime.hours()} hours ${tempTime.minutes()} mins`\n      : `${tempTime.minutes()} mins`\n  }`;\n  return (\n    <div className=\"\">\n      <h1 className=\"title is-4\">About</h1>\n      <h4 className=\"title is-6\">Current settings</h4>\n      <p className=\"subtitle is-6\">\n        Position range: {contractStatus.range}\n        <br />\n        Interval: {format}\n      </p>\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport ActionModal from \"./ActionModal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport toast from \"react-hot-toast\";\nimport SnapshotList from \"./SnapshotList\";\nimport NotifyError from \"../../components/NotifyError\";\nimport Pool from \"./Pool\";\nimport CancelModal from \"./CancelModal\";\nimport ClaimModal from \"./ClaimModal\";\nimport Claims from \"./Claims\";\nimport PositionModal from \"./PositionModal\";\nimport About from \"./About\";\nimport { TESTNET } from \"../../../packages/neo/consts\";\n\nconst Farm = () => {\n  // let location = useLocation();\n  const production = [TESTNET];\n  const [route, setRoute] = useState(\"POOL\");\n  const [modalActive, setModalActive] = useState(false);\n  const [cancelModalActive, setCancelModalActive] = useState(false);\n  const [claimModalActive, setClaimModalActive] = useState(false);\n  const [positionModalActive, setPositionModalActive] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [contractStatus, setContractStatus] = useState<IFarmContractStatus>();\n  const onActive = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onCancelModalActive = () => setCancelModalActive(true);\n  const onClaimModalActive = () => setClaimModalActive(true);\n  const onPositionChange = () => setPositionModalActive(true);\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new FarmContract(network).getStatus(connectedWallet);\n        setContractStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, route]);\n  if (!production.includes(network))\n    return (\n      <PageLayout>This smart contract is not support in {network}.</PageLayout>\n    );\n  return (\n    <PageLayout>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-half\">\n          <div className=\"box \">\n            <div className=\"tabs is-toggle\">\n              <ul>\n                <li className={route === \"POOL\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"POOL\")}>Pool</a>\n                </li>\n                {connectedWallet && contractStatus && contractStatus.deposit && (\n                  <li className={route === \"CLAIMS\" ? \"is-active\" : \"\"}>\n                    <a onClick={() => setRoute(\"CLAIMS\")}>Claims</a>\n                  </li>\n                )}\n                <li className={route === \"SNAPSHOTS\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"SNAPSHOTS\")}>Snapshots</a>\n                </li>\n                <li className={route === \"ABOUT\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"ABOUT\")}>About</a>\n                </li>\n              </ul>\n            </div>\n            <NotifyError msg={error} onClose={() => setError(\"\")} />\n            {route === \"POOL\" && (\n              <Pool\n                contractStatus={contractStatus}\n                onPositionChange={onPositionChange}\n                onDeposit={onActive}\n                onCancel={onCancelModalActive}\n                onClaim={onClaimModalActive}\n              />\n            )}\n            {route === \"SNAPSHOTS\" && (\n              <SnapshotList contractStatus={contractStatus} />\n            )}\n            {route === \"CLAIMS\" && (\n              <Claims\n                onClaim={onClaimModalActive}\n                contractStatus={contractStatus}\n              />\n            )}\n            {route === \"ABOUT\" && <About contractStatus={contractStatus} />}\n          </div>\n        </div>\n      </div>\n      {contractStatus && modalActive && (\n        <ActionModal\n          range={contractStatus.range}\n          onClose={() => setModalActive(false)}\n        />\n      )}\n      {contractStatus && contractStatus.deposit && positionModalActive && (\n        <PositionModal\n          currentPosition={contractStatus.deposit.position}\n          range={contractStatus.range}\n          onClose={() => setPositionModalActive(false)}\n        />\n      )}\n      {cancelModalActive && (\n        <CancelModal onClose={() => setCancelModalActive(false)} />\n      )}\n      {claimModalActive && (\n        <ClaimModal onClose={() => setClaimModalActive(false)} />\n      )}\n    </PageLayout>\n  );\n};\n\nexport default Farm;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\n\ninterface IPropertiesModal {\n  tokenId: string;\n  onClose: () => void;\n}\nconst PropertiesModal = ({ tokenId, onClose }: IPropertiesModal) => {\n  const [item, setItem] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getProperties(\n          tokenId.toString()\n        );\n        setItem(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network]);\n  return (\n    <Modal onClose={onClose}>\n      {isLoading ? (\n        <div>Loading the rune data from the chain..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <h1 className=\"title is-4\">{item.name}</h1>\n\n          <p className=\"subtitle is-7\">\n            <strong>Phase:</strong> {item.phase}, <strong>Luck:</strong>{\" \"}\n            {item.luck}\n          </p>\n          <figure className=\"image is-square\">\n            <img src={item.image} />\n          </figure>\n          <p className=\"subtitle is-7 has-text-right mt-3\">{item.owner}</p>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PropertiesModal;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport PropertiesModal from \"../Gallery/PropertiesModal\";\nimport { GALLERY_PATH } from \"../../../consts\";\nimport { Link } from \"react-router-dom\";\n\nconst MyCollection = () => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus(address: string) {\n      setError(\"\");\n      try {\n        const res = await new NFTContract(network).getTokensOf(address);\n        setTokens(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network]);\n  return (\n    <>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">My collection</h1>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"columns is-multiline\">\n            {tokens.length > 0 ? (\n              tokens.map((token) => (\n                <div className=\"column is-3\">\n                  <figure\n                    className=\"image\"\n                    onClick={() => onPropertiesModalActive(token.tokenId)}\n                  >\n                    <img src={token.image} />\n                  </figure>\n                </div>\n              ))\n            ) : (\n              <div className=\"column is-3\">\n                <div className=\"box\">\n                  <div className=\"block\">\n                    <p>You don't have any runes yet</p>\n                  </div>\n\n                  <Link className=\"button is-primary\" to={GALLERY_PATH}>\n                    Go Get Them\n                  </Link>\n                </div>\n                {/*<DisplayRandomRune width=\"100%\" height=\"100%\" />*/}\n              </div>\n            )}\n          </div>\n        )}\n      </PageLayout>\n      {/*<button onClick={onMint} className=\"button is-black\">Mint</button>*/}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MyCollection;\n","import React from \"react\";\nimport { RUNE_PRICE } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport DisplayRandomRune from \"../../components/RandomRune\";\ninterface IBannerProps {\n  network: INetworkType;\n  filter: string;\n  onMint: () => void;\n  onFilterChange: (val: string) => void;\n}\nconst Banner = ({ onMint, network }: IBannerProps) => {\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div>\n            <h1 className=\"title\">FTW Runes</h1>\n            <p className=\"subtitle\">Algorithms-generated, stored onchain NFT</p>\n            <div className=\"content is-small\">\n              <p>\n                <strong>Smart contract</strong>\n                <br />\n                <a\n                  className=\"has-text-dark is-size-7\"\n                  href=\"https://explorer.onegate.space/contractinfo/0xbebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\"\n                >\n                  0xbebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\n                </a>\n              </p>\n              <p>\n                <strong>Max supply</strong>\n                <br />\n                500 runes (Sold out)\n              </p>\n              <p>\n                <strong>Attribute #1</strong>\n                <br />\n                Dark, Light, Fire, Water, Wood, Earth, Metal\n              </p>\n              <p>\n                <strong>Attribute #2</strong>\n                <br /> Luck (1 ~ 10)\n              </p>\n              <p>\n                <strong>Press</strong>\n                <br />\n                <a\n                  // className=\"has-text-dark is-size-7\"\n                  href=\"https://neonewstoday.com/general/forthewin-network-launches-token-generator-and-ftw-rune-with-image-stored-onchain\"\n                >\n                  Article 1, &nbsp;\n                </a>\n                <a\n                  // className=\"has-text-dark is-size-7\"\n                  href=\"https://neonewstoday.com/nft/ftw-arena-tickets-now-on-sale/\"\n                >\n                  Article 2\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n","import { CONST } from \"..\";\n\nexport const ENDPOINT = {\n  [CONST.PRIVATENET]: \"http://localhost:3000\",\n  [CONST.TESTNET]:\n    \"https://jefzcuwe0e.execute-api.us-east-1.amazonaws.com/testnet\",\n  [CONST.MAINNET]:\n    \"https://z3fn74s0oa.execute-api.us-east-1.amazonaws.com/mainnet\",\n};\n","import { INetworkType } from \"../network\";\nimport { ENDPOINT } from \"./consts\";\n\n// interface IRuneFilter = \"All\" | \"Fire\" |  \"\"\n\nexport class RestAPI {\n  network: INetworkType;\n  endpoint: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.endpoint = ENDPOINT[networkType];\n  }\n\n  fetchResult = async (url: string) => {\n    const res = await fetch(url, { mode: \"cors\" });\n    const json = await res.json();\n    if (res.status === 200) {\n      return json;\n    } else {\n      // throw new Error(json.message);\n      throw new Error(\"Network error\");\n    }\n  };\n\n  async getRunes(filter) {\n    return this.fetchResult(this.endpoint + \"/runes/\" + filter);\n  }\n\n  async getRune(tokenId) {\n    return this.fetchResult(this.endpoint + \"/rune/\" + tokenId);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\nconst RuneLoading = () => {\n\tconst [colors, setColors] = useState(getColors());\n  const [bg, setBg] = useState(\"black\");\n  const [dot1, setDot1] = useState(\"black\");\n  const [dot2, setDot2] = useState(\"black\");\n  const [dot3, setDot3] = useState(\"black\");\n  const [dot4, setDot4] = useState(\"black\");\n  const [body, setBody] = useState(\"black\");\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setBody(\"white\");\n    }, 1000);\n    timer = setTimeout(() => {\n      setDot1(\"white\");\n    }, 2000);\n    timer = setTimeout(() => {\n      setDot2(\"white\");\n    }, 3000);\n    timer = setTimeout(() => {\n      setDot3(\"white\");\n    }, 4000);\n    timer = setTimeout(() => {\n      setDot4(\"white\");\n    }, 5000);\n    timer = setTimeout(() => {\n      setBg(\"rgb(\" + colors[0] + \",\" + colors[1] + \",\" + colors[2] + \")\");\n    }, 6000);\n    timer = setTimeout(() => {\n      setBody(\"rgb(\" + colors[3] + \",\" + colors[4] + \",\" + colors[5] + \")\");\n    }, 7000);\n    timer = setTimeout(() => {\n      setDot1(\"rgb(\" + colors[6] + \",\" + colors[7] + \",\" + colors[8] + \")\");\n    }, 8000);\n    timer = setTimeout(() => {\n      setDot2(\"rgb(\" + colors[9] + \",\" + colors[10] + \",\" + colors[11] + \")\");\n    }, 9000);\n    timer = setTimeout(() => {\n      setDot3(\"rgb(\" + colors[12] + \",\" + colors[13] + \",\" + colors[14] + \")\");\n    }, 10000);\n    timer = setTimeout(() => {\n      setDot4(\"rgb(\" + colors[15] + \",\" + colors[16] + \",\" + colors[17] + \")\");\n    }, 11000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <img width=\"100%\" height=\"100%\" src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default RuneLoading;\n","import React from \"react\";\n\nconst CheckMark = () => {\n  return (\n    <div style={{width:\"90px\", height:\"90px\"}}>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 130.2 130.2\"\n      >\n        <circle\n          className=\"path circle\"\n          fill=\"none\"\n          stroke=\"#73AF55\"\n          strokeWidth=\"6\"\n          strokeMiterlimit=\"10\"\n          cx=\"65.1\"\n          cy=\"65.1\"\n          r=\"62.1\"\n        />\n        <polyline\n          className=\"path check\"\n          fill=\"none\"\n          stroke=\"#73AF55\"\n          strokeWidth=\"6\"\n          strokeLinecap=\"round\"\n          strokeMiterlimit=\"10\"\n          points=\"100.2,40.2 51.5,88.8 29.8,67.5 \"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default CheckMark;\n","import React, { useEffect, useState } from \"react\";\nimport { INetworkType, Network } from \"../../neo/network\";\nimport RuneLoading from \"./RuneLoading\";\nimport CheckMark from \"../../../ui/pages/Tournament/scenes/Arena/Players/components/CheckMark\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExclamationCircle } from \"react-icons/all\";\nimport { TESTNET } from \"../../neo/consts\";\n\ninterface IAfterTransactionSubmittedProps {\n  txid: string;\n  network: INetworkType;\n  onSuccess: () => void;\n  onError: () => void;\n}\nconst AfterTransactionSubmitted = ({\n  txid,\n  network,\n  onSuccess,\n  onError,\n}: IAfterTransactionSubmittedProps) => {\n  const [isDone, setDone] = useState(false);\n  const [hasError, setError] = useState(\"\");\n\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        const res = await Network.getRawTx(txid, network);\n        if (res) {\n          setDone(true);\n        }\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    checkTxid();\n  }, [txid]);\n\n  return (\n    <div>\n      <div\n        style={{\n          width: \"200px\",\n          height: \"200px\",\n          margin: \"auto\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        className=\"\"\n      >\n        {hasError ? (\n          <FaExclamationCircle size={90} className=\"has-text-danger\" />\n        ) : isDone ? (\n          <CheckMark />\n        ) : (\n          <RuneLoading />\n        )}\n      </div>\n      <div className=\"has-background  has-text-centered mt-5\">\n        {hasError ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Error occurred</h1>\n            <p className=\"subtitle is-7\">{hasError}</p>\n            <button onClick={onError} className=\"button is-black\">\n              Close\n            </button>\n          </div>\n        ) : isDone ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Submitted</h1>\n            <p className=\"subtitle is-7\">Your transaction accepted</p>\n            <div className=\"block\">\n              <a\n                target=\"_blank\"\n                href={`https://${\n                  network === TESTNET ? \"testnet.\" : \"\"\n                }explorer.onegate.space/transactionInfo/${txid}`}\n              >\n                View txid on explorer\n              </a>\n            </div>\n            <div className=\"block\">\n              <button onClick={onSuccess} className=\"button is-black\">\n                Close\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <h1 className=\"title is-5\">Submitting..</h1>\n            <p className=\"subtitle is-7\">\n              Please wait until your transaction accepted\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AfterTransactionSubmitted;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport PropertiesModal from \"./PropertiesModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport Banner from \"./Banner\";\nimport { RestAPI } from \"../../../packages/neo/api\";\nimport { RUNE_PHASE_FILTER } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../components/Modal\";\n\nconst Gallery = () => {\n  const [txid, setTxid] = useState(\"\");\n  const [filter, setFilter] = useState<string>(RUNE_PHASE_FILTER[0]);\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n  const onFilterChange = (val: string) => setFilter(val);\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).mint(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    document.title =\n      \"Forthewin Rune: Algorithms-generated lucky runes NFT on NEO\";\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const items = await new RestAPI(network).getRunes(filter);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getTokens();\n        setTokens(items);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network, filter]);\n  return (\n    <section id=\"Rune\">\n      <Banner\n        network={network}\n        filter={filter}\n        onFilterChange={onFilterChange}\n        onMint={onMint}\n      />\n      {isLoading ? (\n        <PageLayout>\n          <div>Loading..</div>\n        </PageLayout>\n      ) : error ? (\n        <PageLayout>\n          <div>{error}</div>\n        </PageLayout>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"wrap\",\n          }}\n        >\n          {tokens.map((token) => (\n            <figure\n              style={{ width: \"10%\" }}\n              key={token.tokenId}\n              className=\"image rune\"\n              onClick={() => onPropertiesModalActive(token.tokenId.toString())}\n            >\n              <img src={token.image} />\n              {/*<small*/}\n              {/*  className=\"has-text-white\"*/}\n              {/*  style={{ position: \"absolute\", top: 0 }}*/}\n              {/*>*/}\n              {/*  #{token.tokenId}*/}\n              {/*</small>*/}\n              {/*<span className=\"has-text-white\">{token.phase}</span>*/}\n            </figure>\n          ))}\n        </div>\n      )}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={() => setTxid(\"\")}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { MENU } from \"../../consts\";\nimport { useWallet } from \"../../packages/provider\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaMedium, FaTwitter } from \"react-icons/all\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaGithub } from \"react-icons/fa\";\n\nconst SidebarNav = (props) => {\n  const { network } = useWallet();\n  const { toggleSidebar } = useApp();\n  return (\n    <>\n      <aside className=\"menu p-5\">\n        <p className=\"menu-label\">Menu</p>\n        <ul className=\"menu-list\">\n          {MENU.map((route, i) => {\n            if (!route.network.includes(network)) return false;\n            return (\n              <li key={`${route.label}${i}`}>\n                <NavLink\n                  onClick={toggleSidebar}\n                  activeClassName={\"is-active\"}\n                  to={route.path}\n                >\n                  {route.label}\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      </aside>\n      <div className=\"p-5\" style={{ position: \"absolute\", bottom: \"40px\" }}>\n        <div className=\"buttons\">\n          <a\n            target=\"_blank\"\n            href=\"https://twitter.com/N3_FTW_NETWORK\"\n            className=\"button is-white is-small \"\n          >\n            <FaTwitter />\n          </a>\n          <a\n            target=\"_blank\"\n            href=\"https://github.com/ForTheWinn\"\n            className=\"button is-white is-small\"\n          >\n            <FaGithub />\n          </a>\n          <a\n            target=\"_blank\"\n            href=\"https://medium.com/@Forthewin_network\"\n            className=\"button is-white is-small\"\n          >\n            <FaMedium />\n          </a>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SidebarNav;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport SidebarNav from \"./SidebarNav\";\n\nconst MobileMenuSlider = (props) => {\n  const { sidebarStatus, toggleSidebar } = useApp();\n  return (\n    <SideNav\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={sidebarStatus}\n      onHideNav={toggleSidebar}\n      children={<SidebarNav />}\n    />\n  );\n};\n\nexport default MobileMenuSlider;\n","import React from \"react\";\n\ninterface IBackgroundImageContainerProps {\n  src: string;\n  height: string;\n}\nconst BgContainer = ({ src, height }: IBackgroundImageContainerProps) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"none\",\n        backgroundImage: `url(${src})`,\n        // padding: \"80px 16px\",\n      }}\n    />\n  );\n};\n\nexport default BgContainer;\n","import { TOURNAMENT_PATH } from \"../../../consts\";\n\nexport const ARENA_PATH = TOURNAMENT_PATH + \"/:arenaNo\";\n","import React from \"react\";\nimport PageLayout from \"../components/PageLayout\";\nimport BgContainer from \"../components/BgContainer\";\nimport { GALLERY_PATH, SMITH_PATH, SWAP_PATH } from \"../../consts\";\nimport { ARENA_PATH } from \"./Tournament/pageRoutes\";\nimport { Link } from \"react-router-dom\";\nimport { useWallet } from \"../../packages/provider\";\nimport { TESTNET } from \"../../packages/neo/consts\";\nimport toast from \"react-hot-toast\";\n\nconst CARDS = [\n  {\n    title: \"FTW Rune\",\n    type: \"NFT\",\n    desc: \"FTW Rune is an algorithmically generated NFT created and stored onchain.\",\n    img: \"assets/runes.png\",\n    link: GALLERY_PATH,\n  },\n  {\n    title: \"FTW Arena\",\n    type: \"GameFi\",\n    desc: \" FTW Runes against each other with the victor earning a GAS prize.\",\n    img: \"assets/arena-bg.jpeg\",\n    link: ARENA_PATH,\n  },\n  {\n    title: \"FTW Smith\",\n    type: \"Utility\",\n    desc: \"FTW Smith helps users to create and deploy fungible/Non-fungible token smart contracts without any codes.\",\n    img: \"assets/smith.png\",\n    link: SMITH_PATH,\n  },\n  {\n    title: \"FTW Swap\",\n    type: \"DeFi\",\n    desc: \"Coming soon. Try on our Testnet.\",\n    img: \"assets/swap.png\",\n    link: SWAP_PATH,\n  },\n  // {\n  //   title: \"FTW Lab\",\n  //   type: \"Testnet\",\n  //   desc: \"Preview FTW future apps.\",\n  //   img: \"assets/testnet.png\",\n  //   link: SMITH_PATH,\n  // },\n];\n\nconst Home = () => {\n  const { network, switchNetwork } = useWallet();\n  const onSwitchNetwork = () => {\n    if (network !== TESTNET) {\n      // eslint-disable-next-line no-restricted-globals\n      if (confirm(\"Are you sure to switch network?\")) {\n        switchNetwork(TESTNET);\n        toast.success(\"Network switched\");\n      }\n    }\n  };\n  return (\n    <div>\n      <section className=\"hero is-black\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Forthewin Network</h1>\n            <p className=\"subtitle\">\n              Building some cool decentralized stuff on NEO blockchain.{\" \"}\n            </p>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns is-multiline\">\n          {CARDS.map((card) => {\n            return (\n              <div key={card.title} className=\"column is-4\">\n                <div className=\"card\">\n                  <div className=\"card-image is-clickable\">\n                    <Link to={card.link}>\n                      <figure className=\"image\">\n                        <BgContainer src={card.img} height=\"300px\" />\n                      </figure>\n                    </Link>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"media\">\n                      <div className=\"media-content\">\n                        <p className=\"title is-4\">\n                          <Link className={\"has-text-dark\"} to={card.link}>\n                            {card.title}\n                          </Link>\n                        </p>\n                        <span className=\"tag is-primary\">{card.type}</span>\n                      </div>\n                    </div>\n                    <div className=\"content\" style={{ minHeight: \"100px\" }}>\n                      {card.desc}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"column is-4\">\n            <div className=\"card\">\n              <div\n                className=\"card-image is-clickable\"\n                onClick={onSwitchNetwork}\n              >\n                <figure className=\"image\">\n                  <BgContainer src={\"assets/lab.png\"} height=\"300px\" />\n                </figure>\n              </div>\n              <div className=\"card-content\">\n                <div className=\"media\">\n                  <div className=\"media-content\">\n                    <p\n                      onClick={onSwitchNetwork}\n                      className=\"title is-4 is-clickable\"\n                    >\n                      FTW Lab\n                    </p>\n                    <span className=\"tag is-primary\">Testnet</span>\n                  </div>\n                </div>\n                <div className=\"content\" style={{ minHeight: \"100px\" }}>\n                  Preview FTW future apps.\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Home;\n","import { CONST } from \"../../../index\";\n\nexport const SMITH_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"f161ae138e0255b809612e4d26e540c94c83c0cc\",\n  [CONST.TESTNET]: \"799704f9d8588b183204e154f8eea1de35bb3ecd\",\n  [CONST.MAINNET]: \"f860bbdcc5091a9ae7812b047fd325dfa7905ee1\",\n};\n\nexport const DEPLOY_FEE = {\n  [CONST.PRIVATENET]: \"10\",\n  [CONST.TESTNET]: \"10\",\n  [CONST.MAINNET]: \"10\",\n};\n","import {\n  base64ToAddress,\n  base64ToDate,\n  base64ToHash160,\n  base64ToString,\n} from \"../../../utils\";\nimport { u } from \"@cityofzion/neon-core\";\n\nexport const parsePaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseRecord(stackItem[3].value),\n  };\n};\n\nconst parseRecord = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractOwner: base64ToAddress(item.value[1].value),\n      contractHash: base64ToHash160(item.value[2].value), // NEO amount\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      decimals: item.value[5].value, // NEO amount\n      totalSupply: item.value[6].value, // NEO amount\n      author: base64ToString(item.value[7].value), // NEO amount\n      description: base64ToString(item.value[8].value), // NEO amount\n      createdAt: base64ToDate(item.value[9].value),\n    };\n  });\n};\n\nexport const parseNEP11RecordPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseNEP11Record(stackItem[3].value),\n  };\n};\n\nconst parseNEP11Record = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractHash: base64ToHash160(item.value[1].value), // NEO amount\n      contractOwner: base64ToAddress(item.value[2].value),\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      description: base64ToString(item.value[5].value), // NEO amount\n      author: base64ToString(item.value[6].value), // NEO amount\n      email: base64ToString(item.value[7].value), // NEO amount\n      createdAt: base64ToDate(item.value[8].value),\n    };\n  });\n};\n\nexport const parseSmithProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { DEFAULT_WITNESS_SCOPE, GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { DEPLOY_FEE, SMITH_SCRIPT_HASH } from \"./consts\";\nimport { ISmithContractStatus, ISmithNEP11RecordPaginate } from \"./interfaces\";\nimport {\n  parseNEP11RecordPaginate,\n  parsePaginate,\n  parseSmithProperties,\n} from \"./helpers\";\nimport { tx, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { IRuneMeta } from \"../nft/interfaces\";\nimport { RUNE_SCRIPT_HASH } from \"../nft\";\nimport { TTM_SCRIPT_HASH } from \"../../ttm/nft\";\n\nexport class SmithContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = SMITH_SCRIPT_HASH[networkType];\n  }\n\n  createNEP17 = async (\n    connectedWallet: IConnectedWallet,\n    contractName: string,\n    symbol: string,\n    decimals: string,\n    totalSupply: string,\n    author: string,\n    description: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"createNEP17\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: contractName,\n        },\n        {\n          type: \"String\",\n          value: author,\n        },\n        {\n          type: \"String\",\n          value: description,\n        },\n        {\n          type: \"String\",\n          value: symbol,\n        },\n        {\n          type: \"Integer\",\n          value: totalSupply,\n        },\n        {\n          type: \"Integer\",\n          value: decimals,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, GAS_SCRIPT_HASH],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  createNEP11 = async (\n    connectedWallet: IConnectedWallet,\n    contractName: string,\n    symbol: string,\n    author: string,\n    description: string,\n    email: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"createNEP11\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: symbol,\n        },\n        {\n          type: \"String\",\n          value: contractName,\n        },\n        {\n          type: \"String\",\n          value: description,\n        },\n        {\n          type: \"String\",\n          value: author,\n        },\n        {\n          type: \"String\",\n          value: email,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, GAS_SCRIPT_HASH],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  mintNFT = async (\n    connectedWallet: IConnectedWallet,\n    contractHash: string,\n    name: string,\n    description: string,\n    image: string,\n    json\n  ) => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"mintNFT\",\n      scriptHash: contractHash,\n      args: [\n        {\n          type: \"String\",\n          value: name,\n        },\n        {\n          type: \"String\",\n          value: description,\n        },\n        {\n          type: \"String\",\n          value: image,\n        },\n        {\n          type: \"String\",\n          value: json,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  getStatus = async (): Promise<ISmithContractStatus> => {\n    const records = {\n      operation: \"getRecords\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n\n    const scripts = [records];\n\n    const res = await Network.read(this.network, scripts);\n    return {\n      records: parsePaginate(res.stack[0].value),\n    };\n  };\n\n  getNEP11Records = async (): Promise<ISmithNEP11RecordPaginate> => {\n    const records = {\n      operation: \"getNep11Records\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n    const scripts = [records];\n    const res = await Network.read(this.network, scripts);\n    return parseNEP11RecordPaginate(res.stack[0].value);\n  };\n\n  getTokens = async (contract): Promise<string[]> => {\n    const script = {\n      scriptHash: contract,\n      operation: \"tokens\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].iterator.map((item) => {\n      return u.HexString.fromBase64(item.value as string).toAscii();\n    });\n  };\n\n  totalSupply = async (contract): Promise<number> => {\n    const script = {\n      scriptHash: contract,\n      operation: \"totalSupply\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseFloat(res.stack[0].value);\n  };\n\n  getProperties = async (\n    contractHash: string,\n    tokenId: string\n  ): Promise<IRuneMeta> => {\n    const script = {\n      scriptHash: contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseSmithProperties(res.stack);\n  };\n}\n","const emojiRegexExp =\n  /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/gi;\n\nexport const detectEmojiInString = (values: object) => {\n  let detected = 0;\n  const keys = Object.keys(values);\n  keys.forEach((i) => {\n    detected = emojiRegexExp.test(values[i]) ? detected + 1 : detected;\n  });\n  return detected;\n};\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport NumberFormat from \"react-number-format\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport { balanceCheck } from \"../../../packages/neo/utils\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\n\nconst NEP17FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    decimals: \"8\",\n    totalSupply: \"\",\n    author: \"\",\n    description: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        if (balanceCheck(connectedWallet.balances, 20)) {\n          try {\n            const res = await new SmithContract(network).createNEP17(\n              connectedWallet,\n              values.name,\n              values.symbol,\n              values.decimals,\n              values.totalSupply,\n              values.author,\n              values.description\n            );\n            setTxid(res);\n          } catch (e: any) {\n            toast.error(e.message);\n          }\n        } else {\n          toast.error(\"You must have more than 20 GAS.\");\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Create NEP17 Contract</h1>\n\n          <div className=\"field is-grouped is-grouped-multiline\">\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Deploy fee</span>\n                <span className=\"tag is-primary\">10 GAS</span>\n              </div>\n            </div>\n\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">System fee</span>\n                <span className=\"tag is-primary\">\n                  {DEPLOY_FEE[network]} GAS\n                </span>\n              </div>\n            </div>\n          </div>\n          <small>NOTE: Please do not use EMOJI or Unicode.</small>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">Token Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Symbol</label>\n                <div className=\"control\">\n                  <input\n                    value={values.symbol}\n                    onChange={(e) =>\n                      handleValueChange(\"symbol\", e.target.value)\n                    }\n                    className=\"input\"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Decimals</label>\n                <div className=\"control\">\n                  <NumberFormat\n                    decimalScale={0}\n                    inputMode=\"decimal\"\n                    className=\"input\"\n                    value={values.decimals}\n                    onValueChange={(value) => {\n                      handleValueChange(\"decimals\", value.value);\n                    }}\n                    max={18}\n                    allowNegative={false}\n                    allowLeadingZeros={false}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Total supply</label>\n            <div className=\"control\">\n              <NumberFormat\n                allowNegative={false}\n                decimalScale={0}\n                inputMode=\"decimal\"\n                className=\"input\"\n                value={values.totalSupply}\n                onValueChange={(value) => {\n                  handleValueChange(\"totalSupply\", value.value);\n                }}\n                allowLeadingZeros={false}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.decimals ||\n              parseFloat(values.decimals) > 18 ||\n              parseFloat(values.totalSupply) < 1 ||\n              !values.author ||\n              !values.description ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP17FormModal;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport { balanceCheck } from \"../../../packages/neo/utils\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst NEP11FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    author: \"\",\n    description: \"\",\n    email: \"\",\n  });\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        if (balanceCheck(connectedWallet.balances, 20)) {\n          try {\n            const res = await new SmithContract(network).createNEP11(\n              connectedWallet,\n              values.name,\n              values.symbol,\n              values.author,\n              values.description,\n              values.email\n            );\n            setTxid(res);\n          } catch (e: any) {\n            toast.error(e.message);\n          }\n        } else {\n          toast.error(\"You must have more than 20 GAS.\");\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Create NEP11 Contract</h1>\n          <div className=\"field is-grouped is-grouped-multiline\">\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Deploy fee</span>\n                <span className=\"tag is-primary\">10 GAS</span>\n              </div>\n            </div>\n\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">System fee</span>\n                <span className=\"tag is-primary\">\n                  {DEPLOY_FEE[network]} GAS\n                </span>\n              </div>\n            </div>\n          </div>\n          <small>NOTE: Please do not use EMOJI or Unicode.</small>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">NFT Contract Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Symbol</label>\n            <div className=\"control\">\n              <input\n                value={values.symbol}\n                onChange={(e) => handleValueChange(\"symbol\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control\">\n              <input\n                value={values.email}\n                onChange={(e) => handleValueChange(\"email\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.author ||\n              !values.description ||\n              !values.email ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP11FormModal;\n","import React, { useState } from \"react\";\nimport { SMITH_PATH, SMITH_PATH_NEP11, TOURNAMENT_PATH } from \"../../../consts\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport NEP17FormModal from \"./NEP17FormModal\";\nimport NEP11FormModal from \"./NEP11FormModal\";\n\nconst Banner = () => {\n  const location = useLocation();\n  const [isNep11FormModalActive, setNep11FormModalActive] = useState(false);\n  const [isNep17FormModalActive, setNep17FormModalActive] = useState(false);\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">Forthewin Smith</h1>\n          <p className=\"subtitle\">\n            Create your own NEP11 and NEP17 smart contracts without any codes\n          </p>\n          <br />\n          <div className=\"content\">\n            <h5>What is NEP17?</h5>\n            <p>Neo blockchain's token standard. Like ERC20 Shiba Inu.</p>\n            <button\n              onClick={() => setNep17FormModalActive(true)}\n              className=\"button is-primary\"\n            >\n              Create Token Contract\n            </button>\n          </div>\n\n          <div className=\"content\">\n            <h5>What is NEP11?</h5>\n            <p>Neo blockchain's NFT standard. Like ERC721 Cryptopunk NFT.</p>\n          </div>\n\n          <button\n            onClick={() => setNep11FormModalActive(true)}\n            className=\"button  is-primary is-outlined\"\n          >\n            Create NFT Contract\n          </button>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              <li\n                className={location.pathname === SMITH_PATH ? \"is-active\" : \"\"}\n              >\n                <Link to={SMITH_PATH}>NEP17 Showcase</Link>\n              </li>\n              <li\n                className={\n                  location.pathname === SMITH_PATH_NEP11 ? \"is-active\" : \"\"\n                }\n              >\n                <Link to={SMITH_PATH_NEP11}>NEP11 Showcase</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n      {isNep11FormModalActive && (\n        <NEP11FormModal onClose={() => setNep11FormModalActive(false)} />\n      )}\n      {isNep17FormModalActive && (\n        <NEP17FormModal onClose={() => setNep17FormModalActive(false)} />\n      )}\n    </section>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\nimport { ISmithRecord } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { FaExternalLinkAlt } from \"react-icons/all\";\n\ninterface IContractCardProps {\n  data: ISmithRecord;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network } = useWallet();\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">\n          #{data.no} {data.name}\n        </h5>\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/contractinfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n        </div>\n        <div className=\"field is-grouped is-grouped-multiline\">\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Symbol</span>\n              <span className=\"tag is-info\">{data.symbol}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Decimals</span>\n              <span className=\"tag is-info\">{data.decimals}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Total supply</span>\n              <span className=\"tag is-info\">{data.totalSupply}</span>\n            </div>\n          </div>\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Author</span>\n              <span className=\"tag is-info\">{data.author}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContractCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\n\nconst NEP17Smith = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [status, setStatus] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getStatus();\n        setStatus(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {status && status.records.items.length > 0 ? (\n            status.records.items.map((item, i) => (\n              <ContractCard key={\"contact17\" + i} data={item} />\n            ))\n          ) : (\n            <div></div>\n          )}\n        </div>\n      )}\n      {/*{isActionModalActive && (*/}\n      {/*  <ActionModal onClose={() => setActionModalActive(false)} />*/}\n      {/*)}*/}\n    </>\n  );\n};\n\nexport default NEP17Smith;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\n\ninterface IActionModal {\n  contractHash: string;\n  onClose: () => void;\n}\nconst NEP11MintFormModal = ({ contractHash, onClose }: IActionModal) => {\n  const { network, connectedWallet } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [showForm, setShowForm] = useState(false);\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    image: \"\",\n    attributes: {},\n  });\n  const [attValues, setAttValues] = useState({\n    key: \"\",\n    value: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n\n  const handleAttChange = (key: string, val: string) => {\n    setAttValues({\n      ...attValues,\n      [key]: val,\n    });\n  };\n\n  const handleAttributes = () => {\n    if (attValues.key && attValues.value) {\n      // @ts-ignore\n      const attributes = values.attributes;\n      attributes[attValues.key] = attValues.value;\n      setValues({\n        ...values,\n        attributes,\n      });\n      setAttValues({\n        key: \"\",\n        value: \"\",\n      });\n    }\n  };\n\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SmithContract(network).mintNFT(\n          connectedWallet,\n          contractHash,\n          values.name,\n          values.description,\n          values.image,\n          JSON.stringify(values.attributes)\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  const attKeys = Object.keys(values.attributes);\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Mint a NFT</h1>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">NFT Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Image</label>\n            <div className=\"control\">\n              <input\n                value={values.image}\n                onChange={(e) => handleValueChange(\"image\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"level\">\n            <div className=\"level-left\">\n              <div className=\"level-item\">\n                <label className=\"label\">NFT Attributes</label>\n              </div>\n            </div>\n\n            <div className=\"level-right\">\n              <div className=\"level-item\">\n                <button\n                  onClick={() => setShowForm(!showForm)}\n                  className=\"button is-dark\"\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"field is-grouped is-grouped-multiline\">\n              {attKeys.map((k) => {\n                return (\n                  <div className=\"control\">\n                    <div className=\"tags has-addons\">\n                      <span className=\"tag is-dark\">{k}</span>\n                      <span className=\"tag is-info\">\n                        {values.attributes[k]}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {showForm && (\n            <div className=\"block\">\n              <div className=\"columns is-mobile\">\n                <div className=\"column is-5\">\n                  <div className=\"control\">\n                    <input\n                      placeholder=\"KEY\"\n                      value={attValues.key}\n                      onChange={(e) => handleAttChange(\"key\", e.target.value)}\n                      className=\"input\"\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n                <div className=\"column\">\n                  <div className=\"control is-5\">\n                    <input\n                      placeholder=\"VALUE\"\n                      value={attValues.value}\n                      onChange={(e) => handleAttChange(\"value\", e.target.value)}\n                      className=\"input\"\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n                <div className=\"column is-2\">\n                  <button\n                    disabled={!attValues.key || !attValues.value}\n                    onClick={handleAttributes}\n                    className=\"button\"\n                  >\n                    Submit\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <hr />\n          <button\n            onClick={onMint}\n            disabled={!values.name || !values.description || !values.image}\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP11MintFormModal;\n","import React, { useEffect, useState } from \"react\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\n\ninterface IDisplayRuneProps {\n  contractHash: string;\n  tokenId: string;\n  network: INetworkType;\n}\n\nconst DisplayRune = ({ contractHash, tokenId, network }: IDisplayRuneProps) => {\n  const [token, setToken] = useState<any>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new SmithContract(network).getProperties(\n          contractHash,\n          tokenId\n        );\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return <img width=\"100%\" height=\"100%\" src={token.image} />;\n};\n\nexport default DisplayRune;\n","import React, { useEffect, useState } from \"react\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport DisplayNFT from \"./DisplayNFT\";\nimport _ from \"underscore\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport { wallet } from \"@cityofzion/neon-core\";\ninterface ITokensProps {\n  contractHash: string;\n}\nconst Tokens = ({ contractHash }: ITokensProps) => {\n  const [tokens, setTokens] = useState<number>(0);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new SmithContract(network).totalSupply(contractHash);\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [contractHash, network]);\n  return (\n    <>\n      <strong>Supply</strong>\n      <br />\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {tokens}\n          {tokens > 0 ? (\n            <>\n              <br />\n              <strong>Showcase</strong>\n              <div className=\"columns is-multiline is-mobile\">\n                {_.range(tokens > 12 ? 12 : tokens).map((i) => {\n                  const tokenId = i + 1;\n                  return (\n                    <div\n                      key={`token${i}`}\n                      className=\"column is-1-desktop is-3-mobile\"\n                    >\n                      <DisplayNFT\n                        network={network}\n                        contractHash={contractHash}\n                        tokenId={tokenId.toString()}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              {tokens > 12 && (\n                <a\n                  className=\"button is-black\"\n                  target=\"_blank\"\n                  href={`https://${\n                    network === MAINNET\n                      ? \"explorer.onegate.space\"\n                      : \"testnet.explorer.onegate.space\"\n                  }/NFTtokeninfo/0x${contractHash}`}\n                >\n                  <span className=\"icon\">\n                    <FaExternalLinkAlt />\n                  </span>\n                  <span>Browse more</span>\n                </a>\n              )}\n            </>\n          ) : (\n            <div></div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Tokens;\n","import React, { useState } from \"react\";\nimport { ISmithNEP11Record } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport NEP11MintFormModal from \"../../NEP11MintFormModal\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport Tokens from \"./Tokens\";\n\ninterface IContractCardProps {\n  data: ISmithNEP11Record;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network, connectedWallet } = useWallet();\n  const [isMintModalActive, setMintModalActive] = useState(\"\");\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">\n          #{data.no} {data.name}\n        </h5>\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/NFTtokeninfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n          <br />\n          <Tokens contractHash={data.contractHash} />\n        </div>\n      </div>\n      {connectedWallet &&\n        connectedWallet.account.address === data.contractOwner && (\n          <div className=\"media-right\">\n            <div className=\"block\">\n              <button\n                onClick={() => setMintModalActive(data.contractHash)}\n                className=\"button is-primary press-font\"\n              >\n                Mint\n              </button>\n            </div>\n          </div>\n        )}\n\n      {isMintModalActive && (\n        <NEP11MintFormModal\n          contractHash={isMintModalActive}\n          onClose={() => setMintModalActive(\"\")}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ContractCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\nimport { ISmithNEP11RecordPaginate } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\n\nconst NEP11Smith = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState<ISmithNEP11RecordPaginate>();\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getNEP11Records();\n        setData(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {data && data.items.length > 0 ? (\n            data.items.map((item, i) => (\n              <ContractCard key={\"contract\" + i} data={item} />\n            ))\n          ) : (\n            <div>No contracts to display</div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NEP11Smith;\n","import React, { useEffect } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { SMITH_PATH, SMITH_PATH_NEP11 } from \"../../../consts\";\nimport { Route } from \"react-router-dom\";\nimport Banner from \"./Banner\";\nimport NEP17Smith from \"./scenes/NEP17\";\nimport NEP11Smith from \"./scenes/NEP11\";\n\nconst Smith = () => {\n  useEffect(() => {\n    document.title =\n      \"Forthewin Smith: Create your NEP11 and NEP17 smart contracts without any codes.\";\n  }, []);\n  return (\n    <>\n      <Banner />\n      <PageLayout>\n        <Route exact path={SMITH_PATH} component={() => <NEP17Smith />} />\n        <Route path={SMITH_PATH_NEP11} component={() => <NEP11Smith />} />\n      </PageLayout>\n    </>\n  );\n};\n\nexport default Smith;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TOURNAMENT_PATH } from \"../../../../../consts\";\nimport PageLayout from \"../../../../components/PageLayout\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\n\nconst ArenaHome = (props) => {\n  const { network } = useWallet();\n  let ARENA_LIST = [\"4\", \"8\", \"16\", \"32\", \"64\", \"128\", \"256\"];\n  if (network === MAINNET) {\n    ARENA_LIST = [\"8\", \"16\", \"32\", \"64\", \"128\"];\n  }\n  return (\n    <div\n      style={{\n        backgroundImage: 'url(\"/assets/arena-bg.jpeg\")',\n        backgroundSize: \"cover\",\n        height: \"calc(100vh - 52px)\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      <PageLayout>\n        {/*<div className=\"columns is-multiline\">*/}\n        {ARENA_LIST.map((arena) => {\n          return (\n            <div\n              key={arena}\n              // className=\"column is-4\"\n            >\n              <div\n                className=\"has-text-centered\"\n                // className={`notification has-text-centered ${ARENA_COLOR[arena]}`}\n              >\n                <Link\n                  to={TOURNAMENT_PATH + \"/\" + arena}\n                  className=\"title has-text-white\"\n                >\n                  ARENA {arena}\n                </Link>\n              </div>\n            </div>\n          );\n        })}\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default ArenaHome;\n","import { CONST } from \"../../../index\";\n\nexport const TOURNAMENT_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"d2016f40d26d420c696132e5dae453d93b0f3050\",\n  [CONST.TESTNET]: \"1666b9485e2faf13ccea24c9563dfa5cbd92a1ad\",\n  [CONST.MAINNET]: \"0eb288c413b5d5ec4aa0df5aea34d9538b28dd29\",\n};\n\nexport const ADMIN_FOR_PLAY = {\n  [CONST.PRIVATENET]: [\"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\"],\n  [CONST.TESTNET]: [\n    \"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\",\n    \"NS9QLsaY8RzN9fxTWj9AECyLaJvsk38XUb\",\n  ],\n  [CONST.MAINNET]: [\"NS9QLsaY8RzN9fxTWj9AECyLaJvsk38XUb\"],\n};\n\nexport const SUPPORT_TICKET_PRICE = \"0.2\";\nexport const TOURNAMENT_TIME_PADDING = 3600000;\n","import {\n  base64ToAddress,\n  base64ToHash160,\n  base64ToString,\n  toDecimal,\n} from \"../../../utils\";\nimport { IHistory, IHistoryGame, IPlayer } from \"./interfaces\";\n\nexport const parsePlayer = (stackItem): IPlayer => {\n  return stackItem.map((item) => {\n    return {\n      // no: item.value[0].value,\n      owner: base64ToAddress(item.value[0].value),\n      tokenHash: base64ToHash160(item.value[1].value),\n      tokenId: base64ToString(item.value[2].value),\n      phase: base64ToString(item.value[3].value),\n      luck: item.value[4].value,\n      createdAt: item.value[5].value,\n    };\n  });\n};\n\nexport const parseHistory = (stackItem: any): IHistory => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    currentPage: stackItem[2].value,\n    items: parseGame(stackItem[3].value),\n  };\n};\n\nconst parseGame = (stackItem): IHistoryGame[] => {\n  return stackItem.map((item) => {\n    return {\n      gameNo: item.value[0].value,\n      tournamentTree: parsePlayer(item.value[1].value),\n      champion: base64ToString(item.value[2].value), // NEO amount\n      nonce: item.value[3].value,\n      betsOnChampion: item.value[4].value,\n      totalBets: item.value[5].value,\n      rollover: item.value[6].value,\n      fee: item.value[7].value,\n      championPrize: item.value[8].value,\n      createdAt: item.value[9].value,\n      champOwner: item.value[10]\n        ? base64ToAddress(item.value[10].value)\n        : undefined,\n    };\n  });\n};\n\nexport const calculateClaimableAmount = (\n  history: IHistoryGame,\n  betAmount: number\n): number => {\n  let totalAmount =\n    parseFloat(history.totalBets) -\n    parseFloat(history.fee) -\n    parseFloat(history.championPrize);\n  totalAmount = totalAmount + parseFloat(history.rollover);\n  let myClaimAble =\n    (totalAmount * betAmount) / parseFloat(history.betsOnChampion);\n  myClaimAble = Math.floor(myClaimAble);\n  return toDecimal(myClaimAble.toString());\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { SUPPORT_TICKET_PRICE, TOURNAMENT_SCRIPT_HASH } from \"./consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { RUNE_SCRIPT_HASH } from \"../nft\";\nimport { parsePlayer, parseHistory } from \"./helpers\";\nimport { DEFAULT_WITNESS_SCOPE, GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { base64ToAddress, toDecimal } from \"../../../utils\";\nimport { u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\n\nexport class TournamentContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = TOURNAMENT_SCRIPT_HASH[networkType];\n  }\n\n  register = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: RUNE_SCRIPT_HASH[this.network],\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n        {\n          type: \"Array\",\n          value: [\n            {\n              type: \"Integer\",\n              value: arenaNo,\n            },\n          ],\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  play = async (\n    connectedWallet: IConnectedWallet,\n    arenaNo: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"play\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      \"0.05\",\n      true\n    );\n  };\n\n  leave = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"leave\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n      // \"0.1\"\n    );\n  };\n\n  bet = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        { type: \"Hash160\", value: senderHash },\n        { type: \"Hash160\", value: this.contractHash },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(SUPPORT_TICKET_PRICE, 8).toString(),\n        },\n        {\n          type: \"Array\",\n          value: [\n            { type: \"Integer\", value: arenaNo },\n            { type: \"String\", value: tokenId },\n          ],\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      true\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    arenaNo: string,\n    gameNo: string\n  ): Promise<string> => {\n\t  const senderHash = NeonWallet.getScriptHashFromAddress(\n\t\t  connectedWallet.account.address\n\t  );\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n      ],\n\t    signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript\n    );\n  };\n\n  getPlayers = async (arenaNo: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPlayers\",\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parsePlayer(res.stack[0].value);\n  };\n\n  history = async (arenaNo: string, page: number): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getHistoryPaginate\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: page },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    return parseHistory(res.stack[0].value);\n  };\n\n  getGameHeight = async (arenaNo: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getGameHeight\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].value;\n  };\n\n  getBetAmount = async (\n    arenaNo: string,\n    gameNo: string,\n    championTokenId: string,\n    address: string\n  ): Promise<any> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getBetsOnAccount\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"String\", value: championTokenId },\n        { type: \"Address\", value: address },\n      ],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"isClaimed\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"Address\", value: address },\n      ],\n    };\n    const res = await Network.read(this.network, [script, script1]);\n    return {\n      // @ts-ignore\n      betAmount: parseFloat(res.stack[0].value),\n      // @ts-ignore\n      isClaimed: res.stack[1].value,\n    };\n  };\n\n  getBetOnPlayer = async (\n    arenaNo: string,\n    gameNo: string,\n    tokenId: string,\n    address: string\n  ): Promise<{\n    totalBets: string;\n    userBets: string;\n  }> => {\n    const scripts: any = [];\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getBetsOnPlayer\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"String\", value: tokenId },\n      ],\n    };\n    scripts.push(script);\n\n    if (address) {\n      const script1 = {\n        scriptHash: this.contractHash,\n        operation: \"getBetsOnAccount\",\n        args: [\n          { type: \"Integer\", value: arenaNo },\n          { type: \"Integer\", value: gameNo },\n          { type: \"String\", value: tokenId },\n          { type: \"Address\", value: address },\n        ],\n      };\n      scripts.push(script1);\n    }\n    const res = await Network.read(this.network, scripts);\n    return {\n      totalBets: res.stack[0].value as string,\n      userBets: res.stack[1] ? (res.stack[1].value as string) : \"\",\n    };\n  };\n\n  getCurrentPrize = async (\n    arenaNo: string\n  ): Promise<{\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  }> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getCurrentPrize\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"getGameHeight\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const script2 = {\n      scriptHash: this.contractHash,\n      operation: \"getPreviousWinner\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const script3 = {\n      scriptHash: this.contractHash,\n      operation: \"getTimeElapsed\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const res = await Network.read(this.network, [\n      script,\n      script1,\n      script2,\n      script3,\n    ]);\n    return {\n      prize: toDecimal(res.stack[0].value as string),\n      gameNo: parseFloat(res.stack[1].value as string) + 1,\n      previousChampWallet: res.stack[2].value\n        ? base64ToAddress(res.stack[2].value as string)\n        : undefined,\n      timeElapsedFromPreviousGame: res.stack[3].value\n        ? (res.stack[3].value as string)\n        : undefined,\n    };\n  };\n}\n","import React from \"react\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TOURNAMENT_TIME_PADDING } from \"../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IPlayButtonProps {\n  arenaNo: string;\n  onSubmitted: (txid: string) => void;\n  status?: {\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  };\n}\nconst PlayButton = ({ arenaNo, onSubmitted, status }: IPlayButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPlay = async () => {\n    if (connectedWallet && status) {\n      // try {\n      //   const res = await new TournamentContract(network).play(\n      //     connectedWallet,\n      //     arenaNo\n      //   );\n      //   addPendingTransaction(res);\n      //   onSubmitted(res);\n      // } catch (e: any) {\n      //   toast.error(e.message);\n      // }\n      // const timeLeft =\n      //   TOURNAMENT_TIME_PADDING -\n      //   parseFloat(status.timeElapsedFromPreviousGame);\n      // if (timeLeft <= 0) {\n      try {\n        const res = await new TournamentContract(network).play(\n          connectedWallet,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        onSubmitted(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n      // } else {\n      // }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <button className=\"button is-primary press-font\" onClick={onPlay}>\n      Start\n    </button>\n  );\n};\n\nexport default PlayButton;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TOURNAMENT_PATH } from \"../../../../../consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport PlayButton from \"../../components/PlayButton\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { ADMIN_FOR_PLAY } from \"../../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IBanner {\n  arenaNo: string;\n  pathname: string;\n  status?: {\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  };\n}\nconst Banner = ({ arenaNo, status, pathname }: IBanner) => {\n  const { connectedWallet, network } = useWallet();\n  const [playTxid, setPlayTxid] = useState(\"\");\n\n  let hasPermissionToPlay = false;\n  if (ADMIN_FOR_PLAY[network].includes(connectedWallet?.account.address)) {\n    hasPermissionToPlay = true;\n  }\n  if (\n    connectedWallet &&\n    status &&\n    connectedWallet.account.address === status.previousChampWallet\n  ) {\n    hasPermissionToPlay = true;\n  }\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"level\">\n            <div className=\"level-left\">\n              <div className=\"level-item  has-text-centered\">\n                <div>\n                  <p className=\"heading\">Round</p>\n                  <p className=\"title is-5\">#{status ? status.gameNo : \"\"}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"level-left\">\n              <div className=\"level-item\">\n                <div>\n                  <h1 className=\"title mb-3\">ARENA {arenaNo}</h1>\n                  {hasPermissionToPlay && (\n                    <div className=\"has-text-centered\">\n                      <PlayButton\n                        onSubmitted={setPlayTxid}\n                        arenaNo={arenaNo}\n                        status={status}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"level-left\">\n              <div className=\"level-item has-text-centered\">\n                <div>\n                  <p className=\"heading\">Prize</p>\n                  <p className=\"title is-5\">\n                    {status ? status.prize + \" GAS\" : \"\"}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              <li\n                className={\n                  pathname === TOURNAMENT_PATH + \"/\" + arenaNo\n                    ? \"is-active\"\n                    : \"\"\n                }\n              >\n                <Link to={TOURNAMENT_PATH + \"/\" + arenaNo}>Players</Link>\n              </li>\n              <li\n                className={\n                  pathname === TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"\n                    ? \"is-active\"\n                    : \"\"\n                }\n              >\n                <Link to={TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"}>\n                  Champions\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n\n      {playTxid && (\n        <Modal onClose={() => setPlayTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={playTxid}\n            network={network}\n            onSuccess={() => setPlayTxid(\"\")}\n            onError={() => setPlayTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\nimport { INetworkType } from \"../../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { RestAPI } from \"../../../../packages/neo/api\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaStar } from \"react-icons/fa\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  isOwner?: boolean;\n  onClick: (obj) => void;\n}\n\nconst DisplayRuneWithProperties = ({\n  width,\n  height,\n  tokenId,\n  network,\n  isOwner,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchRune() {\n      try {\n        const res = await new RestAPI(network).getRune(tokenId);\n        setToken(res);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getProperties(tokenId);\n        // setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchRune();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune is-relative\"\n      onClick={() => onClick({ ...token, tokenId })}\n    >\n      <img src={token.image} />\n      {isOwner && (\n        <FaStar\n          style={{ position: \"absolute\", top: \"2px\", left: \"3px\" }}\n          className=\"has-text-warning\"\n        />\n      )}\n    </figure>\n  );\n};\n\nexport default DisplayRuneWithProperties;\n","import React from \"react\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { balanceCheck } from \"../../../../packages/neo/utils\";\nimport { SUPPORT_TICKET_PRICE } from \"../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IBetButtonProps {\n  arenaNo: string;\n  tokenId: string;\n  setTxid: (txid: string) => void;\n}\nconst BetButton = ({ arenaNo, tokenId, setTxid }: IBetButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onBet = async () => {\n    if (connectedWallet) {\n      if (\n        balanceCheck(connectedWallet.balances, parseFloat(SUPPORT_TICKET_PRICE))\n      ) {\n        try {\n          const res = await new TournamentContract(network).bet(\n            connectedWallet,\n            tokenId,\n            arenaNo\n          );\n          addPendingTransaction(res);\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error(`You must have more than ${SUPPORT_TICKET_PRICE} GAS.`);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <button onClick={onBet} className=\"button is-primary is-fullwidth\">\n      Support {SUPPORT_TICKET_PRICE} GAS\n    </button>\n  );\n};\n\nexport default BetButton;\n","import React from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\n\ninterface ILeaveButtonProps {\n  arenaNo: string;\n  tokenId: string;\n  setTxid: (txid: string) => void;\n}\nconst LeaveButton = ({ arenaNo, tokenId, setTxid }: ILeaveButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onLeave = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).leave(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  return (\n    <button onClick={onLeave} className=\"button is-danger is-fullwidth\">\n      Leave\n    </button>\n  );\n};\n\nexport default LeaveButton;\n","import React, { useEffect, useState } from \"react\";\nimport { IRuneMeta } from \"../../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport BetButton from \"../../../../components/BetButton\";\nimport LeaveButton from \"../../../../components/LeaveButton\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toDecimal } from \"../../../../../../../packages/neo/utils\";\n\ninterface IPlayerModalProps {\n  arenaNo: string;\n  gameNo?: number;\n  player: IRuneMeta & { tokenId: string; gameOwner: string };\n  onClose: () => void;\n}\n\nconst PlayerModal = ({\n  arenaNo,\n  gameNo,\n  player,\n  onClose,\n}: IPlayerModalProps) => {\n  const [txid, setTxid] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const [status, setStatus] = useState({\n    totalBets: \"\",\n    userBets: \"\",\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    async function fetchContractStatus(_gameNo) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetOnPlayer(\n          arenaNo,\n          _gameNo,\n          player.tokenId,\n          connectedWallet ? connectedWallet.account.address : undefined\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (gameNo) {\n      fetchContractStatus(gameNo);\n    }\n  }, [gameNo, network]);\n  return (\n    <Modal onClose={onClose}>\n      <div>\n        {txid ? (\n          <AfterTransactionSubmitted\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n            txid={txid}\n            network={network}\n          />\n        ) : (\n          <div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <img src={player.image} />\n              </div>\n              <div className=\"column\">\n                <div className=\"content\">\n                  <strong>Name</strong>\n                  <br />\n                  <p>{player.name}</p>\n                  <strong>Phase</strong>\n                  <p>{player.phase}</p>\n                  <strong>Luck</strong>\n                  <p>{player.luck}</p>\n                  <strong>Owner</strong>\n                  <p>{player.gameOwner}</p>\n                  <strong>Current support amount</strong>\n                  <p>{toDecimal(status.totalBets)}</p>\n                  {connectedWallet && (\n                    <>\n                      <strong>My support amount</strong>\n                      <p>{toDecimal(status.userBets)}</p>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <BetButton\n                  setTxid={setTxid}\n                  arenaNo={arenaNo}\n                  tokenId={player.tokenId}\n                />\n              </div>\n              <div className=\"column\">\n                <button\n                  onClick={onClose}\n                  className=\"button is-light is-fullwidth\"\n                >\n                  Close\n                </button>\n              </div>\n              {connectedWallet &&\n              connectedWallet.account.address === player.gameOwner ? (\n                <div className=\"column\">\n                  <LeaveButton\n                    setTxid={setTxid}\n                    arenaNo={arenaNo}\n                    tokenId={player.tokenId}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default PlayerModal;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { NFTContract } from \"../../../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toast } from \"react-hot-toast\";\n\ninterface INFTListModalModal {\n  arenaNo: string;\n  onClose: () => void;\n}\nconst NFTListModal = ({ arenaNo, onClose }: INFTListModalModal) => {\n  const [txid, setTxid] = useState(\"\");\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n\n  const onRegister = async (tokenId: string) => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).register(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        {txid ? (\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n          />\n        ) : (\n          <div>\n            <div className=\"block\">\n              <h5 className=\"title is-5\">Select a NFT to send to the ARENA</h5>\n            </div>\n            <div>\n              {isLoading ? (\n                <div>Loading..</div>\n              ) : error ? (\n                <div>{error}</div>\n              ) : tokens.length > 0 ? (\n                <div\n                  style={{\n                    flexFlow: \"wrap\",\n                  }}\n                  className=\"is-flex\"\n                >\n                  {tokens.map((token) => {\n                    return (\n                      <figure\n                        key={token.tokenId}\n                        // style={{ width, height }}\n                        className=\"image is-64x64\"\n                        onClick={() => onRegister(token.tokenId)}\n                      >\n                        <img src={token.image} />\n                      </figure>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div>You don't have runes</div>\n              )}\n            </div>\n          </div>\n        )}\n      </>\n    </Modal>\n  );\n};\n\nexport default NFTListModal;\n","import React, { useState } from \"react\";\nimport NFTListModal from \"./NFTListModal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\n\ninterface IRegisterButtonProps {\n  arenaNo: string;\n  playerCount: number;\n}\nconst RegisterButton = ({ arenaNo, playerCount }: IRegisterButtonProps) => {\n  const [modalActive, setModalActive] = useState(false);\n  const { connectedWallet } = useWallet();\n  const onPickModal = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Connect your wallet.\");\n    }\n  };\n  return (\n    <>\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title\">Players</h1>\n          </div>\n        </div>\n\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <button\n              disabled={playerCount === parseFloat(arenaNo)}\n              className=\"button is-primary press-font\"\n              onClick={onPickModal}\n            >\n              Register ({playerCount}/{arenaNo})\n            </button>\n          </div>\n        </div>\n      </div>\n      {modalActive && connectedWallet && (\n        <NFTListModal arenaNo={arenaNo} onClose={() => setModalActive(false)} />\n      )}\n    </>\n  );\n};\n\nexport default RegisterButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport DisplayRuneWithProperties from \"../../../components/DisplayRuneWithProperties\";\nimport PlayerModal from \"./components/PlayerModal\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport RegisterButton from \"./components/ArenaRegisterButton\";\n\nconst Players = ({ arenaNo, gameNo }: { arenaNo: string; gameNo?: number }) => {\n  const [playerModalActive, setPlayerModalActive] = useState<\n    IRuneMeta & { tokenId: string; gameOwner: string }\n  >();\n\n  const onPlayerModalActive = (obj) => setPlayerModalActive(obj);\n  const [players, setPlayers] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getPlayers(arenaNo);\n        setPlayers(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network, arenaNo, gameNo]);\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          <RegisterButton playerCount={players.length} arenaNo={arenaNo} />\n          {players.length > 0 ? (\n            <div className=\"columns is-multiline is-mobile\">\n              {players.map(({ tokenId, owner }) => {\n                return (\n                  <div\n                    key={tokenId}\n                    className=\"column is-1-desktop is-3-mobile\"\n                  >\n                    <DisplayRuneWithProperties\n                      key={tokenId}\n                      width={\"100%\"}\n                      height={\"100%\"}\n                      tokenId={tokenId}\n                      network={network}\n                      isOwner={\n                        connectedWallet\n                          ? connectedWallet.account.address === owner\n                          : false\n                      }\n                      onClick={(obj: any) =>\n                        onPlayerModalActive({ ...obj, gameOwner: owner })\n                      }\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div>No players</div>\n          )}\n        </div>\n      )}\n      {playerModalActive && (\n        <PlayerModal\n          arenaNo={arenaNo}\n          gameNo={gameNo}\n          onClose={() => setPlayerModalActive(undefined)}\n          player={playerModalActive}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Players;\n","import React from \"react\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IPlayerModalProps {\n  rune: IRuneMeta;\n  onClose: () => void;\n}\nconst NFTDetailModal = ({ rune, onClose }: IPlayerModalProps) => {\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <img src={rune.image} />\n        </div>\n        <div className=\"column\">\n          <div className=\"content\">\n            <strong>Name</strong>\n            <br />\n            <p>{rune.name}</p>\n            <strong>Phase</strong>\n            <p>{rune.phase}</p>\n            <strong>Luck</strong>\n            <p>{rune.luck}</p>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NFTDetailModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { IHistoryGame } from \"../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport { calculateClaimableAmount } from \"../../../../packages/neo/contracts/ftw/tournament/helpers\";\n\ninterface IClaimButtonProps {\n  arenaNo: string;\n  history: IHistoryGame;\n  onClaimed: (txid: string) => void;\n}\nconst ClaimButton = ({ arenaNo, history, onClaimed }: IClaimButtonProps) => {\n  const [status, setStatus] = useState<any>({\n    betAmount: 0,\n    isClaimed: false,\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).claim(\n          connectedWallet,\n          arenaNo,\n          history.gameNo\n        );\n        addPendingTransaction(res);\n        onClaimed(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  useEffect(() => {\n    async function fetchBetAmount(address: string) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetAmount(\n          arenaNo,\n          history.gameNo,\n          history.champion,\n          address\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchBetAmount(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network, history]);\n  if (!connectedWallet) return <></>;\n\tif (history.betsOnChampion === \"0\") return <></>;\n  if (!status.betAmount) return <></>;\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {status.isClaimed ? (\n            <button disabled={true} className=\"button is-info is-fullwidth\">\n              Claimed\n            </button>\n          ) : (\n            <button className=\"button is-info is-fullwidth\" onClick={onClaim}>\n              Claim {calculateClaimableAmount(history, status.betAmount)} GAS\n            </button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ClaimButton;\n","import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaPlay } from \"react-icons/fa\";\nimport { NFTContract } from \"../../../../../../packages/neo/contracts\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { INetworkType } from \"../../../../../../packages/neo/network\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport ClaimButton from \"../../../components/ClaimButton\";\nimport { toDecimal } from \"../../../../../../packages/neo/utils\";\n\ninterface IDisplayRuneProps {\n  history: IHistoryGame;\n  arenaNo: string;\n  width: string;\n  height: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n  onReplay: () => void;\n  onClaimed: (txid: string) => void;\n}\n\nconst HistoryTable = ({\n  history,\n  arenaNo,\n  width,\n  height,\n  network,\n  onClick,\n  onReplay,\n  onClaimed,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(\n          history.champion\n        );\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [history]);\n  if (!token) return <></>;\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        {\" \"}\n        <figure\n          style={{ width, height }}\n          className=\"image rune\"\n          onClick={() => onClick(token)}\n        >\n          <img src={token.image} />\n        </figure>\n      </div>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          Game #{history.gameNo}\n          <br />\n          Champ: {token.name} ({token.phase} / {token.luck})\n          <br />\n          {history.champOwner && (\n            <>\n              Champ address: {history.champOwner} <br />\n            </>\n          )}\n          Total supports: {toDecimal(history.totalBets)}GAS\n          <br />\n          Rollover: {toDecimal(history.rollover)}GAS\n          <br />\n          Total supports on champ: {toDecimal(history.betsOnChampion)}GAS\n          <br />\n          Champ reward: {toDecimal(history.championPrize)}GAS\n          <br />\n          Operation reward: {toDecimal(history.fee)}GAS\n        </div>\n        <button onClick={() => onReplay()} className=\"button is-black is-small\">\n          <span className=\"icon\">\n            <FaPlay />\n          </span>\n          <span>Replay</span>\n        </button>\n      </div>\n      <div className=\"media-right\">\n        <div>\n          <ClaimButton\n            onClaimed={onClaimed}\n            arenaNo={arenaNo}\n            history={history}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryTable;\n","// Game formula was changed from game 5 except arena 4 and 2;\nexport const fight = (aPhase, aLuck, bPhase, bLuck, nonce, gameNo) => {\n  gameNo = parseFloat(gameNo);\n  aLuck = parseFloat(aLuck);\n  bLuck = parseFloat(bLuck);\n  nonce = parseFloat(nonce);\n  if (aPhase === bPhase) {\n    return compareLuck(aLuck, bLuck, nonce);\n  }\n\n  switch (aPhase) {\n    case \"Fire\":\n      switch (bPhase) {\n        case \"Metal\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Wood\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Earth\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Water\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Water\":\n      switch (bPhase) {\n        case \"Fire\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Metal\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Wood\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Earth\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Wood\":\n      switch (bPhase) {\n        case \"Earth\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Water\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Fire\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Metal\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Earth\":\n      switch (bPhase) {\n        case \"Water\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Fire\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Metal\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Wood\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Metal\":\n      switch (bPhase) {\n        case \"Wood\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Earth\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Water\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Fire\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Dark\":\n      switch (bPhase) {\n        case \"Light\":\n          // Formula changed from Game#5\n          aLuck = aLuck - (gameNo > 4 ? 5 : 3);\n          break;\n        default:\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Light\":\n      switch (bPhase) {\n        case \"Dark\":\n          // Formula changed from Game#5\n          aLuck = aLuck + (gameNo > 4 ? 5 : 3);\n          break;\n        default:\n          aLuck = aLuck - 3;\n          break;\n      }\n      break;\n  }\n  return compareLuck(aLuck, bLuck, nonce);\n};\n\nconst compareLuck = (aLuck, bLuck, nonce) => {\n  if (aLuck > bLuck) {\n    return \"A\";\n  } else if (bLuck > aLuck) {\n    return \"B\";\n  } else {\n    // tslint:disable-next-line:no-unused-expression\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    return nonce % 2 === 0 ? \"A\" : \"B\";\n  }\n  // else\n  // {\n  // \tvar tx = (Transaction)Runtime.ScriptContainer;\n  // \treturn tx.Nonce % 2 == 0 ? \"A\" : \"B\";\n  // }\n};\n","import React from \"react\";\nimport { IPlayer } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport DisplayRuneWithProperties from \"../../../components/DisplayRuneWithProperties\";\nimport { fight } from \"../helpers\";\nimport { useWallet } from \"../../../../../../packages/provider\";\n\ninterface ITournamentTree {\n  gameNo: string;\n  champ: string;\n  nonce: string;\n  tree: IPlayer[];\n  onClick: (obj) => void;\n}\n\nfunction* chunks(arr, n) {\n  for (let i = 0; i < arr.length; i += n) {\n    yield arr.slice(i, i + n);\n  }\n}\n\nconst TournamentTree = ({\n  gameNo,\n  onClick,\n  champ,\n  tree,\n  nonce,\n}: ITournamentTree) => {\n  const { network } = useWallet();\n\n  let capacity = tree.length;\n  let stage: IPlayer[] = tree;\n  let winners: IPlayer[] = [];\n  let match: IPlayer[] = [];\n  let rounds: any[] = [];\n  while (capacity >= 2) {\n    for (let i = 0; i < capacity; i++) {\n      match.push(stage[i]);\n      if (match.length === 2) {\n        const res = fight(\n          match[0].phase,\n          match[0].luck,\n          match[1].phase,\n          match[1].luck,\n          nonce,\n          gameNo\n        );\n        if (res === \"A\") {\n          winners.push(match[0]);\n        } else {\n          winners.push(match[1]);\n        }\n        match = [];\n      }\n    }\n    // @ts-ignore\n    rounds.push([...chunks(stage, 2)]);\n    stage = winners;\n    winners = [];\n    capacity = capacity / 2;\n  }\n  rounds = rounds.reverse();\n\n  return (\n    <>\n      <div className=\"is-flex mb-5\" style={{ justifyContent: \"safe center\" }}>\n        <DisplayRuneWithProperties\n          network={network}\n          onClick={(obj) => {\n            onClick(obj);\n          }}\n          width={\"128px\"}\n          height={\"128px\"}\n          tokenId={champ}\n        />\n      </div>\n      {rounds.map((arena) => {\n        return (\n          <div className=\"is-flex mb-5\" style={{ justifyContent: \"center\" }}>\n            {arena.map((arr, i) => {\n              const winner = fight(\n                arr[0].phase,\n                arr[0].luck,\n                arr[1].phase,\n                arr[1].luck,\n                nonce,\n                gameNo\n              );\n              return (\n                <div\n                  className={`is-flex ${arena.length - 1 !== i ? \"mr-5\" : \"\"} `}\n                >\n                  <div style={{ opacity: winner === \"A\" ? \"1\" : \"0.3\" }}>\n                    <DisplayRuneWithProperties\n                      network={network}\n                      onClick={(obj) => {\n                        onClick(obj);\n                      }}\n                      width={\"32px\"}\n                      height={\"32px\"}\n                      tokenId={arr[0].tokenId}\n                    />\n                  </div>\n                  <div style={{ opacity: winner === \"B\" ? \"1\" : \"0.3\" }}>\n                    <DisplayRuneWithProperties\n                      network={network}\n                      onClick={(obj) => {\n                        onClick(obj);\n                      }}\n                      width={\"32px\"}\n                      height={\"32px\"}\n                      tokenId={arr[1].tokenId}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default TournamentTree;\n","import React from \"react\";\nimport TournamentTree from \"./TournamentTree\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\n\ninterface IReplayProps {\n  arenaNo: string;\n  gameHistory: IHistoryGame;\n  onClick: (obj) => void;\n  onClose: () => void;\n}\nconst Replay = ({ arenaNo, gameHistory, onClick, onClose }: IReplayProps) => {\n  return (\n    <div className=\"modal is-active\">\n      <div\n        className=\"modal-background\"\n        onClick={onClose}\n        style={{ backgroundColor: \"black\" }}\n      />\n      <h1\n        className=\"title has-text-white\"\n        style={{ position: \"absolute\", top: \"20px\", left: \"20px\" }}\n      >\n        ARENA {arenaNo}\n      </h1>\n      <section className=\"modal-content\" style={{ width: \"100%\" }}>\n        <TournamentTree\n          // Game formula was changed from game 5 except arena 4 and 2;\n          gameNo={parseFloat(arenaNo) < 8 ? \"5\" : gameHistory.gameNo}\n          champ={gameHistory.champion}\n          tree={gameHistory.tournamentTree}\n          nonce={gameHistory.nonce}\n          onClick={onClick}\n        />\n      </section>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};\n\nexport default Replay;\n","import React, { useEffect, useState } from \"react\";\nimport Pagination from \"bulma-pagination-react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport NFTDetailModal from \"./NFTDetailModal\";\nimport HistoryTable from \"./HistoryTable\";\nimport Replay from \"./Replay\";\nimport AfterTransactionSubmitted from \"../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IHistoryProps {\n  arenaNo: string;\n}\nconst History = ({ arenaNo }: IHistoryProps) => {\n  const [claimTxid, setClaimTxid] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [nftModalActive, setNftModalActive] = useState();\n  const [replayModalActive, setReplayModalActive] = useState();\n  const [history, setHistory] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const onNFTModalActive = (obj) => setNftModalActive(obj);\n  const onReplayModalActive = (obj) => setReplayModalActive(obj);\n\n  useEffect(() => {\n    async function fetchHistory() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).history(\n          arenaNo,\n          page\n        );\n        setHistory(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchHistory();\n  }, [connectedWallet, network, page]);\n\n  let totalPages = 0;\n  if (history) {\n    const itemsPerPage = parseFloat(arenaNo) >= 64 ? 2 : 5;\n    totalPages = Math.ceil(history.totalItems / itemsPerPage);\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <div className=\"box\">\n            <h3 className=\"title\">History</h3>\n            {history.items && history.items.length > 0 ? (\n              history.items.map((game) => {\n                return (\n                  <HistoryTable\n                    key={game.gameNo}\n                    width={\"64px\"}\n                    height={\"64px\"}\n                    history={game}\n                    arenaNo={arenaNo}\n                    network={network}\n                    onClick={(obj) => {\n                      onNFTModalActive(obj);\n                    }}\n                    onReplay={() => onReplayModalActive(game)}\n                    onClaimed={setClaimTxid}\n                  />\n                );\n              })\n            ) : (\n              <div>Game hasn't been played</div>\n            )}\n            {totalPages > 1 && (\n              <div className=\"media\">\n                <div className=\"media-content\">\n                  <Pagination\n                    pages={totalPages}\n                    currentPage={page}\n                    onChange={(_page) => {\n                      if (page !== _page) {\n                        setPage(_page);\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      {nftModalActive && (\n        <NFTDetailModal\n          rune={nftModalActive}\n          onClose={() => setNftModalActive(undefined)}\n        />\n      )}\n\n      {replayModalActive && (\n        <Replay\n          arenaNo={arenaNo}\n          gameHistory={replayModalActive}\n          onClick={(obj) => {\n            onNFTModalActive(obj);\n          }}\n          onClose={() => setReplayModalActive(undefined)}\n        />\n      )}\n\n      {claimTxid && (\n        <Modal onClose={() => setClaimTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={claimTxid}\n            network={network}\n            onSuccess={() => setClaimTxid(\"\")}\n            onError={() => setClaimTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default History;\n","import React, { useEffect, useState } from \"react\";\nimport Banner from \"./Banner\";\nimport PageLayout from \"../../../../components/PageLayout\";\nimport { ARENA_PATH } from \"../../pageRoutes\";\nimport { Route, useLocation } from \"react-router-dom\";\nimport Players from \"./Players\";\nimport History from \"./History\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../packages/neo/contracts/ftw/tournament\";\n\nconst Arena = (props) => {\n  const location = useLocation();\n  const { arenaNo } = props.match.params;\n  const [status, setStatus] = useState<{\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  }>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchBetAmount() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getCurrentPrize(\n          arenaNo\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchBetAmount();\n  }, [network, location.pathname]);\n  return (\n    <div>\n      <Banner pathname={location.pathname} status={status} arenaNo={arenaNo} />\n      {React.useMemo(() => {\n        return (\n          <PageLayout>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : (\n              <>\n                <Route\n                  exact\n                  path={ARENA_PATH}\n                  component={() => (\n                    <Players\n                      arenaNo={arenaNo}\n                      gameNo={status ? status.gameNo : undefined}\n                    />\n                  )}\n                />\n                <Route\n                  path={ARENA_PATH + \"/history\"}\n                  component={() => <History arenaNo={arenaNo} />}\n                />\n              </>\n            )}\n          </PageLayout>\n        );\n      }, [status, isLoading])}\n    </div>\n  );\n};\n\nexport default Arena;\n","import React, { useEffect } from \"react\";\nimport { ARENA_PATH } from \"./pageRoutes\";\nimport { Route } from \"react-router-dom\";\nimport ArenaMenu from \"./scenes/Home\";\nimport Arena from \"./scenes/Arena\";\nimport { TOURNAMENT_PATH } from \"../../../consts\";\n\nconst Tournament = () => {\n  useEffect(() => {\n    document.title = \"Forthewin Arena: NFT tournament on NEO\";\n  }, []);\n  return (\n    <section>\n      <Route exact={true} path={TOURNAMENT_PATH} component={ArenaMenu} />\n      <Route path={ARENA_PATH} component={Arena} />\n    </section>\n  );\n};\n\nexport default Tournament;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {\n  SWAP_PATH,\n  SWAP_PATH_FARM,\n  SWAP_PATH_HISTORY,\n  SWAP_PATH_LIQUIDITY,\n} from \"../../../../../consts\";\n\nconst NavSwitch = (props) => {\n  const location = useLocation();\n  return (\n    <div className=\"tabs is-toggle\">\n      <ul>\n        <li\n          className={\n            location.pathname === SWAP_PATH\n              ? \"is-active\"\n              : \"has-background-white\"\n          }\n        >\n          <Link to={SWAP_PATH}>Swap</Link>\n        </li>\n        {/*<li*/}\n        {/*  className={*/}\n        {/*    location.pathname === SWAP_PATH_LIQUIDITY*/}\n        {/*      ? \"is-active\"*/}\n        {/*      : \"has-background-white\"*/}\n        {/*  }*/}\n        {/*>*/}\n        {/*  <Link to={SWAP_PATH_LIQUIDITY}>Liquidity</Link>*/}\n        {/*</li>*/}\n        <li\n          className={\n            location.pathname.includes(SWAP_PATH_FARM)\n              ? \"is-active\"\n              : \"has-background-white\"\n          }\n        >\n          <Link to={SWAP_PATH_FARM}>Pools</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default NavSwitch;\n","import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown, FaQuestionCircle } from \"react-icons/all\";\nimport NumberFormat from \"react-number-format\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\n\ninterface IInputProps {\n  contractHash?: string;\n  asset?: {\n    symbol: string;\n    logo: string;\n  };\n  val: string;\n  heading?: string;\n  isLoading?: boolean;\n  setValue: (val: string, e: any) => void;\n  onClickAsset: () => void;\n  isReadOnly?: boolean;\n  userBalance?: string;\n}\nconst Input = ({\n  contractHash,\n  asset,\n  val,\n  heading,\n  setValue,\n  onClickAsset,\n  isLoading,\n  isReadOnly,\n  userBalance,\n}: IInputProps) => {\n  const { network } = useWallet();\n  const [symbol, setSymbol] = useState<string>();\n  const [logo, setLogo] = useState<string>();\n  useEffect(() => {\n    async function fetchTokenInfo(_hash) {\n      const res = await new SwapContract(network).getContractSymbol(_hash);\n      setSymbol(res as string);\n    }\n    if (contractHash) {\n      if (ASSET_LIST[network][contractHash]) {\n        setSymbol(ASSET_LIST[network][contractHash].symbol);\n        setLogo(ASSET_LIST[network][contractHash].logo);\n      } else {\n        fetchTokenInfo(contractHash);\n      }\n    }\n  }, [contractHash]);\n  return (\n    <div className=\"\">\n      <div className=\"columns\">\n        <div className=\"column is-narrow\">\n          <div style={{ width: \"150px\" }}>\n            <div\n              className=\"media\"\n              style={{ alignItems: \"center\", display: \"flex\" }}\n            >\n              <div className=\"media-left\">\n                <div\n                  onClick={onClickAsset}\n                  style={{\n                    width: \"50px\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                  className=\"image is-clickable is-flex\"\n                >\n                  {logo ? <img src={logo} /> : <FaQuestionCircle size={35} />}\n                </div>\n              </div>\n              <div\n                onClick={onClickAsset}\n                className=\"media-content is-clickable\"\n              >\n                {heading && <p className=\"heading\">{heading}</p>}\n                <div style={{ alignItems: \"center\", display: \"flex\" }}>\n                  <span className=\"has-text-weight-bold\">\n                    {symbol ? symbol : \"Select\"}\n                  </span>\n                  <span className=\"icon\">\n                    <FaAngleDown />\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <div className={`control ${isLoading ? \"is-loading\" : \"\"}`}>\n            <NumberFormat\n              readOnly={isReadOnly}\n              // ref={this.props, inputRef}\n              // decimalScale={0}\n              inputMode=\"decimal\"\n              className=\"input\"\n              value={val}\n              onValueChange={(value, e) => {\n                if (e.source === \"event\") {\n                  setValue(value.value, e.event);\n                }\n              }}\n              thousandSeparator={true}\n              suffix={asset ? \" \" + asset.symbol : \"\"}\n              allowLeadingZeros={false}\n              // format={(val) => {} }\n            />\n            {userBalance ? (\n              <div className=\"level is-mobile mt-1\">\n                <div className=\"level-left\">\n                  <small className=\"is-size-7\">\n                    <div className=\"level-item\">Your balance</div>\n                  </small>\n                </div>\n\n                <div className=\"level-right\">\n                  <div className=\"level-item\">\n                    <small className=\"is-size-7\">\n                      {userBalance} {asset && asset.symbol}\n                    </small>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport Modal from \"../../../../components/Modal\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { ASSETS } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaPlus } from \"react-icons/all\";\nimport { wallet } from \"@cityofzion/neon-core\";\nimport { toast } from \"react-hot-toast\";\ninterface IAssetListModalProps {\n  tokenA?: string;\n  tokenB?: string;\n  onClose: () => void;\n  onAssetClick: (assetHash: string) => void;\n}\nconst AssetListModal = ({\n  tokenA,\n  tokenB,\n  onAssetClick,\n  onClose,\n}: IAssetListModalProps) => {\n  const { network } = useWallet();\n  const [isCustomInputMode, setCustomInputMode] = useState(false);\n  const [contractHash, setContractHash] = useState(\"\");\n  const assets = ASSETS(network).filter((asset) => {\n    return asset.contractHash !== tokenA && asset.contractHash !== tokenB;\n  });\n  const onAddContractHash = () => {\n    let hash = contractHash;\n    const ox = contractHash.substring(0, 2);\n    if (ox === \"0x\") {\n      hash = contractHash.substring(2);\n    }\n    if (wallet.isScriptHash(hash)) {\n      onAssetClick(hash);\n    } else {\n      toast.error(\"Not valid hash.\");\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {isCustomInputMode ? (\n        <div>\n          <div className=\"field\">\n            <label className=\"label\">Enter a contract hash</label>\n            <input\n              className=\"input\"\n              value={contractHash}\n              onChange={(e) => setContractHash(e.target.value)}\n            />\n          </div>\n          <button\n            onClick={onAddContractHash}\n            disabled={!contractHash}\n            className=\"button is-primary\"\n          >\n            Submit\n          </button>\n        </div>\n      ) : (\n        <div>\n          <h5 className=\"title is-6\">Select a token</h5>\n          <nav className=\"panel\">\n            {/*<div className=\"panel-block\">*/}\n            {/*  <p className=\"control has-icons-left\">*/}\n            {/*    <input className=\"input\" type=\"text\" placeholder=\"Search\" />*/}\n            {/*    <span className=\"icon is-left\">*/}\n            {/*      <i className=\"fas fa-search\" aria-hidden=\"true\"></i>*/}\n            {/*    </span>*/}\n            {/*  </p>*/}\n            {/*</div>*/}\n\n            {assets.length > 0 ? (\n              assets.map(({ contractHash, logo, symbol }) => {\n                return (\n                  <a\n                    onClick={() => onAssetClick(contractHash)}\n                    className=\"panel-block\"\n                    key={contractHash}\n                  >\n                    <div className=\"panel-icon\">\n                      <img src={logo} />\n                    </div>\n                    {symbol}\n                  </a>\n                );\n              })\n            ) : (\n              <div></div>\n            )}\n            <a\n              onClick={() => setCustomInputMode(true)}\n              className=\"panel-block\"\n              // key={contractHash}\n            >\n              <div className=\"panel-icon\">\n                <FaPlus />\n              </div>\n              Custom contract hash\n            </a>\n          </nav>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default AssetListModal;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport { PAIR_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\ninterface IPairSelectProps {\n  onSelect: (val: { tokenA: string; tokenB: string }) => void;\n}\nconst PairSelect = ({ onSelect }: IPairSelectProps) => {\n  const { network } = useWallet();\n  return (\n    <Select\n      onChange={(target) => {\n        if (target) {\n          onSelect(target.value);\n        }\n      }}\n      options={PAIR_LIST[network]}\n    />\n  );\n};\n\nexport default PairSelect;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport {\n  FTW_SCRIPT_HASH,\n  SwapContract,\n} from \"../../../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport Input from \"../../components/Input\";\nimport AssetListModal from \"../../components/AssetListModal\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExchangeAlt } from \"react-icons/all\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { SWAP_PATH_LIQUIDITY } from \"../../../../../consts\";\n// tslint:disable-next-line:no-implicit-dependencies\nimport queryString from \"query-string\";\nimport { LocalStorage } from \"../../../../../packages/neo/local-storage\";\nimport PairSelect from \"../../components/PairSelect\";\n\nconst Swap = () => {\n  const location = useLocation();\n  const params = queryString.parse(location.search);\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [isAssetChangeModalActive, setAssetChangeModalActive] = useState<\n    \"A\" | \"B\" | \"\"\n  >(\"\");\n  // Temporary disabled\n  // const cachedTokenA = LocalStorage.getSwapTokenA();\n  const [tokenA, setTokenA] = useState<any>(\n    params.tokenA ? params.tokenA : undefined\n  );\n  const cachedTokenB = LocalStorage.getSwapTokenB();\n  const [tokenB, setTokenB] = useState<any>(\n    params.tokenB ? params.tokenB : undefined\n  );\n  const [amountA, setAmountA] = useState(\"\");\n  const [amountB, setAmountB] = useState(\"\");\n  const [reserve, setReserve] = useState<any>();\n  const [isPairLoading, setPairLoading] = useState(false);\n  const [txid, setTxid] = useState(\"\");\n  const onAssetChange = (type: \"A\" | \"B\" | \"\") => {\n    // Temporary disable\n    // setAssetChangeModalActive(type);\n  };\n\n  const onAssetClick = (assetHash) => {\n    if (isAssetChangeModalActive === \"A\") {\n      LocalStorage.setSwapTokenA(assetHash);\n      setTokenA(assetHash);\n      if (tokenB) {\n        loadPair(assetHash, tokenB);\n      }\n    } else {\n      LocalStorage.setSwapTokenB(assetHash);\n      setTokenB(assetHash);\n      if (tokenA) {\n        loadPair(tokenA, assetHash);\n      }\n    }\n    setAssetChangeModalActive(\"\");\n  };\n\n  const onTokenAAmountChange = async (val: string) => {\n    setAmountA(val);\n    if (tokenB) {\n      const res = await new SwapContract(network).getEstimate(\n        tokenA,\n        tokenB,\n        tokenA,\n        val\n      );\n      setAmountB(res as any);\n    }\n  };\n\n  const onSuccess = () => {\n    setAmountA(\"0\");\n    setAmountB(\"0\");\n    setTxid(\"\");\n  };\n\n  const onPairSelect = (pair: { tokenA: string; tokenB: string }) => {\n    loadPair(pair.tokenA, pair.tokenB);\n    setTokenA(pair.tokenA);\n    setTokenB(pair.tokenB);\n  };\n\n  const onSwap = async () => {\n    if (connectedWallet) {\n      if (tokenA && tokenB && amountA && amountB) {\n        try {\n          const res = await new SwapContract(network).swap(\n            connectedWallet,\n            tokenA,\n            amountA,\n            tokenB,\n            amountB\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.description ? e.description : e.message);\n        }\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n  const onSwitch = async () => {\n    setTokenB(tokenA);\n    setTokenA(tokenB ? tokenB : \"\");\n    setAmountB(amountA);\n    setAmountA(amountB);\n    if (tokenB && amountB && amountB !== \"0\" && tokenA) {\n      const estimated = await new SwapContract(network).getEstimate(\n        tokenB,\n        tokenA,\n        tokenB,\n        amountB\n      );\n      setTokenB(tokenA);\n      setTokenA(tokenB ? tokenB : \"\");\n      setAmountA(amountB);\n      setAmountB(estimated ? estimated.toString() : \"0\");\n    } else {\n      setTokenB(tokenA);\n      setTokenA(tokenB ? tokenB : \"\");\n      setAmountB(amountA);\n      setAmountA(amountB);\n    }\n  };\n\n  const loadPair = async (A, B) => {\n    setPairLoading(true);\n    const res = await new SwapContract(network).getPair(A, B, connectedWallet);\n    setReserve(res);\n    setPairLoading(false);\n    if (amountA && res.pair[tokenA] !== 0) {\n      const estimated = await new SwapContract(network).getEstimate(\n        A,\n        B,\n        A,\n        amountA\n      );\n      // @ts-ignore\n      // const estimated = getEstimate(amountA, res[A], res[B]);\n      setAmountB(estimated ? estimated.toString() : \"0\");\n    } else {\n      setAmountB(\"0\");\n    }\n  };\n\n  useEffect(() => {\n    if (params.tokenA && params.tokenB) {\n      loadPair(params.tokenA, params.tokenB);\n    }\n  }, [location]);\n\n  const noLiquidity =\n    reserve && reserve.pair[tokenA] === 0 && reserve.pair[tokenB] === 0;\n  return (\n    <div>\n      <>\n        {noLiquidity && (\n          <div className=\"notification is-info\">\n            No liquidity with the pairs. Provide liquidity and earn fees.\n            <br />\n            <br />\n            <Link className=\"button is-small is-light\" to={SWAP_PATH_LIQUIDITY}>\n              Go to liquidity page\n            </Link>\n          </div>\n        )}\n\n        {tokenA && tokenB ? (\n          <>\n            <Input\n              heading=\"Swap From\"\n              onClickAsset={() => onAssetChange(\"A\")}\n              asset={tokenA ? ASSET_LIST[network][tokenA] : undefined}\n              val={amountA}\n              setValue={(val, e) => onTokenAAmountChange(val)}\n              userBalance={\n                connectedWallet && reserve\n                  ? reserve.balances[tokenA]\n                  : undefined\n              }\n            />\n            <div className=\"pt-3 pb-3\">\n              <button onClick={onSwitch} className=\"button is-white\">\n                <FaExchangeAlt />\n              </button>\n            </div>\n            <Input\n              isReadOnly={true}\n              heading=\"Swap To\"\n              isLoading={isPairLoading}\n              onClickAsset={() => {\n                onAssetChange(\"B\");\n              }}\n              asset={tokenB ? ASSET_LIST[network][tokenB] : undefined}\n              val={amountB}\n              // setValue={(val, e) => onTokenAAmountChange(\"B\", val, e)}\n              setValue={(val, e) => {\n                return false;\n              }}\n              userBalance={\n                connectedWallet && reserve\n                  ? reserve.balances[tokenB]\n                  : undefined\n              }\n            />\n            {connectedWallet ? (\n              tokenA && tokenB && amountA && amountB ? (\n                <>\n                  {/*<div className=\"box\">*/}\n                  {/*  {`${tokenBofA} ${ASSET_LIST[tokenB].symbol} per ${ASSET_LIST[tokenA].symbol}`}*/}\n                  {/*  /!*<br />*!/*/}\n                  {/*  /!*{`${tokenAofB} ${ASSET_LIST[tokenA].symbol} per ${ASSET_LIST[tokenB].symbol}`}*!/*/}\n                  {/*</div>*/}\n                  <hr />\n                  <button\n                    disabled={\n                      reserve.balances[tokenA] < parseFloat(amountA) ||\n                      reserve.pair[tokenB] < parseFloat(amountB)\n                    }\n                    onClick={onSwap}\n                    className=\"button is-fullwidth is-primary\"\n                  >\n                    Swap\n                  </button>\n                </>\n              ) : (\n                <div />\n              )\n            ) : (\n              <>\n                <hr />\n                <button\n                  onClick={openWalletModal}\n                  className=\"button is-fullwidth is-primary\"\n                >\n                  Connect wallet\n                </button>\n              </>\n            )}\n          </>\n        ) : (\n          <>\n            <label className=\"label\">Select a pair</label>\n            <PairSelect onSelect={onPairSelect} />\n          </>\n        )}\n      </>\n\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onSuccess}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n\n      {isAssetChangeModalActive && (\n        <AssetListModal\n          tokenA={tokenA}\n          tokenB={tokenB}\n          onAssetClick={onAssetClick}\n          onClose={() => setAssetChangeModalActive(\"\")}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Swap;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../../../packages/neo/contracts\";\nimport { IConnectedWallet } from \"../../../../../../../packages/neo/wallet/interfaces\";\nimport { toast } from \"react-hot-toast\";\nimport { getUserShare } from \"../../../../../../../packages/neo/contracts/ftw/swap/helpers\";\nimport { ASSET_LIST } from \"../../../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\ninterface IFarmDetailProps {\n  tokenA: string;\n  tokenB: string;\n  amountA: string;\n  amountB: string;\n  connectedWallet: IConnectedWallet;\n}\nconst FarmDetail = ({ connectedWallet, tokenA, tokenB }: IFarmDetailProps) => {\n  const [data, setData] = useState<any>();\n  const [claimable, setClaimable] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const { network } = useWallet();\n  const [txid, setTxid] = useState(\"\");\n  const [reloadCnt, setReloadCnt] = useState(0);\n\n  const onRemoveLiquidity = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SwapContract(network).remove(\n          connectedWallet,\n          tokenA,\n          tokenB\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SwapContract(network).claim(\n          connectedWallet,\n          tokenA,\n          tokenB\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onActionSuccess = () => {\n    setReloadCnt(reloadCnt + 1);\n    setTxid(\"\");\n  };\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      const res1 = await new SwapContract(network).getUserStake(\n        connectedWallet,\n        tokenA,\n        tokenB\n      );\n      const res2 = await new SwapContract(network).getClaimAble(\n        connectedWallet,\n        tokenA,\n        tokenB\n      );\n      setLoading(false);\n      setData(res1);\n      setClaimable(res2);\n    }\n    fetch();\n  }, [reloadCnt]);\n\n  if (isLoading) return <div>Loading..</div>;\n\n  const userShare = data\n    ? getUserShare(\n        data.pair.totalShare,\n        data.stake.amountA,\n        data.pair.amountA,\n        data.pair.amountB\n      )\n    : undefined;\n  console.log(\n    data\n      ? \"original staking: \" + data.stake.amountA + \"/\" + data.stake.amountB\n      : \"No staking info\"\n  );\n  return (\n    <div>\n      {txid ? (\n        <AfterTransactionSubmitted\n          txid={txid}\n          network={network}\n          onSuccess={onActionSuccess}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title is-5\">My liquidity</h1>\n          {data ? (\n            <div>\n              <div style={{ alignItems: \"center\" }} className=\"media\">\n                <div className=\"media-content is-vcentered\">\n                  {ASSET_LIST[network][tokenA].symbol} /{\" \"}\n                  {ASSET_LIST[network][tokenB].symbol}\n                  <br />\n                  <small>\n                    {/*{data.stake.amountA} / {data.stake.amountB}*/}\n                    {/*<br />*/}\n                    {userShare ? userShare.amountA : 0} /{\" \"}\n                    {userShare ? userShare.amountB : 0}\n                  </small>\n                </div>\n                <div className=\"media-right\">\n                  <button\n                    onClick={onRemoveLiquidity}\n                    className=\"button is-light\"\n                  >\n                    Remove\n                  </button>\n                </div>\n              </div>\n              <hr />\n              <div style={{ alignItems: \"center\" }} className=\"media\">\n                <div className=\"media-content is-vcentered\">\n                  Claimable\n                  <br />\n                  {ASSET_LIST[network][tokenA].symbol} /{\" \"}\n                  {ASSET_LIST[network][tokenB].symbol}\n                  <br />\n                  <small>\n                    {claimable ? claimable.amountA : 0} /{\" \"}\n                    {claimable ? claimable.amountB : 0}\n                  </small>\n                </div>\n                <div className=\"media-right\">\n                  <button onClick={onClaim} className=\"button is-primary\">\n                    Claim\n                  </button>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div>There is no liquidity with your connected wallet</div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FarmDetail;\n","import React, { useState } from \"react\";\nimport { wallet } from \"@cityofzion/neon-core\";\nimport { toast } from \"react-hot-toast\";\nimport {\n  FTW_SCRIPT_HASH,\n  NUDES_SCRIPT_HASH,\n  SwapContract,\n} from \"../../../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { useHistory } from \"react-router-dom\";\nimport { SWAP_PATH_LIQUIDITY } from \"../../../../../../../consts\";\n\nconst CreatePool = (props) => {\n  const { network } = useWallet();\n  const history = useHistory();\n  const [tokenA, setTokenA] = useState<string | undefined>();\n  const [tokenB, setTokenB] = useState<string | undefined>();\n  const [isLoading, setLoading] = useState(false);\n  const [errors, setErrors] = useState<string[]>([]);\n  const handleSubmit = async () => {\n    setErrors([]);\n    setLoading(true);\n    const _errors: string[] = [];\n\n    if (\n      !wallet.isScriptHash(tokenA as string) ||\n      !wallet.isScriptHash(tokenB as string)\n    ) {\n      _errors.push(\"Check contract hashes\");\n    }\n\n    if (tokenA === tokenB) {\n      _errors.push(\"Token A and Token B cannot be the same.\");\n    }\n\n    if (_errors.length === 0) {\n      const res = await new SwapContract(network).getContractHashes(\n        // @ts-ignore\n        tokenA,\n        tokenB\n      );\n\n      if (res.tokenA.decimals !== \"8\" || res.tokenB.decimals !== \"8\") {\n        _errors.push(\"We only can support tokens with 8 decimals.\");\n      }\n\n      if (res.reserve.amountA === 0 || res.reserve.amountB !== 0) {\n        _errors.push(\"There is existing pool.\");\n      }\n    }\n\n    if (_errors.length === 0) {\n      history.push(`${SWAP_PATH_LIQUIDITY}?tokenA=${tokenA}&tokenB=${tokenB}`);\n    } else {\n      setLoading(false);\n      setErrors(_errors);\n    }\n  };\n  return (\n    <div>\n      <h1 className=\"title\">Create a new swap pool</h1>\n      {errors.length > 0 ? (\n        <div className=\"notification is-danger content\">\n          <strong>Please check following messages</strong>\n          <br />\n          <ul>\n            {errors.map((err) => (\n              <li key={err}>{err}</li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div className=\"notification is-info\">\n          <strong>Liquidity Provider Rewards</strong>\n          <br />\n          Liquidity providers earn a 0.25% fee on all trades proportional to\n          their share of the pool. Fees are added to the pool, accrue in real\n          time and can be claimed by withdrawing your liquidity.\n        </div>\n      )}\n\n      <hr />\n      <div className=\"field\">\n        <label className=\"label\">Token A</label>\n        <input\n          value={tokenA}\n          onChange={(e: any) => setTokenA(e.target.value)}\n          className=\"input\"\n        />\n      </div>\n      <div className=\"field\">\n        <label className=\"label\">Token B</label>\n        <input\n          value={tokenB}\n          onChange={(e: any) => setTokenB(e.target.value)}\n          className=\"input\"\n        />\n      </div>\n      <hr />\n      <button\n        onClick={handleSubmit}\n        disabled={!tokenA || !tokenB}\n        className={`button is-primary ${isLoading ? \"is-loading\" : \"\"}`}\n      >\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default CreatePool;\n","import React, { useEffect, useState } from \"react\";\nimport { ASSET_LIST } from \"../../../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport { Link } from \"react-router-dom\";\nimport {\n  SWAP_PATH_HISTORY,\n  SWAP_PATH_LIQUIDITY,\n} from \"../../../../../../../consts\";\nimport Modal from \"../../../../../../components/Modal\";\nimport FarmDetail from \"../Detail\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../../../packages/neo/contracts\";\nimport CreatePool from \"../CreatePool\";\n\nconst PairList = (props) => {\n  const { network, connectedWallet } = useWallet();\n  const [list, setList] = useState<any[]>([]);\n  const [detail, setDetail] = useState();\n  const [isCreateModalActive, setCreateModalActive] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      try {\n        const res = await new SwapContract(network).getPairs();\n        setLoading(false);\n        setList(res);\n      } catch (e: any) {\n        setLoading(false);\n        setError(e.message);\n      }\n    }\n    fetch();\n  }, []);\n  if (isLoading) return <div>Loading..</div>;\n  return (\n    <div>\n      <div className=\"level is-mobile\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-5\">Pools</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <button\n              onClick={() => setCreateModalActive(true)}\n              className=\"button is-light\"\n            >\n              Create\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      {list.map((item, i) => {\n        return (\n          <div\n            style={{ alignItems: \"center\" }}\n            className=\"media\"\n            key={\"pairs\" + i}\n          >\n            <div className=\"media-left\">\n              <strong>TVL</strong>\n            </div>\n            <div className=\"media-content is-vcentered\">\n              {ASSET_LIST[network][item.tokenA].symbol} /{\" \"}\n              {ASSET_LIST[network][item.tokenB].symbol}\n              <br />\n              <small>\n                {item.amountA} / {item.amountB}\n              </small>\n              <br />\n              <Link\n                to={{\n                  pathname: `${SWAP_PATH_HISTORY}`,\n                  search: `?tokenA=${item.tokenA}&tokenB=${item.tokenB}`,\n                }}\n              >\n                Swap history\n              </Link>\n              <br />\n              <Link\n                to={{\n                  pathname: `${SWAP_PATH_LIQUIDITY}`,\n                  search: `?tokenA=${item.tokenA}&tokenB=${item.tokenB}`,\n                }}\n              >\n                Add liquidity\n              </Link>\n            </div>\n            <div className=\"media-right\">\n              <button\n                onClick={() => setDetail(item)}\n                className=\"button is-light\"\n              >\n                Detail\n              </button>\n            </div>\n          </div>\n        );\n      })}\n\n      {isCreateModalActive && (\n        <Modal onClose={() => setCreateModalActive(false)}>\n          <CreatePool />\n        </Modal>\n      )}\n\n      {detail && connectedWallet && (\n        <Modal onClose={() => setDetail(undefined)}>\n          <div>\n            <FarmDetail connectedWallet={connectedWallet} {...detail} />\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default PairList;\n","import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-implicit-dependencies\nimport queryString from \"query-string\";\nimport Pagination from \"bulma-pagination-react\";\nimport { useLocation } from \"react-router-dom\";\nimport { SwapContract } from \"../../../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { ASSET_LIST } from \"../../../../../../../packages/neo/contracts/ftw/swap/consts\";\n\nconst History = () => {\n  const location = useLocation();\n  const params = queryString.parse(location.search);\n  const { tokenA, tokenB, page } = params;\n\n  const { network } = useWallet();\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState<any>();\n  const [currentPage, setPage] = useState(page ? page : \"1\");\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      try {\n        const res = await new SwapContract(network).getSwapHistory(\n          tokenA,\n          tokenB,\n          currentPage\n        );\n        console.log(res);\n        setLoading(false);\n        setData(res);\n      } catch (e: any) {\n        setLoading(false);\n        setError(e.message);\n      }\n    }\n    fetch();\n  }, [location, currentPage]);\n  if (isLoading) return <div>History loading..</div>;\n  if (!data) return <div>Failed to load data from the chain</div>;\n  return (\n    <div>\n      <h1 className=\"title is-5\">Swap history</h1>\n      <hr />\n      {data.totalItems === \"0\" ? (\n        <p className=\"subtitle is-6\">No data</p>\n      ) : (\n        <div className=\"table-container\">\n          <table className=\"table is-fullwidth\">\n            <thead>\n              <tr>\n                <th>In</th>\n                <th>Out</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.items.map((swap, i) => {\n                const symbolIn = ASSET_LIST[network][swap.tokenIn]\n                  ? ASSET_LIST[network][swap.tokenIn].symbol\n                  : swap.tokenIn;\n                const symbolOut = ASSET_LIST[network][swap.tokenOut]\n                  ? ASSET_LIST[network][swap.tokenOut].symbol\n                  : swap.tokenOut;\n                return (\n                  <tr key={`swap-${i}`}>\n                    <td>\n                      <strong>{symbolIn}</strong>&nbsp;{swap.tokenInAmount}\n                    </td>\n                    <td>\n                      <strong>{symbolOut}</strong>&nbsp;{swap.tokenOutAmount}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n          {data && data.totalPages > 1 && (\n            <div className=\"media\">\n              <div className=\"media-content\">\n                <Pagination\n                  pages={data.totalPages}\n                  currentPage={currentPage}\n                  onChange={(_page) => {\n                    if (currentPage !== _page) {\n                      setPage(_page);\n                    }\n                  }}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default History;\n","import React, { useEffect, useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport { GAS_SCRIPT_HASH } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport {\n  FTW_SCRIPT_HASH,\n  SwapContract,\n} from \"../../../../../packages/neo/contracts\";\nimport AssetListModal from \"../../components/AssetListModal\";\nimport { toast } from \"react-hot-toast\";\nimport { getEstimate } from \"../../../../../packages/neo/contracts/ftw/swap/helpers\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExchangeAlt } from \"react-icons/all\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { useLocation } from \"react-router-dom\";\n// tslint:disable-next-line:no-implicit-dependencies\nimport queryString from \"query-string\";\n\nconst Liquidity = (props) => {\n  const location = useLocation();\n  const params = queryString.parse(location.search);\n  const isNewPoolMode = !params.tokenA && !params.tokenBv;\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [isAssetChangeModalActive, setAssetChangeModalActive] = useState<\n    \"A\" | \"B\" | \"\"\n  >(\"\");\n  const [tokenA, setTokenA] = useState<any>(params.tokenA ? params.tokenA : \"\");\n  const [amountA, setAmountA] = useState(\"\");\n  const [tokenB, setTokenB] = useState<any>(params.tokenB ? params.tokenB : \"\");\n  const [amountB, setAmountB] = useState(\"\");\n  const [reserve, setReserve] = useState<any>();\n  const [isPairLoading, setPairLoading] = useState(false);\n  const [txid, setTxid] = useState(\"\");\n\n  const onAssetChange = (type: \"A\" | \"B\" | \"\") => {\n    if (isNewPoolMode) {\n      setAssetChangeModalActive(type);\n    }\n  };\n\n  const onAssetClick = (assetHash) => {\n    if (isAssetChangeModalActive === \"A\") {\n      setTokenA(assetHash);\n    } else {\n      setTokenB(assetHash);\n    }\n    setAssetChangeModalActive(\"\");\n  };\n\n  const onSuccess = () => {\n    setAmountA(\"\");\n    setAmountB(\"\");\n    setTxid(\"\");\n  };\n\n  const onAddLiquidity = async () => {\n    if (connectedWallet) {\n      if (tokenA && tokenB && amountA && amountB) {\n        try {\n          const res = await new SwapContract(network).provide(\n            connectedWallet,\n            tokenA,\n            amountA,\n            tokenB,\n            amountB\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.description ? e.description : e.message);\n        }\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onTokenAAmountChange = (type: \"A\" | \"B\", val: string) => {\n    if (type === \"A\") {\n      if (\n        tokenB &&\n        reserve &&\n        reserve.pair[tokenA] !== 0 &&\n        reserve.pair[tokenB] !== 0\n      ) {\n        const estimated = getEstimate(\n          val,\n          reserve.pair[tokenA],\n          reserve.pair[tokenB]\n        );\n        setAmountB(estimated.toString());\n      }\n      setAmountA(val);\n    } else {\n      if (\n        tokenA &&\n        tokenB &&\n        reserve &&\n        reserve.pair[tokenA] !== 0 &&\n        reserve.pair[tokenB] !== 0\n      ) {\n        const estimated = getEstimate(\n          val,\n          reserve.pair[tokenB],\n          reserve.pair[tokenA]\n        );\n        setAmountA(estimated.toString());\n      }\n      setAmountB(val);\n    }\n  };\n\n  const onSwitch = () => {\n    setTokenB(tokenA);\n    setTokenA(tokenB ? tokenB : \"\");\n    setAmountB(amountA);\n    setAmountA(amountB);\n  };\n\n  useEffect(() => {\n    async function fetchPair(A, B) {\n      try {\n        setPairLoading(true);\n        const res = await new SwapContract(network).getPair(\n          A,\n          B,\n          connectedWallet\n        );\n        setPairLoading(false);\n        setReserve(res);\n        if (\n          tokenA &&\n          tokenB &&\n          amountA &&\n          !amountB &&\n          res[tokenA] !== 0 &&\n          res[tokenB] !== 0\n        ) {\n          const estimated = getEstimate(amountA, res[tokenA], res[tokenB]);\n          setAmountB(estimated.toString());\n        }\n        if (\n          tokenA &&\n          tokenB &&\n          amountB &&\n          !amountA &&\n          res[tokenA] !== 0 &&\n          res[tokenB] !== 0\n        ) {\n          // @ts-ignore\n          const estimated = getEstimate(amountB, res[tokenB], res[tokenA]);\n          setAmountA(estimated.toString());\n        }\n      } catch (e: any) {\n        console.log(e);\n        // setError(e.message);\n      }\n    }\n    if (tokenA && tokenB) {\n      fetchPair(tokenA, tokenB);\n    }\n  }, [tokenA, tokenB]);\n\n  const noLiquidity =\n    reserve && reserve.pair[tokenA] === 0 && reserve.pair[tokenB] === 0;\n  return (\n    <>\n      <h1 className=\"title is-5\">\n        {noLiquidity ? \"Create a new pool\" : \"Add liquidity\"}\n      </h1>\n      <hr />\n      {noLiquidity && (\n        <div className=\"notification is-info\">\n          <strong>Liquidity Provider Rewards</strong>\n          <br />\n          Liquidity providers earn a 0.25% fee on all trades proportional to\n          their share of the pool. Fees are added to the pool, accrue in real\n          time and can be claimed by withdrawing your liquidity.\n        </div>\n      )}\n\n      <div className=\"is-relative\">\n        <Input\n          heading=\"Pair A\"\n          onClickAsset={() => {\n            onAssetChange(\"A\");\n          }}\n          contractHash={tokenA}\n          asset={tokenA ? ASSET_LIST[network][tokenA] : undefined}\n          val={amountA}\n          setValue={(val, e) => onTokenAAmountChange(\"A\", val)}\n          userBalance={reserve ? reserve.balances[tokenA] : undefined}\n        />\n        <div className=\"pt-3 pb-3\">\n          <button onClick={onSwitch} className=\"button is-white\">\n            <FaExchangeAlt />\n          </button>\n        </div>\n        <Input\n          heading=\"Pair B\"\n          isLoading={isPairLoading}\n          onClickAsset={() => {\n            onAssetChange(\"B\");\n          }}\n          contractHash={tokenB}\n          asset={tokenB ? ASSET_LIST[network][tokenB] : undefined}\n          val={amountB}\n          setValue={(val, e) => onTokenAAmountChange(\"B\", val)}\n          userBalance={reserve && tokenB ? reserve.balances[tokenB] : undefined}\n        />\n        {connectedWallet ? (\n          tokenA && tokenB && amountA && amountB ? (\n            <>\n              <hr />\n              <button\n                disabled={\n                  reserve.balances[tokenA] < parseFloat(amountA) ||\n                  reserve.balances[tokenB] < parseFloat(amountB)\n                }\n                onClick={onAddLiquidity}\n                className=\"button is-fullwidth is-primary\"\n              >\n                Add Liquidity\n              </button>\n            </>\n          ) : (\n            <div />\n          )\n        ) : (\n          <>\n            <hr />\n            <button\n              onClick={openWalletModal}\n              className=\"button is-fullwidth is-primary\"\n            >\n              Connect wallet\n            </button>\n          </>\n        )}\n      </div>\n\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onSuccess}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n\n      {isAssetChangeModalActive && (\n        <AssetListModal\n          tokenA={tokenA}\n          tokenB={tokenB}\n          onAssetClick={onAssetClick}\n          onClose={() => setAssetChangeModalActive(\"\")}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Liquidity;\n","import React from \"react\";\nimport {\n  SWAP_PATH_FARM,\n  SWAP_PATH_HISTORY,\n  SWAP_PATH_LIQUIDITY,\n} from \"../../../../../consts\";\nimport { Route } from \"react-router-dom\";\nimport List from \"./scenes/List\";\nimport History from \"./scenes/History\";\nimport Liquidity from \"../Liquidity\";\n\nconst Farm = () => {\n  return (\n    <div>\n      <Route exact={true} path={SWAP_PATH_FARM} component={List} />\n      <Route path={SWAP_PATH_HISTORY} component={History} />\n      <Route path={SWAP_PATH_LIQUIDITY} component={Liquidity} />\n    </div>\n  );\n};\n\nexport default Farm;\n","import React from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport NavSwitch from \"./components/NavSwitch\";\nimport {\n  SWAP_PATH,\n  SWAP_PATH_FARM,\n  SWAP_PATH_LIQUIDITY,\n} from \"../../../consts\";\nimport { Route } from \"react-router-dom\";\nimport Liquidity from \"./scenes/Liquidity\";\nimport SwapBox from \"./scenes/Swap\";\nimport Farm from \"./scenes/Farm\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { MAINNET } from \"../../../packages/neo/consts\";\n\nconst Swap = () => {\n  const { network } = useWallet();\n  if (network === MAINNET)\n    return (\n      <PageLayout>\n        <div className=\"notification is-info\">\n          FTW Swap is not on Mainnet yet.{\" \"}\n        </div>\n      </PageLayout>\n    );\n  return (\n    <div>\n      <PageLayout>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-half\">\n            <NavSwitch />\n            <div className=\"box is-shadowless\">\n              <Route exact={true} path={SWAP_PATH} component={SwapBox} />\n              {/*<Route path={SWAP_PATH_LIQUIDITY} component={Liquidity} />*/}\n              <Route path={SWAP_PATH_FARM} component={Farm} />\n              {/*<NotifyError msg={error} onClose={() => setError(\"\")} />*/}\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Swap;\n","import { u } from \"@cityofzion/neon-core\";\nimport {\n  base64ToAddress,\n  base64ToDate,\n  base64ToFixed8,\n  base64ToHash160,\n  base64ToString,\n  toDecimal,\n} from \"../../../utils\";\nimport { IPair } from \"./interfaces\";\n\nexport const getEstimate = (\n  amount: string,\n  reserveA: number,\n  reserveB: number\n): number => {\n  const fixed8TokenAmount = u.BigInteger.fromDecimal(amount, 8).toString();\n  // let keys = Object.keys(pairInfo);\n  // keys = keys.filter((k) => k !== token);\n  // const reservedA = pairInfo[token];\n  // const reservedB = pairInfo[keys[0]];\n  let estimated = (parseFloat(fixed8TokenAmount) * reserveB) / reserveA;\n  estimated = Math.floor(estimated);\n  return toDecimal(estimated.toString());\n};\n\nexport const getUserShare = (totalShares, userShare, poolA, poolB) => {\n  // totalShares = parseFloat(totalShares);\n  // userShare = parseFloat(userShare);\n  // poolA = parseFloat(poolA);\n  // poolB = parseFloat(poolB);\n  return {\n    amountA: (poolA * userShare) / totalShares,\n    amountB: (poolB * userShare) / totalShares,\n  };\n};\n\nexport const parseUserStake = (stackItem) => {\n  return {\n    tokenA: base64ToHash160(stackItem.value[0].value as string),\n    tokenB: base64ToHash160(stackItem.value[1].value as string),\n    amountA: toDecimal(stackItem.value[2].value),\n    amountB: toDecimal(stackItem.value[3].value),\n  };\n};\n\nexport const parsePair = (stackItem): IPair => {\n  return {\n    tokenA: base64ToHash160(stackItem.value[0].value as string),\n    tokenB: base64ToHash160(stackItem.value[1].value as string),\n    amountA: toDecimal(stackItem.value[2].value),\n    amountB: toDecimal(stackItem.value[3].value),\n    totalShare: toDecimal(stackItem.value[4].value),\n  };\n};\n\nexport const parseSwapPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSwap(stackItem[3].value),\n  };\n};\n\nconst parseSwap = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      tokenIn: base64ToHash160(item.value[0].value),\n      tokenOut: base64ToHash160(item.value[1].value), // NEO amount\n      tokenInAmount: toDecimal(item.value[2].value), // NEO amount\n      tokenOutAmount: toDecimal(item.value[3].value),\n    };\n  });\n};\n\nexport const parsePoolInfoPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parsePoolInfo(stackItem[3].value),\n  };\n};\n\nconst parsePoolInfo = (stackItem) => {\n  console.log(stackItem);\n  return stackItem.map((item) => {\n    return {\n      totalSupply: toDecimal(item.value[0].value),\n      name: base64ToString(item.value[1].value), // NEO amount\n      symbol: base64ToString(item.value[2].value), // NEO amount\n      decimals: item.value[3].value,\n      website: base64ToString(item.value[4].value),\n      description: base64ToString(item.value[5].value),\n      initialFTWAmount: toDecimal(item.value[6].value),\n      initialAmount: toDecimal(item.value[7].value),\n      creator: base64ToAddress(item.value[8].value),\n    };\n  });\n};\n","import { CONST } from \"../../../index\";\n\nexport const INCUBATOR_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"aeac82f7830f4083b98089baa51060e621febb10\",\n  [CONST.TESTNET]: \"9fb0eebdbea360546da2c5db537f13c1d990bb69\",\n  [CONST.MAINNET]: \"\",\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { base64ToHash160, toDecimal } from \"../../../utils\";\nimport { tx, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { parsePair, parsePoolInfoPaginate, parseSwapPaginate, parseUserStake } from \"./helpers\";\nimport { DEFAULT_WITNESS_SCOPE } from \"../../../consts\";\nimport { IPairInfo } from \"./interfaces\";\nimport { INCUBATOR_SCRIPT_HASH } from \"./consts\";\n\nexport class IncubatorContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = INCUBATOR_SCRIPT_HASH[networkType];\n  }\n\n  createPool = async (\n    connectedWallet: IConnectedWallet,\n    tokenHash: string,\n    amount: string,\n    description: string,\n    website: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"createPool\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenHash,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amount, 8).toString(),\n        },\n        {\n          type: \"String\",\n          value: description,\n        },\n        {\n          type: \"String\",\n          value: website,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, tokenHash],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  remove = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"removeLiquidity\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  swap = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    amountA: string,\n    tokenB: string,\n    amountB: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"swap\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountA, 8).toString(),\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountB, 8).toString(),\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [this.contractHash, tokenA],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  getPair = async (\n    tokenA: string,\n    tokenB: string,\n    connectedWallet?: IConnectedWallet\n  ): Promise<IPairInfo> => {\n    const scripts: any = [];\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPair\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    scripts.push(script);\n    if (connectedWallet) {\n      const script1 = {\n        scriptHash: tokenA,\n        operation: \"balanceOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      };\n      const script2 = {\n        scriptHash: tokenB,\n        operation: \"balanceOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      };\n      scripts.push(script1);\n      scripts.push(script2);\n    }\n    const res = await Network.read(this.network, scripts);\n    const pair = parsePair(res.stack[0]);\n    const obj = {\n      reserve: pair,\n      pair: {\n        [pair.tokenA]: pair.amountA,\n        [pair.tokenB]: pair.amountB,\n      },\n      // [pair.tokenA]: pair.amountA,\n      // [pair.tokenB]: pair.amountB,\n      balances: {\n        [tokenA]: 0,\n        [tokenB]: 0,\n      },\n    };\n    if (connectedWallet) {\n      obj.balances[tokenA] = toDecimal(res.stack[1].value as string);\n      obj.balances[tokenB] = toDecimal(res.stack[2].value as string);\n    }\n    return obj;\n  };\n\n  getPairs = async () => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPairs\",\n      args: [],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      // @ts-ignore\n      return res.stack[0].iterator.map((item) => {\n        const tokenA = base64ToHash160(item.value[0].value as string);\n        const tokenB = base64ToHash160(item.value[1].value as string);\n        const amountA = item.value[2].value;\n        const amountB = item.value[3].value;\n        return {\n          tokenA,\n          tokenB,\n          amountA: toDecimal(amountA),\n          amountB: toDecimal(amountB),\n        };\n      });\n    } catch (e) {\n      return [];\n    }\n  };\n\n  getEstimate = async (tokenA, tokenB, swapToken, amount) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getEstimate\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n        { type: \"Hash160\", value: swapToken },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amount, 8).toString(),\n        },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      return toDecimal(res.stack[0].value as string);\n    } catch (e) {\n      return undefined;\n    }\n  };\n\n  getUserStake = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getUserStake\",\n      args: [\n        { type: \"Address\", value: connectedWallet.account.address },\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"getPair\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script, script1], true);\n      return {\n        stake: parseUserStake(res.stack[0]),\n        pair: parsePair(res.stack[1]),\n      };\n    } catch (e) {\n      return undefined;\n    }\n  };\n\n  getClaimAble = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getClaimableFee\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n        { type: \"Address\", value: connectedWallet.account.address },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      return parseUserStake(res.stack[0]);\n    } catch (e) {\n      return undefined;\n    }\n  };\n\n  pools = async (page: string) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPoolInfos\",\n      args: [{ type: \"Integer\", value: page }],\n    };\n    try {\n      const res = await Network.read(this.network, [script]);\n      return parsePoolInfoPaginate(res.stack[0].value);\n    } catch (e) {\n      return undefined;\n    }\n  };\n}\n","import React, { useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { detectEmojiInString } from \"../../../Smith/helpers\";\nimport { toast } from \"react-hot-toast\";\nimport { balanceCheck } from \"../../../../../packages/neo/utils\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { DEPLOY_FEE } from \"../../../../../packages/neo/contracts/ftw/smith/consts\";\nimport NumberFormat from \"react-number-format\";\nimport { IncubatorContract } from \"../../../../../packages/neo/contracts/ftw/incubator\";\n\nconst Form = (props) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    tokenHash: \"\",\n    amount: \"\",\n    description: \"\",\n    website: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        try {\n        \tconsole.log(values)\n          const res = await new IncubatorContract(network).createPool(\n            connectedWallet,\n            values.tokenHash,\n            values.amount,\n            values.website,\n            values.description\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  return (\n    <div className=\"box\">\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={() => setTxid(\"\")}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Create a pool</h1>\n          <div className=\"content\">\n            Please read\n            <ul>\n              <li>Please do not use EMOJI or Unicode.</li>\n            </ul>\n          </div>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">Token hash</label>\n            <div className=\"control\">\n              <input\n                value={values.tokenHash}\n                onChange={(e) => handleValueChange(\"tokenHash\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Amount</label>\n            <div className=\"control\">\n              <NumberFormat\n                allowNegative={false}\n                decimalScale={0}\n                inputMode=\"decimal\"\n                className=\"input\"\n                value={values.amount}\n                onValueChange={(value) => {\n                  handleValueChange(\"amount\", value.value);\n                }}\n                allowLeadingZeros={false}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Website</label>\n            <div className=\"control\">\n              <input\n                value={values.website}\n                onChange={(e) => handleValueChange(\"website\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.tokenHash ||\n              !values.amount ||\n              !values.website ||\n              !values.description ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport Form from \"./Form\";\n\nconst Register = (props) => {\n  return (\n    <div>\n      <Form />\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { IncubatorContract } from \"../../../../../packages/neo/contracts/ftw/incubator\";\nimport { Link } from \"react-router-dom\";\nimport { INCUBATOR_POOL_PATH } from \"../../../../../consts\";\n\nconst Pools = (props) => {\n  const { network, connectedWallet } = useWallet();\n  const [data, setData] = useState<any>();\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      try {\n        const res = await new IncubatorContract(network).pools(\"1\");\n        // tslint:disable-next-line:no-console\n        console.log(res);\n        setLoading(false);\n        setData(res as any);\n      } catch (e: any) {\n        setLoading(false);\n        setError(e.message);\n      }\n    }\n    fetch();\n  }, []);\n  if (isLoading) return <div>Loading pairs..</div>;\n  console.log(data);\n  return (\n    <div className=\"box\">\n      {data &&\n        data.items.map((item) => {\n          const lockedPercent = (item.initialAmount / item.totalSupply) * 100;\n          return (\n            <div className=\"media\">\n              <div className=\"media-content\">\n                <div className=\"content\">\n                  <strong>{item.name}</strong>\n                  <br />\n                  {item.description}\n                  <br />\n                  {item.website}\n                </div>\n                <div className=\"content is-small\">\n                  Locked supply: {item.initialAmount} ({lockedPercent}%)\n                  <br />\n                  Symbol: {item.symbol}\n                </div>\n              </div>\n              <div className=\"media-right\">\n                <Link className=\"button is-info\" to={INCUBATOR_POOL_PATH + \"/\"}>\n                  Trade\n                </Link>\n              </div>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Pools;\n","import React from \"react\";\nimport NavSwitch from \"./components/NavSwitch\";\nimport { Link, Route, useLocation } from \"react-router-dom\";\nimport SwapBox from \"./scenes/Swap\";\nimport { useWallet } from \"../../../packages/provider\";\nimport {\n  INCUBATOR_PATH,\n  INCUBATOR_REGISTER_PATH,\n  SMITH_PATH,\n  SMITH_PATH_NEP11,\n} from \"../../../consts\";\nimport PageLayout from \"../../components/PageLayout\";\nimport Register from \"./scenes/Register\";\nimport Pools from \"./scenes/Pools\";\n\nconst Swap = () => {\n  const location = useLocation();\n  const { network } = useWallet();\n  return (\n    <div>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">DAO Incubator</h1>\n            <p className=\"subtitle\">Start your DAO tokens today.</p>\n            <br />\n          </div>\n        </div>\n        <div className=\"hero-foot\">\n          <nav className=\"tabs is-boxed\">\n            <div className=\"container\">\n              <ul>\n                <li\n                  className={\n                    location.pathname === INCUBATOR_PATH ? \"is-active\" : \"\"\n                  }\n                >\n                  <Link to={INCUBATOR_PATH}>Pools</Link>\n                </li>\n                <li\n                  className={\n                    location.pathname === INCUBATOR_REGISTER_PATH\n                      ? \"is-active\"\n                      : \"\"\n                  }\n                >\n                  <Link to={INCUBATOR_REGISTER_PATH}>Create a pool</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n        </div>\n      </section>\n\n     <PageLayout>\n\t     <Route exact={true} path={INCUBATOR_PATH} component={Pools} />\n\t     <Route path={INCUBATOR_REGISTER_PATH} component={Register} />\n     </PageLayout>\n    </div>\n  );\n};\n\nexport default Swap;\n","import React from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaQuestionCircle } from \"react-icons/all\";\ninterface IFusionBoxProps {\n  src: string;\n}\nconst FusionBox = ({ src }: IFusionBoxProps) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n\t      height: \"300px\"\n      }}\n      className=\"is-clickable\"\n    >\n      {src ? <img src={src} /> : <FaQuestionCircle />}\n    </div>\n  );\n};\n\nexport default FusionBox;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../components/Modal\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../packages/provider\";\n\ninterface INFTListModalModal {\n  onClick: (data: any) => void;\n  onClose: () => void;\n}\nconst RuneListModal = ({ onClick, onClose }: INFTListModalModal) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <div>\n          <div className=\"block\">\n            <h5 className=\"title is-5\">Select a Rune</h5>\n          </div>\n          <div>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : error ? (\n              <div>{error}</div>\n            ) : tokens.length > 0 ? (\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => onClick(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n            ) : (\n              <div>You don't have runes</div>\n            )}\n          </div>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default RuneListModal;\n","import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  stackItem.value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value;\n    switch (key) {\n      case \"owner\":\n        value = base64ToAddress(item.value.value);\n        break;\n      case \"attributes\":\n        value = parseProperties(item.value);\n        break;\n      default:\n        if (item.value.type === \"Integer\") {\n          value = item.value.value;\n        } else {\n          value = base64ToString(item.value.value);\n        }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { CONST } from \"../../../index\";\n\nexport const TTM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"6112cdab35dbc101596ab940c9e741ada5b7c502\",\n  [CONST.TESTNET]: \"6112cdab35dbc101596ab940c9e741ada5b7c502\",\n  [CONST.MAINNET]: \"aa4fb927b3fe004e689a278d188689c9f050a8b2\",\n};\n","import { u } from \"@cityofzion/neon-core\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { parseProperties } from \"./helpers\";\nimport { TTM_SCRIPT_HASH } from \"./consts\";\nconst CRYPTONAUT_REGEX = /^C0/;\nexport class TTMNFTContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = TTM_SCRIPT_HASH[networkType];\n  }\n\n  static owner = TTM_SCRIPT_HASH;\n\n  getProperties = async (tokenId: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n\n    const res = await Network.read(this.network, [script]);\n    const properties = parseProperties(res.stack[0]);\n    return properties;\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      if (CRYPTONAUT_REGEX.test(tokenId)) {\n        const meta = await this.getProperties(tokenId);\n        // @ts-ignore\n        metaList.push({ tokenId, ...meta });\n      }\n    }\n    return metaList;\n  };\n}\nexport { TTM_SCRIPT_HASH } from \"./consts\";\n","import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport AfterTransactionSubmitted from \"../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../components/Modal\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TTMNFTContract } from \"../../../../packages/neo/contracts/ttm/nft\";\n\ninterface INFTListModalModal {\n  onClick: (data: any) => void;\n  onClose: () => void;\n}\nconst CryptonatuListModal = ({ onClick, onClose }: INFTListModalModal) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TTMNFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <div>\n          <div className=\"block\">\n            <h5 className=\"title is-5\">Select a Cryptonaut</h5>\n          </div>\n          <div>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : error ? (\n              <div>{error}</div>\n            ) : tokens.length > 0 ? (\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => onClick(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n            ) : (\n              <div>You don't have runes</div>\n            )}\n          </div>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default CryptonatuListModal;\n","import { CONST, wallet } from \"../../../index\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { parseProperties } from \"../../ttm/nft/helpers\";\nimport { tx, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport {DEFAULT_WITNESS_SCOPE, GAS_SCRIPT_HASH} from \"../../../consts\";\nimport { RUNE_SCRIPT_HASH } from \"../nft\";\nimport { TTM_SCRIPT_HASH } from \"../../ttm/nft\";\n\nexport const FUSE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"f88481099b58a7ddff6693098037b23476a9dcee\",\n  [CONST.TESTNET]: \"f88481099b58a7ddff6693098037b23476a9dcee\",\n  [CONST.MAINNET]: \"\",\n};\n\nexport class FusionContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FUSE_SCRIPT_HASH[networkType];\n  }\n\n  fuse = async (\n    connectedWallet: IConnectedWallet,\n    cryptonautTokenId: string,\n    runeTokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"fuse\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: cryptonautTokenId,\n        },\n        {\n          type: \"String\",\n          value: runeTokenId,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [\n            this.contractHash,\n            RUNE_SCRIPT_HASH[this.network],\n            TTM_SCRIPT_HASH[this.network],\n\t          GAS_SCRIPT_HASH\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  refund = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"refund\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n      signers: [DEFAULT_WITNESS_SCOPE(senderHash)],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  getProperties = async (tokenId: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n\n    const res = await Network.read(this.network, [script]);\n    return parseProperties(res.stack[0]);\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      const meta = await this.getProperties(tokenId);\n      // @ts-ignore\n      metaList.push({ tokenId, ...meta });\n    }\n    return metaList;\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { FusionContract } from \"../../../../packages/neo/contracts/ftw/fuse\";\nimport { toast } from \"react-hot-toast\";\nimport ModalCard from \"../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../packages/ui/AfterTransactionSubmitted\";\ninterface IFusedListProps {\n  onSubmitted: (txid: string) => void;\n  onReset: () => void;\n}\nconst FusedList = ({ onSubmitted, onReset }: IFusedListProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [detail, setDetail] = useState<any>();\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const [txid, setTxid] = useState(\"\");\n\n  const onRefund = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FusionContract(network).refund(\n          connectedWallet,\n          detail.tokenId\n        );\n        setDetail(false);\n        onSubmitted(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new FusionContract(network).getTokensOf(\n          connectedWallet ? connectedWallet.account.address : undefined\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n\n  return (\n    <>\n      <div>\n        <div>\n          {isLoading ? (\n            <div></div>\n          ) : error ? (\n            <div>{error}</div>\n          ) : tokens.length > 0 ? (\n            <>\n              <div className=\"block\">\n                <h5 className=\"title is-5\">Fused Cryptonaut</h5>\n              </div>\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => setDetail(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n              {detail ? (\n                <ModalCard onClose={() => setDetail(undefined)}>\n                  <>\n                    {txid ? (\n                      <AfterTransactionSubmitted\n                        network={network}\n                        txid={txid}\n                        onSuccess={() => {\n                          setDetail(undefined);\n                          setTxid(\"\");\n                        }}\n                        onError={() => setTxid(\"\")}\n                      />\n                    ) : (\n                      <div className=\"card\">\n                        <div className=\"card-image\">\n                          <figure className=\"image is-4by3\">\n                            <img src={detail.image} />\n                          </figure>\n                        </div>\n                        <div className=\"card-content\">\n                          <div className=\"media\">\n                            <div className=\"media-content\">\n                              <h1 className=\"title is-5\">Fused Cryptonaut</h1>\n                              <p className=\"subtitle is-7\">\n                                TokenId: {detail.tokenId}\n                              </p>\n                              <div className=\"field is-grouped is-grouped-multiline\">\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Element</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.element}\n                                    </span>\n                                  </div>\n                                </div>\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Phase</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.phase}\n                                    </span>\n                                  </div>\n                                </div>\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Luck</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.luck}\n                                    </span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"media-right\">\n                              <button\n                                onClick={onRefund}\n                                className=\"button is-danger\"\n                              >\n                                Un-Fuse\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </>\n                </ModalCard>\n              ) : (\n                <div></div>\n              )}\n            </>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FusedList;\n","import React, { useState } from \"react\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { MAINNET } from \"../../../packages/neo/consts\";\nimport PageLayout from \"../../components/PageLayout\";\nimport FusionBox from \"./components/FusionBox\";\nimport RuneListModal from \"./components/RuneListModal\";\nimport CryptonautListModal from \"./components/CryptonatuListModal\";\nimport { toast } from \"react-hot-toast\";\nimport { FusionContract } from \"../../../packages/neo/contracts/ftw/fuse\";\nimport FusedList from \"./components/FusedList\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\n\nconst Fusion = () => {\n  const { network, connectedWallet } = useWallet();\n  const [isTTMModalActive, setTTMModalActive] = useState(false);\n  const [isFTWModalActive, setFTWModalActive] = useState(false);\n  const [cryptonaut, setCryptonaut] = useState<any>();\n  const [rune, setRune] = useState<any>();\n  const [txid, setTxid] = useState(\"\");\n\n  const onFuse = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FusionContract(network).fuse(\n          connectedWallet,\n          cryptonaut.tokenId,\n          rune.tokenId\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  const onReset = () => {\n    setRune(undefined);\n    setCryptonaut(undefined);\n    setTxid(\"\");\n  };\n\n  if (network === MAINNET)\n    return (\n      <PageLayout>\n        <div className=\"notification is-info\">\n          Fusion is not on Mainnet yet.{\" \"}\n        </div>\n      </PageLayout>\n    );\n  return (\n    <div>\n      <PageLayout>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-half\">\n            <h1 className=\"title has-text-centered\">FUSION</h1>\n            {txid ? (\n              <AfterTransactionSubmitted\n                network={network}\n                txid={txid}\n                onSuccess={onReset}\n                onError={() => setTxid(\"\")}\n              />\n            ) : (\n              <>\n                <div className=\"block\">\n                  <div className=\"columns\">\n                    <div className=\"column\">\n                      <div\n                        className=\"box\"\n                        onClick={() => setFTWModalActive(true)}\n                      >\n                        <FusionBox\n                          src={rune ? rune.image : \"logo/FTW_512_512.svg\"}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"column\">\n                      <div\n                        className=\"box\"\n                        onClick={() => setTTMModalActive(true)}\n                      >\n                        <FusionBox\n                          src={\n                            cryptonaut\n                              ? cryptonaut.image\n                              : \"assets/Cryptonaut.001.svg\"\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <button\n                    onClick={onFuse}\n                    className=\"is-primary button is-fullwidth\"\n                    disabled={!rune || !cryptonaut}\n                  >\n                    Fuse\n                  </button>\n                </div>\n                <div className=\"block\">\n                  <FusedList\n                    onSubmitted={(_txid: string) => setTxid(_txid)}\n                    onReset={onReset}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </PageLayout>\n      {isFTWModalActive && (\n        <RuneListModal\n          onClick={(data) => {\n            setRune(data);\n            setFTWModalActive(false);\n          }}\n          onClose={() => setFTWModalActive(false)}\n        />\n      )}\n      {isTTMModalActive && (\n        <CryptonautListModal\n          onClick={(data) => {\n            setCryptonaut(data);\n            setTTMModalActive(false);\n          }}\n          onClose={() => setTTMModalActive(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Fusion;\n","import React, { useEffect, useRef, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport DOTS from \"vanta/dist/vanta.halo.min\";\nimport PageLayout from \"../../components/PageLayout\";\n// import * as THREE from \"three\";\n\nconst Migration = (props) => {\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        DOTS({\n          el: myRef.current,\n          mouseControls: true,\n          touchControls: true,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          backgroundColor: 0x80822,\n          size: 2.8,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) {\n        // @ts-ignore\n        vantaEffect.destroy();\n      }\n    };\n  }, [vantaEffect]);\n  return (\n    <div>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-flex\" style={{ alignItems: \"center\" }}>\n                <div>\n                  <h1 className=\"title\">Forthewin is back</h1>\n                  <p className=\"subtitle\">\n                    Migrate your Neo-legacy FTX to the new <span>N3 FTW</span>\n                  </p>\n                  <a\n                    target=\"_blank\"\n                    href=\"https://nepmigration.com/\"\n                    className=\"button is-primary\"\n                  >\n                    Go to Migrate\n                  </a>\n                </div>\n              </div>\n              <div className=\"column is-hidden-touch\">\n                <div\n                  className=\"block\"\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    minHeight: \"300px\",\n                  }}\n                >\n                  <video style={{ width: \"400px\" }} autoPlay loop>\n                    <source src={\"/assets/migration.mp4\"} type=\"video/mp4\" />\n                  </video>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns halo\" ref={myRef}>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>Neo-legacy</h3>\n                <h6>Symbol</h6>\n                <p>FTX</p>\n                <h6>Contract hash</h6>\n                <p>0xaac66f9779ca67d819d05492805d251dab02fc7b</p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://neotracker.io/asset/aac66f9779ca67d819d05492805d251dab02fc7b\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>N3</h3>\n                <h6>Symbol</h6>\n                <p>FTW</p>\n                <h6>Contract hash</h6>\n                <p>\n                  <a\n                    target=\"_blank\"\n                    className=\"has-text-dark\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\n                  </a>\n                </p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://explorer.onegate.space/NEP17tokeninfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Migration;\n","import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ReactGa = () => {\n  const location = useLocation();\n  useEffect(() => {\n    ReactGA.pageview(location.pathname);\n  }, [location]);\n  return <div></div>;\n};\n\nexport default ReactGa;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport {\n  COLLECTION_PATH,\n  FARM_PATH,\n  FUSION_PATH,\n  GALLERY_PATH,\n  HOME_PATH,\n  INCUBATOR_PATH,\n  MIGRATION_PATH,\n  SMITH_PATH,\n  SWAP_PATH,\n  TOURNAMENT_PATH,\n} from \"../consts\";\nimport { WalletContextProvider } from \"../packages/provider\";\nimport WalletSidebar from \"./components/WalletSidebar\";\nimport Farm from \"./pages/Farm\";\nimport { Toaster } from \"react-hot-toast\";\nimport MyCollection from \"./pages/MyCollection\";\nimport Gallery from \"./pages/Gallery\";\nimport MobileMenuSlider from \"./components/MobileMenuSlider\";\nimport Home from \"./pages/Home\";\nimport Smith from \"./pages/Smith\";\nimport Tournament from \"./pages/Tournament\";\nimport Swap from \"./pages/Swap\";\nimport Incubator from \"./pages/Incubator\";\nimport Fusion from \"./pages/Fusion\";\nimport Migration from \"./pages/Migration\";\nimport ReactGa from \"./components/ReactGa\";\n\nReactGA.initialize(\"UA-114435339-1\");\n\nconst App = () => {\n  return (\n    <WalletContextProvider\n      options={{\n        useLocalStorage: true,\n        useDevWallet: process.env.NODE_ENV === \"development\",\n      }}\n    >\n      <Router>\n        <Toaster position=\"bottom-center\" />\n        <Header />\n        <Route exact path={HOME_PATH} component={Home} />\n        <Route path={GALLERY_PATH} component={Gallery} />\n        <Route path={TOURNAMENT_PATH} component={Tournament} />\n        <Route path={SMITH_PATH} component={Smith} />\n        <Route path={FARM_PATH} component={Farm} />\n        <Route path={COLLECTION_PATH} component={MyCollection} />\n        <Route path={INCUBATOR_PATH} component={Incubator} />\n        <Route path={SWAP_PATH} component={Swap} />\n        <Route path={FUSION_PATH} component={Fusion} />\n        <Route exact path={MIGRATION_PATH} component={Migration} />\n        <MobileMenuSlider />\n        <WalletSidebar />\n        <ReactGa />\n      </Router>\n    </WalletContextProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppCContextProvider } from \"./common/hooks/use-app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/style.scss\";\nimport App from \"./ui\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppCContextProvider>\n      <App />\n    </AppCContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}