{"version":3,"sources":["common/hooks/use-app.tsx","reportWebVitals.ts","ui/components/DisplayRandomRune.tsx","ui/components/Logo.tsx","packages/neo/consts/index.ts","packages/neo/utils/index.ts","packages/neo/network/index.ts","packages/neo/contracts/ftw/farm/helpers.ts","packages/neo/contracts/ftw/nep17/index.ts","packages/neo/contracts/ftw/farm/index.ts","packages/neo/contracts/ftw/nft/consts.ts","packages/neo/contracts/ftw/nft/helpers.ts","packages/neo/contracts/ftw/nft/index.ts","packages/neo/contracts/ftw/bank/index.ts","packages/neo/wallet/dev-wallet.ts","packages/neo/wallet/index.ts","packages/neo/contracts/ftw/farm/consts.ts","packages/neo/local-storage/index.ts","packages/provider/wallet-provider.tsx","consts/pageRoutes.ts","packages/ui/PendingTransaction/index.tsx","packages/ui/Wallet/helpers.ts","ui/components/WalletDropdown.tsx","ui/components/NetworkSwitch.tsx","ui/components/Header.tsx","packages/ui/Wallet/WalletDropdown.tsx","packages/ui/Wallet/WalletList.tsx","packages/ui/Wallet/AssetCard.tsx","packages/ui/Wallet/Runes.tsx","packages/ui/Wallet/index.tsx","ui/components/WalletSidebar.tsx","ui/components/PageLayout.tsx","ui/components/Modal.tsx","ui/components/TransactionSubmitted.tsx","ui/pages/Farm/ActionModal.tsx","ui/pages/Farm/SnapshotCountdown.tsx","ui/pages/Farm/SnapshotCard.tsx","ui/pages/Farm/SnapshotList.tsx","ui/components/NotifyError.tsx","ui/pages/Farm/MyPosition.tsx","ui/pages/Farm/Pool.tsx","ui/pages/Farm/CancelModal.tsx","ui/pages/Farm/ClaimModal.tsx","ui/pages/Farm/Claims.tsx","ui/pages/Farm/PositionModal.tsx","ui/pages/Farm/About.tsx","ui/pages/Farm/index.tsx","ui/pages/Gallery/PropertiesModal.tsx","ui/pages/MyCollection/index.tsx","ui/pages/Gallery/Banner.tsx","packages/neo/api/consts.ts","packages/neo/api/rest.ts","ui/pages/Gallery/index.tsx","ui/components/SidebarNav.tsx","ui/components/MobileMenuSlider.tsx","ui/pages/Home.tsx","packages/neo/contracts/ftw/smith/consts.ts","packages/neo/contracts/ftw/smith/helpers.ts","packages/neo/contracts/ftw/smith/index.ts","ui/pages/Smith/ActionModal.tsx","ui/pages/Smith/ContractCard.tsx","ui/pages/Smith/index.tsx","ui/pages/Tournament/pageRoutes.ts","ui/pages/Tournament/scenes/Home/index.tsx","packages/neo/contracts/ftw/tournament/consts.ts","packages/neo/contracts/ftw/tournament/helpers.ts","packages/neo/contracts/ftw/tournament/index.ts","ui/pages/Tournament/scenes/Arena/Banner.tsx","ui/pages/Tournament/components/DisplayRuneWithProperties.tsx","ui/pages/Tournament/scenes/Arena/Players/components/PlayerModal.tsx","ui/pages/Tournament/scenes/Arena/Players/components/NFTListModal.tsx","ui/pages/Tournament/scenes/Arena/Players/components/ArenaRegisterButton.tsx","ui/pages/Tournament/scenes/Arena/Players/index.tsx","ui/pages/Tournament/scenes/Arena/History/NFTDetailModal.tsx","ui/pages/Tournament/components/ClaimButton.tsx","ui/pages/Tournament/scenes/Arena/History/HistoryTable.tsx","ui/pages/Tournament/scenes/Arena/helpers.ts","ui/pages/Tournament/scenes/Arena/History/TournamentTree.tsx","ui/pages/Tournament/scenes/Arena/History/Replay.tsx","ui/pages/Tournament/components/PlayButton.tsx","ui/pages/Tournament/scenes/Arena/History/index.tsx","ui/pages/Tournament/scenes/Arena/index.tsx","ui/pages/Tournament/index.tsx","ui/index.tsx","index.tsx"],"names":["AppContext","createContext","AppCContextProvider","props","useState","sidebarStatus","setSidebarStatus","walletSidebarStatus","setWalletSidebarStatus","contextValue","openSidebar","closeSidebar","toggleSidebar","toggleWalletSidebar","Provider","value","children","useApp","useContext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getColors","_","range","map","i","Math","floor","random","DisplayRandomRune","width","height","isActive","colors","setColors","bg","dot1","dot2","dot3","dot4","body","svg","useEffect","interval","setInterval","clearInterval","style","src","Logo","O3","NEO_LINE","DEV","WALLET_LIST","label","key","PRIVATENET","TESTNET","MAINNET","PRIVATE_CONFIG","url","TESTNET_CONFIG","MAINNET_CONFIG","GAS_SCRIPT_HASH","NEON_CONST","NATIVE_CONTRACT_HASH","GasToken","NEO_SCRIPT_HASH","NeoToken","TOKEN_LIST","network","DEV_WALLET_PRIVATE_KEY","truncateAddress","address","substring","substr","length","convertContractCallParam","param","type","sc","ContractParam","hash160","wallet","getScriptHashFromAddress","string","integer","array","byteArray","u","hex2base64","str2hexstring","Error","base64ToAddress","str","getAddressFromScriptHash","base64ToHash160","reverseHex","base642hex","base64ToString","HexString","fromBase64","toAscii","toString","base64ToFixed8","BigInteger","fromNumber","toDecimal","val","parseFloat","base64ToDate","moment","unix","format","truncateDecimal","v","p","s","pow","trunc","Network","READ_LOG_FREQUENCY","getRPCClient","networkType","config","rpc","RPCClient","getRawTx","txid","a","rpcClient","console","log","getRawTransaction","rawTx","sleep","findNotificationFromTxId","txId","scriptHash","eventName","getNotificationsFromTxId","notifications","find","n","contract","eventname","getApplicationLog","appLog","executions","forEach","e","push","read","scripts","sb","ScriptBuilder","script","params","args","arg","emitAppCall","operation","invokeScript","fromHex","build","res","state","error","exception","duration","Promise","resolve","setTimeout","parseDeposit","stackItem","position","amount","lastClaimNo","createdAt","parseClaimPaginate","totalItems","totalPages","page","items","parseClaim","item","no","from","end","GAS","FTW","parseSnapshotItem","totalPositionPool","totalNeo","totalGas","winPosition","FTW_SCRIPT_HASH","CONST","FarmContract","contractHash","deposit","connectedWallet","account","WalletAPI","invoke","remove","createSnapshot","claim","changePosition","getStatus","neoBalance","ftwBalance","timeLeft","vote","snapshots","claims","stack","undefined","this","FARM_SCRIPT_HASH","RUNE_SCRIPT_HASH","RUNE_PRICE","RUNE_PHASE_FILTER","parseProperties","obj","base642utf8","NFTContract","mint","fromDecimal","withdrawFund","getTotalSupplyScript","getPropertiesScript","tokenId","getProperties","getTokensOfScript","ownerAddress","getTokensOf","metaList","iterator","meta","getTokens","DevWallet","name","version","website","compatibility","extra","currency","theme","chainId","defaultNetwork","networks","getNep17Balances","balances","balance","symbol","assethash","includes","extraSystemFee","getVersion","txObj","sign","protocol","sendRawTransaction","JSON","stringify","RPC","Transaction","networkFee","systemFee","nodeUrl","Account","senderAddress","getBlockCount","currentHeight","createScript","signers","scopes","tx","WitnessScope","CalledByEntry","transaction","validUntilBlock","calculateNetworkFee","calculateSystemFee","fee","add","invokeFunction","PolicyContract","invokeFunctionResponse","feePerByte","transactionByteSize","serialize","witnessProcessingFee","mul","gasconsumed","balanceCheck","sender","transferScript","gasBalance","requiredGas","transferTokenBalance","Fixed8","fromRawNumber","toNumber","transferAmount","walletType","O3Wallet","instance","neo3Dapi","getProvider","provider","getAccount","getNetworks","getBalance","contracts","NeoLine","NEOLineN3","Init","instance2","NEOLine","Dev","init","description","currentNetwork","NeonWallet","submittedTx","method","LocalStorage","addTransaction","list","CONNECTED_WALLET","TRANSACTIONS","NETWORK","validated","validateConnectedWallet","store","set","has","window","dispatchEvent","Event","transactions","get","status","initStorage","supportContracts","getTransactions","validatedTx","removeTransaction","getNetwork","setNetwork","getWallet","clearTransaction","WalletContext","WalletContextProvider","isWalletModalActive","setWalletModalActive","options","useLocalStorage","setConnectedWallet","setInvokeScript","pendingTransactions","setPendingTransactions","connectWallet","setWallet","toast","message","useDevWallet","openWalletModal","closeWalletModal","disConnectWallet","removeWallet","doInvoke","closeInvoke","addPendingTransaction","removePendingTransaction","filter","switchNetwork","useWallet","FARM_PATH","GALLERY_PATH","TOURNAMENT_PATH","SMITH_PATH","COLLECTION_PATH","MENU","path","PendingTransaction","checkTxid","className","pointerEvents","loading","size","getWalletIcon","WalletDropdown","setActive","refresh","disconnected","addEventListener","removeEventListener","Constants","EventName","ACCOUNT_CHANGED","NETWORK_CHANGED","DISCONNECTED","onClick","utils","id","role","to","NetworkSwitch","networkList","confirm","Header","justifyContent","marginLeft","route","activeClassName","href","WalletList","_wallet","alt","AssetCard","Runes","setTokens","setError","fetchContractStatus","flexFlow","Wallet","WalletSidebar","openFromRight","top","showNav","onHideNav","PageLayout","ModalCard","onClose","isLoading","React","$","addClass","removeClass","zIndex","TransactionSubmitted","ActionModal","setAmount","setPosition","setTxid","onDeposit","Modal","onChange","target","autoFocus","decimalScale","inputMode","onValueChange","thousandSeparator","suffix","allowLeadingZeros","disabled","SnapshotCountdown","onCreateSnapshot","CreateSnapshotBtn","date","Date","now","renderer","completed","hours","minutes","seconds","SnapshotCard","SnapshotList","contractStatus","NotifyError","msg","MyPosition","lastSnapshotNo","onCancel","onClaim","onPositionChange","isClaimable","Pool","CancelModal","Claims","PositionModal","currentPosition","tempTime","Farm","production","setRoute","modalActive","setModalActive","cancelModalActive","setCancelModalActive","claimModalActive","setClaimModalActive","positionModalActive","setPositionModalActive","setContractStatus","onClaimModalActive","About","ClaimModal","PropertiesModal","setItem","setLoading","phase","luck","image","owner","MyCollection","tokens","propertiesModalActive","setPropertiesModalActive","token","Banner","onMint","onFilterChange","display","ENDPOINT","RestAPI","endpoint","fetchResult","fetch","json","Gallery","setFilter","getRunes","SidebarNav","MobileMenuSlider","Home","vantaEffect","setVantaEffect","myRef","useRef","DOTS","el","current","mouseControls","touchControls","gyroControls","minHeight","minWidth","backgroundColor","destroy","alignItems","autoPlay","loop","ref","SMITH_SCRIPT_HASH","parseRecord","contractOwner","decimals","totalSupply","author","SmithContract","create","contractName","records","values","setValues","handleValueChange","max","allowNegative","ContractCard","data","Smith","setStatus","isActionModalActive","setActionModalActive","ARENA_PATH","ARENA_LIST","ArenaHome","backgroundImage","backgroundSize","backgroundPosition","arena","TOURNAMENT_SCRIPT_HASH","ADMIN_FOR_PLAY","parsePlayer","tokenHash","parseGame","gameNo","tournamentTree","champion","nonce","betsOnChampion","totalBets","rollover","championPrize","calculateClaimableAmount","history","betAmount","totalAmount","ownershipPercentage","TournamentContract","register","arenaNo","play","leave","bet","getPlayers","currentPage","getGameHeight","getBetAmount","championTokenId","script1","isClaimed","getCurrentPrize","location","useLocation","prize","setPrize","fetchBetAmount","pathname","DisplayRuneWithProperties","setToken","PlayerModal","player","onBet","onLeave","gameOwner","NFTListModal","onRegister","RegisterButton","playerCount","Players","playerModalActive","setPlayerModalActive","players","setPlayers","onPlayerModalActive","NFTDetailModal","rune","ClaimButton","HistoryTable","onReplay","fight","aPhase","aLuck","bPhase","bLuck","compareLuck","chunks","arr","slice","TournamentTree","champ","tree","capacity","stage","winners","match","rounds","reverse","winner","opacity","Replay","gameHistory","left","PlayButton","onPlay","History","setPage","nftModalActive","setNftModalActive","replayModalActive","setReplayModalActive","setHistory","onNFTModalActive","fetchHistory","game","pages","_page","Arena","exact","component","Tournament","ArenaMenu","App","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf322681.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n// import toast from \"react-hot-toast\";\n\ninterface IAppContext {\n  sidebarStatus: boolean;\n  walletSidebarStatus: boolean;\n  openSidebar: () => void;\n  closeSidebar: () => void;\n  toggleSidebar: () => void;\n  toggleWalletSidebar: () => void;\n}\n\nexport const AppContext = createContext({} as IAppContext);\n\nexport const AppCContextProvider = (props: { children: any }) => {\n  const [sidebarStatus, setSidebarStatus] = useState(false);\n  const [walletSidebarStatus, setWalletSidebarStatus] = useState(false);\n  const openSidebar = () => setSidebarStatus(true);\n  const closeSidebar = () => setSidebarStatus(false);\n  const toggleSidebar = () => {\n    if (walletSidebarStatus) {\n      setWalletSidebarStatus(false);\n    }\n    setSidebarStatus(!sidebarStatus);\n  };\n  const toggleWalletSidebar = () => {\n    if (sidebarStatus) {\n      setSidebarStatus(false);\n    }\n    setWalletSidebarStatus(!walletSidebarStatus);\n  };\n\n  const contextValue = {\n    sidebarStatus,\n    openSidebar,\n    closeSidebar,\n    toggleSidebar,\n    walletSidebarStatus,\n    toggleWalletSidebar,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => useContext(AppContext);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\n\ninterface IDisplayRandomRuneProps {\n  width: string;\n  height: string;\n  isActive?: boolean;\n}\nconst DisplayRandomRune = ({\n  width,\n  height,\n  isActive,\n}: IDisplayRandomRuneProps) => {\n  const [colors, setColors] = useState(getColors());\n  const bg = \"rgb(\" + colors[0] + \",\" + colors[6] + \",\" + colors[12] + \")\";\n  const dot1 = \"rgb(\" + colors[1] + \",\" + colors[7] + \",\" + colors[13] + \")\";\n  const dot2 = \"rgb(\" + colors[2] + \",\" + colors[8] + \",\" + colors[14] + \")\";\n  const dot3 = \"rgb(\" + colors[3] + \",\" + colors[9] + \",\" + colors[15] + \")\";\n  const dot4 = \"rgb(\" + colors[4] + \",\" + colors[10] + \",\" + colors[16] + \")\";\n  const body = \"rgb(\" + colors[5] + \",\" + colors[11] + \",\" + colors[17] + \")\";\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    if (isActive) {\n      const interval = setInterval(() => {\n        setColors(getColors());\n      }, 2000);\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  return (\n    <img style={{ width, height }} src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default DisplayRandomRune;\n","import React from \"react\";\nimport DisplayRandomRune from \"./DisplayRandomRune\";\n\nconst Logo = () => {\n  return (\n    <>\n      {/*<img*/}\n      {/*  src={\"/logo/FTW.png\"}*/}\n      {/*  height=\"40px\"*/}\n      {/*/>*/}\n      <DisplayRandomRune width=\"36px\" height=\"36px\" />\n    </>\n  );\n};\n\nexport default Logo;\n","import { CONST as NEON_CONST } from \"@cityofzion/neon-core\";\nimport { INetworkType } from \"../network\";\nimport { IWalletType } from \"../wallet/interfaces\";\n\n/* Wallets */\nexport const O3 = \"O3\";\nexport const NEO_LINE = \"NEO_LINE\";\nexport const DEV = \"DEV\";\nexport const WALLET_LIST: {\n  label: string;\n  key: IWalletType;\n}[] = [\n  {\n    label: \"Dev\",\n    key: DEV,\n  },\n  {\n    label: \"NEO Line\",\n    key: NEO_LINE,\n  },\n  {\n    label: \"O3\",\n    key: O3,\n  },\n];\n\n/* Network types */\nexport const PRIVATENET = \"N3PrivateNet\";\nexport const TESTNET = \"N3TestNet\";\nexport const MAINNET = \"N3MainNet\";\n\n/* Network configs */\nexport const PRIVATE_CONFIG = {\n  label: \"privateNet\",\n  url: \"http://127.0.0.1:50012\",\n};\n\nexport const TESTNET_CONFIG = {\n  label: \"N3TestNet\",\n  // url: \"https://testnet1.neo.coz.io:443\",\n  url: \"https://testnet2.neo.coz.io:443\",\n};\n\nexport const MAINNET_CONFIG = {\n  label: \"N3MainNet\",\n  url: \"https://n3seed2.ngd.network:10332\",\n};\n\n/* Contract hashes */\nexport const GAS_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.GasToken;\nexport const NEO_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.NeoToken;\n\nexport const TOKEN_LIST = (network: INetworkType) => [\n  NEO_SCRIPT_HASH,\n  GAS_SCRIPT_HASH,\n  // RUNE_SCRIPT_HASH[network]\n];\n\n/* Dev wallet */\nexport const DEV_WALLET_PRIVATE_KEY =\n  \"7b5d7fda53932ed9d43eb848dd521455767a4d40b5a994e6f351605e5a4ce26a\";\n","import { sc, u, wallet } from \"@cityofzion/neon-core\";\nimport moment from \"moment\";\n\nexport const truncateAddress = (address: string) => {\n  return `${address.substring(0, 4)}...${address.substr(address.length - 2)}`;\n};\n\n/**\n * It converts contract call params for dev wallet. Depending on 3rd wallet params.\n * @param param\n */\nexport const convertContractCallParam = (param: any) => {\n  switch (param.type) {\n    case \"Address\":\n      return sc.ContractParam.hash160(\n        wallet.getScriptHashFromAddress(param.value)\n      );\n    case \"Hash160\":\n      return sc.ContractParam.hash160(param.value);\n    case \"String\":\n      return sc.ContractParam.string(param.value);\n    case \"Integer\":\n      return sc.ContractParam.integer(param.value);\n    case \"Array\":\n      return sc.ContractParam.array(\n        ...param.value.map((i: any) => convertContractCallParam(i))\n      );\n    case \"ByteArray\":\n      return sc.ContractParam.byteArray(\n        u.hex2base64(u.str2hexstring(param.value))\n      );\n    default:\n      throw new Error(\"No support param\");\n  }\n};\n\nexport const base64ToAddress = (str: string) =>\n  wallet.getAddressFromScriptHash(base64ToHash160(str));\n\nexport const base64ToHash160 = (str: string) => u.reverseHex(u.base642hex(str));\n\nexport const base64ToString = (str: string) =>\n  u.HexString.fromBase64(str).toAscii().toString();\n\nexport const base64ToFixed8 = (str: string) => {\n  const no = u.BigInteger.fromNumber(str).toDecimal(8);\n  return no;\n};\n\nexport const toDecimal = (val: string): number => {\n  return parseFloat(u.BigInteger.fromNumber(val).toDecimal(8).toString());\n};\n\n// export const toNumber = () => {\n//\n// }\n\nexport const base64ToDate = (str: string) =>\n  moment.unix(parseFloat(str) / 1000).format(\"lll\");\n\nexport function truncateDecimal(v, p) {\n  const s = Math.pow(10, p || 0);\n  return Math.trunc(s * v) / s;\n}\n","import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG,\n} from \"../consts\";\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport {\n  ApplicationLogJson,\n  GetRawTransactionResult,\n} from \"@cityofzion/neon-core/lib/rpc/Query\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n  private static readonly READ_LOG_FREQUENCY = 6000;\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static getRawTx = async (txid: string, network: INetworkType) => {\n    const rpcClient = Network.getRPCClient(network);\n    // Cycle\n    let rawTx: GetRawTransactionResult | undefined;\n    do {\n      try {\n      \tconsole.log(\"ping\")\n        rawTx = await rpcClient.getRawTransaction(txid, true);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!rawTx);\n\n    return rawTx;\n  };\n\n  static findNotificationFromTxId = async (\n    txId: string,\n    scriptHash: string,\n    eventName: string,\n    networkType: INetworkType\n  ) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(\n      txId,\n      networkType\n    );\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName\n    );\n  };\n\n  static getNotificationsFromTxId = async (\n    txId: string,\n    network: INetworkType\n  ) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[]\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    const res = await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    if (res.state === \"FAULT\") {\n      console.error(\"RPC read error\" + res);\n      throw new Error(res.exception ? res.exception : \"Network error\");\n    }\n    return res;\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","import { IFarmDepositRecord } from \"./interfaces\";\nimport { base64ToDate, base64ToFixed8, base64ToString } from \"../../../utils\";\n\nexport const parseDeposit = (\n  stackItem: any\n): IFarmDepositRecord | undefined => {\n  // TODO check if there no deposit\n  // if (!stackItem.value) return undefined;\n  return {\n    position: stackItem[0].value,\n    amount: stackItem[1].value,\n    lastClaimNo: stackItem[2].value,\n    createdAt: stackItem[3].value,\n  };\n};\n\nexport const parseClaimPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseClaim(stackItem[3].value),\n  };\n};\n\nexport const parseClaim = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      from: item.value[1].value,\n      end: item.value[2].value,\n      GAS: base64ToFixed8(item.value[3].value),\n      FTW: base64ToFixed8(item.value[4].value),\n      createdAt: base64ToDate(item.value[5].value),\n    };\n  });\n};\n\nexport const parseSnapshotPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSnapshotItem(stackItem[3].value),\n  };\n};\n\nconst parseSnapshotItem = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      totalPositionPool: item.value[1].value, // NEO amount\n      totalNeo: item.value[2].value, // NEO amount\n      totalGas: base64ToFixed8(item.value[3].value),\n      range: base64ToFixed8(item.value[4].value),\n      winPosition: item.value[5].value,\n      createdAt: base64ToDate(item.value[6].value),\n    };\n  });\n};\n","import { CONST } from \"../../../index\";\n\nexport const FTW_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\",\n  [CONST.TESTNET]: \"9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\",\n  [CONST.MAINNET]: \"9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20 \",\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { NEO_SCRIPT_HASH } from \"../../../consts\";\nimport { FARM_SCRIPT_HASH } from \"./consts\";\nimport { IFarmContractStatus } from \"./interfaces\";\nimport {\n  parseClaimPaginate,\n  parseDeposit,\n  parseSnapshotPaginate,\n} from \"./helpers\";\nimport { FTW_SCRIPT_HASH } from \"../nep17\";\nimport { base64ToFixed8 } from \"../../../utils\";\n\nexport class FarmContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FARM_SCRIPT_HASH[networkType];\n  }\n\n  deposit = async (\n    connectedWallet: IConnectedWallet,\n    amount: string,\n    position: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: amount,\n        },\n        {\n          type: \"Integer\",\n          value: parseFloat(position),\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  remove = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"removeFund\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  createSnapshot = async (\n    connectedWallet: IConnectedWallet\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"createSnapshot\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  claim = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  changePosition = async (\n    connectedWallet: IConnectedWallet,\n    position: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"changePosition\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Integer\",\n          value: position,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getStatus = async (\n    connectedWallet?: IConnectedWallet\n  ): Promise<IFarmContractStatus> => {\n    const neoBalance = {\n      operation: \"balanceOf\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const ftwBalance = {\n      operation: \"balanceOf\",\n      scriptHash: FTW_SCRIPT_HASH[this.network],\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const timeLeft = {\n      operation: \"timeLeft\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const interval = {\n      operation: \"getSnapshotInterval\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const range = {\n      operation: \"getRange\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const vote = {\n      operation: \"getVote\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const snapshots = {\n      operation: \"getSnapshots\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n\n    const scripts = [\n      neoBalance,\n      ftwBalance,\n      timeLeft,\n      interval,\n      range,\n      vote,\n      snapshots,\n    ];\n\n    if (connectedWallet) {\n      const deposit = {\n        operation: \"getDeposit\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            type: \"Address\",\n            value: connectedWallet.account.address,\n          },\n        ],\n      };\n      const claims = {\n        operation: \"getClaims\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            // @ts-ignore\n            type: \"Address\",\n            // @ts-ignore\n            value: connectedWallet.account.address,\n          },\n          {\n            type: \"Integer\",\n            value: 1,\n          },\n        ],\n      };\n      scripts.push(deposit);\n      scripts.push(claims);\n    }\n\n    const res = await Network.read(this.network, scripts);\n    return {\n      neoBalance: res.stack[0].value as string,\n      ftwBalance: base64ToFixed8(res.stack[1].value as string),\n      timeLeft: res.stack[2].value as string,\n      interval: res.stack[3].value as string,\n      range: res.stack[4].value as string,\n      vote: res.stack[5].value as string,\n      snapshots: parseSnapshotPaginate(res.stack[6].value),\n      deposit:\n        connectedWallet && res.stack[7].value\n          ? parseDeposit(res.stack[7].value)\n          : undefined,\n      claims:\n        connectedWallet && res.stack[8].value\n          ? parseClaimPaginate(res.stack[8].value)\n          : undefined,\n    };\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const RUNE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.TESTNET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.MAINNET]: \"bebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\",\n};\n\nexport const RUNE_PRICE = {\n  [CONST.PRIVATENET]: \"10\",\n  [CONST.TESTNET]: \"0.1\", // Testnet mint is cheaper than mainnet\n  [CONST.MAINNET]: \"10\",\n};\n\nexport const RUNE_PHASE_FILTER = [\n  \"All\",\n  \"Fire\",\n  \"Water\",\n  \"Wood\",\n  \"Earth\",\n  \"Metal\",\n  \"Dark\",\n  \"Light\",\n];\n","import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { sc, u } from \"@cityofzion/neon-core\";\nimport { GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { RUNE_SCRIPT_HASH, RUNE_PRICE } from \"./consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { IRuneMeta } from \"./interfaces\";\nimport { parseProperties } from \"./helpers\";\n\nexport class NFTContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = RUNE_SCRIPT_HASH[networkType];\n  }\n\n  mint = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(\n            RUNE_PRICE[this.network],\n            8\n          ).toString(),\n        },\n        {\n          type: \"String\",\n          value: \"1\",\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      \"0.01\"\n    );\n  };\n\n  withdrawFund = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"withdrawFund\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getTotalSupplyScript = (): sc.ContractCallJson => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"totalSupply\",\n      args: [],\n    };\n  };\n\n  getPropertiesScript = (tokenId: string) => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n  };\n\n  getProperties = async (tokenId: string): Promise<IRuneMeta> => {\n    const script = this.getPropertiesScript(tokenId);\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseProperties(res.stack);\n  };\n\n  getTokensOfScript = (ownerAddress: string) => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = this.getTokensOfScript(ownerAddress);\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      const meta = await this.getProperties(tokenId);\n      // @ts-ignore\n      metaList.push({ tokenId, ...meta });\n    }\n    return metaList;\n  };\n\n  getTokens = async (): Promise<string[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokens\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].iterator.map((item) => {\n      return u.HexString.fromBase64(item.value as string).toAscii();\n    });\n  };\n}\nexport { RUNE_SCRIPT_HASH } from \"./consts\";\n","import { CONST } from \"../../../index\";\n\nexport const BANK_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.TESTNET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.MAINNET]: \"\",\n};\n","import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\n// tslint:disable-next-line:no-submodule-imports\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpcClient = Network.getRPCClient(network);\n    const res = await rpcClient.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      let amount;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n        amount = u.BigInteger.fromNumber(item.amount).toDecimal(8).toString();\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n        amount = item.amount;\n      }\n      balances.push({\n        contract: item.assethash,\n        amount,\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    network: INetworkType,\n    invokeScript: sc.ContractCallJson,\n    extraSystemFee?: string\n  ) {\n    const rpcClient = Network.getRPCClient(network);\n    const version: any = await rpcClient.getVersion();\n    const txObj = await DevWallet.build(\n      rpcClient,\n      invokeScript,\n      DevWallet.account.address,\n      extraSystemFee\n    );\n    txObj.sign(DevWallet.account, version.protocol.network);\n    const txid = await rpcClient.sendRawTransaction(txObj);\n    // tslint:disable-next-line:no-console\n    console.log(\n      JSON.stringify(\n        {\n          RPC: rpc,\n          Transaction: txObj,\n          Network: version,\n          \"Network Fee\": txObj.networkFee.toDecimal(8).toString(),\n          \"System Fee\": txObj.systemFee.toDecimal(8).toString(),\n        },\n        null,\n        4\n      )\n    );\n    return {\n      txid,\n      nodeUrl: rpcClient.url,\n    };\n  }\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson,\n    senderAddress: string,\n    extraSystemFee?: string\n    // cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n    // @ts-ignore\n    invokeScript.args = invokeScript.args.map((param: any) =>\n      convertContractCallParam(param)\n    );\n    const script = sc.createScript({ ...invokeScript });\n\n    const signers = [\n      {\n        account: wallet.getScriptHashFromAddress(senderAddress),\n        scopes: tx.WitnessScope.CalledByEntry,\n      },\n    ];\n    // if (cosignerAddress) {\n    //   signers.push({\n    //     account: wallet.getScriptHashFromAddress(cosignerAddress),\n    //     scopes: tx.WitnessScope.Global,\n    //   });\n    // }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    console.log(systemFee);\n    if (extraSystemFee) {\n      const fee = u.BigInteger.fromDecimal(extraSystemFee, 8).toString();\n      console.log(fee);\n      transaction.systemFee = systemFee.add(parseFloat(fee));\n    }\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","import neo3Dapi from \"neo3-dapi\";\nimport { ITransaction, IWalletType } from \"./interfaces\";\nimport { DEV, NEO_LINE, O3, WALLET_LIST } from \"../consts\";\nimport { DevWallet } from \"./dev-wallet\";\nimport { tx, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { INetworkType } from \"../network\";\nimport { LocalStorage } from \"../local-storage\";\nimport moment from \"moment\";\n\nexport class WalletAPI {\n  walletType: IWalletType;\n\n  constructor(walletType: IWalletType) {\n    this.walletType = walletType;\n  }\n\n  static list = WALLET_LIST;\n\n  private O3Wallet = async () => {\n    const instance = neo3Dapi;\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const network = await instance.getNetworks();\n    const balances = await instance.getBalance(\n      {\n        params: {\n          address: account.address,\n          contracts: [],\n        },\n      },\n      network.defaultNetwork\n    );\n    // TODO: Need to some sort of validation for balances in case wallet doesn't have any address?\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private NeoLine = async () => {\n    // @ts-ignore\n    const instance = new NEOLineN3.Init();\n    // @ts-ignore\n    // NEOLineN3 doesn't have getNetworks function\n    const instance2 = new NEOLine.Init();\n    const network = await instance2.getNetworks();\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance({\n      params: {\n        address: account.address,\n        contracts: [],\n      },\n    });\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private Dev = async (defaultNetwork: INetworkType) => {\n    const instance = DevWallet;\n    const network = await instance.getNetworks(defaultNetwork);\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance(defaultNetwork);\n    return { instance, provider, account, network, balances };\n  };\n\n  /**\n   * TODO: Remove dev wallet when 3rd party has privatenet support\n   * @param defaultNetwork\n   */\n  init = async (defaultNetwork: INetworkType): Promise<any> => {\n    let wallet;\n    try {\n      switch (this.walletType) {\n        case O3:\n          wallet = await this.O3Wallet();\n          break;\n        case NEO_LINE:\n          wallet = await this.NeoLine();\n          break;\n        case DEV:\n          wallet = await this.Dev(defaultNetwork);\n          break;\n      }\n      return {\n        key: this.walletType,\n        ...wallet,\n      };\n    } catch (e: any) {\n      throw new Error(e.description);\n    }\n  };\n\n  /* Control signing and send transaction. TODO:Need to improve type hardcoding later */\n  invoke = async (\n    currentNetwork: INetworkType,\n    senderAddress: string,\n    invokeScript: any,\n    extraSystemFee?: string\n  ): Promise<string> => {\n    const { instance, network } = await this.init(currentNetwork);\n    if (network.defaultNetwork !== currentNetwork) {\n      throw new Error(\n        \"Your wallet's network doesn't match with the app network setting.\"\n      );\n    }\n    try {\n      let res;\n      if (this.walletType === DEV) {\n        res = await instance.invoke(\n          currentNetwork,\n          invokeScript,\n          extraSystemFee\n        );\n      } else {\n        invokeScript.signers = [\n          {\n            account: NeonWallet.getScriptHashFromAddress(senderAddress),\n            scopes: tx.WitnessScope.CalledByEntry,\n          },\n        ];\n        if (extraSystemFee) {\n          invokeScript.extraSystemFee = extraSystemFee;\n        }\n        res = await instance.invoke(invokeScript);\n      }\n      const submittedTx: ITransaction = {\n        network,\n        wallet: this.walletType,\n        txid: res.txid,\n        contractHash: invokeScript.scriptHash,\n        method: invokeScript.operation,\n        args: invokeScript.args,\n        createdAt: moment().format(\"MMMM Do YYYY, h:mm:ss a\"),\n      };\n      LocalStorage.addTransaction(submittedTx);\n      return res.txid;\n    } catch (e: any) {\n      // TODO: Need to improve dev wallet error handling as dapi standard.\n      if (e.description) {\n        throw new Error(e.description);\n      }\n      throw e;\n    }\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const FARM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\",\n  [CONST.TESTNET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\", // 11/26\n  [CONST.MAINNET]: \"\",\n};\n","import store from \"store2\";\nimport { IConnectedWallet, ITransaction } from \"../wallet/interfaces\";\nimport { FARM_SCRIPT_HASH } from \"../contracts/ftw/farm/consts\";\nimport { RUNE_SCRIPT_HASH } from \"../contracts\";\nimport { MAINNET } from \"../consts\";\nimport { INetworkType } from \"../network\";\n\nconst CONNECTED_WALLET = \"CONNECTED_WALLET\";\nconst TRANSACTIONS = \"TRANSACTIONS\";\nconst NETWORK = \"NETWORK\";\n\nexport class LocalStorage {\n  public static initStorage = (network: string): ITransaction[] => {\n    const supportContracts = [\n      FARM_SCRIPT_HASH[network],\n      RUNE_SCRIPT_HASH[network],\n    ];\n    const transactions = LocalStorage.getTransactions();\n    const validatedTx: ITransaction[] = [];\n    transactions.forEach((tx) => {\n      if (supportContracts.includes(tx.contractHash)) {\n        validatedTx.push(tx);\n      } else {\n        LocalStorage.removeTransaction(tx);\n      }\n    });\n    return validatedTx;\n  };\n\n  public static getNetwork = () => {\n    return store.get(NETWORK) ? store.get(NETWORK) : MAINNET;\n  };\n\n  public static setNetwork = (network: INetworkType) => {\n    return store.set(NETWORK, network);\n  };\n\n  public static getWallet = (): IConnectedWallet | undefined =>\n    validateConnectedWallet(store.get(CONNECTED_WALLET));\n\n  public static setWallet(connectedWallet: IConnectedWallet) {\n    const validated = validateConnectedWallet(connectedWallet);\n    store.set(CONNECTED_WALLET, validated);\n  }\n\n  public static removeWallet() {\n    store.remove(CONNECTED_WALLET);\n  }\n\n  public static getTransactions = (): ITransaction[] =>\n    store.has(TRANSACTIONS) ? store.get(TRANSACTIONS) : [];\n\n  public static addTransaction(tx: ITransaction) {\n    if (store.has(TRANSACTIONS)) {\n      store.add(TRANSACTIONS, tx);\n    } else {\n      store.set(TRANSACTIONS, [tx]);\n    }\n    window.dispatchEvent(new Event(\"transactions\"));\n  }\n\n  public static updatePendingTransaction(txId: string) {\n    let transactions = store.get(TRANSACTIONS);\n    transactions = transactions.map((tx) => {\n      if (tx.txid === txId) {\n        tx.status = \"SUBMITTED\";\n      }\n      return tx;\n    });\n    store.set(TRANSACTIONS, transactions);\n  }\n\n  public static removeTransaction = (tx: ITransaction) =>\n    store.remove(TRANSACTIONS, tx);\n\n  public static clearTransaction = () => store.set(TRANSACTIONS, []);\n}\n\nconst validateConnectedWallet = (connectedWallet?: IConnectedWallet) => {\n  if (\n    !connectedWallet ||\n    !connectedWallet.account ||\n    !connectedWallet.provider ||\n    !connectedWallet.network\n  ) {\n    return undefined;\n  }\n  return connectedWallet;\n};\n//\n// const validateTransaction = (connectedWallet?: IConnectedWallet) => {\n//   if (\n//     !connectedWallet ||\n//     !connectedWallet.account ||\n//     !connectedWallet.provider ||\n//     !connectedWallet.network\n//   ) {\n//     return undefined;\n//   }\n//   return connectedWallet;\n// };\n","import { ContextOptions, IWalletStates } from \"./interfaces\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { IConnectedWallet, IWalletType } from \"../neo/wallet/interfaces\";\nimport { LocalStorage } from \"../neo/local-storage\";\nimport { sc } from \"@cityofzion/neon-core\";\nimport { WalletAPI } from \"../neo/wallet\";\nimport toast from \"react-hot-toast\";\nimport { INetworkType } from \"../neo/network\";\n\n// tslint:disable-next-line:no-object-literal-type-assertion\nexport const WalletContext = createContext({} as IWalletStates);\nexport const WalletContextProvider = (props: {\n  options: ContextOptions;\n  children: any;\n}) => {\n  const [network, setNetwork] = useState(LocalStorage.getNetwork());\n\n  const [isWalletModalActive, setWalletModalActive] = useState(false);\n\n  const [connectedWallet, setConnectedWallet] = useState<\n    IConnectedWallet | undefined\n  >(props.options.useLocalStorage ? LocalStorage.getWallet() : undefined);\n\n  const [invokeScript, setInvokeScript] = useState<\n    sc.ContractCallJson | undefined\n  >();\n\n  // const [transactions, setTransactions] = useState(\n  //   props.options.useLocalStorage ? LocalStorage.initStorage(network) : []\n  // );\n\n  const [pendingTransactions, setPendingTransactions] = useState<string[]>([]);\n\n  const openWalletModal = () => setWalletModalActive(true);\n\n  const closeWalletModal = () => setWalletModalActive(false);\n\n  const connectWallet = async (walletType: IWalletType) => {\n    try {\n      const res = await new WalletAPI(walletType).init(network);\n      setConnectedWallet(res);\n      if (props.options.useLocalStorage) {\n        LocalStorage.setWallet(res);\n      }\n      setWalletModalActive(false);\n    } catch (e: any) {\n      toast.error(e.message);\n    }\n  };\n\n  const disConnectWallet = () => {\n    LocalStorage.removeWallet();\n    setConnectedWallet(undefined);\n  };\n\n  const doInvoke = (args: sc.ContractCallJson) => {\n    if (isWalletModalActive) setWalletModalActive(false);\n    setInvokeScript(args);\n  };\n\n  const closeInvoke = () => setInvokeScript(undefined);\n\n  const addPendingTransaction = (txid: string) => {\n    setPendingTransactions([...pendingTransactions, txid]);\n  };\n\n  const switchNetwork = (val: INetworkType) => {\n    setNetwork(val);\n    LocalStorage.setNetwork(val);\n  };\n\n  const removePendingTransaction = (txid: string) => {\n    setPendingTransactions(pendingTransactions.filter((i) => i !== txid));\n  };\n\n  const contextValue: IWalletStates = {\n    useDevWallet: props.options.useDevWallet,\n    network,\n    invokeScript,\n    list: WalletAPI.list,\n    connectedWallet,\n    isWalletModalActive,\n    openWalletModal,\n    closeWalletModal,\n    connectWallet,\n    disConnectWallet,\n    doInvoke,\n    closeInvoke,\n    addPendingTransaction,\n    removePendingTransaction,\n    pendingTransactions,\n    switchNetwork,\n  };\n\n  return (\n    <WalletContext.Provider value={contextValue}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n};\nexport const useWallet = () => useContext(WalletContext);\n","import { MAINNET, PRIVATENET, TESTNET } from \"../packages/neo/consts\";\n\nexport const HOME_PATH = \"/\";\nexport const FARM_PATH = \"/gas\";\nexport const GALLERY_PATH = \"/NFT/gallery\";\nexport const TOURNAMENT_PATH = \"/arena\";\nexport const SMITH_PATH = \"/smith\";\nexport const COLLECTION_PATH = \"/NFT/collection\";\n\nexport const MENU = [\n  {\n    label: \"Rune\",\n    path: GALLERY_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n  {\n    label: \"Arena\",\n    path: TOURNAMENT_PATH,\n    network: [PRIVATENET, TESTNET],\n  },\n  {\n    label: \"Smith\",\n    path: SMITH_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n  {\n    label: \"GAS-FI\",\n    path: FARM_PATH,\n    network: [PRIVATENET, TESTNET],\n  },\n];\n","import React, { useEffect } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useWallet } from \"../../provider\";\nimport { Network } from \"../../neo/network\";\n\nconst PendingTransaction = () => {\n  const { network, pendingTransactions, removePendingTransaction } =\n    useWallet();\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        for (const txid of pendingTransactions) {\n          const res = await Network.getRawTx(txid, network);\n          removePendingTransaction(txid);\n        }\n      } catch (e: any) {\n        console.error(e);\n      }\n    }\n\n    if (pendingTransactions.length > 0) {\n      checkTxid();\n    }\n  }, [pendingTransactions]);\n  if (pendingTransactions.length === 0) return <></>;\n  return (\n    <div className=\"navbar-item pr-0\">\n      <div\n        style={{ pointerEvents: \"none\" }}\n        className=\"is-center button is-outlined is-rounded is-small\"\n      >\n        <ClipLoader loading={true} size={15} />\n        <span className=\"ml-2\">{`${pendingTransactions.length} Pending`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default PendingTransaction;\n","import { CONST } from \"../../neo\";\n\nexport const getWalletIcon = (key: string) => {\n  let svg = \"\";\n  switch (key){\n    case CONST.DEV:\n      svg = \"/dev.png\"\n      break;\n    case CONST.O3:\n      svg = \"/o3.svg\"\n      break;\n    case CONST.NEO_LINE:\n      svg = \"/neoline.svg\"\n      break;\n  }\n  return svg\n}\n","import React, { useEffect, useState } from \"react\";\nimport { utils } from \"../../packages/neo\";\nimport { IConnectedWallet } from \"../../packages/neo/wallet/interfaces\";\nimport { useWallet } from \"../../packages/provider\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport { COLLECTION_PATH } from \"../../consts\";\nimport { NavLink } from \"react-router-dom\";\nimport { NEO_LINE, O3 } from \"../../packages/neo/consts\";\nimport neo3Dapi from \"neo3-dapi\";\ninterface IWalletDropdownProps {\n  connectedWallet: IConnectedWallet;\n}\nconst WalletDropdown = ({ connectedWallet }: IWalletDropdownProps) => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n\n  const onActive = () => setActive(!isActive);\n\n  useEffect(() => {\n    const refresh = () => {\n      connectWallet(connectedWallet.key);\n    };\n    const disconnected = () => {\n      disConnectWallet();\n    };\n\n    if (connectedWallet.key === NEO_LINE) {\n      window.addEventListener(\"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.NETWORK_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.DISCONNECTED\", disconnected);\n      return () => {\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.NETWORK_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.DISCONNECTED\",\n          disconnected\n        );\n      };\n    }\n    if (connectedWallet.key === O3) {\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.DISCONNECTED,\n        disconnected\n      );\n\n      return () => {\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.DISCONNECTED,\n          disconnected\n        );\n      };\n    }\n  }, []);\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className=\"button is-small is-black is-rounded\"\n          aria-controls=\"dropdown-wallet\"\n        >\n          <span>{utils.truncateAddress(connectedWallet.account.address)}</span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <img src={getWalletIcon(connectedWallet.key)} />\n              </div>\n              <div className=\"media-content\">\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </div>\n            </div>\n          </div>\n          <hr className=\"dropdown-divider\" />\n          <NavLink\n            className=\"dropdown-item has-text-dark\"\n            onClick={() => setActive(false)}\n            to={COLLECTION_PATH}\n          >\n            My NFT\n          </NavLink>\n          <hr className=\"dropdown-divider\" />\n          <a onClick={handleDisconnectWallet} className=\"dropdown-item\">\n            Disconnect\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React, { useState } from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, PRIVATENET, TESTNET } from \"../../packages/neo/consts\";\nimport { INetworkType } from \"../../packages/neo/network\";\n\nconst NetworkSwitch = () => {\n  const [isActive, setActive] = useState(false);\n  const { network, switchNetwork } = useWallet();\n  const onActive = () => setActive(!isActive);\n  const handleNetworkChange = (val: string) => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(\"Are you sure to switch network?\")) {\n      switchNetwork(val as INetworkType);\n      setActive(false);\n    }\n  };\n  const networkList = [PRIVATENET, TESTNET, MAINNET];\n\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className={`button is-small ${\n            network === MAINNET ? \"is-white\" : \"is-danger\"\n          }`}\n          aria-controls=\"dropdown-wallet\"\n        >\n          {network}\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {networkList.map((v) => {\n            if (\n              (process.env.NODE_ENV !== \"development\" && v === PRIVATENET) ||\n              network === v\n            )\n              return <></>;\n            return (\n              <div key={v} className=\"dropdown-item\">\n                <a onClick={() => handleNetworkChange(v)}>Switch to {v}</a>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaBars, FaWallet } from \"react-icons/fa\";\nimport Logo from \"./Logo\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { useWallet } from \"../../packages/provider\";\nimport { utils } from \"../../packages/neo\";\nimport { COLLECTION_PATH, MENU } from \"../../consts\";\nimport PendingTransaction from \"../../packages/ui/PendingTransaction\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport NetworkSwitch from \"./NetworkSwitch\";\n\nconst Header = () => {\n  const { toggleSidebar, toggleWalletSidebar } = useApp();\n  const { connectedWallet, network, disConnectWallet } = useWallet();\n  const [isActive, setActive] = useState(false);\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    disConnectWallet();\n  };\n  return (\n    <nav\n      className=\"navbar has-shadow is-white is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ height: \"52px\" }}\n    >\n      <div className=\"container\">\n        <div\n          className=\"navbar-brand\"\n          style={{ justifyContent: \"space-between\" }}\n        >\n          <div\n            role=\"button\"\n            className=\"navbar-burger is-center is-hidden-tablet\"\n            style={{ marginLeft: 0 }}\n            onClick={toggleSidebar}\n          >\n            <FaBars />\n          </div>\n          <Link className=\"has-text-white navbar-item is-center\" to=\"/\">\n            <Logo />\n          </Link>\n          <div\n            role=\"button\"\n            className={`navbar-burger is-center is-hidden-desktop`}\n            onClick={() => {\n              if (connectedWallet) {\n                setActive(!isActive);\n              } else {\n                toggleWalletSidebar();\n              }\n            }}\n            style={{ marginLeft: 0 }}\n          >\n            <FaWallet />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div\n            className={`navbar-menu  is-hidden-tablet ${\n              isActive && \"is-active\"\n            }`}\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item\">\n                <div className=\"media\">\n                  <div className=\"media-left\">\n                    <img src={getWalletIcon(connectedWallet.key)} />\n                  </div>\n                  <div className=\"media-content\">\n                    {utils.truncateAddress(connectedWallet.account.address)}\n                  </div>\n                </div>\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <Link\n                onClick={() => setActive(false)}\n                className=\"navbar-item has-text-dark\"\n                to={COLLECTION_PATH}\n              >\n                My NFT\n              </Link>\n              <hr className=\"dropdown-divider\" />\n              <a onClick={handleDisconnectWallet} className=\"navbar-item\">\n                Disconnect wallet\n              </a>\n            </div>\n          </div>\n        )}\n\n        <div className=\"navbar-menu ml-3\">\n          <div className=\"navbar-start\">\n            {MENU.map((route) => {\n              if (!route.network.includes(network)) return <></>;\n              return (\n                <NavLink\n                  key={route.label}\n                  activeClassName=\"is-active\"\n                  to={route.path}\n                  className=\"navbar-item\"\n                >\n                  <strong>{route.label}</strong>\n                </NavLink>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"navbar-end is-hidden-touch\">\n          <div className=\"navbar-item\">\n            <NetworkSwitch />\n          </div>\n          <PendingTransaction />\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              {connectedWallet ? (\n                <WalletDropdown connectedWallet={connectedWallet} />\n              ) : (\n                <button\n                  onClick={toggleWalletSidebar}\n                  className=\"button is-small is-black is-rounded\"\n                >\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown } from \"react-icons/all\";\nimport { useApp } from \"../../../common/hooks/use-app\";\nimport { useWallet } from \"../../provider\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletDropdown = () => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectedWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n  if (!connectedWallet) {\n    return (\n      <button className=\"button is-white \" onClick={() => setActive(!isActive)}>\n        <strong>Wallet</strong>\n      </button>\n    );\n  }\n  return (\n    <div className={`dropdown ${isActive && \"is-active\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-white\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu3\"\n          onClick={() => setActive(!isActive)}\n        >\n          <span className=\"icon is-small\">\n            <img src={getWalletIcon(connectedWallet.key)} />\n          </span>\n          <span>\n            <strong>Wallet</strong>\n          </span>\n          <span className=\"icon is-small\">\n            <FaAngleDown />\n            {/*<i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>*/}\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a\n            onClick={handleDisconnectWallet}\n            href=\"#\"\n            className=\"dropdown-item\"\n          >\n            Disconnect\n          </a>\n          {/*<hr className=\"dropdown-divider\"/>*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletList = () => {\n  const { connectWallet, list, useDevWallet } = useWallet();\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          if (!useDevWallet && _wallet.key === DEV) return false;\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} alt=\"React Logo\" />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n","import React from \"react\";\nimport { IBalance } from \"../../neo/wallet/interfaces\";\n\nconst AssetCard = (props: IBalance) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        <strong>{props.symbol}</strong>\n      </div>\n      <div className=\"media-content\"></div>\n      <div className=\"media-right has-text-right\">{props.amount}</div>\n    </div>\n  );\n};\n\nexport default AssetCard;\n","import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../neo/contracts\";\nimport { IRuneMeta } from \"../../neo/contracts/ftw/nft/interfaces\";\nimport { useWallet } from \"../../provider\";\nimport toast from \"react-hot-toast\";\nimport DisplayRune from \"../../../ui/pages/Gallery/DisplayRune\";\nimport DisplayRandomRune from \"../../../ui/components/DisplayRandomRune\";\nimport { IConnectedWallet } from \"../../neo/wallet/interfaces\";\n\ninterface IRunesProps {\n  connectedWallet: IConnectedWallet;\n}\nconst Runes = ({ connectedWallet }: IRunesProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  useState<IRuneMeta>();\n  const { network } = useWallet();\n  // const onPropertiesModalActive = (obj: IRuneMeta) => {\n  //   if (connectedWallet) {\n  //     setPropertiesModalActive(obj);\n  //   } else {\n  //     toast.error(\"Please connect wallet.\");\n  //   }\n  // };\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getTokens();\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet]);\n  return (\n    <div>\n      <div\n        style={{\n          flexFlow: \"wrap\",\n          // width: \"640px\",\n          // margin: \"0 auto\"\n        }}\n        className=\"is-flex\"\n      >\n        {/*{tokens.map((tokenId) => (*/}\n        {/*  <DisplayRune*/}\n        {/*    tokenId={tokenId}*/}\n        {/*    network={network}*/}\n        {/*    onClick={() => false}*/}\n        {/*  />*/}\n        {/*))}*/}\n        {/*<DisplayRandomRune width=\"64px\" height=\"64px\" />*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Runes;\n","import React, { useEffect } from \"react\";\nimport { utils } from \"../../neo\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport WalletList from \"./WalletList\";\nimport AssetCard from \"./AssetCard\";\nimport { useWallet } from \"../../provider\";\nimport Runes from \"./Runes\";\nimport { Network } from \"../../neo/network\";\n\nconst Wallet = (props) => {\n  const { connectedWallet } = useWallet();\n  return (\n    <>\n      <header className=\"level is-mobile p-3 is-marginless\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <WalletDropdown />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <small>\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </small>\n            </div>\n          </div>\n        )}\n      </header>\n      <hr className=\"m-0\" />\n      <section className=\"p-5\">\n        {connectedWallet ? (\n          <>\n            <div>\n              {connectedWallet &&\n                connectedWallet.balances.map((balance) => {\n                  return <AssetCard key={balance.symbol} {...balance} />;\n                })}\n            </div>\n            <Runes connectedWallet={connectedWallet} />\n          </>\n        ) : (\n          <WalletList />\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport Wallet from \"../../packages/ui/Wallet\";\nimport { useWallet } from \"../../packages/provider\";\n\nconst WalletSidebar = () => {\n  const { walletSidebarStatus, toggleWalletSidebar } = useApp();\n  const { connectedWallet } = useWallet();\n  if (connectedWallet) return <div></div>;\n  return (\n    <SideNav\n      openFromRight={true}\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={walletSidebarStatus}\n      onHideNav={toggleWalletSidebar}\n      children={<Wallet />}\n    />\n  );\n};\n\nexport default WalletSidebar;\n","import React from \"react\";\n\nconst PageLayout = (props) => {\n  return (\n    <section className=\"section\">\n      <div className=\"container\">{props.children}</div>\n    </section>\n  );\n};\n\nexport default PageLayout;\n","import React, { ReactElement } from \"react\";\nimport $ from \"jquery\";\n\ninterface IProps {\n  onClose: () => void;\n  children: ReactElement;\n  isLoading?: boolean;\n  error?: string;\n}\nconst ModalCard = ({ onClose, children, isLoading, error }: IProps) => {\n  React.useEffect(() => {\n    $(\"html\").addClass(\"is-clipped\");\n    return () => {\n      $(\"html\").removeClass(\"is-clipped\");\n    };\n  }, []);\n  return (\n    <div className=\"modal is-active\" style={{ zIndex: 99 }}>\n      <div className=\"modal-background\" onClick={onClose} />\n      <section className=\"modal-content\">\n        <div className=\"box\">\n          {isLoading ? <div>Loading</div> : error ? <div>Error</div> : children}\n        </div>\n      </section>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};\n\nexport default ModalCard;\n","import React from \"react\";\n\n/**\n * TODO: Better ux needed\n * @param props\n * @constructor\n */\ninterface ITransactionSuccessProps {\n  txid: string;\n  onClick: () => void;\n}\nconst TransactionSubmitted = ({ txid, onClick }: ITransactionSuccessProps) => {\n  return (\n    <div className=\"has-text-centered\">\n      <h1 className=\"title is-5\">Transaction submitted!</h1>\n      <p className=\"subtitle is-7\">{txid}</p>\n      <button onClick={onClick} className=\"button is-black\">\n        Close\n      </button>\n    </div>\n  );\n};\n\nexport default TransactionSubmitted;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport NumberFormat from \"react-number-format\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  onClose: () => void;\n}\nconst ActionModal = ({ range, onClose }: IActionModal) => {\n  const [amount, setAmount] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onDeposit = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).deposit(\n          connectedWallet,\n          amount,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">\n            {/*<img src={\"/neo_512_512.svg\"} />*/}\n            Deposit NEO\n          </h1>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Your position</label>\n                <div className=\"select is-fullwidth\">\n                  <select\n                    value={position}\n                    onChange={(e) => setPosition(e.target.value)}\n                  >\n                    <option value=\"\">Select your position</option>\n                    {_.range(0, range).map((i) => (\n                      <option key={i} value={i + 1}>\n                        {i + 1}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Amount</label>\n                <NumberFormat\n                  autoFocus={true}\n                  // ref={this.props, inputRef}\n                  decimalScale={0}\n                  inputMode=\"decimal\"\n                  className=\"input\"\n                  value={amount}\n                  onValueChange={(value) => {\n                    setAmount(value.value);\n                  }}\n                  thousandSeparator={true}\n                  suffix={\" NEO\"}\n                  allowLeadingZeros={false}\n                />\n              </div>\n            </div>\n          </div>\n          <button\n            onClick={onDeposit}\n            disabled={!position || !amount || parseFloat(amount) < 1}\n            className=\"button is-button is-black\"\n          >\n            Deposit\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default ActionModal;\n","import React from \"react\";\nimport Countdown from \"react-countdown\";\n\ninterface ISnapshotCountdownProps {\n  timeLeft: number;\n  onCreateSnapshot: () => void;\n}\nconst SnapshotCountdown = ({\n  timeLeft,\n  onCreateSnapshot,\n}: ISnapshotCountdownProps) => {\n  const CreateSnapshotBtn = () => (\n    <button onClick={onCreateSnapshot} className=\"button is-button is-black\">\n      Creat snapshot\n    </button>\n  );\n  if (timeLeft < 1) {\n    return <CreateSnapshotBtn />;\n  }\n  return (\n    <Countdown\n      date={Date.now() + timeLeft}\n      renderer={(props) => {\n        if (props.completed) {\n          return <CreateSnapshotBtn />;\n        } else {\n          return (\n            <span>\n              {props.hours}:{props.minutes}:{props.seconds}\n            </span>\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default SnapshotCountdown;\n","import React from \"react\";\nimport { IFarmSnapshot } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface ISnapshotListProps {\n  item: IFarmSnapshot;\n}\nconst SnapshotCard = ({ item }: ISnapshotListProps) => {\n  return (\n    <div key={item.createdAt} className=\"media\">\n      <div className=\"media-left\">#{item.no}</div>\n      <div className=\"media-content\">\n        Position: <span className=\"is-capitalized\">{item.winPosition}</span>\n        <br />\n        GAS: {item.totalGas}\n        <br />\n        {item.createdAt}\n      </div>\n    </div>\n  );\n};\n\nexport default SnapshotCard;\n","import React, { useState } from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\nimport SnapshotCard from \"./SnapshotCard\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCreateSnapshot = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).createSnapshot(\n          connectedWallet\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  if (!contractStatus) return <div></div>;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">Snapshots</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <SnapshotCountdown\n              timeLeft={parseFloat(contractStatus.timeLeft)}\n              onCreateSnapshot={onCreateSnapshot}\n            />\n          </div>\n        </div>\n      </div>\n\n      {contractStatus.snapshots.items.map((item) => (\n        <SnapshotCard key={item.no} item={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React from \"react\";\n\nconst NotifyError = ({ msg, onClose }) => {\n  if (!msg) return <></>;\n  return (\n    <div className=\"notification is-danger\">\n      <button onClick={onClose} className=\"delete\" />\n      {msg}\n    </div>\n  );\n};\n\nexport default NotifyError;\n","import React from \"react\";\nimport { IFarmDepositRecord } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface IMyPositionProps {\n  deposit?: IFarmDepositRecord;\n  lastSnapshotNo: string;\n  onCancel: () => void;\n  onPositionChange: () => void;\n  onClaim: () => void;\n}\nconst MyPosition = ({\n  deposit,\n  lastSnapshotNo,\n  onCancel,\n  onClaim,\n  onPositionChange,\n}: IMyPositionProps) => {\n  if (!deposit) return <div></div>;\n  const lastClaimNo = deposit.lastClaimNo ? parseFloat(deposit.lastClaimNo) : 0;\n  const isClaimable = parseFloat(lastSnapshotNo) > lastClaimNo;\n  return (\n    <>\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item is-block\">\n            <div className=\"\">\n              My position\n              <br />\n              <span className=\"is-capitalized\">\n                {deposit.position} / {deposit.amount} NEO\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"buttons\">\n            {!isClaimable && (\n              <button onClick={onPositionChange} className=\"button is-black\">\n                Change position\n              </button>\n            )}\n            <button onClick={onCancel} className=\"button is-light\">\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n      {isClaimable && (\n        <button onClick={onClaim} className=\"button is-primary is-fullwidth\">\n          Claim Reward\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default MyPosition;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport MyPosition from \"./MyPosition\";\n\ninterface IPoolProps {\n  contractStatus?: IFarmContractStatus;\n  onDeposit: () => void;\n  onCancel: () => void;\n  onPositionChange: () => void;\n  onClaim: () => void;\n}\nconst Pool = ({\n  contractStatus,\n  onDeposit,\n  onCancel,\n  onClaim,\n  onPositionChange,\n}: IPoolProps) => {\n  return (\n    <div className=\"\">\n      <div className=\"box\">\n        <div className=\"level\">\n          <div className=\"level-left\">\n            <div className=\"level-item is-block\">\n              <h1 className=\"title is-4 is-marginless\">Total</h1>\n            </div>\n          </div>\n          <div className=\"level-right\">\n            <div>\n              {contractStatus?.neoBalance} <strong>NEO</strong>\n              <br />\n              {contractStatus?.ftwBalance} <strong>FTW</strong>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {contractStatus && contractStatus.deposit ? (\n        <MyPosition\n          deposit={contractStatus.deposit}\n          lastSnapshotNo={contractStatus.snapshots.totalItems}\n          onCancel={onCancel}\n          onClaim={onClaim}\n          onPositionChange={onPositionChange}\n        />\n      ) : (\n        <button onClick={onDeposit} className=\"button is-primary is-fullwidth\">\n          Deposit\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Pool;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal, addPendingTransaction } =\n    useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).remove(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(txid);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm close</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Close my position\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).claim(connectedWallet);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm claim</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Claim my reward\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\n\ninterface IClaimsProps {\n  contractStatus?: IFarmContractStatus;\n  onClaim: () => void;\n}\nconst Claims = ({ contractStatus, onClaim }: IClaimsProps) => {\n  if (!contractStatus) return <div></div>;\n  if (!contractStatus.claims) return <div></div>;\n  if (!contractStatus.deposit) return <div></div>;\n  const lastClaimNo = contractStatus.deposit.lastClaimNo\n    ? parseFloat(contractStatus.deposit.lastClaimNo)\n    : 0;\n  const isClaimable =\n    parseFloat(contractStatus.snapshots.totalItems) > lastClaimNo;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">My Claims</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            {isClaimable && (\n              <button\n                onClick={onClaim}\n                className=\"button is-primary is-fullwidth\"\n              >\n                Claim Reward\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      {contractStatus.claims.items.length > 0 ? (\n        contractStatus.claims.items.map((item) => {\n          return (\n            <div key={item.createdAt} className=\"media\">\n              <div className=\"media-left\">#{item.no}</div>\n              <div className=\"media-content\">\n                Snapshots: {`${item.from} ~ ${item.end}`}\n                <br />\n                GAS: {item.GAS}\n                <br />\n                FTW: {item.FTW}\n                <br />\n                {item.createdAt}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>No claims to display</div>\n      )}\n    </div>\n  );\n};\n\nexport default Claims;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  currentPosition: string;\n  onClose: () => void;\n}\nconst PositionModal = ({ currentPosition, range, onClose }: IActionModal) => {\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onChange = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).changePosition(\n          connectedWallet,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-spaced\">Change your position</h1>\n          <p className=\"subtitle is-6\">\n            Your current position is <strong>{currentPosition}</strong>\n          </p>\n          <div className=\"field\">\n            <label className=\"label\">New position</label>\n            <div className=\"select is-fullwidth\">\n              <select\n                value={position}\n                onChange={(e) => setPosition(e.target.value)}\n              >\n                <option value=\"\">Select new position</option>\n                {_.range(0, range)\n                  .filter((i) => !(i + 1 === parseFloat(currentPosition)))\n                  .map((i) => (\n                    <option key={i} value={i + 1}>\n                      {i + 1}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <button\n            onClick={onChange}\n            disabled={!position}\n            className=\"button is-button is-black\"\n          >\n            Change\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PositionModal;\n","import React  from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport moment from \"moment\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  if (!contractStatus) return <div></div>;\n  const tempTime = moment.duration(contractStatus.interval);\n  const format = `Every ${\n    tempTime.hours() > 0\n      ? `${tempTime.hours()} hours ${tempTime.minutes()} mins`\n      : `${tempTime.minutes()} mins`\n  }`;\n  return (\n    <div className=\"\">\n      <h1 className=\"title is-4\">About</h1>\n      <h4 className=\"title is-6\">Current settings</h4>\n      <p className=\"subtitle is-6\">\n        Position range: {contractStatus.range}\n        <br />\n        Interval: {format}\n      </p>\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport ActionModal from \"./ActionModal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport toast from \"react-hot-toast\";\nimport SnapshotList from \"./SnapshotList\";\nimport NotifyError from \"../../components/NotifyError\";\nimport Pool from \"./Pool\";\nimport CancelModal from \"./CancelModal\";\nimport ClaimModal from \"./ClaimModal\";\nimport Claims from \"./Claims\";\nimport PositionModal from \"./PositionModal\";\nimport About from \"./About\";\nimport { TESTNET } from \"../../../packages/neo/consts\";\n\nconst Farm = () => {\n  // let location = useLocation();\n  const production = [TESTNET];\n  const [route, setRoute] = useState(\"POOL\");\n  const [modalActive, setModalActive] = useState(false);\n  const [cancelModalActive, setCancelModalActive] = useState(false);\n  const [claimModalActive, setClaimModalActive] = useState(false);\n  const [positionModalActive, setPositionModalActive] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [contractStatus, setContractStatus] = useState<IFarmContractStatus>();\n  const onActive = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onCancelModalActive = () => setCancelModalActive(true);\n  const onClaimModalActive = () => setClaimModalActive(true);\n  const onPositionChange = () => setPositionModalActive(true);\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new FarmContract(network).getStatus(connectedWallet);\n        setContractStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, route]);\n  if (!production.includes(network))\n    return (\n      <PageLayout>This smart contract is not support in {network}.</PageLayout>\n    );\n  return (\n    <PageLayout>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-half\">\n          <div className=\"box \">\n            <div className=\"tabs is-toggle\">\n              <ul>\n                <li className={route === \"POOL\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"POOL\")}>Pool</a>\n                </li>\n                {connectedWallet && contractStatus && contractStatus.deposit && (\n                  <li className={route === \"CLAIMS\" ? \"is-active\" : \"\"}>\n                    <a onClick={() => setRoute(\"CLAIMS\")}>Claims</a>\n                  </li>\n                )}\n                <li className={route === \"SNAPSHOTS\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"SNAPSHOTS\")}>Snapshots</a>\n                </li>\n                <li className={route === \"ABOUT\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"ABOUT\")}>About</a>\n                </li>\n              </ul>\n            </div>\n            <NotifyError msg={error} onClose={() => setError(\"\")} />\n            {route === \"POOL\" && (\n              <Pool\n                contractStatus={contractStatus}\n                onPositionChange={onPositionChange}\n                onDeposit={onActive}\n                onCancel={onCancelModalActive}\n                onClaim={onClaimModalActive}\n              />\n            )}\n            {route === \"SNAPSHOTS\" && (\n              <SnapshotList contractStatus={contractStatus} />\n            )}\n            {route === \"CLAIMS\" && (\n              <Claims\n                onClaim={onClaimModalActive}\n                contractStatus={contractStatus}\n              />\n            )}\n            {route === \"ABOUT\" && <About contractStatus={contractStatus} />}\n          </div>\n        </div>\n      </div>\n      {contractStatus && modalActive && (\n        <ActionModal\n          range={contractStatus.range}\n          onClose={() => setModalActive(false)}\n        />\n      )}\n      {contractStatus && contractStatus.deposit && positionModalActive && (\n        <PositionModal\n          currentPosition={contractStatus.deposit.position}\n          range={contractStatus.range}\n          onClose={() => setPositionModalActive(false)}\n        />\n      )}\n      {cancelModalActive && (\n        <CancelModal onClose={() => setCancelModalActive(false)} />\n      )}\n      {claimModalActive && (\n        <ClaimModal onClose={() => setClaimModalActive(false)} />\n      )}\n    </PageLayout>\n  );\n};\n\nexport default Farm;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\n\ninterface IPropertiesModal {\n  tokenId: string;\n  onClose: () => void;\n}\nconst PropertiesModal = ({ tokenId, onClose }: IPropertiesModal) => {\n  const [item, setItem] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getProperties(\n          tokenId.toString()\n        );\n        setItem(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network]);\n  return (\n    <Modal onClose={onClose}>\n      {isLoading ? (\n        <div>Loading the rune data from the chain..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <h1 className=\"title is-4\">{item.name}</h1>\n\n          <p className=\"subtitle is-7\">\n            <strong>Phase:</strong> {item.phase}, <strong>Luck:</strong>{\" \"}\n            {item.luck}\n          </p>\n          <figure className=\"image is-square\">\n            <img src={item.image} />\n          </figure>\n          <p className=\"subtitle is-7 has-text-right mt-3\">{item.owner}</p>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PropertiesModal;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport PropertiesModal from \"../Gallery/PropertiesModal\";\nimport { GALLERY_PATH } from \"../../../consts\";\nimport { Link } from \"react-router-dom\";\n\nconst MyCollection = () => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus(address: string) {\n      setError(\"\");\n      try {\n        const res = await new NFTContract(network).getTokensOf(address);\n        setTokens(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network]);\n  return (\n    <>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">My collection</h1>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"columns is-multiline\">\n            {tokens.length > 0 ? (\n              tokens.map((token) => (\n                <div className=\"column is-3\">\n                  <figure\n                    className=\"image\"\n                    onClick={() => onPropertiesModalActive(token.tokenId)}\n                  >\n                    <img src={token.image} />\n                  </figure>\n                </div>\n              ))\n            ) : (\n              <div className=\"column is-3\">\n                <div className=\"box\">\n                  <div className=\"block\">\n                    <p>You don't have any runes yet</p>\n                  </div>\n\n                  <Link className=\"button is-primary\" to={GALLERY_PATH}>\n                    Go Get Them\n                  </Link>\n                </div>\n                {/*<DisplayRandomRune width=\"100%\" height=\"100%\" />*/}\n              </div>\n            )}\n          </div>\n        )}\n      </PageLayout>\n      {/*<button onClick={onMint} className=\"button is-black\">Mint</button>*/}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MyCollection;\n","import React from \"react\";\nimport DisplayRandomRune from \"../../components/DisplayRandomRune\";\nimport {\n  RUNE_PHASE_FILTER,\n  RUNE_PRICE,\n} from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport { u } from \"@cityofzion/neon-core\";\ninterface IBannerProps {\n  network: INetworkType;\n  filter: string;\n  onMint: () => void;\n  onFilterChange: (val: string) => void;\n}\nconst Banner = ({ onMint, onFilterChange, filter, network }: IBannerProps) => {\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div>\n                <h1 className=\"title\">Forthewin Runes</h1>\n                <p className=\"subtitle\">Algorithms-generated lucky runes</p>\n\n                <div className=\"content is-small\">\n                  <p>\n                    <strong>Max supply</strong>\n                    <br />\n                    500 runes\n                  </p>\n                  <p>\n                    <strong>Attribute #1</strong>\n                    <br />\n                    Random phase (Dark, Light, Fire, Water, Wood, Earth, Metal)\n                  </p>\n                  <p>\n                    <strong>Attribute #2</strong>\n                    <br /> Luck (1 ~ 10)\n                  </p>\n                </div>\n                <div className=\"block has-text-centered-mobile is-hidden-mobile\">\n                  <button\n                    onClick={onMint}\n                    className=\"button is-primary press-font\"\n                  >\n                    Mint: {RUNE_PRICE[network]} GAS\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div\n                className=\"block\"\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <DisplayRandomRune\n                  isActive={true}\n                  width=\"230px\"\n                  height=\"230px\"\n                />\n              </div>\n              <div className=\"block has-text-centered-mobile is-hidden-tablet\">\n                <button\n                  onClick={onMint}\n                  className=\"button is-primary press-font\"\n                >\n                  Mint: {RUNE_PRICE[network]} GAS\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/*<div className=\"hero-foot\">*/}\n      {/*  <nav className=\"tabs is-boxed is-fullwidth\">*/}\n      {/*    <div className=\"container\">*/}\n      {/*      <ul>*/}\n      {/*        {RUNE_PHASE_FILTER.map((phase) => {*/}\n      {/*          return (*/}\n      {/*            <li*/}\n      {/*              key={phase}*/}\n      {/*              className={filter === phase ? \"is-active\" : \"\"}*/}\n      {/*            >*/}\n      {/*              <a onClick={() => onFilterChange(phase)}>{phase}</a>*/}\n      {/*            </li>*/}\n      {/*          );*/}\n      {/*        })}*/}\n      {/*      </ul>*/}\n      {/*    </div>*/}\n      {/*  </nav>*/}\n      {/*</div>*/}\n    </section>\n  );\n};\n\nexport default Banner;\n","import { CONST } from \"..\";\n\nexport const ENDPOINT = {\n  [CONST.PRIVATENET]: \"http://localhost:3000\",\n  [CONST.TESTNET]:\n    \"https://jefzcuwe0e.execute-api.us-east-1.amazonaws.com/testnet\",\n  [CONST.MAINNET]:\n    \"https://z3fn74s0oa.execute-api.us-east-1.amazonaws.com/mainnet\",\n};\n","import { INetworkType } from \"../network\";\nimport { ENDPOINT } from \"./consts\";\n\n// interface IRuneFilter = \"All\" | \"Fire\" |  \"\"\n\nexport class RestAPI {\n  network: INetworkType;\n  endpoint: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.endpoint = ENDPOINT[networkType];\n  }\n\n  fetchResult = async (url: string) => {\n    const res = await fetch(url);\n    const json = await res.json();\n    if (res.status === 200) {\n      return json;\n    } else {\n      // throw new Error(json.message);\n      throw new Error(\"Network error\");\n    }\n  };\n\n  async getRunes(filter) {\n    return this.fetchResult(this.endpoint + \"/runes/\" + filter);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport PropertiesModal from \"./PropertiesModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport Banner from \"./Banner\";\nimport { RestAPI } from \"../../../packages/neo/api\";\nimport { RUNE_PHASE_FILTER } from \"../../../packages/neo/contracts/ftw/nft/consts\";\n\nconst Gallery = () => {\n  const [filter, setFilter] = useState<string>(RUNE_PHASE_FILTER[0]);\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n  const onFilterChange = (val: string) => setFilter(val);\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).mint(connectedWallet);\n        addPendingTransaction(res);\n      } catch (e: any) {\n      \tconsole.log(e)\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const items = await new RestAPI(network).getRunes(filter);\n        // const res = await new NFTContract(network).getTokens();\n        setTokens(items);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network, filter]);\n  return (\n    <section id=\"Rune\">\n      <Banner\n        network={network}\n        filter={filter}\n        onFilterChange={onFilterChange}\n        onMint={onMint}\n      />\n      {isLoading ? (\n        <PageLayout>\n          <div>Loading..</div>\n        </PageLayout>\n      ) : error ? (\n        <PageLayout>\n          <div>{error}</div>\n        </PageLayout>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"wrap\",\n          }}\n        >\n          {tokens.map((token) => (\n            <figure\n              style={{ width: \"10%\" }}\n              key={token.tokenId}\n              className=\"image rune\"\n              onClick={() => onPropertiesModalActive(token.tokenId.toString())}\n            >\n              <img src={token.image} />\n              {/*<small*/}\n              {/*  className=\"has-text-white\"*/}\n              {/*  style={{ position: \"absolute\", top: 0 }}*/}\n              {/*>*/}\n              {/*  #{token.tokenId}*/}\n              {/*</small>*/}\n              {/*<span className=\"has-text-white\">{token.phase}</span>*/}\n            </figure>\n          ))}\n        </div>\n      )}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { GALLERY_PATH, MENU, SMITH_PATH } from \"../../consts\";\nimport { useWallet } from \"../../packages/provider\";\n\nconst SidebarNav = (props) => {\n  const { network } = useWallet();\n  const { toggleSidebar } = useApp();\n  return (\n    <aside className=\"menu p-5\">\n      <p className=\"menu-label\">Menu</p>\n      <ul className=\"menu-list\">\n        {MENU.map((route) => {\n          if (!route.network.includes(network)) return <></>;\n          return (\n            <li key={route.label}>\n              <NavLink\n                onClick={toggleSidebar}\n                activeClassName={\"is-active\"}\n                to={route.path}\n              >\n                {route.label}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </aside>\n  );\n};\n\nexport default SidebarNav;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport SidebarNav from \"./SidebarNav\";\n\nconst MobileMenuSlider = (props) => {\n  const { sidebarStatus, toggleSidebar } = useApp();\n  return (\n    <SideNav\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={sidebarStatus}\n      onHideNav={toggleSidebar}\n      children={<SidebarNav />}\n    />\n  );\n};\n\nexport default MobileMenuSlider;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport PageLayout from \"../components/PageLayout\";\n// tslint:disable-next-line:no-submodule-imports\nimport DOTS from \"vanta/dist/vanta.halo.min\";\nimport DisplayRandomRune from \"../components/DisplayRandomRune\";\n// import * as THREE from \"three\";\n\nconst Home = (props) => {\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        DOTS({\n          el: myRef.current,\n          mouseControls: true,\n          touchControls: true,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          backgroundColor: 0x80822,\n          size: 2.8,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) {\n        // @ts-ignore\n        vantaEffect.destroy();\n      }\n    };\n  }, [vantaEffect]);\n  return (\n    <div>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-flex\" style={{ alignItems: \"center\" }}>\n                <div>\n                  <h1 className=\"title\">Forthewin is back</h1>\n                  <p className=\"subtitle\">\n                    Migrate your Neo-legacy FTX to the new <span>N3 FTW</span>\n                  </p>\n                  <a\n                    target=\"_blank\"\n                    href=\"https://nepmigration.com/\"\n                    className=\"button is-primary\"\n                  >\n                    Go to Migrate\n                  </a>\n                </div>\n              </div>\n              <div className=\"column is-hidden-touch\">\n                <div\n                  className=\"block\"\n                  // style={{ display: \"flex\", justifyContent: \"center\" }}\n                >\n                  <video style={{ width: \"450px\" }} autoPlay loop>\n                    <source src={\"/migration.mp4\"} type=\"video/mp4\" />\n                  </video>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns halo\" ref={myRef}>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>Neo-legacy</h3>\n                <h6>Symbol</h6>\n                <p>FTX</p>\n                <h6>Contract hash</h6>\n                <p>0xaac66f9779ca67d819d05492805d251dab02fc7b</p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://neotracker.io/asset/aac66f9779ca67d819d05492805d251dab02fc7b\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>N3</h3>\n                <h6>Symbol</h6>\n                <p>FTW</p>\n                <h6>Contract hash</h6>\n                <p>\n                  <a\n                    target=\"_blank\"\n                    className=\"has-text-dark\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\n                  </a>\n                </p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://explorer.onegate.space/NEP17tokeninfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Home;\n","import { CONST } from \"../../../index\";\n\nexport const SMITH_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"799704f9d8588b183204e154f8eea1de35bb3ecd\",\n  [CONST.TESTNET]: \"799704f9d8588b183204e154f8eea1de35bb3ecd\",\n  [CONST.MAINNET]: \"f860bbdcc5091a9ae7812b047fd325dfa7905ee1\",\n};\n","import {\n  base64ToAddress,\n  base64ToDate,\n  base64ToHash160,\n  base64ToString,\n} from \"../../../utils\";\n\nexport const parsePaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseRecord(stackItem[3].value),\n  };\n};\n\nconst parseRecord = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractOwner: base64ToAddress(item.value[1].value),\n      contractHash: base64ToHash160(item.value[2].value), // NEO amount\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      decimals: item.value[5].value, // NEO amount\n      totalSupply: item.value[6].value, // NEO amount\n      author: base64ToString(item.value[7].value), // NEO amount\n      description: base64ToString(item.value[8].value), // NEO amount\n      createdAt: base64ToDate(item.value[9].value),\n    };\n  });\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { SMITH_SCRIPT_HASH } from \"./consts\";\nimport { ISmithContractStatus } from \"./interfaces\";\nimport { parsePaginate } from \"./helpers\";\nimport { wallet as NeonWallet } from \"@cityofzion/neon-core\";\n\nexport class SmithContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = SMITH_SCRIPT_HASH[networkType];\n  }\n\n  create = async (\n    connectedWallet: IConnectedWallet,\n    contractName: string,\n    symbol: string,\n    decimals: string,\n    totalSupply: string,\n    author: string,\n    description: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: \"100000000\",\n        },\n        {\n          type: \"Array\",\n          value: [\n            {\n              type: \"Hash160\",\n              value: NeonWallet.getScriptHashFromAddress(\n                connectedWallet.account.address\n              ),\n            },\n            {\n              type: \"String\",\n              value: contractName,\n            },\n            {\n              type: \"String\",\n              value: author,\n            },\n            {\n              type: \"String\",\n              value: description,\n            },\n            {\n              type: \"String\",\n              value: symbol,\n            },\n            {\n              type: \"Integer\",\n              value: totalSupply,\n            },\n            {\n              type: \"Integer\",\n              value: decimals,\n            },\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getStatus = async (): Promise<ISmithContractStatus> => {\n    const records = {\n      operation: \"getRecords\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n\n    const scripts = [records];\n\n    const res = await Network.read(this.network, scripts);\n    return {\n      records: parsePaginate(res.stack[0].value),\n    };\n  };\n  //\n  // loadNep17 = async (): Promise<ISmithContractStatus> => {\n  //\n  // \t// const symbol = {\n  // \t// \toperation: \"symbol\",\n  // \t// \tscriptHash: this.contractHash,\n  // \t// \targs: [\n  // \t// \t],\n  // \t// };\n  // \t// const decimals = {\n  // \t// \toperation: \"decimals\",\n  // \t// \tscriptHash: this.contractHash,\n  // \t// \targs: [\n  // \t// \t],\n  // \t// };\n  // \t// const totalSupply = {\n  // \t// \toperation: \"totalSupply\",\n  // \t// \tscriptHash: this.contractHash,\n  // \t// \targs: [\n  // \t// \t\t{\n  // \t// \t\t\ttype: \"Integer\",\n  // \t// \t\t\tvalue: 1,\n  // \t// \t\t},\n  // \t// \t],\n  // \t// };\n  //\n  // \tconst scripts = [records];\n  //\n  // \tconst res = await Network.read(this.network, scripts);\n  // \treturn {\n  // \t\trecords: parseSnapshotPaginate(res.stack[0].value),\n  // \t};\n  // };\n}\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport NumberFormat from \"react-number-format\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst ActionModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    decimals: \"8\",\n    totalSupply: \"\",\n    author: \"\",\n    description: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SmithContract(network).create(\n          connectedWallet,\n          values.name,\n          values.symbol,\n          values.decimals,\n          values.totalSupply,\n          values.author,\n          values.description\n        );\n        setTxid(res);\n      } catch (e) {\n        console.error(e);\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title\">NEP-17 Token Mint</h1>\n\n          <div className=\"field is-grouped is-grouped-multiline\">\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Deploy fee</span>\n                <span className=\"tag is-primary\">10 GAS</span>\n              </div>\n            </div>\n\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Mint fee</span>\n                <span className=\"tag is-primary\">1 GAS</span>\n              </div>\n            </div>\n          </div>\n\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">Token Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Token Symbol</label>\n            <div className=\"control\">\n              <input\n                value={values.symbol}\n                onChange={(e) => handleValueChange(\"symbol\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Token Decimals</label>\n            <div className=\"control\">\n              <NumberFormat\n                decimalScale={0}\n                inputMode=\"decimal\"\n                className=\"input\"\n                value={values.decimals}\n                onValueChange={(value) => {\n                  handleValueChange(\"decimals\", value.value);\n                }}\n                max={18}\n                allowNegative={false}\n                allowLeadingZeros={false}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Total supply</label>\n            <div className=\"control\">\n              <NumberFormat\n                allowNegative={false}\n                decimalScale={0}\n                inputMode=\"decimal\"\n                className=\"input\"\n                value={values.totalSupply}\n                onValueChange={(value) => {\n                  handleValueChange(\"totalSupply\", value.value);\n                }}\n                allowLeadingZeros={false}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          <button\n\t          onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.decimals ||\n              parseFloat(values.decimals) > 18 ||\n              parseFloat(values.totalSupply) < 1 ||\n              !values.author ||\n              !values.description\n            }\n            className=\"button is-primary\"\n          >\n            Mint\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default ActionModal;\n","import React from \"react\";\nimport { ISmithRecord } from \"../../../packages/neo/contracts/ftw/smith/interfaces\";\n\ninterface IContractCardProps {\n  data: ISmithRecord;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">#{data.no} {data.name}</h5>\n        <div className=\"field is-grouped is-grouped-multiline\">\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Symbol</span>\n              <span className=\"tag is-info\">{data.symbol}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Decimals</span>\n              <span className=\"tag is-info\">{data.decimals}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Total supply</span>\n              <span className=\"tag is-info\">{data.totalSupply}</span>\n            </div>\n          </div>\n\n\t        <div className=\"control\">\n\t\t        <div className=\"tags has-addons\">\n\t\t\t        <span className=\"tag is-dark\">Hash</span>\n\t\t\t        <span className=\"tag is-info\">0x{data.contractHash}</span>\n\t\t        </div>\n\t        </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContractCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport ActionModal from \"./ActionModal\";\nimport ContractCard from \"./ContractCard\";\n\nconst Smith = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [status, setStatus] = useState<any>([]);\n  const [isActionModalActive, setActionModalActive] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const myRef = useRef(null);\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getStatus();\n        setStatus(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n\n  return (\n    <>\n      <section className=\"hero is-white\" ref={myRef}>\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Forthewin Smith</h1>\n            <p className=\"subtitle\">\n              Mint your NEP-17 tokens without any codes\n            </p>\n            <button\n              onClick={() => setActionModalActive(true)}\n              className=\"button is-primary press-font\"\n            >\n              Mint Tokens\n            </button>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"box\">\n            {status && status.records.items.length > 0 ? (\n              status.records.items.map((item) => <ContractCard data={item} />)\n            ) : (\n              <div></div>\n            )}\n          </div>\n        )}\n        {isActionModalActive && (\n          <ActionModal onClose={() => setActionModalActive(false)} />\n        )}\n      </PageLayout>\n    </>\n  );\n};\n\nexport default Smith;\n","import { TOURNAMENT_PATH } from \"../../../consts\";\n\nexport const ARENA_PATH = TOURNAMENT_PATH + \"/:arenaNo\";\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TOURNAMENT_PATH } from \"../../../../../consts\";\nimport PageLayout from \"../../../../components/PageLayout\";\n\nconst ARENA_LIST = [\"8\", \"16\", \"32\", \"64\", \"128\"];\nconst ARENA_COLOR = {\n  \"4\": \"is-black\",\n  \"8\": \"is-black\",\n  \"16\": \"is-black\",\n  \"32\": \"is-black\",\n  \"64\": \"is-black\",\n  \"128\": \"is-black\",\n};\nconst ArenaHome = (props) => {\n  return (\n    <div\n      style={{\n        backgroundImage: 'url(\"arena-bg.jpeg\")',\n        backgroundSize: \"cover\",\n        height: \"calc(100vh - 52px)\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      <PageLayout>\n        {/*<div className=\"columns is-multiline\">*/}\n        {ARENA_LIST.map((arena) => {\n          return (\n            <div\n              key={arena}\n              // className=\"column is-4\"\n            >\n              <div\n                className=\"has-text-centered\"\n                // className={`notification has-text-centered ${ARENA_COLOR[arena]}`}\n              >\n                <Link\n                  to={TOURNAMENT_PATH + \"/\" + arena}\n                  className=\"title has-text-white\"\n                >\n                  ARENA {arena}\n                </Link>\n                {/*<Link*/}\n                {/*  to={TOURNAMENT_PATH + \"/\" + arena}*/}\n                {/*  className=\"button is-white\"*/}\n                {/*>*/}\n                {/*  Enter*/}\n                {/*</Link>*/}\n              </div>\n            </div>\n          );\n        })}\n        {/*</div>*/}\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default ArenaHome;\n","import { CONST } from \"../../../index\";\n\nexport const TOURNAMENT_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"d2016f40d26d420c696132e5dae453d93b0f3050\",\n  [CONST.TESTNET]: \"1666b9485e2faf13ccea24c9563dfa5cbd92a1ad\",\n  [CONST.MAINNET]: \"\",\n};\n\nexport const ADMIN_FOR_PLAY = {\n  [CONST.PRIVATENET]: [\"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\"],\n  [CONST.TESTNET]: [\n    \"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\",\n    \"NS9QLsaY8RzN9fxTWj9AECyLaJvsk38XUb\",\n  ],\n  [CONST.MAINNET]: [\"NS9QLsaY8RzN9fxTWj9AECyLaJvsk38XUb\"],\n};\n","import {\n  base64ToAddress,\n  base64ToHash160,\n  base64ToString,\n  toDecimal,\n} from \"../../../utils\";\nimport { IHistory, IHistoryGame, IPlayer } from \"./interfaces\";\n\nexport const parsePlayer = (stackItem): IPlayer => {\n  return stackItem.map((item) => {\n    return {\n      // no: item.value[0].value,\n      owner: base64ToAddress(item.value[0].value),\n      tokenHash: base64ToHash160(item.value[1].value),\n      tokenId: base64ToString(item.value[2].value),\n      phase: base64ToString(item.value[3].value),\n      luck: item.value[4].value,\n      createdAt: item.value[5].value,\n    };\n  });\n};\n\nexport const parseHistory = (stackItem: any): IHistory => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    currentPage: stackItem[2].value,\n    items: parseGame(stackItem[3].value),\n  };\n};\n\nconst parseGame = (stackItem): IHistoryGame[] => {\n  return stackItem.map((item) => {\n    return {\n      gameNo: item.value[0].value,\n      tournamentTree: parsePlayer(item.value[1].value),\n      champion: base64ToString(item.value[2].value), // NEO amount\n      nonce: item.value[3].value,\n      betsOnChampion: item.value[4].value,\n      totalBets: item.value[5].value,\n      rollover: item.value[6].value,\n      fee: item.value[7].value,\n      championPrize: item.value[8].value,\n      createdAt: item.value[9].value,\n    };\n  });\n};\n\nexport const calculateClaimableAmount = (\n  history: IHistoryGame,\n  betAmount: number\n): number => {\n  let totalAmount =\n    parseFloat(history.totalBets) -\n    parseFloat(history.fee) -\n    parseFloat(history.championPrize);\n  totalAmount = totalAmount + parseFloat(history.rollover);\n  const ownershipPercentage =\n    (((betAmount * 1000) / parseFloat(history.betsOnChampion)) * 1000) / 100;\n  const myClaimAble = (totalAmount * ownershipPercentage) / (100 * 100);\n  return toDecimal(myClaimAble.toString());\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { TOURNAMENT_SCRIPT_HASH } from \"./consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { RUNE_SCRIPT_HASH } from \"../nft\";\nimport { parsePlayer, parseHistory } from \"./helpers\";\nimport { GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { toDecimal } from \"../../../utils\";\n\nexport class TournamentContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = TOURNAMENT_SCRIPT_HASH[networkType];\n  }\n\n  register = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: RUNE_SCRIPT_HASH[this.network],\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n        {\n          type: \"Array\",\n          value: [\n            {\n              type: \"Integer\",\n              value: arenaNo,\n            },\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n      // \"0.01\"\n    );\n  };\n\n  play = async (\n    connectedWallet: IConnectedWallet,\n    arenaNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"play\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      \"0.1\"\n    );\n  };\n\n  leave = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"leave\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n      // \"0.1\"\n    );\n  };\n\n  bet = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        { type: \"Address\", value: connectedWallet.account.address },\n        { type: \"Hash160\", value: this.contractHash },\n        { type: \"Integer\", value: \"10000000\" },\n        {\n          type: \"Array\",\n          value: [\n            { type: \"Integer\", value: arenaNo },\n            { type: \"String\", value: tokenId },\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      \"0.01\"\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    arenaNo: string,\n    gameNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getPlayers = async (arenaNo: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPlayers\",\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parsePlayer(res.stack[0].value);\n  };\n\n  history = async (arenaNo: string, page: number): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getHistoryPaginate\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: page },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    return parseHistory(res.stack[0].value);\n  };\n\n  getGameHeight = async (arenaNo: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getGameHeight\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].value;\n  };\n\n  getBetAmount = async (\n    arenaNo: string,\n    gameNo: string,\n    championTokenId: string,\n    address: string\n  ): Promise<any> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getBetsOnAccount\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"String\", value: championTokenId },\n        { type: \"Address\", value: address },\n      ],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"isClaimed\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"Address\", value: address },\n      ],\n    };\n    const res = await Network.read(this.network, [script, script1]);\n    return {\n      // @ts-ignore\n      betAmount: parseFloat(res.stack[0].value),\n      // @ts-ignore\n      isClaimed: res.stack[1].value,\n    };\n  };\n\n  getCurrentPrize = async (arenaNo: string): Promise<number> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getCurrentPrize\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return toDecimal(res.stack[0].value);\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { TOURNAMENT_PATH } from \"../../../../../consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\n\ninterface IBanner {\n  arenaNo: string;\n}\nconst Banner = ({ arenaNo }: IBanner) => {\n  const location = useLocation();\n  const [prize, setPrize] = useState<number>(0);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  useEffect(() => {\n    async function fetchBetAmount() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getCurrentPrize(\n          arenaNo\n        );\n        setPrize(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchBetAmount();\n  }, [connectedWallet, network]);\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"level\">\n            <div className=\"level-left\">\n              <div className=\"level-item\">\n                <h1 className=\"title is-marginless\">ARENA {arenaNo}</h1>\n              </div>\n            </div>\n\n            <div className=\"level-right\">\n              <div className=\"level-item\">\n                <h1 className=\"title is-marginless\">{prize} GAS</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              <li\n                className={\n                  location.pathname === TOURNAMENT_PATH + \"/\" + arenaNo\n                    ? \"is-active\"\n                    : \"\"\n                }\n              >\n                <Link to={TOURNAMENT_PATH + \"/\" + arenaNo}>Players</Link>\n              </li>\n              <li\n                className={\n                  location.pathname ===\n                  TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"\n                    ? \"is-active\"\n                    : \"\"\n                }\n              >\n                <Link to={TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"}>\n                  Champions\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { INetworkType } from \"../../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../../packages/neo/contracts/ftw/nft/interfaces\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n}\n\nconst DisplayRuneWithProperties = ({\n  width,\n  height,\n  tokenId,\n  network,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(tokenId);\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune\"\n      onClick={() => onClick({ ...token, tokenId })}\n    >\n      <img src={token.image} />\n    </figure>\n  );\n};\n\nexport default DisplayRuneWithProperties;\n","import React from \"react\";\nimport { IRuneMeta } from \"../../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\n\ninterface IPlayerModalProps {\n  arenaNo: string;\n  player: IRuneMeta & { tokenId: string; gameOwner: string };\n  onClose: () => void;\n}\nconst PlayerModal = ({ arenaNo, player, onClose }: IPlayerModalProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onBet = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).bet(\n          connectedWallet,\n          player.tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        // setModalActive(false);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onLeave = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).leave(\n          connectedWallet,\n          player.tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        // setModalActive(false);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  return (\n    <Modal onClose={onClose}>\n      <div>\n        <div className=\"columns\">\n          <div className=\"column\">\n            <img src={player.image} />\n          </div>\n          <div className=\"column\">\n            <div className=\"content\">\n              <strong>Name</strong>\n              <br />\n              <p>{player.name}</p>\n              <strong>Phase</strong>\n              <p>{player.phase}</p>\n              <strong>Luck</strong>\n              <p>{player.luck}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"columns\">\n          <div className=\"column\">\n            <button onClick={onBet} className=\"button is-primary is-fullwidth\">\n              BET 0.1 GAS\n            </button>\n          </div>\n          <div className=\"column\">\n            <button onClick={onClose} className=\"button is-light is-fullwidth\">\n              Close\n            </button>\n          </div>\n          {connectedWallet &&\n          connectedWallet.account.address === player.gameOwner ? (\n            <div className=\"column\">\n              <button\n                onClick={onLeave}\n                className=\"button is-danger is-fullwidth\"\n              >\n                Leave\n              </button>\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default PlayerModal;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { NFTContract } from \"../../../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport PageLayout from \"../../../../../../components/PageLayout\";\n\ninterface INFTListModalModal {\n  onClose: () => void;\n  onRegister: (tokenId: string) => void;\n}\nconst NFTListModal = ({ onRegister, onClose }: INFTListModalModal) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <div className=\"block\">\n          <h5 className=\"title is-5\">Select a NFT to send to the ARENA</h5>\n        </div>\n        <div>\n          {isLoading ? (\n            <div>Loading..</div>\n          ) : error ? (\n            <div>{error}</div>\n          ) : tokens.length > 0 ? (\n            <div\n              style={{\n                flexFlow: \"wrap\",\n              }}\n              className=\"is-flex\"\n            >\n              {tokens.map((token) => {\n                return (\n                  <figure\n                    key={token.tokenId}\n                    // style={{ width, height }}\n                    className=\"image is-64x64\"\n                    onClick={() => onRegister(token.tokenId)}\n                  >\n                    <img src={token.image} />\n                  </figure>\n                );\n              })}\n            </div>\n          ) : (\n            <div>You don't have runes</div>\n          )}\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default NFTListModal;\n","import React, { useState } from \"react\";\nimport NFTListModal from \"./NFTListModal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\n\ninterface IRegisterButtonProps {\n  arenaNo: string;\n  playerCount: number;\n}\nconst RegisterButton = ({ arenaNo, playerCount }: IRegisterButtonProps) => {\n  const [modalActive, setModalActive] = useState(false);\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPickModal = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Connect your wallet.\");\n    }\n  };\n  const onRegister = async (tokenId: string) => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).register(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        // onClose();\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <>\n      <button\n        disabled={playerCount === parseFloat(arenaNo)}\n        className=\"button is-primary press-font\"\n        onClick={onPickModal}\n      >\n        Register ({playerCount}/{arenaNo})\n      </button>\n      {modalActive && connectedWallet && (\n        <NFTListModal\n          onRegister={onRegister}\n          onClose={() => setModalActive(false)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default RegisterButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport DisplayRuneWithProperties from \"../../../components/DisplayRuneWithProperties\";\nimport PlayerModal from \"./components/PlayerModal\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport RegisterButton from \"./components/ArenaRegisterButton\";\n\nconst Players = ({ arenaNo }: { arenaNo: string }) => {\n  const [playerModalActive, setPlayerModalActive] = useState<\n    IRuneMeta & { tokenId: string; gameOwner: string }\n  >();\n\n  const onPlayerModalActive = (obj) => setPlayerModalActive(obj);\n  const [players, setPlayers] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getPlayers(arenaNo);\n        setPlayers(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          <div className=\"level\">\n            <div className=\"level-left\">\n              <div className=\"level-item\">\n                <h1 className=\"title\">Players</h1>\n              </div>\n            </div>\n\n            <div className=\"level-right\">\n              <div className=\"level-item\">\n                <RegisterButton\n                  playerCount={players.length}\n                  arenaNo={arenaNo}\n                />\n              </div>\n            </div>\n          </div>\n          {players.length > 0 ? (\n            <div className=\"columns is-multiline\">\n              {players.map(({ tokenId, owner }) => (\n                <div className=\"column is-1\">\n                  <DisplayRuneWithProperties\n                    key={tokenId}\n                    width={\"100%\"}\n                    height={\"100%\"}\n                    tokenId={tokenId}\n                    network={network}\n                    onClick={(obj: any) =>\n                      onPlayerModalActive({ ...obj, gameOwner: owner })\n                    }\n                  />\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div>No players</div>\n          )}\n\n          {playerModalActive && (\n            <PlayerModal\n              arenaNo={arenaNo}\n              onClose={() => setPlayerModalActive(undefined)}\n              player={playerModalActive}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Players;\n","import React from \"react\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IPlayerModalProps {\n  rune: IRuneMeta;\n  onClose: () => void;\n}\nconst NFTDetailModal = ({ rune, onClose }: IPlayerModalProps) => {\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <img src={rune.image} />\n        </div>\n        <div className=\"column\">\n          <div className=\"content\">\n            <strong>Name</strong>\n            <br />\n            <p>{rune.name}</p>\n            <strong>Phase</strong>\n            <p>{rune.phase}</p>\n            <strong>Luck</strong>\n            <p>{rune.luck}</p>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NFTDetailModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { IHistoryGame } from \"../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport { calculateClaimableAmount } from \"../../../../packages/neo/contracts/ftw/tournament/helpers\";\n\ninterface IClaimButtonProps {\n  arenaNo: string;\n  history: IHistoryGame;\n}\nconst ClaimButton = ({ arenaNo, history }: IClaimButtonProps) => {\n  const [status, setStatus] = useState<any>({\n    betAmount: 0,\n    isClaimed: false,\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).claim(\n          connectedWallet,\n          arenaNo,\n          history.gameNo\n        );\n        addPendingTransaction(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  useEffect(() => {\n    async function fetchBetAmount(address: string) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetAmount(\n          arenaNo,\n          history.gameNo,\n          history.champion,\n          address\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchBetAmount(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network]);\n  if (!connectedWallet) return <></>;\n  if (!status.betAmount) return <></>;\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {status.isClaimed ? (\n            <button disabled={true} className=\"button is-info is-fullwidth\">\n              Claimed\n            </button>\n          ) : (\n            <button className=\"button is-info is-fullwidth\" onClick={onClaim}>\n              Claim {calculateClaimableAmount(history, status.betAmount)} GAS\n            </button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ClaimButton;\n","import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaPlay } from \"react-icons/fa\";\nimport { NFTContract } from \"../../../../../../packages/neo/contracts\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { INetworkType } from \"../../../../../../packages/neo/network\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport ClaimButton from \"../../../components/ClaimButton\";\nimport { u } from \"@cityofzion/neon-core\";\nimport { toDecimal } from \"../../../../../../packages/neo/utils\";\n\ninterface IDisplayRuneProps {\n  history: IHistoryGame;\n  arenaNo: string;\n  width: string;\n  height: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n  onReplay: () => void;\n}\n\nconst HistoryTable = ({\n  history,\n  arenaNo,\n  width,\n  height,\n  network,\n  onClick,\n  onReplay,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(\n          history.champion\n        );\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [history]);\n  if (!token) return <></>;\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        {\" \"}\n        <figure\n          style={{ width, height }}\n          className=\"image rune\"\n          onClick={() => onClick(token)}\n        >\n          <img src={token.image} />\n        </figure>\n      </div>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          Game #{history.gameNo}\n          <br />\n          Champ: {token.name} ({token.phase} / {token.luck})\n          <br />\n          Total bets: {toDecimal(history.totalBets)}\n          <br />\n          Rollover: {toDecimal(history.rollover)}\n          <br />\n          Total bets on champ: {toDecimal(history.betsOnChampion)}\n          <br />\n          Fee: {toDecimal(history.fee)}\n          <br />\n          Champ prize: {toDecimal(history.championPrize)}\n        </div>\n        <button onClick={() => onReplay()} className=\"button is-black is-small\">\n          <span className=\"icon\">\n            <FaPlay />\n          </span>\n          <span>Replay</span>\n        </button>\n      </div>\n      <div className=\"media-right\">\n        <div>\n          <ClaimButton arenaNo={arenaNo} history={history} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryTable;\n","export const fight = (aPhase, aLuck, bPhase, bLuck, nonce) => {\n  aLuck = parseFloat(aLuck);\n  bLuck = parseFloat(bLuck);\n  nonce = parseFloat(nonce);\n  if (aPhase === bPhase) {\n    return compareLuck(aLuck, bLuck, nonce);\n  }\n\n  switch (aPhase) {\n    case \"Fire\":\n      switch (bPhase) {\n        case \"Metal\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Wood\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Earth\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Water\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Water\":\n      switch (bPhase) {\n        case \"Fire\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Metal\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Wood\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Earth\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Wood\":\n      switch (bPhase) {\n        case \"Earth\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Water\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Fire\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Metal\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Earth\":\n      switch (bPhase) {\n        case \"Water\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Fire\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Metal\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Wood\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Metal\":\n      switch (bPhase) {\n        case \"Wood\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Earth\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Water\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Fire\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Dark\":\n      switch (bPhase) {\n        case \"Light\":\n          aLuck = aLuck - 3;\n          break;\n        default:\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Light\":\n      switch (bPhase) {\n        case \"Dark\":\n          aLuck = aLuck + 3;\n          break;\n        default:\n          aLuck = aLuck - 3;\n          break;\n      }\n      break;\n  }\n  return compareLuck(aLuck, bLuck, nonce);\n};\n\nconst compareLuck = (aLuck, bLuck, nonce) => {\n  if (aLuck > bLuck) {\n    return \"A\";\n  } else if (bLuck > aLuck) {\n    return \"B\";\n  } else {\n    // tslint:disable-next-line:no-unused-expression\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    return nonce % 2 === 0 ? \"A\" : \"B\";\n  }\n  // else\n  // {\n  // \tvar tx = (Transaction)Runtime.ScriptContainer;\n  // \treturn tx.Nonce % 2 == 0 ? \"A\" : \"B\";\n  // }\n};\n","import React from \"react\";\nimport { IPlayer } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport DisplayRuneWithProperties from \"../../../components/DisplayRuneWithProperties\";\nimport { fight } from \"../helpers\";\nimport { useWallet } from \"../../../../../../packages/provider\";\n\ninterface ITournamentTree {\n  champ: string;\n  nonce: string;\n  tree: IPlayer[];\n  onClick: (obj) => void;\n}\n\nfunction* chunks(arr, n) {\n  for (let i = 0; i < arr.length; i += n) {\n    yield arr.slice(i, i + n);\n  }\n}\n\nconst TournamentTree = ({ onClick, champ, tree, nonce }: ITournamentTree) => {\n  const { network } = useWallet();\n\n  let capacity = tree.length;\n  let stage: IPlayer[] = tree;\n  let winners: IPlayer[] = [];\n  let match: IPlayer[] = [];\n  let rounds: any[] = [];\n  while (capacity >= 2) {\n    for (let i = 0; i < capacity; i++) {\n      match.push(stage[i]);\n      if (match.length === 2) {\n        const res = fight(\n          match[0].phase,\n          match[0].luck,\n          match[1].phase,\n          match[1].luck,\n          nonce\n        );\n        if (res === \"A\") {\n          winners.push(match[0]);\n        } else {\n          winners.push(match[1]);\n        }\n        match = [];\n      }\n    }\n    // @ts-ignore\n    rounds.push([...chunks(stage, 2)]);\n    stage = winners;\n    winners = [];\n    capacity = capacity / 2;\n  }\n  rounds = rounds.reverse();\n\n  return (\n    <>\n      <div className=\"is-flex mb-5\" style={{ justifyContent: \"safe center\" }}>\n        <DisplayRuneWithProperties\n          network={network}\n          onClick={(obj) => {\n            onClick(obj);\n          }}\n          width={\"128px\"}\n          height={\"128px\"}\n          tokenId={champ}\n        />\n      </div>\n      {rounds.map((arena) => {\n        return (\n          <div className=\"is-flex mb-5\" style={{ justifyContent: \"center\" }}>\n            {arena.map((arr, i) => {\n              const winner = fight(\n                arr[0].phase,\n                arr[0].luck,\n                arr[1].phase,\n                arr[1].luck,\n                nonce\n              );\n              return (\n                <div\n                  className={`is-flex ${arena.length - 1 !== i ? \"mr-5\" : \"\"} `}\n                >\n                  <div style={{ opacity: winner === \"A\" ? \"1\" : \"0.3\" }}>\n                    <DisplayRuneWithProperties\n                      network={network}\n                      onClick={(obj) => {\n                        onClick(obj);\n                      }}\n                      width={\"32px\"}\n                      height={\"32px\"}\n                      tokenId={arr[0].tokenId}\n                    />\n                  </div>\n                  <div style={{ opacity: winner === \"B\" ? \"1\" : \"0.3\" }}>\n                    <DisplayRuneWithProperties\n                      network={network}\n                      onClick={(obj) => {\n                        onClick(obj);\n                      }}\n                      width={\"32px\"}\n                      height={\"32px\"}\n                      tokenId={arr[1].tokenId}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default TournamentTree;\n","import React from \"react\";\nimport TournamentTree from \"./TournamentTree\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\n\ninterface IReplayProps {\n  arenaNo: string;\n  gameHistory: IHistoryGame;\n  onClick: (obj) => void;\n  onClose: () => void;\n}\nconst Replay = ({ arenaNo, gameHistory, onClick, onClose }: IReplayProps) => {\n  return (\n    <div className=\"modal is-active\">\n      <div\n        className=\"modal-background\"\n        onClick={onClose}\n        style={{ backgroundColor: \"black\" }}\n      />\n      <h1\n        className=\"title has-text-white\"\n        style={{ position: \"absolute\", top: \"20px\", left: \"20px\" }}\n      >\n        ARENA {arenaNo}\n      </h1>\n      <section className=\"modal-content\" style={{ width: \"100%\" }}>\n        <TournamentTree\n          champ={gameHistory.champion}\n          tree={gameHistory.tournamentTree}\n          nonce={gameHistory.nonce}\n          onClick={onClick}\n        />\n      </section>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};\n\nexport default Replay;\n","import React from \"react\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../packages/provider\";\n\ninterface IPlayButtonProps {\n  arenaNo: string;\n}\nconst PlayButton = ({ arenaNo }: IPlayButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPlay = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).play(\n          connectedWallet,\n          arenaNo\n        );\n        addPendingTransaction(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <button className=\"button is-primary press-font\" onClick={onPlay}>\n      Start\n    </button>\n  );\n};\n\nexport default PlayButton;\n","import React, { useEffect, useState } from \"react\";\nimport Pagination from \"bulma-pagination-react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport NFTDetailModal from \"./NFTDetailModal\";\nimport HistoryTable from \"./HistoryTable\";\nimport Replay from \"./Replay\";\nimport PlayButton from \"../../../components/PlayButton\";\nimport { ADMIN_FOR_PLAY } from \"../../../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IHistoryProps {\n  arenaNo: string;\n}\nconst History = ({ arenaNo }: IHistoryProps) => {\n  const [page, setPage] = useState(1);\n  const [nftModalActive, setNftModalActive] = useState();\n  const [replayModalActive, setReplayModalActive] = useState();\n  const [history, setHistory] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const onNFTModalActive = (obj) => setNftModalActive(obj);\n  const onReplayModalActive = (obj) => setReplayModalActive(obj);\n\n  useEffect(() => {\n    async function fetchHistory() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).history(\n          arenaNo,\n          page\n        );\n        setHistory(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchHistory();\n  }, [connectedWallet, network, page]);\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <div className=\"box\">\n            <div className=\"level is-mobile\">\n              <div className=\"level-left\">\n                <div className=\"level-item\">\n                  <h3 className=\"title\">History</h3>\n                </div>\n              </div>\n\n              {ADMIN_FOR_PLAY[network].length !== 0 &&\n              ADMIN_FOR_PLAY[network].includes(\n                connectedWallet?.account.address\n              ) ? (\n                <div className=\"level-right\">\n                  <div className=\"level-item\">\n                    <PlayButton arenaNo={arenaNo} />\n                  </div>\n                </div>\n              ) : ADMIN_FOR_PLAY[network].length === 0 ? (\n                <div className=\"level-right\">\n                  <div className=\"level-item\">\n                    <PlayButton arenaNo={arenaNo} />\n                  </div>\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </div>\n            {history.items && history.items.length > 0 ? (\n              history.items.map((game) => {\n                return (\n                  <HistoryTable\n                    key={game.gameNo}\n                    width={\"64px\"}\n                    height={\"64px\"}\n                    history={game}\n                    arenaNo={arenaNo}\n                    network={network}\n                    onClick={(obj) => {\n                      onNFTModalActive(obj);\n                    }}\n                    onReplay={() => onReplayModalActive(game)}\n                  />\n                );\n              })\n            ) : (\n              <div>Game hasn't been played</div>\n            )}\n            {history && history.totalPages > 1 && (\n              <div className=\"media\">\n                <div className=\"media-content\">\n                  <Pagination\n                    pages={history.totalPages}\n                    currentPage={page}\n                    onChange={(_page) => {\n                      if (page !== _page) {\n                        setPage(_page);\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      {nftModalActive && (\n        <NFTDetailModal\n          rune={nftModalActive}\n          onClose={() => setNftModalActive(undefined)}\n        />\n      )}\n\n      {replayModalActive && (\n        <Replay\n          arenaNo={arenaNo}\n          gameHistory={replayModalActive}\n          onClick={(obj) => {\n            onNFTModalActive(obj);\n          }}\n          onClose={() => setReplayModalActive(undefined)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default History;\n","import React from \"react\";\nimport Banner from \"./Banner\";\nimport PageLayout from \"../../../../components/PageLayout\";\nimport { ARENA_PATH } from \"../../pageRoutes\";\nimport { Route } from \"react-router-dom\";\nimport Players from \"./Players\";\nimport History from \"./History\";\n\nconst Arena = (props) => {\n  const { arenaNo } = props.match.params;\n  return (\n    <div>\n      <Banner arenaNo={arenaNo} />\n      <PageLayout>\n        <Route\n          exact\n          path={ARENA_PATH}\n          component={() => <Players arenaNo={arenaNo} />}\n        />\n        <Route\n          path={ARENA_PATH + \"/history\"}\n          component={() => <History arenaNo={arenaNo} />}\n        />\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Arena;\n","import React from \"react\";\nimport { ARENA_PATH } from \"./pageRoutes\";\nimport { Route } from \"react-router-dom\";\nimport ArenaMenu from \"./scenes/Home\";\nimport Arena from \"./scenes/Arena\";\nimport { TOURNAMENT_PATH } from \"../../../consts\";\n\nconst Tournament = () => {\n  return (\n    <section>\n      <Route exact={true} path={TOURNAMENT_PATH} component={ArenaMenu} />\n      <Route path={ARENA_PATH} component={Arena} />\n    </section>\n  );\n};\n\nexport default Tournament;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\n\nimport {\n  COLLECTION_PATH,\n  FARM_PATH,\n  GALLERY_PATH,\n  HOME_PATH,\n  SMITH_PATH,\n  TOURNAMENT_PATH,\n} from \"../consts\";\nimport { WalletContextProvider } from \"../packages/provider\";\nimport WalletSidebar from \"./components/WalletSidebar\";\nimport Farm from \"./pages/Farm\";\nimport { Toaster } from \"react-hot-toast\";\nimport MyCollection from \"./pages/MyCollection\";\nimport Gallery from \"./pages/Gallery\";\nimport MobileMenuSlider from \"./components/MobileMenuSlider\";\nimport Home from \"./pages/Home\";\nimport Smith from \"./pages/Smith\";\nimport Tournament from \"./pages/Tournament\";\n\nconst App = () => {\n  return (\n    <WalletContextProvider\n      options={{\n        useLocalStorage: true,\n        useDevWallet: process.env.NODE_ENV === \"development\",\n      }}\n    >\n      <Router>\n        <Toaster position=\"bottom-center\" />\n        <Header />\n        <Route exact path={HOME_PATH} component={Home} />\n        <Route path={GALLERY_PATH} component={Gallery} />\n        <Route path={TOURNAMENT_PATH} component={Tournament} />\n        <Route exact path={SMITH_PATH} component={Smith} />\n        <Route exact path={FARM_PATH} component={Farm} />\n        <Route path={COLLECTION_PATH} component={MyCollection} />\n        <MobileMenuSlider />\n        <WalletSidebar />\n        {/*<NetworkCheck />*/}\n      </Router>\n    </WalletContextProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppCContextProvider } from \"./common/hooks/use-app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/style.scss\";\nimport App from \"./ui\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppCContextProvider>\n      <App />\n    </AppCContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}