{"version":3,"sources":["common/hooks/use-app.tsx","reportWebVitals.ts","common/hooks/use-responsive.ts","ui/pages/Home.tsx","neo/consts/index.ts","neo/wallet/dev-wallet/helpers.ts","neo/network/index.ts","neo/wallet/dev-wallet/index.ts","neo/wallet/api/index.ts","neo/wallet/local-storage/index.ts","neo/wallet/hooks/index.tsx","neo/utils/index.ts","ui/wallet/helpers.ts","ui/wallet/WalletDropdown.tsx","ui/wallet/AssetCard.tsx","ui/wallet/WalletList.tsx","ui/wallet/index.tsx","ui/components/WalletSidebar.tsx","ui/index.tsx","consts/pageRoutes.ts","index.tsx"],"names":["AppContext","createContext","AppCContextProvider","props","useState","sidebarStatus","setSidebarStatus","walletSidebarStatus","setWalletSidebarStatus","contextValue","openSidebar","closeSidebar","toggleSidebar","toggleWalletSidebar","Provider","value","children","useApp","useContext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BREAKPOINTS","Home","className","style","margin","alt","src","href","O3","NEO_LINE","DEV","WALLET_LIST","label","key","PRIVATENET","TESTNET","MAINNET","PRIVATE_CONFIG","url","TESTNET_CONFIG","MAINNET_CONFIG","GAS_SCRIPT_HASH","NEON_CONST","NATIVE_CONTRACT_HASH","GasToken","NEO_SCRIPT_HASH","NeoToken","TOKEN_LIST","network","DEV_WALLET_PRIVATE_KEY","convertContractCallParam","param","type","sc","ContractParam","hash160","wallet","getScriptHashFromAddress","string","integer","array","map","i","byteArray","u","hex2base64","str2hexstring","Error","Network","READ_LOG_FREQUENCY","getRPCClient","networkType","config","rpc","RPCClient","findNotificationFromTxId","txId","scriptHash","eventName","a","getNotificationsFromTxId","notifications","find","n","contract","eventname","rpcClient","getApplicationLog","appLog","console","log","sleep","executions","forEach","e","push","read","scripts","sb","ScriptBuilder","script","params","args","arg","emitAppCall","operation","invokeScript","HexString","fromHex","build","duration","Promise","resolve","setTimeout","DevWallet","address","account","name","version","website","compatibility","extra","currency","theme","chainId","defaultNetwork","networks","getNep17Balances","res","balance","item","symbol","assethash","includes","amount","BigInteger","fromNumber","toDecimal","toString","tx","getVersion","sign","systemFee","sendRawTransaction","txid","nodeUrl","Account","senderAddress","cosignerAddress","getBlockCount","currentHeight","createScript","signers","scopes","WitnessScope","CalledByEntry","Global","transaction","Transaction","validUntilBlock","calculateNetworkFee","networkFee","calculateSystemFee","invokeFunction","CONST","PolicyContract","invokeFunctionResponse","state","exception","feePerByte","stack","transactionByteSize","serialize","length","witnessProcessingFee","mul","add","gasconsumed","balanceCheck","sender","transferScript","gasBalance","requiredGas","transferTokenBalance","Fixed8","fromRawNumber","toNumber","transferAmount","WalletAPI","walletType","getInstance","instance","neo3Dapi","NEOLineN3","Init","init","neoline","NEOLine","getNetworks","getProvider","provider","getAccount","getBalance","balances","contracts","error","testInvoke","invoke","NeonWallet","this","list","CONNECTED_WALLET","TRANSACTIONS","LocalStorage","connectedWallet","validated","validateConnectedWallet","store","set","remove","getWallet","get","getTransactions","has","removeTransaction","clearTransaction","WalletContext","WalletContextProvider","options","isWalletModalActive","setWalletModalActive","useLocalStorage","undefined","setConnectedWallet","setInvokeScript","connectWallet","setWallet","toast","useDevWallet","openWalletModal","closeWalletModal","disConnectWallet","removeWallet","doInvoke","closeInvoke","useWallet","truncateAddress","substring","substr","getWalletIcon","svg","WalletDropdown","isActive","setActive","aria-haspopup","aria-controls","onClick","id","role","AssetCard","WalletList","_wallet","Wallet","utils","WalletSidebar","openFromRight","top","showNav","onHideNav","App","isMobileAndBelow","isDesktop","useMediaQuery","query","isTabletAndBelow","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8a0e2e8.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n// import toast from \"react-hot-toast\";\n\ninterface IAppContext {\n  sidebarStatus: boolean\n  walletSidebarStatus: boolean\n  openSidebar: () => void\n  closeSidebar: () => void\n  toggleSidebar: () => void\n  toggleWalletSidebar: () => void\n}\n\nexport const AppContext = createContext({} as IAppContext);\n\nexport const AppCContextProvider = (props: { children: any }) => {\n  const [sidebarStatus, setSidebarStatus] = useState(false);\n  const [walletSidebarStatus, setWalletSidebarStatus] = useState(false);\n  const openSidebar = () => setSidebarStatus(true);\n  const closeSidebar = () => setSidebarStatus(false);\n  const toggleSidebar = () => setSidebarStatus(!sidebarStatus);\n  const toggleWalletSidebar = () => setWalletSidebarStatus(!walletSidebarStatus);\n\n  const contextValue = {\n    sidebarStatus,\n    openSidebar,\n    closeSidebar,\n    toggleSidebar,\n    walletSidebarStatus,\n    toggleWalletSidebar\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => useContext(AppContext);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useMediaQuery } from \"react-responsive\";\n\n// Breakpoints taken as for antd design all in px\nconst BREAKPOINTS = {\n  xs: 480,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1600,\n};\n\nexport function useResponsive() {\n  const isDesktop = useMediaQuery({\n    query: `(min-width: ${BREAKPOINTS[\"lg\"]}px)`,\n  });\n  const isTabletAndBelow = useMediaQuery({\n    query: `(max-width: ${BREAKPOINTS[\"lg\"] - 1}px)`,\n  });\n  const isMobileAndBelow = useMediaQuery({\n    query: `(max-width: ${BREAKPOINTS[\"sm\"] - 1}px)`,\n  });\n\n  return { isDesktop, isTabletAndBelow, isMobileAndBelow };\n}\n","import React from \"react\";\n\nconst Home = (props) => {\n  return (\n    <section className=\"hero is-fullheight\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <div className=\"block\">\n            <figure className=\"image is-64x64\" style={{margin: \"0 auto\"}}>\n              <img alt=\"FTW_SYMBOL\" src={\"/symbol.png\"} />\n            </figure>\n          </div>\n          <p className=\"title\">FOR THE WIN X <span className=\"has-text-success\">N3</span></p>\n          <p className=\"subtitle\">Building something cool</p>\n          <a className=\"has-text-grey-darker\" href={\"https://forthewinn.github.io/legacy-app\"}><small>Neo-legacy archive</small></a>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import { CONST as NEON_CONST } from \"@cityofzion/neon-core\";\nimport { INetworkType } from \"../network\";\nimport { IWalletType } from \"../wallet/interfaces\";\n\n/* Wallets */\nexport const O3 = \"O3\";\nexport const NEO_LINE = \"NEO_LINE\";\nexport const DEV = \"DEV\";\nexport const WALLET_LIST: {\n  label: string;\n  key: IWalletType;\n}[] = [\n  {\n    label: \"Dev\",\n    key: DEV\n  },\n  {\n    label: \"NEO Line\",\n    key: NEO_LINE\n  },\n  {\n    label: \"O3\",\n    key: O3\n  }\n];\n\n/* Network types */\nexport const PRIVATENET = \"N3PrivateNet\";\nexport const TESTNET = \"N3TestNet\";\nexport const MAINNET = \"N3MainNet\";\n\n/* Network configs */\nexport const PRIVATE_CONFIG = {\n  label: \"privateNet\",\n  url: \"http://127.0.0.1:50012\"\n};\n\nexport const TESTNET_CONFIG = {\n  label: \"N3TestNet\",\n  url: \"http://seed2t4.neo.org:20332\"\n};\n\nexport const MAINNET_CONFIG = {\n  label: \"N3MainNet\",\n  url: \"http://127.0.0.1:50012\"\n};\n\n/* Contract hashes */\nexport const GAS_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.GasToken;\nexport const NEO_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.NeoToken;\n\nexport const TOKEN_LIST = (network: INetworkType) => [\n  NEO_SCRIPT_HASH,\n  GAS_SCRIPT_HASH,\n  // NFT_SCRIPT_HASH[network]\n];\n\n/* Dev wallet */\nexport const DEV_WALLET_PRIVATE_KEY =\n  \"7b5d7fda53932ed9d43eb848dd521455767a4d40b5a994e6f351605e5a4ce26a\";\n","import { sc, u, wallet } from \"@cityofzion/neon-core\";\n\nexport const convertContractCallParam = (param: any) => {\n  switch (param.type) {\n    case \"Address\":\n      return sc.ContractParam.hash160(\n        wallet.getScriptHashFromAddress(param.value)\n      );\n    case \"Hash160\":\n      return sc.ContractParam.hash160(param.value);\n    case \"String\":\n      return sc.ContractParam.string(param.value);\n    case \"Integer\":\n      return sc.ContractParam.integer(param.value);\n    case \"Array\":\n      return sc.ContractParam.array(\n        ...param.value.map((i: any) => convertContractCallParam(i))\n      );\n    case \"ByteArray\":\n      return sc.ContractParam.byteArray(\n        u.hex2base64(u.str2hexstring(param.value))\n      );\n    default:\n      throw new Error(\"No support param\");\n  }\n  //       sc.ContractParam.hash160(minterHash),\n  //       sc.ContractParam.hash160(minterHash),\n  //       sc.ContractParam.integer(item.no),\n};\n","import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG\n} from \"../consts\";\nimport { convertContractCallParam } from \"../wallet/dev-wallet/helpers\";\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport { ApplicationLogJson } from \"@cityofzion/neon-core/lib/rpc/Query\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n\n  private static readonly READ_LOG_FREQUENCY = 6000; //ms\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static findNotificationFromTxId = async (txId: string, scriptHash: string, eventName: string, networkType: INetworkType) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(txId, networkType);\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName,\n    );\n  };\n\n  static getNotificationsFromTxId = async (txId: string, network: INetworkType) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n        console.log(appLog)\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[]\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    return await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH\n} from \"../../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../../network\";\nimport { convertContractCallParam } from \"./helpers\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\"\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" }\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"]\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpc = Network.getRPCClient(network);\n    const res = await rpc.getNep17Balances(DevWallet.account.address);\n    // @ts-ignore\n    res.balance = res.balance.map((item) => {\n      let symbol;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n      }\n      return {\n        contract: item.assethash,\n        amount: u.BigInteger.fromNumber(item.amount).toDecimal(8).toString(),\n        symbol\n      };\n    });\n    return res;\n  }\n\n  static async invoke(\n    network: INetworkType,\n    invokeScript: sc.ContractCallJson\n  ) {\n    const rpc = Network.getRPCClient(network);\n    const tx = await DevWallet.build(\n      rpc,\n      invokeScript,\n      DevWallet.account.address\n    );\n    const version: any = await rpc.getVersion();\n    tx.sign(DevWallet.account, version.network);\n    console.log(tx.systemFee.toDecimal(8).toString());\n    const txid = await rpc.sendRawTransaction(tx);\n    return {\n      txid,\n      nodeUrl: rpc.url\n    };\n  }\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson,\n    senderAddress: string,\n    cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n    // @ts-ignore\n    invokeScript.args = invokeScript.args.map((param: any) =>\n      convertContractCallParam(param)\n    );\n    console.log(invokeScript);\n    const script = sc.createScript({ ...invokeScript });\n\n    const signers = [\n      {\n        account: wallet.getScriptHashFromAddress(senderAddress),\n        scopes: tx.WitnessScope.CalledByEntry\n      }\n    ];\n    if (cosignerAddress) {\n      signers.push({\n        account: wallet.getScriptHashFromAddress(cosignerAddress),\n        scopes: tx.WitnessScope.Global\n      });\n    }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n\n    transaction.systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","import neo3Dapi from \"neo3-dapi\";\nimport { IConnectedWallet, IWalletType } from \"../interfaces\";\nimport { DEV, NEO_LINE, O3, TOKEN_LIST, WALLET_LIST } from \"../../consts\";\nimport { DevWallet } from \"../dev-wallet\";\nimport { sc, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { INetworkType } from \"../../network\";\n\nexport class WalletAPI {\n  walletType: IWalletType;\n\n  constructor(walletType: IWalletType) {\n    this.walletType = walletType;\n  }\n\n  static list = WALLET_LIST;\n\n  private getInstance = async (walletType: IWalletType): Promise<any> => {\n    let instance: any;\n    switch (walletType) {\n      case O3:\n        instance = neo3Dapi;\n        break;\n      case NEO_LINE:\n        // @ts-ignore\n        instance = new NEOLineN3.Init();\n        break;\n      case DEV:\n        instance = DevWallet;\n        break;\n      default:\n        throw new Error(\"No support wallet!\");\n    }\n    return instance;\n  };\n\n  // TODO::REMOVE DEV-WALLET\n  init = async (defaultNetwork: INetworkType): Promise<IConnectedWallet> => {\n    try {\n      const wallet = await this.getInstance(this.walletType);\n      let network;\n      let balances;\n      /* Temporary hard coding because of neoline */\n      if (this.walletType === NEO_LINE) {\n        // @ts-ignore\n        const neoline = new NEOLine.Init();\n        network = await neoline.getNetworks();\n      } else if (this.walletType === DEV) {\n        network = await wallet.getNetworks(defaultNetwork);\n      }\n\n      const provider = await wallet.getProvider();\n      const account = await wallet.getAccount();\n\n      if (this.walletType === DEV) {\n        balances = await wallet.getBalance(defaultNetwork);\n      } else {\n        balances = await wallet.getBalance({\n          params: {\n            address: account.address,\n            contracts: TOKEN_LIST(network.defaultNetwork),\n          },\n        });\n      }\n\n      return {\n        key: this.walletType,\n        provider,\n        account,\n        network,\n        balances,\n      };\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n  };\n\n  testInvoke = () => {};\n\n  /* Control signing and send transaction. TODO:Need to improve type hardcoding later */\n  invoke = async (\n    network: INetworkType,\n    senderAddress: string,\n    invokeScript: sc.ContractCallJson\n  ): Promise<any> => {\n    const wallet = await this.getInstance(this.walletType);\n    if (this.walletType === DEV) {\n      return await wallet.invoke(network, invokeScript);\n    } else {\n      // @ts-ignore\n      invokeScript.signers = [\n        {\n          account: NeonWallet.getScriptHashFromAddress(senderAddress),\n          scopes: 1,\n        },\n      ];\n      // @ts-ignore\n      return await wallet.invoke(invokeScript);\n    }\n  };\n}\n","import store from \"store2\";\nimport { IConnectedWallet, ITxReceipt } from \"../interfaces\";\n\nconst CONNECTED_WALLET = \"CONNECTED_WALLET\";\nconst TRANSACTIONS = \"TRANSACTIONS\";\n\nexport class LocalStorage {\n  public static getWallet = (): IConnectedWallet | undefined =>\n    validateConnectedWallet(store.get(CONNECTED_WALLET));\n\n  public static setWallet(connectedWallet: IConnectedWallet) {\n    const validated = validateConnectedWallet(connectedWallet);\n    store.set(CONNECTED_WALLET, validated);\n  }\n\n  public static removeWallet() {\n    store.remove(CONNECTED_WALLET);\n  }\n\n  public static getTransactions = (): ITxReceipt[] =>\n    store.has(TRANSACTIONS) ? store.get(TRANSACTIONS) : [];\n\n  public static removeTransaction = (tx: ITxReceipt) =>\n    store.remove(TRANSACTIONS, tx);\n\n  public static clearTransaction = () => store.set(TRANSACTIONS, []);\n}\n\nconst validateConnectedWallet = (connectedWallet?: IConnectedWallet) => {\n  if (\n    !connectedWallet ||\n    !connectedWallet.account ||\n    !connectedWallet.provider ||\n    !connectedWallet.network\n  ) {\n    return undefined;\n  }\n  return connectedWallet;\n};\n","import React, { createContext, useContext, useState } from \"react\";\nimport toast from \"react-hot-toast\";\n\nimport { ContextOptions, IWalletStates } from \"./interfaces\";\nimport { WalletAPI } from \"../api\";\nimport { IConnectedWallet, IWalletType } from \"../interfaces\";\nimport { LocalStorage } from \"..\";\nimport { sc } from \"@cityofzion/neon-core\";\n\nexport const WalletContext = createContext({} as IWalletStates);\n\nexport const WalletContextProvider = (props: {\n  options: ContextOptions;\n  children: any;\n}) => {\n  const [network] = useState(props.options.network);\n\n  const [isWalletModalActive, setWalletModalActive] = useState(false);\n\n  const [connectedWallet, setConnectedWallet] = useState<\n    IConnectedWallet | undefined\n  >(props.options.useLocalStorage ? LocalStorage.getWallet() : undefined);\n\n  const [invokeScript, setInvokeScript] = useState<\n    sc.ContractCallJson | undefined\n  >();\n\n  const openWalletModal = () => setWalletModalActive(true);\n\n  const closeWalletModal = () => setWalletModalActive(false);\n\n  const connectWallet = async (walletType: IWalletType) => {\n    try {\n      const connectedWallet = await new WalletAPI(walletType).init(network);\n      setConnectedWallet(connectedWallet);\n      if (props.options.useLocalStorage) {\n        LocalStorage.setWallet(connectedWallet);\n      }\n      setWalletModalActive(false);\n    } catch (e) {\n      console.error(e);\n      toast.error(`Failed to connect`);\n    }\n  };\n\n  const disConnectWallet = () => {\n    LocalStorage.removeWallet();\n    setConnectedWallet(undefined);\n  };\n\n  const doInvoke = (invokeScript: sc.ContractCallJson) => {\n    if (isWalletModalActive) setWalletModalActive(false);\n    setInvokeScript(invokeScript);\n  };\n\n  const closeInvoke = () => setInvokeScript(undefined);\n\n  const contextValue: IWalletStates = {\n    useDevWallet: props.options.useDevWallet,\n    network,\n    invokeScript,\n    list: WalletAPI.list,\n    connectedWallet,\n    isWalletModalActive,\n    openWalletModal,\n    closeWalletModal,\n    connectWallet,\n    disConnectWallet,\n    doInvoke,\n    closeInvoke\n  };\n\n  return (\n    <WalletContext.Provider value={contextValue}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n};\n\nexport const useWallet = () => useContext(WalletContext);\n","export const truncateAddress = (address: string) => {\n  return `${address.substring(0, 4)}...${address.substr(address.length - 2)}`;\n};\n","import { CONST } from \"../../neo\";\n\nexport const getWalletIcon = (key: string) => {\n  let svg = \"\";\n  switch (key){\n    case CONST.DEV:\n      svg = \"/dev.png\"\n      break;\n    case CONST.O3:\n      svg = \"/o3.svg\"\n      break;\n    case CONST.NEO_LINE:\n      svg = \"/neoline.svg\"\n      break;\n  }\n  return svg\n}\n","import React, { useState } from \"react\";\nimport { FaAngleDown } from \"react-icons/all\";\nimport { wallet } from \"../../neo\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletDropdown = () => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectedWallet } = wallet.useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n  if (!connectedWallet) {\n    return (\n      <button className=\"button is-white \" onClick={() => setActive(!isActive)}>\n        <strong>Wallet</strong>\n      </button>\n    );\n  }\n  return (\n    <div className={`dropdown ${isActive && \"is-active\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-white\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu3\"\n          onClick={() => setActive(!isActive)}\n        >\n          <span className=\"icon is-small\">\n            <img src={getWalletIcon(connectedWallet.key)} />\n          </span>\n          <span><strong>Wallet</strong></span>\n          <span className=\"icon is-small\">\n            <FaAngleDown />\n            {/*<i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>*/}\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a\n            onClick={handleDisconnectWallet}\n            href=\"#\"\n            className=\"dropdown-item\"\n          >\n            Disconnect\n          </a>\n          {/*<hr className=\"dropdown-divider\"/>*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React from \"react\";\n\nconst AssetCard = (props) => {\n\n  return (\n    <div className=\"media box\">\n      <div className=\"media-left\">\n        <strong>NEO</strong>\n      </div>\n      <div className=\"media-content\"></div>\n      <div className=\"media-right has-text-right\">\n        13.123\n      </div>\n    </div>\n  );\n\n};\n\nexport default AssetCard;\n","import React from \"react\";\nimport { wallet, CONST } from \"../../neo\";\nimport { getWalletIcon } from \"./helpers\";\nconst WalletList = (props) => {\n  const { connectWallet, list, useDevWallet } = wallet.useWallet();\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} alt=\"React Logo\" />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n","import React from \"react\";\nimport { wallet, utils } from \"../../neo\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport AssetCard from \"./AssetCard\";\nimport WalletList from \"./WalletList\";\nconst Wallet = (props) => {\n  const { connectedWallet } = wallet.useWallet();\n  return (\n    <>\n      <header className=\"level is-mobile p-3 is-marginless\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <WalletDropdown />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <small>\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </small>\n            </div>\n          </div>\n        )}\n      </header>\n      <hr className=\"m-0\" />\n      <section className=\"p-5\">\n        {connectedWallet ? <AssetCard /> : <WalletList />}\n      </section>\n    </>\n  );\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport Wallet from \"../wallet\";\n\nconst WalletSidebar = (props) => {\n  const { walletSidebarStatus, toggleWalletSidebar } = useApp();\n  return (\n    <SideNav\n      openFromRight={true}\n      style={{ top: \"52px\"}}\n      // navStyle={{ width: \"80%\" }}\n      showNav={walletSidebarStatus}\n      onHideNav={toggleWalletSidebar}\n      children={<Wallet />}\n    />\n  );\n};\n\nexport default WalletSidebar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"react-pro-sidebar/dist/css/styles.css\";\nimport Sidebar from \"react-sidebar\";\nimport Header from \"./components/Header\";\nimport { useResponsive } from \"../common/hooks/use-responsive\";\nimport { useApp } from \"../common/hooks/use-app\";\nimport Home from \"./pages/Home\";\n\nimport SidebarNav from \"./components/SidebarNav\";\nimport WalletSidebar from \"./components/WalletSidebar\";\nimport { HOME_PATH } from \"../consts\";\nimport { wallet, CONST } from \"../neo\";\nimport NotFound from \"./pages/NotFound\";\n\nconst App = () => {\n  const { sidebarStatus, openSidebar, closeSidebar } = useApp();\n  const { isMobileAndBelow } = useResponsive();\n  console.log(isMobileAndBelow);\n  return (\n    <wallet.WalletContextProvider\n      options={{\n        network: CONST.TESTNET,\n        useLocalStorage: true,\n        useDevWallet: true,\n      }}\n    >\n      <Router>\n        {/*<Header />*/}\n        <Route exact path={HOME_PATH} component={Home} />\n        {/*<Route path={\"*\"} exact={true} component={NotFound} />*/}\n        {/*<Sidebar*/}\n        {/*  rootClassName=\"sidebar\"*/}\n        {/*  sidebarClassName=\"sidebar-sidebar\"*/}\n        {/*  contentClassName=\"sidebar-content\"*/}\n        {/*  docked={!isMobileAndBelow}*/}\n        {/*  open={isMobileAndBelow ? sidebarStatus : false}*/}\n        {/*  sidebar={<SidebarNav />}*/}\n        {/*  onSetOpen={() => (!sidebarStatus ? openSidebar() : closeSidebar())}*/}\n        {/*>*/}\n        {/*  <Switch>*/}\n        {/*    <Route exact path={HOME_PATH} component={Home} />*/}\n        {/*    /!*<Route exact path=\"/neofi\">*!/*/}\n        {/*    /!*  <NeoFi />*!/*/}\n        {/*    /!*</Route>*!/*/}\n        {/*    /!*<Route exact path=\"/migration\">*!/*/}\n        {/*    /!*  <Migration />*!/*/}\n        {/*    /!*</Route>*!/*/}\n        {/*  </Switch>*/}\n        {/*</Sidebar>*/}\n        <WalletSidebar />\n      </Router>\n    </wallet.WalletContextProvider>\n  );\n};\n\nexport default App;\n","export const HOME_PATH = \"/\";\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppCContextProvider } from \"./common/hooks/use-app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/style.scss\";\nimport App from \"./ui\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppCContextProvider>\n      <App />\n    </AppCContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}