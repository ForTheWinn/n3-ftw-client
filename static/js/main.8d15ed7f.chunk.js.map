{"version":3,"sources":["common/hooks/use-app.tsx","reportWebVitals.ts","ui/components/Logo.tsx","packages/neo/consts/index.ts","packages/neo/utils/index.ts","packages/neo/network/index.ts","packages/neo/contracts/ftw/farm/helpers.ts","packages/neo/contracts/ftw/nep17/index.ts","packages/neo/contracts/ftw/farm/index.ts","packages/neo/contracts/ftw/nft/consts.ts","packages/neo/contracts/ftw/nft/helpers.ts","packages/neo/contracts/ftw/nft/index.ts","packages/neo/contracts/ftw/bank/index.ts","packages/neo/wallet/dev-wallet.ts","packages/neo/wallet/index.ts","packages/neo/contracts/ftw/farm/consts.ts","packages/neo/local-storage/index.ts","packages/provider/wallet-provider.tsx","consts/pageRoutes.ts","packages/ui/Wallet/helpers.ts","ui/components/WalletDropdown.tsx","ui/components/NetworkSwitch.tsx","ui/components/Header.tsx","packages/ui/Wallet/WalletDropdown.tsx","packages/ui/Wallet/WalletList.tsx","packages/ui/Wallet/AssetCard.tsx","packages/ui/Wallet/Runes.tsx","packages/ui/Wallet/index.tsx","ui/components/WalletSidebar.tsx","ui/components/PageLayout.tsx","ui/components/Modal.tsx","ui/components/TransactionSubmitted.tsx","ui/pages/Farm/ActionModal.tsx","ui/pages/Farm/SnapshotCountdown.tsx","ui/pages/Farm/SnapshotCard.tsx","ui/pages/Farm/SnapshotList.tsx","ui/components/NotifyError.tsx","ui/pages/Farm/MyPosition.tsx","ui/pages/Farm/Pool.tsx","ui/pages/Farm/CancelModal.tsx","ui/pages/Farm/ClaimModal.tsx","ui/pages/Farm/Claims.tsx","ui/pages/Farm/PositionModal.tsx","ui/pages/Farm/About.tsx","ui/pages/Farm/index.tsx","ui/pages/Gallery/PropertiesModal.tsx","ui/pages/MyCollection/index.tsx","ui/components/RandomRune.tsx","ui/pages/Gallery/Banner.tsx","packages/neo/api/consts.ts","packages/neo/api/rest.ts","packages/ui/AfterTransactionSubmitted/RuneLoading.tsx","ui/pages/Tournament/scenes/Arena/Players/components/CheckMark.tsx","packages/ui/AfterTransactionSubmitted/index.tsx","ui/pages/Gallery/index.tsx","ui/components/SidebarNav.tsx","ui/components/MobileMenuSlider.tsx","ui/pages/Home.tsx","packages/neo/contracts/ftw/smith/consts.ts","packages/neo/contracts/ftw/smith/helpers.ts","packages/neo/contracts/ftw/smith/index.ts","ui/pages/Smith/helpers.ts","ui/pages/Smith/NEP17FormModal.tsx","ui/pages/Smith/NEP11FormModal.tsx","ui/pages/Smith/Banner.tsx","ui/pages/Smith/scenes/NEP17/ContractCard.tsx","ui/pages/Smith/scenes/NEP17/index.tsx","ui/pages/Smith/NEP11MintFormModal.tsx","ui/pages/Smith/scenes/NEP11/DisplayNFT.tsx","ui/pages/Smith/scenes/NEP11/Tokens.tsx","ui/pages/Smith/scenes/NEP11/ContractCard.tsx","ui/pages/Smith/scenes/NEP11/index.tsx","ui/pages/Smith/index.tsx","ui/pages/Tournament/pageRoutes.ts","ui/pages/Tournament/scenes/Home/index.tsx","packages/neo/contracts/ftw/tournament/consts.ts","packages/neo/contracts/ftw/tournament/helpers.ts","packages/neo/contracts/ftw/tournament/index.ts","ui/pages/Tournament/scenes/Arena/Banner.tsx","ui/pages/Tournament/components/DisplayRuneWithProperties.tsx","ui/pages/Tournament/components/BetButton.tsx","ui/pages/Tournament/components/LeaveButton.tsx","ui/pages/Tournament/scenes/Arena/Players/components/PlayerModal.tsx","ui/pages/Tournament/scenes/Arena/Players/components/NFTListModal.tsx","ui/pages/Tournament/scenes/Arena/Players/components/ArenaRegisterButton.tsx","ui/pages/Tournament/scenes/Arena/Players/index.tsx","ui/pages/Tournament/scenes/Arena/History/NFTDetailModal.tsx","ui/pages/Tournament/components/ClaimButton.tsx","ui/pages/Tournament/scenes/Arena/History/HistoryTable.tsx","ui/pages/Tournament/scenes/Arena/helpers.ts","ui/pages/Tournament/scenes/Arena/History/TournamentTree.tsx","ui/pages/Tournament/scenes/Arena/History/Replay.tsx","ui/pages/Tournament/components/PlayButton.tsx","ui/pages/Tournament/scenes/Arena/History/index.tsx","ui/pages/Tournament/scenes/Arena/index.tsx","ui/pages/Tournament/index.tsx","ui/index.tsx","index.tsx"],"names":["AppContext","createContext","AppCContextProvider","props","useState","sidebarStatus","setSidebarStatus","walletSidebarStatus","setWalletSidebarStatus","contextValue","openSidebar","closeSidebar","toggleSidebar","toggleWalletSidebar","Provider","value","children","useApp","useContext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Logo","alt","src","width","height","O3","NEO_LINE","DEV","WALLET_LIST","label","key","PRIVATENET","TESTNET","MAINNET","PRIVATE_CONFIG","url","TESTNET_CONFIG","TESTNET_CONFIG_2","MAINNET_CONFIG","MAINNET_CONFIG_2","GAS_SCRIPT_HASH","NEON_CONST","NATIVE_CONTRACT_HASH","GasToken","NEO_SCRIPT_HASH","NeoToken","TOKEN_LIST","network","DEV_WALLET_PRIVATE_KEY","truncateAddress","address","substring","substr","length","convertContractCallParam","param","type","sc","ContractParam","hash160","wallet","getScriptHashFromAddress","string","integer","array","map","i","byteArray","u","hex2base64","str2hexstring","Error","base64ToAddress","str","getAddressFromScriptHash","base64ToHash160","reverseHex","base642hex","base64ToString","HexString","fromBase64","toAscii","toString","base64ToFixed8","BigInteger","fromNumber","toDecimal","val","parseFloat","base64ToDate","moment","unix","format","truncateDecimal","v","p","s","Math","pow","trunc","Network","READ_LOG_FREQUENCY","getRPCClient","networkType","config","rpc","RPCClient","getRawTx","txid","a","rpcClient","getApplicationLog","rawTx","sleep","findNotificationFromTxId","txId","scriptHash","eventName","getNotificationsFromTxId","notifications","find","n","contract","eventname","appLog","executions","forEach","e","push","read","scripts","sb","ScriptBuilder","script","params","args","arg","emitAppCall","operation","invokeScript","fromHex","build","res","state","console","error","exception","duration","Promise","resolve","setTimeout","parseDeposit","stackItem","position","amount","lastClaimNo","createdAt","parseClaimPaginate","totalItems","totalPages","page","items","parseClaim","item","no","from","end","GAS","FTW","parseSnapshotItem","totalPositionPool","totalNeo","totalGas","range","winPosition","FTW_SCRIPT_HASH","CONST","FarmContract","contractHash","deposit","connectedWallet","account","WalletAPI","invoke","remove","createSnapshot","claim","changePosition","getStatus","neoBalance","ftwBalance","timeLeft","interval","vote","snapshots","claims","stack","undefined","this","FARM_SCRIPT_HASH","RUNE_SCRIPT_HASH","RUNE_PRICE","RUNE_PHASE_FILTER","parseProperties","obj","base642utf8","NFTContract","mint","fromDecimal","withdrawFund","getTotalSupplyScript","getPropertiesScript","tokenId","getProperties","getTokensOfScript","ownerAddress","getTokensOf","metaList","iterator","meta","getTokens","DevWallet","name","version","website","compatibility","extra","currency","theme","chainId","defaultNetwork","networks","getNep17Balances","balances","balance","symbol","assethash","includes","getVersion","txObj","sign","protocol","sendRawTransaction","nodeUrl","Account","createScript","getBlockCount","currentHeight","transaction","tx","Transaction","validUntilBlock","signers","calculateNetworkFee","networkFee","calculateSystemFee","systemFee","extraSystemFee","fee","add","invokeFunction","PolicyContract","invokeFunctionResponse","feePerByte","transactionByteSize","serialize","witnessProcessingFee","mul","gasconsumed","balanceCheck","sender","transferScript","gasBalance","requiredGas","transferTokenBalance","Fixed8","fromRawNumber","toNumber","transferAmount","walletType","O3Wallet","instance","neo3Dapi","getProvider","provider","getAccount","getNetworks","getBalance","contracts","NeoLine","NEOLineN3","Init","instance2","NEOLine","Dev","init","description","currentNetwork","senderAddress","NeonWallet","scopes","WitnessScope","CalledByEntry","submittedTx","method","LocalStorage","addTransaction","list","CONNECTED_WALLET","TRANSACTIONS","NETWORK","validated","validateConnectedWallet","store","set","has","window","dispatchEvent","Event","transactions","get","status","initStorage","supportContracts","getTransactions","validatedTx","removeTransaction","getNetwork","setNetwork","getWallet","clearTransaction","WalletContext","WalletContextProvider","totalTxSubmit","setTotalTxSubmit","isWalletModalActive","setWalletModalActive","options","useLocalStorage","setConnectedWallet","setInvokeScript","pendingTransactions","setPendingTransactions","connectWallet","setWallet","toast","message","useDevWallet","openWalletModal","closeWalletModal","disConnectWallet","removeWallet","doInvoke","closeInvoke","addPendingTransaction","removePendingTransaction","filter","switchNetwork","increaseTotalTxSubmit","useWallet","FARM_PATH","GALLERY_PATH","TOURNAMENT_PATH","SMITH_PATH","COLLECTION_PATH","MENU","path","getWalletIcon","svg","WalletDropdown","isActive","setActive","useEffect","refresh","disconnected","addEventListener","removeEventListener","Constants","EventName","ACCOUNT_CHANGED","NETWORK_CHANGED","DISCONNECTED","className","onClick","utils","id","role","to","NetworkSwitch","networkList","confirm","Header","style","justifyContent","marginLeft","route","activeClassName","href","WalletList","_wallet","AssetCard","Runes","setTokens","setError","fetchContractStatus","flexFlow","Wallet","WalletSidebar","openFromRight","top","showNav","onHideNav","PageLayout","ModalCard","onClose","isLoading","React","$","addClass","removeClass","zIndex","TransactionSubmitted","ActionModal","setAmount","setPosition","setTxid","onDeposit","Modal","onChange","target","_","autoFocus","decimalScale","inputMode","onValueChange","thousandSeparator","suffix","allowLeadingZeros","disabled","SnapshotCountdown","onCreateSnapshot","CreateSnapshotBtn","date","Date","now","renderer","completed","hours","minutes","seconds","SnapshotCard","SnapshotList","contractStatus","NotifyError","msg","MyPosition","lastSnapshotNo","onCancel","onClaim","onPositionChange","isClaimable","Pool","CancelModal","Claims","PositionModal","currentPosition","tempTime","Farm","production","setRoute","modalActive","setModalActive","cancelModalActive","setCancelModalActive","claimModalActive","setClaimModalActive","positionModalActive","setPositionModalActive","setContractStatus","onClaimModalActive","About","ClaimModal","PropertiesModal","setItem","setLoading","phase","luck","image","owner","MyCollection","tokens","propertiesModalActive","setPropertiesModalActive","token","getColors","floor","random","DisplayRandomRune","colors","setColors","bg","dot1","dot2","dot3","dot4","body","setInterval","clearInterval","Banner","onMint","display","ENDPOINT","RestAPI","endpoint","fetchResult","fetch","json","RuneLoading","setBg","setDot1","setDot2","setDot3","setDot4","setBody","timer","clearTimeout","CheckMark","xmlns","viewBox","fill","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","strokeLinecap","points","AfterTransactionSubmitted","onSuccess","onError","isDone","setDone","hasError","checkTxid","margin","alignItems","size","marginTop","Gallery","setFilter","getRunes","document","title","onFilterChange","SidebarNav","MobileMenuSlider","Home","vantaEffect","setVantaEffect","myRef","useRef","DOTS","el","current","mouseControls","touchControls","gyroControls","minHeight","minWidth","backgroundColor","destroy","autoPlay","loop","ref","SMITH_SCRIPT_HASH","DEPLOY_FEE","parseRecord","contractOwner","decimals","totalSupply","author","parseNEP11Record","email","parseSmithProperties","SmithContract","createNEP17","contractName","createNEP11","mintNFT","records","getNEP11Records","emojiRegexExp","detectEmojiInString","values","detected","Object","keys","test","NEP17FormModal","setValues","handleValueChange","hasEmoji","max","allowNegative","NEP11FormModal","location","useLocation","isNep11FormModalActive","setNep11FormModalActive","isNep17FormModalActive","setNep17FormModalActive","pathname","ContractCard","data","NEP17Smith","setStatus","NEP11MintFormModal","showForm","setShowForm","attributes","attValues","setAttValues","handleAttChange","JSON","stringify","attKeys","k","placeholder","DisplayRune","setToken","Tokens","DisplayNFT","isMintModalActive","setMintModalActive","NEP11Smith","setData","Smith","exact","component","NEP11","NEP17","ARENA_PATH","ArenaHome","ARENA_LIST","backgroundImage","backgroundSize","backgroundPosition","arena","TOURNAMENT_SCRIPT_HASH","ADMIN_FOR_PLAY","parsePlayer","tokenHash","parseGame","gameNo","tournamentTree","champion","nonce","betsOnChampion","totalBets","rollover","championPrize","calculateClaimableAmount","history","betAmount","totalAmount","ownershipPercentage","TournamentContract","register","arenaNo","play","leave","bet","getPlayers","currentPage","getGameHeight","getBetAmount","championTokenId","script1","isClaimed","getCurrentPrize","prize","fetchBetAmount","DisplayRuneWithProperties","isOwner","getRune","fetchRune","left","BetButton","onBet","LeaveButton","onLeave","PlayerModal","player","gameOwner","NFTListModal","onRegister","RegisterButton","playerCount","Players","playerModalActive","setPlayerModalActive","players","setPlayers","onPlayerModalActive","NFTDetailModal","rune","ClaimButton","onClaimed","HistoryTable","onReplay","fight","aPhase","aLuck","bPhase","bLuck","compareLuck","chunks","arr","slice","TournamentTree","champ","tree","capacity","stage","winners","match","rounds","reverse","winner","opacity","Replay","gameHistory","PlayButton","onSubmitted","onPlay","History","playTxid","setPlayTxid","claimTxid","setClaimTxid","setPage","nftModalActive","setNftModalActive","replayModalActive","setReplayModalActive","setHistory","onNFTModalActive","fetchHistory","itemsPerPage","ceil","game","pages","_page","Arena","Tournament","ArenaMenu","App","process","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d15ed7f.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n// import toast from \"react-hot-toast\";\n\ninterface IAppContext {\n  sidebarStatus: boolean;\n  walletSidebarStatus: boolean;\n  openSidebar: () => void;\n  closeSidebar: () => void;\n  toggleSidebar: () => void;\n  toggleWalletSidebar: () => void;\n}\n\nexport const AppContext = createContext({} as IAppContext);\n\nexport const AppCContextProvider = (props: { children: any }) => {\n  const [sidebarStatus, setSidebarStatus] = useState(false);\n  const [walletSidebarStatus, setWalletSidebarStatus] = useState(false);\n  const openSidebar = () => setSidebarStatus(true);\n  const closeSidebar = () => setSidebarStatus(false);\n  const toggleSidebar = () => {\n    if (walletSidebarStatus) {\n      setWalletSidebarStatus(false);\n    }\n    setSidebarStatus(!sidebarStatus);\n  };\n  const toggleWalletSidebar = () => {\n    if (sidebarStatus) {\n      setSidebarStatus(false);\n    }\n    setWalletSidebarStatus(!walletSidebarStatus);\n  };\n\n  const contextValue = {\n    sidebarStatus,\n    openSidebar,\n    closeSidebar,\n    toggleSidebar,\n    walletSidebarStatus,\n    toggleWalletSidebar,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => useContext(AppContext);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nconst Logo = () => {\n  return (\n    <>\n      <img\n        alt=\"Forthewin Logo\"\n        src={\"/logo/512_512.svg\"}\n        width=\"36px\"\n        height=\"36px\"\n      />\n      {/*<DisplayRandomRune width=\"36px\" height=\"36px\" />*/}\n    </>\n  );\n};\n\nexport default Logo;\n","import { CONST as NEON_CONST } from \"@cityofzion/neon-core\";\nimport { INetworkType } from \"../network\";\nimport { IWalletType } from \"../wallet/interfaces\";\n\n/* Wallets */\nexport const O3 = \"O3\";\nexport const NEO_LINE = \"NEO_LINE\";\nexport const DEV = \"DEV\";\nexport const WALLET_LIST: {\n  label: string;\n  key: IWalletType;\n}[] = [\n  {\n    label: \"Dev\",\n    key: DEV,\n  },\n  {\n    label: \"NEO Line\",\n    key: NEO_LINE,\n  },\n  {\n    label: \"O3\",\n    key: O3,\n  },\n];\n\n/* Network types */\nexport const PRIVATENET = \"N3PrivateNet\";\nexport const TESTNET = \"N3TestNet\";\nexport const MAINNET = \"N3MainNet\";\n\n/* Network configs */\nexport const PRIVATE_CONFIG = {\n  label: \"privateNet\",\n  url: \"http://127.0.0.1:50012\",\n};\n\nexport const TESTNET_CONFIG = {\n  label: \"N3TestNet\",\n  // url: \"https://testnet1.neo.coz.io:443\",\n  url: \"https://testnet2.neo.coz.io:443\",\n};\n\n// Using for tx monitor\nexport const TESTNET_CONFIG_2 = {\n  label: \"N3TestNet\",\n  url: \"https://testnet1.neo.coz.io:443\",\n};\n\nexport const MAINNET_CONFIG = {\n  label: \"N3MainNet\",\n  url: \"https://n3seed2.ngd.network:10332\",\n};\n\nexport const MAINNET_CONFIG_2 = {\n  label: \"N3MainNet\",\n  url: \"https://mainnet1.neo.coz.io:443\",\n};\n\n/* Contract hashes */\nexport const GAS_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.GasToken;\nexport const NEO_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.NeoToken;\n\nexport const TOKEN_LIST = (network: INetworkType) => [\n  NEO_SCRIPT_HASH,\n  GAS_SCRIPT_HASH,\n  // RUNE_SCRIPT_HASH[network]\n];\n\n/* Dev wallet */\nexport const DEV_WALLET_PRIVATE_KEY =\n  \"7b5d7fda53932ed9d43eb848dd521455767a4d40b5a994e6f351605e5a4ce26a\";\n","import { sc, u, wallet } from \"@cityofzion/neon-core\";\nimport moment from \"moment\";\n\nexport const truncateAddress = (address: string) => {\n  return `${address.substring(0, 4)}...${address.substr(address.length - 2)}`;\n};\n\n/**\n * It converts contract call params for dev wallet. Depending on 3rd wallet params.\n * @param param\n */\nexport const convertContractCallParam = (param: any) => {\n  switch (param.type) {\n    case \"Address\":\n      return sc.ContractParam.hash160(\n        wallet.getScriptHashFromAddress(param.value)\n      );\n    case \"Hash160\":\n      return sc.ContractParam.hash160(param.value);\n    case \"String\":\n      return sc.ContractParam.string(param.value);\n    case \"Integer\":\n      return sc.ContractParam.integer(param.value);\n    case \"Array\":\n      return sc.ContractParam.array(\n        ...param.value.map((i: any) => convertContractCallParam(i))\n      );\n    case \"ByteArray\":\n      return sc.ContractParam.byteArray(\n        u.hex2base64(u.str2hexstring(param.value))\n      );\n    default:\n      throw new Error(\"No support param\");\n  }\n};\n\nexport const base64ToAddress = (str: string) =>\n  wallet.getAddressFromScriptHash(base64ToHash160(str));\n\nexport const base64ToHash160 = (str: string) => u.reverseHex(u.base642hex(str));\n\nexport const base64ToString = (str: string) =>\n  u.HexString.fromBase64(str).toAscii().toString();\n\nexport const base64ToFixed8 = (str: string) => {\n  const no = u.BigInteger.fromNumber(str).toDecimal(8);\n  return no;\n};\n\nexport const toDecimal = (val: string): number => {\n  return parseFloat(u.BigInteger.fromNumber(val).toDecimal(8).toString());\n};\n\n// export const toNumber = () => {\n//\n// }\n\nexport const base64ToDate = (str: string) =>\n  moment.unix(parseFloat(str) / 1000).format(\"lll\");\n\nexport function truncateDecimal(v, p) {\n  const s = Math.pow(10, p || 0);\n  return Math.trunc(s * v) / s;\n}\n","import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG,\n  TESTNET_CONFIG_2,\n  MAINNET_CONFIG_2,\n} from \"../consts\";\n// tslint:disable-next-line:no-submodule-imports\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport {\n  ApplicationLogJson,\n  GetRawTransactionResult,\n  // tslint:disable-next-line:no-submodule-imports\n} from \"@cityofzion/neon-core/lib/rpc/Query\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n  private static readonly READ_LOG_FREQUENCY = 6000;\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static getRawTx = async (txid: string, networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG_2;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG_2;\n        break;\n    }\n    const rpcClient = new rpc.RPCClient(config.url);\n    let rawTx: any;\n    do {\n      try {\n        rawTx = await rpcClient.getApplicationLog(txid);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!rawTx);\n\n    return rawTx;\n  };\n\n  static findNotificationFromTxId = async (\n    txId: string,\n    scriptHash: string,\n    eventName: string,\n    networkType: INetworkType\n  ) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(\n      txId,\n      networkType\n    );\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName\n    );\n  };\n\n  static getNotificationsFromTxId = async (\n    txId: string,\n    network: INetworkType\n  ) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[]\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    const res = await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    if (res.state === \"FAULT\") {\n      console.error(\"RPC read error\" + res);\n      throw new Error(res.exception ? res.exception : \"Network error\");\n    }\n    return res;\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","import { IFarmDepositRecord } from \"./interfaces\";\nimport { base64ToDate, base64ToFixed8, base64ToString } from \"../../../utils\";\n\nexport const parseDeposit = (\n  stackItem: any\n): IFarmDepositRecord | undefined => {\n  // TODO check if there no deposit\n  // if (!stackItem.value) return undefined;\n  return {\n    position: stackItem[0].value,\n    amount: stackItem[1].value,\n    lastClaimNo: stackItem[2].value,\n    createdAt: stackItem[3].value,\n  };\n};\n\nexport const parseClaimPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseClaim(stackItem[3].value),\n  };\n};\n\nexport const parseClaim = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      from: item.value[1].value,\n      end: item.value[2].value,\n      GAS: base64ToFixed8(item.value[3].value),\n      FTW: base64ToFixed8(item.value[4].value),\n      createdAt: base64ToDate(item.value[5].value),\n    };\n  });\n};\n\nexport const parseSnapshotPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSnapshotItem(stackItem[3].value),\n  };\n};\n\nconst parseSnapshotItem = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      totalPositionPool: item.value[1].value, // NEO amount\n      totalNeo: item.value[2].value, // NEO amount\n      totalGas: base64ToFixed8(item.value[3].value),\n      range: base64ToFixed8(item.value[4].value),\n      winPosition: item.value[5].value,\n      createdAt: base64ToDate(item.value[6].value),\n    };\n  });\n};\n","import { CONST } from \"../../../index\";\n\nexport const FTW_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\",\n  [CONST.TESTNET]: \"9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\",\n  [CONST.MAINNET]: \"9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20 \",\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { NEO_SCRIPT_HASH } from \"../../../consts\";\nimport { FARM_SCRIPT_HASH } from \"./consts\";\nimport { IFarmContractStatus } from \"./interfaces\";\nimport {\n  parseClaimPaginate,\n  parseDeposit,\n  parseSnapshotPaginate,\n} from \"./helpers\";\nimport { FTW_SCRIPT_HASH } from \"../nep17\";\nimport { base64ToFixed8 } from \"../../../utils\";\n\nexport class FarmContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FARM_SCRIPT_HASH[networkType];\n  }\n\n  deposit = async (\n    connectedWallet: IConnectedWallet,\n    amount: string,\n    position: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: amount,\n        },\n        {\n          type: \"Integer\",\n          value: parseFloat(position),\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  remove = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"removeFund\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  createSnapshot = async (\n    connectedWallet: IConnectedWallet\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"createSnapshot\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  claim = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  changePosition = async (\n    connectedWallet: IConnectedWallet,\n    position: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"changePosition\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Integer\",\n          value: position,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getStatus = async (\n    connectedWallet?: IConnectedWallet\n  ): Promise<IFarmContractStatus> => {\n    const neoBalance = {\n      operation: \"balanceOf\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const ftwBalance = {\n      operation: \"balanceOf\",\n      scriptHash: FTW_SCRIPT_HASH[this.network],\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const timeLeft = {\n      operation: \"timeLeft\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const interval = {\n      operation: \"getSnapshotInterval\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const range = {\n      operation: \"getRange\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const vote = {\n      operation: \"getVote\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const snapshots = {\n      operation: \"getSnapshots\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n\n    const scripts = [\n      neoBalance,\n      ftwBalance,\n      timeLeft,\n      interval,\n      range,\n      vote,\n      snapshots,\n    ];\n\n    if (connectedWallet) {\n      const deposit = {\n        operation: \"getDeposit\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            type: \"Address\",\n            value: connectedWallet.account.address,\n          },\n        ],\n      };\n      const claims = {\n        operation: \"getClaims\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            // @ts-ignore\n            type: \"Address\",\n            // @ts-ignore\n            value: connectedWallet.account.address,\n          },\n          {\n            type: \"Integer\",\n            value: 1,\n          },\n        ],\n      };\n      scripts.push(deposit);\n      scripts.push(claims);\n    }\n\n    const res = await Network.read(this.network, scripts);\n    return {\n      neoBalance: res.stack[0].value as string,\n      ftwBalance: base64ToFixed8(res.stack[1].value as string),\n      timeLeft: res.stack[2].value as string,\n      interval: res.stack[3].value as string,\n      range: res.stack[4].value as string,\n      vote: res.stack[5].value as string,\n      snapshots: parseSnapshotPaginate(res.stack[6].value),\n      deposit:\n        connectedWallet && res.stack[7].value\n          ? parseDeposit(res.stack[7].value)\n          : undefined,\n      claims:\n        connectedWallet && res.stack[8].value\n          ? parseClaimPaginate(res.stack[8].value)\n          : undefined,\n    };\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const RUNE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.TESTNET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.MAINNET]: \"bebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\",\n};\n\nexport const RUNE_PRICE = {\n  [CONST.PRIVATENET]: \"10\",\n  [CONST.TESTNET]: \"0.1\", // Testnet mint is cheaper than mainnet\n  [CONST.MAINNET]: \"10\",\n};\n\nexport const RUNE_PHASE_FILTER = [\n  \"All\",\n  \"Fire\",\n  \"Water\",\n  \"Wood\",\n  \"Earth\",\n  \"Metal\",\n  \"Dark\",\n  \"Light\",\n];\n","import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { sc, u } from \"@cityofzion/neon-core\";\nimport { GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { RUNE_SCRIPT_HASH, RUNE_PRICE } from \"./consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { IRuneMeta } from \"./interfaces\";\nimport { parseProperties } from \"./helpers\";\n\nexport class NFTContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = RUNE_SCRIPT_HASH[networkType];\n  }\n\n  mint = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(\n            RUNE_PRICE[this.network],\n            8\n          ).toString(),\n        },\n        {\n          type: \"String\",\n          value: \"1\",\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      \"0.01\"\n    );\n  };\n\n  withdrawFund = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"withdrawFund\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getTotalSupplyScript = (): sc.ContractCallJson => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"totalSupply\",\n      args: [],\n    };\n  };\n\n  getPropertiesScript = (tokenId: string) => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n  };\n\n  getProperties = async (tokenId: string): Promise<IRuneMeta> => {\n    const script = this.getPropertiesScript(tokenId);\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseProperties(res.stack);\n  };\n\n  getTokensOfScript = (ownerAddress: string) => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = this.getTokensOfScript(ownerAddress);\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      const meta = await this.getProperties(tokenId);\n      // @ts-ignore\n      metaList.push({ tokenId, ...meta });\n    }\n    return metaList;\n  };\n\n  getTokens = async (): Promise<string[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokens\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].iterator.map((item) => {\n      return u.HexString.fromBase64(item.value as string).toAscii();\n    });\n  };\n}\nexport { RUNE_SCRIPT_HASH } from \"./consts\";\n","import { CONST } from \"../../../index\";\n\nexport const BANK_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.TESTNET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.MAINNET]: \"\",\n};\n","import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\n// tslint:disable-next-line:no-submodule-imports\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpcClient = Network.getRPCClient(network);\n    const res = await rpcClient.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      let amount;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n        amount = u.BigInteger.fromNumber(item.amount).toDecimal(8).toString();\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n        amount = item.amount;\n      }\n      balances.push({\n        contract: item.assethash,\n        amount,\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    },\n    network: INetworkType\n  ) {\n    const rpcClient = Network.getRPCClient(network);\n    const version: any = await rpcClient.getVersion();\n    const txObj = await DevWallet.build(rpcClient, invokeScript);\n    txObj.sign(DevWallet.account, version.protocol.network);\n    const txid = await rpcClient.sendRawTransaction(txObj);\n    // // tslint:disable-next-line:no-console\n    // console.log(\n    //   JSON.stringify(\n    //     {\n    //       RPC: rpc,\n    //       Transaction: txObj,\n    //       Network: version,\n    //       \"Network Fee\": txObj.networkFee.toDecimal(8).toString(),\n    //       \"System Fee\": txObj.systemFee.toDecimal(8).toString(),\n    //     },\n    //     null,\n    //     4\n    //   )\n    // );\n    return {\n      txid,\n      nodeUrl: rpcClient.url,\n    };\n  }\n\n  static createScript = (invokeScript: sc.ContractCallJson) => {\n    return sc.createScript({\n      scriptHash: invokeScript.scriptHash,\n      operation: invokeScript.operation,\n      args: invokeScript.args\n        ? invokeScript.args.map((param: any) => convertContractCallParam(param))\n        : [],\n    });\n  };\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    }\n    // cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n\n    const script = this.createScript(invokeScript);\n\n    // if (cosignerAddress) {\n    //   signers.push({\n    //     account: wallet.getScriptHashFromAddress(cosignerAddress),\n    //     scopes: tx.WitnessScope.Global,\n    //   });\n    // }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers: invokeScript.signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    if (invokeScript.extraSystemFee) {\n      const fee = u.BigInteger.fromDecimal(\n        invokeScript.extraSystemFee,\n        8\n      ).toString();\n      transaction.systemFee = systemFee.add(parseFloat(fee));\n    }\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","import neo3Dapi from \"neo3-dapi\";\nimport { ITransaction, IWalletType } from \"./interfaces\";\nimport { DEV, NEO_LINE, O3, WALLET_LIST } from \"../consts\";\nimport { DevWallet } from \"./dev-wallet\";\nimport { rpc, sc, tx, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { INetworkType, Network } from \"../network\";\nimport { LocalStorage } from \"../local-storage\";\nimport moment from \"moment\";\n\nexport class WalletAPI {\n  walletType: IWalletType;\n\n  constructor(walletType: IWalletType) {\n    this.walletType = walletType;\n  }\n\n  static list = WALLET_LIST;\n\n  private O3Wallet = async () => {\n    const instance = neo3Dapi;\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const network = await instance.getNetworks();\n    const balances = await instance.getBalance(\n      {\n        params: {\n          address: account.address,\n          contracts: [],\n        },\n      },\n      network.defaultNetwork\n    );\n    // TODO: Need to some sort of validation for balances in case wallet doesn't have any address?\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private NeoLine = async () => {\n    // @ts-ignore\n    const instance = new NEOLineN3.Init();\n    // @ts-ignore\n    // NEOLineN3 doesn't have getNetworks function\n    const instance2 = new NEOLine.Init();\n    const network = await instance2.getNetworks();\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance({\n      params: {\n        address: account.address,\n        contracts: [],\n      },\n    });\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private Dev = async (defaultNetwork: INetworkType) => {\n    const instance = DevWallet;\n    const network = await instance.getNetworks(defaultNetwork);\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance(defaultNetwork);\n    return { instance, provider, account, network, balances };\n  };\n\n  /**\n   * TODO: Remove dev wallet when 3rd party has privatenet support\n   * @param defaultNetwork\n   */\n  init = async (defaultNetwork: INetworkType): Promise<any> => {\n    let wallet;\n    try {\n      switch (this.walletType) {\n        case O3:\n          wallet = await this.O3Wallet();\n          break;\n        case NEO_LINE:\n          wallet = await this.NeoLine();\n          break;\n        case DEV:\n          wallet = await this.Dev(defaultNetwork);\n          break;\n      }\n      return {\n        key: this.walletType,\n        ...wallet,\n      };\n    } catch (e: any) {\n      throw new Error(e.description);\n    }\n  };\n\n  /* Control signing and send transaction. TODO:Need to improve type hardcoding later */\n  invoke = async (\n    currentNetwork: INetworkType,\n    senderAddress: string,\n    invokeScript: any,\n    extraSystemFee?: string\n  ): Promise<string> => {\n    const { instance, network } = await this.init(currentNetwork);\n    if (network.defaultNetwork !== currentNetwork) {\n      throw new Error(\n        \"Your wallet's network doesn't match with the app network setting.\"\n      );\n    }\n    if (extraSystemFee) {\n      invokeScript.extraSystemFee = extraSystemFee;\n    }\n\n    invokeScript.signers = [\n      {\n        account: NeonWallet.getScriptHashFromAddress(senderAddress),\n        scopes: tx.WitnessScope.CalledByEntry,\n      },\n    ];\n\n    // const rpcClient = Network.getRPCClient(currentNetwork);\n    // const transaction = await DevWallet.build(rpcClient, invokeScript);\n    // console.log(script);\n    // const invokeFunctionResponse = await rpcClient.invokeScript(\n    //   transaction.script,\n    //   transaction.signers\n    // );\n    // console.log(invokeFunctionResponse);\n    try {\n\t    const rpcClient = Network.getRPCClient(currentNetwork);\n\t    const transaction = await DevWallet.build(rpcClient, invokeScript);\n      const res = await instance.invoke(invokeScript, currentNetwork);\n      // if (this.walletType === DEV) {\n      //   res = await instance.invoke(invokeScript, currentNetwork);\n      // } else {\n      //   res = await instance.invoke(invokeScript);\n      // }\n      const submittedTx: ITransaction = {\n        network,\n        wallet: this.walletType,\n        txid: res.txid,\n        contractHash: invokeScript.scriptHash,\n        method: invokeScript.operation,\n        args: invokeScript.args,\n        createdAt: moment().format(\"MMMM Do YYYY, h:mm:ss a\"),\n      };\n      LocalStorage.addTransaction(submittedTx);\n      return res.txid;\n    } catch (e: any) {\n      // TODO: Need to improve dev wallet error handling as dapi standard.\n      if (e.description) {\n        throw new Error(e.description);\n      }\n      throw e;\n    }\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const FARM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\",\n  [CONST.TESTNET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\", // 11/26\n  [CONST.MAINNET]: \"\",\n};\n","import store from \"store2\";\nimport { IConnectedWallet, ITransaction } from \"../wallet/interfaces\";\nimport { FARM_SCRIPT_HASH } from \"../contracts/ftw/farm/consts\";\nimport { RUNE_SCRIPT_HASH } from \"../contracts\";\nimport { MAINNET } from \"../consts\";\nimport { INetworkType } from \"../network\";\n\nconst CONNECTED_WALLET = \"CONNECTED_WALLET\";\nconst TRANSACTIONS = \"TRANSACTIONS\";\nconst NETWORK = \"NETWORK\";\n\nexport class LocalStorage {\n  public static initStorage = (network: string): ITransaction[] => {\n    const supportContracts = [\n      FARM_SCRIPT_HASH[network],\n      RUNE_SCRIPT_HASH[network],\n    ];\n    const transactions = LocalStorage.getTransactions();\n    const validatedTx: ITransaction[] = [];\n    transactions.forEach((tx) => {\n      if (supportContracts.includes(tx.contractHash)) {\n        validatedTx.push(tx);\n      } else {\n        LocalStorage.removeTransaction(tx);\n      }\n    });\n    return validatedTx;\n  };\n\n  public static getNetwork = () => {\n    return store.get(NETWORK) ? store.get(NETWORK) : MAINNET;\n  };\n\n  public static setNetwork = (network: INetworkType) => {\n    return store.set(NETWORK, network);\n  };\n\n  public static getWallet = (): IConnectedWallet | undefined =>\n    validateConnectedWallet(store.get(CONNECTED_WALLET));\n\n  public static setWallet(connectedWallet: IConnectedWallet) {\n    const validated = validateConnectedWallet(connectedWallet);\n    store.set(CONNECTED_WALLET, validated);\n  }\n\n  public static removeWallet() {\n    store.remove(CONNECTED_WALLET);\n  }\n\n  public static getTransactions = (): ITransaction[] =>\n    store.has(TRANSACTIONS) ? store.get(TRANSACTIONS) : [];\n\n  public static addTransaction(tx: ITransaction) {\n    if (store.has(TRANSACTIONS)) {\n      store.add(TRANSACTIONS, tx);\n    } else {\n      store.set(TRANSACTIONS, [tx]);\n    }\n    window.dispatchEvent(new Event(\"transactions\"));\n  }\n\n  public static updatePendingTransaction(txId: string) {\n    let transactions = store.get(TRANSACTIONS);\n    transactions = transactions.map((tx) => {\n      if (tx.txid === txId) {\n        tx.status = \"SUBMITTED\";\n      }\n      return tx;\n    });\n    store.set(TRANSACTIONS, transactions);\n  }\n\n  public static removeTransaction = (tx: ITransaction) =>\n    store.remove(TRANSACTIONS, tx);\n\n  public static clearTransaction = () => store.set(TRANSACTIONS, []);\n}\n\nconst validateConnectedWallet = (connectedWallet?: IConnectedWallet) => {\n  if (\n    !connectedWallet ||\n    !connectedWallet.account ||\n    !connectedWallet.provider ||\n    !connectedWallet.network\n  ) {\n    return undefined;\n  }\n  return connectedWallet;\n};\n//\n// const validateTransaction = (connectedWallet?: IConnectedWallet) => {\n//   if (\n//     !connectedWallet ||\n//     !connectedWallet.account ||\n//     !connectedWallet.provider ||\n//     !connectedWallet.network\n//   ) {\n//     return undefined;\n//   }\n//   return connectedWallet;\n// };\n","import { ContextOptions, IWalletStates } from \"./interfaces\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { IConnectedWallet, IWalletType } from \"../neo/wallet/interfaces\";\nimport { LocalStorage } from \"../neo/local-storage\";\nimport { sc } from \"@cityofzion/neon-core\";\nimport { WalletAPI } from \"../neo/wallet\";\nimport toast from \"react-hot-toast\";\nimport { INetworkType } from \"../neo/network\";\n\n// tslint:disable-next-line:no-object-literal-type-assertion\nexport const WalletContext = createContext({} as IWalletStates);\nexport const WalletContextProvider = (props: {\n  options: ContextOptions;\n  children: any;\n}) => {\n  const [network, setNetwork] = useState(LocalStorage.getNetwork());\n  const [totalTxSubmit, setTotalTxSubmit] = useState(0);\n\n  const [isWalletModalActive, setWalletModalActive] = useState(false);\n\n  const [connectedWallet, setConnectedWallet] = useState<\n    IConnectedWallet | undefined\n  >(props.options.useLocalStorage ? LocalStorage.getWallet() : undefined);\n\n  const [invokeScript, setInvokeScript] = useState<\n    sc.ContractCallJson | undefined\n  >();\n\n  // const [transactions, setTransactions] = useState(\n  //   props.options.useLocalStorage ? LocalStorage.initStorage(network) : []\n  // );\n\n  const [pendingTransactions, setPendingTransactions] = useState<string[]>([]);\n\n  const openWalletModal = () => setWalletModalActive(true);\n\n  const closeWalletModal = () => setWalletModalActive(false);\n\n  const connectWallet = async (walletType: IWalletType) => {\n    try {\n      const res = await new WalletAPI(walletType).init(network);\n      setConnectedWallet(res);\n      if (props.options.useLocalStorage) {\n        LocalStorage.setWallet(res);\n      }\n      setWalletModalActive(false);\n    } catch (e: any) {\n      toast.error(e.message);\n    }\n  };\n\n  const disConnectWallet = () => {\n    LocalStorage.removeWallet();\n    setConnectedWallet(undefined);\n  };\n\n  const doInvoke = (args: sc.ContractCallJson) => {\n    if (isWalletModalActive) setWalletModalActive(false);\n    setInvokeScript(args);\n  };\n\n  const closeInvoke = () => setInvokeScript(undefined);\n\n  const addPendingTransaction = (txid: string) => {\n    setPendingTransactions([...pendingTransactions, txid]);\n  };\n\n  const switchNetwork = (val: INetworkType) => {\n    setNetwork(val);\n    LocalStorage.setNetwork(val);\n  };\n\n  const removePendingTransaction = (txid: string) => {\n    setPendingTransactions(pendingTransactions.filter((i) => i !== txid));\n  };\n\n  const increaseTotalTxSubmit = () => {\n    setTotalTxSubmit(totalTxSubmit + 1);\n  };\n\n  const contextValue: IWalletStates = {\n    useDevWallet: props.options.useDevWallet,\n    network,\n    invokeScript,\n    list: WalletAPI.list,\n    connectedWallet,\n    isWalletModalActive,\n    openWalletModal,\n    closeWalletModal,\n    connectWallet,\n    disConnectWallet,\n    doInvoke,\n    closeInvoke,\n    addPendingTransaction,\n    removePendingTransaction,\n    pendingTransactions,\n    switchNetwork,\n    totalTxSubmit,\n    increaseTotalTxSubmit,\n  };\n\n  return (\n    <WalletContext.Provider value={contextValue}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n};\nexport const useWallet = () => useContext(WalletContext);\n","import { MAINNET, PRIVATENET, TESTNET } from \"../packages/neo/consts\";\n\nexport const HOME_PATH = \"/\";\nexport const FARM_PATH = \"/gas\";\nexport const GALLERY_PATH = \"/NFT/gallery\";\nexport const TOURNAMENT_PATH = \"/arena\";\nexport const SMITH_PATH = \"/smith\";\nexport const COLLECTION_PATH = \"/NFT/collection\";\n\nexport const MENU = [\n  {\n    label: \"Rune\",\n    path: GALLERY_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n  {\n    label: \"Arena\",\n    path: TOURNAMENT_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n  {\n    label: \"Smith\",\n    path: SMITH_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n  {\n    label: \"GAS-FI\",\n    path: FARM_PATH,\n    network: [PRIVATENET, TESTNET],\n  },\n];\n","import { CONST } from \"../../neo\";\n\nexport const getWalletIcon = (key: string) => {\n  let svg = \"\";\n  switch (key){\n    case CONST.DEV:\n      svg = \"/dev.png\"\n      break;\n    case CONST.O3:\n      svg = \"/o3.svg\"\n      break;\n    case CONST.NEO_LINE:\n      svg = \"/neoline.svg\"\n      break;\n  }\n  return svg\n}\n","import React, { useEffect, useState } from \"react\";\nimport { utils } from \"../../packages/neo\";\nimport { IConnectedWallet } from \"../../packages/neo/wallet/interfaces\";\nimport { useWallet } from \"../../packages/provider\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport { COLLECTION_PATH } from \"../../consts\";\nimport { NavLink } from \"react-router-dom\";\nimport { NEO_LINE, O3 } from \"../../packages/neo/consts\";\nimport neo3Dapi from \"neo3-dapi\";\ninterface IWalletDropdownProps {\n  connectedWallet: IConnectedWallet;\n}\nconst WalletDropdown = ({ connectedWallet }: IWalletDropdownProps) => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n\n  const onActive = () => setActive(!isActive);\n\n  useEffect(() => {\n    const refresh = () => {\n      connectWallet(connectedWallet.key);\n    };\n    const disconnected = () => {\n      disConnectWallet();\n    };\n\n    if (connectedWallet.key === NEO_LINE) {\n      window.addEventListener(\"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.NETWORK_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.DISCONNECTED\", disconnected);\n      return () => {\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.NETWORK_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.DISCONNECTED\",\n          disconnected\n        );\n      };\n    }\n    if (connectedWallet.key === O3) {\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.DISCONNECTED,\n        disconnected\n      );\n\n      return () => {\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.DISCONNECTED,\n          disconnected\n        );\n      };\n    }\n  }, []);\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className=\"button is-small is-black is-rounded\"\n          aria-controls=\"dropdown-wallet\"\n        >\n          <span>{utils.truncateAddress(connectedWallet.account.address)}</span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <img src={getWalletIcon(connectedWallet.key)} />\n              </div>\n              <div className=\"media-content\">\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </div>\n            </div>\n          </div>\n          <hr className=\"dropdown-divider\" />\n          <NavLink\n            className=\"dropdown-item has-text-dark\"\n            onClick={() => setActive(false)}\n            to={COLLECTION_PATH}\n          >\n            My NFT\n          </NavLink>\n          <hr className=\"dropdown-divider\" />\n          <a onClick={handleDisconnectWallet} className=\"dropdown-item\">\n            Disconnect\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React, { useState } from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, PRIVATENET, TESTNET } from \"../../packages/neo/consts\";\nimport { INetworkType } from \"../../packages/neo/network\";\n\nconst NetworkSwitch = () => {\n  const [isActive, setActive] = useState(false);\n  const { network, switchNetwork } = useWallet();\n  const onActive = () => setActive(!isActive);\n  const handleNetworkChange = (val: string) => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(\"Are you sure to switch network?\")) {\n      switchNetwork(val as INetworkType);\n      setActive(false);\n    }\n  };\n  const networkList = [PRIVATENET, TESTNET, MAINNET];\n\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className={`button is-small ${\n            network === MAINNET ? \"is-white\" : \"is-danger\"\n          }`}\n          aria-controls=\"dropdown-wallet\"\n        >\n          {network}\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {networkList.map((v) => {\n            if (\n              (process.env.NODE_ENV !== \"development\" && v === PRIVATENET) ||\n              network === v\n            ) {\n              return false;\n            }\n            return (\n              <div key={`network${v}`} className=\"dropdown-item\">\n                <a onClick={() => handleNetworkChange(v)}>Switch to {v}</a>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaBars, FaWallet } from \"react-icons/fa\";\nimport Logo from \"./Logo\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { useWallet } from \"../../packages/provider\";\nimport { utils } from \"../../packages/neo\";\nimport { COLLECTION_PATH, MENU } from \"../../consts\";\nimport PendingTransaction from \"../../packages/ui/PendingTransaction\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport NetworkSwitch from \"./NetworkSwitch\";\n\nconst Header = () => {\n  const { toggleSidebar, toggleWalletSidebar } = useApp();\n  const { connectedWallet, network, disConnectWallet } = useWallet();\n  const [isActive, setActive] = useState(false);\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    disConnectWallet();\n  };\n  return (\n    <nav\n      className=\"navbar has-shadow is-white is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ height: \"52px\" }}\n    >\n      <div className=\"container\">\n        <div\n          className=\"navbar-brand\"\n          style={{ justifyContent: \"space-between\" }}\n        >\n          <div\n            role=\"button\"\n            className=\"navbar-burger is-center is-hidden-tablet\"\n            style={{ marginLeft: 0 }}\n            onClick={toggleSidebar}\n          >\n            <FaBars />\n          </div>\n          <Link className=\"has-text-white navbar-item is-center\" to=\"/\">\n            <Logo />\n          </Link>\n          <div\n            role=\"button\"\n            className={`navbar-burger is-center is-hidden-desktop`}\n            onClick={() => {\n              if (connectedWallet) {\n                setActive(!isActive);\n              } else {\n                toggleWalletSidebar();\n              }\n            }}\n            style={{ marginLeft: 0 }}\n          >\n            <FaWallet />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div\n            className={`navbar-menu  is-hidden-tablet ${\n              isActive && \"is-active\"\n            }`}\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item\">\n                <div className=\"media\">\n                  <div className=\"media-left\">\n                    <img src={getWalletIcon(connectedWallet.key)} />\n                  </div>\n                  <div className=\"media-content\">\n                    {utils.truncateAddress(connectedWallet.account.address)}\n                  </div>\n                </div>\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <Link\n                onClick={() => setActive(false)}\n                className=\"navbar-item has-text-dark\"\n                to={COLLECTION_PATH}\n              >\n                My NFT\n              </Link>\n              <hr className=\"dropdown-divider\" />\n              <a onClick={handleDisconnectWallet} className=\"navbar-item\">\n                Disconnect wallet\n              </a>\n            </div>\n          </div>\n        )}\n\n        <div className=\"navbar-menu ml-3\">\n          <div className=\"navbar-start\">\n            {MENU.map((route, i) => {\n              if (!route.network.includes(network)) return false;\n              return (\n                <NavLink\n                  key={`header-${route.label}${i}`}\n                  activeClassName=\"is-active\"\n                  to={route.path}\n                  className=\"navbar-item\"\n                >\n                  <strong>{route.label}</strong>\n                </NavLink>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"navbar-end is-hidden-touch\">\n          <div className=\"navbar-item\">\n            <NetworkSwitch />\n          </div>\n          {/*<PendingTransaction />*/}\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              {connectedWallet ? (\n                <WalletDropdown connectedWallet={connectedWallet} />\n              ) : (\n                <button\n                  onClick={toggleWalletSidebar}\n                  className=\"button is-small is-black is-rounded\"\n                >\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown } from \"react-icons/all\";\nimport { useApp } from \"../../../common/hooks/use-app\";\nimport { useWallet } from \"../../provider\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletDropdown = () => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectedWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n  if (!connectedWallet) {\n    return (\n      <button className=\"button is-white \" onClick={() => setActive(!isActive)}>\n        <strong>Wallet</strong>\n      </button>\n    );\n  }\n  return (\n    <div className={`dropdown ${isActive && \"is-active\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-white\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu3\"\n          onClick={() => setActive(!isActive)}\n        >\n          <span className=\"icon is-small\">\n            <img src={getWalletIcon(connectedWallet.key)} />\n          </span>\n          <span>\n            <strong>Wallet</strong>\n          </span>\n          <span className=\"icon is-small\">\n            <FaAngleDown />\n            {/*<i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>*/}\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a\n            onClick={handleDisconnectWallet}\n            href=\"#\"\n            className=\"dropdown-item\"\n          >\n            Disconnect\n          </a>\n          {/*<hr className=\"dropdown-divider\"/>*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletList = () => {\n  const { connectWallet, list, useDevWallet } = useWallet();\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          if (!useDevWallet && _wallet.key === DEV) return false;\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} alt=\"React Logo\" />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n","import React from \"react\";\nimport { IBalance } from \"../../neo/wallet/interfaces\";\n\nconst AssetCard = (props: IBalance) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        <strong>{props.symbol}</strong>\n      </div>\n      <div className=\"media-content\"></div>\n      <div className=\"media-right has-text-right\">{props.amount}</div>\n    </div>\n  );\n};\n\nexport default AssetCard;\n","import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../neo/contracts\";\nimport { IRuneMeta } from \"../../neo/contracts/ftw/nft/interfaces\";\nimport { useWallet } from \"../../provider\";\nimport { IConnectedWallet } from \"../../neo/wallet/interfaces\";\n\ninterface IRunesProps {\n  connectedWallet: IConnectedWallet;\n}\nconst Runes = ({ connectedWallet }: IRunesProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  useState<IRuneMeta>();\n  const { network } = useWallet();\n  // const onPropertiesModalActive = (obj: IRuneMeta) => {\n  //   if (connectedWallet) {\n  //     setPropertiesModalActive(obj);\n  //   } else {\n  //     toast.error(\"Please connect wallet.\");\n  //   }\n  // };\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getTokens();\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet]);\n  return (\n    <div>\n      <div\n        style={{\n          flexFlow: \"wrap\",\n          // width: \"640px\",\n          // margin: \"0 auto\"\n        }}\n        className=\"is-flex\"\n      >\n        {/*{tokens.map((tokenId) => (*/}\n        {/*  <DisplayRune*/}\n        {/*    tokenId={tokenId}*/}\n        {/*    network={network}*/}\n        {/*    onClick={() => false}*/}\n        {/*  />*/}\n        {/*))}*/}\n        {/*<DisplayRandomRune width=\"64px\" height=\"64px\" />*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Runes;\n","import React, { useEffect } from \"react\";\nimport { utils } from \"../../neo\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport WalletList from \"./WalletList\";\nimport AssetCard from \"./AssetCard\";\nimport { useWallet } from \"../../provider\";\nimport Runes from \"./Runes\";\nimport { Network } from \"../../neo/network\";\n\nconst Wallet = (props) => {\n  const { connectedWallet } = useWallet();\n  return (\n    <>\n      <header className=\"level is-mobile p-3 is-marginless\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <WalletDropdown />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <small>\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </small>\n            </div>\n          </div>\n        )}\n      </header>\n      <hr className=\"m-0\" />\n      <section className=\"p-5\">\n        {connectedWallet ? (\n          <>\n            <div>\n              {connectedWallet &&\n                connectedWallet.balances.map((balance) => {\n                  return <AssetCard key={balance.symbol} {...balance} />;\n                })}\n            </div>\n            <Runes connectedWallet={connectedWallet} />\n          </>\n        ) : (\n          <WalletList />\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport Wallet from \"../../packages/ui/Wallet\";\nimport { useWallet } from \"../../packages/provider\";\n\nconst WalletSidebar = () => {\n  const { walletSidebarStatus, toggleWalletSidebar } = useApp();\n  const { connectedWallet } = useWallet();\n  if (connectedWallet) return <div></div>;\n  return (\n    <SideNav\n      openFromRight={true}\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={walletSidebarStatus}\n      onHideNav={toggleWalletSidebar}\n      children={<Wallet />}\n    />\n  );\n};\n\nexport default WalletSidebar;\n","import React from \"react\";\n\nconst PageLayout = (props) => {\n  return (\n    <section className=\"section\">\n      <div className=\"container\">{props.children}</div>\n    </section>\n  );\n};\n\nexport default PageLayout;\n","import React, { ReactElement } from \"react\";\nimport $ from \"jquery\";\n\ninterface IProps {\n  onClose: () => void;\n  children: ReactElement;\n  isLoading?: boolean;\n  error?: string;\n}\nconst ModalCard = ({ onClose, children, isLoading, error }: IProps) => {\n  React.useEffect(() => {\n    $(\"html\").addClass(\"is-clipped\");\n    return () => {\n      $(\"html\").removeClass(\"is-clipped\");\n    };\n  }, []);\n  return (\n    <div className=\"modal is-active\" style={{ zIndex: 99 }}>\n      <div className=\"modal-background\" onClick={onClose} />\n      <section className=\"modal-content\">\n        <div className=\"box\">\n          {isLoading ? <div>Loading</div> : error ? <div>Error</div> : children}\n        </div>\n      </section>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};\n\nexport default ModalCard;\n","import React from \"react\";\n\n/**\n * TODO: Better ux needed\n * @param props\n * @constructor\n */\ninterface ITransactionSuccessProps {\n  txid: string;\n  onClick: () => void;\n}\nconst TransactionSubmitted = ({ txid, onClick }: ITransactionSuccessProps) => {\n  return (\n    <div className=\"has-text-centered\">\n      <h1 className=\"title is-5\">Transaction submitted!</h1>\n      <p className=\"subtitle is-7\">{txid}</p>\n      <button onClick={onClick} className=\"button is-black\">\n        Close\n      </button>\n    </div>\n  );\n};\n\nexport default TransactionSubmitted;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport NumberFormat from \"react-number-format\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  onClose: () => void;\n}\nconst ActionModal = ({ range, onClose }: IActionModal) => {\n  const [amount, setAmount] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onDeposit = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).deposit(\n          connectedWallet,\n          amount,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">\n            {/*<img src={\"/neo_512_512.svg\"} />*/}\n            Deposit NEO\n          </h1>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Your position</label>\n                <div className=\"select is-fullwidth\">\n                  <select\n                    value={position}\n                    onChange={(e) => setPosition(e.target.value)}\n                  >\n                    <option value=\"\">Select your position</option>\n                    {_.range(0, range).map((i) => (\n                      <option key={i} value={i + 1}>\n                        {i + 1}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Amount</label>\n                <NumberFormat\n                  autoFocus={true}\n                  // ref={this.props, inputRef}\n                  decimalScale={0}\n                  inputMode=\"decimal\"\n                  className=\"input\"\n                  value={amount}\n                  onValueChange={(value) => {\n                    setAmount(value.value);\n                  }}\n                  thousandSeparator={true}\n                  suffix={\" NEO\"}\n                  allowLeadingZeros={false}\n                />\n              </div>\n            </div>\n          </div>\n          <button\n            onClick={onDeposit}\n            disabled={!position || !amount || parseFloat(amount) < 1}\n            className=\"button is-button is-black\"\n          >\n            Deposit\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default ActionModal;\n","import React from \"react\";\nimport Countdown from \"react-countdown\";\n\ninterface ISnapshotCountdownProps {\n  timeLeft: number;\n  onCreateSnapshot: () => void;\n}\nconst SnapshotCountdown = ({\n  timeLeft,\n  onCreateSnapshot,\n}: ISnapshotCountdownProps) => {\n  const CreateSnapshotBtn = () => (\n    <button onClick={onCreateSnapshot} className=\"button is-button is-black\">\n      Creat snapshot\n    </button>\n  );\n  if (timeLeft < 1) {\n    return <CreateSnapshotBtn />;\n  }\n  return (\n    <Countdown\n      date={Date.now() + timeLeft}\n      renderer={(props) => {\n        if (props.completed) {\n          return <CreateSnapshotBtn />;\n        } else {\n          return (\n            <span>\n              {props.hours}:{props.minutes}:{props.seconds}\n            </span>\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default SnapshotCountdown;\n","import React from \"react\";\nimport { IFarmSnapshot } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface ISnapshotListProps {\n  item: IFarmSnapshot;\n}\nconst SnapshotCard = ({ item }: ISnapshotListProps) => {\n  return (\n    <div key={item.createdAt} className=\"media\">\n      <div className=\"media-left\">#{item.no}</div>\n      <div className=\"media-content\">\n        Position: <span className=\"is-capitalized\">{item.winPosition}</span>\n        <br />\n        GAS: {item.totalGas}\n        <br />\n        {item.createdAt}\n      </div>\n    </div>\n  );\n};\n\nexport default SnapshotCard;\n","import React, { useState } from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\nimport SnapshotCard from \"./SnapshotCard\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCreateSnapshot = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).createSnapshot(\n          connectedWallet\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  if (!contractStatus) return <div></div>;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">Snapshots</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <SnapshotCountdown\n              timeLeft={parseFloat(contractStatus.timeLeft)}\n              onCreateSnapshot={onCreateSnapshot}\n            />\n          </div>\n        </div>\n      </div>\n\n      {contractStatus.snapshots.items.map((item) => (\n        <SnapshotCard key={item.no} item={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React from \"react\";\n\nconst NotifyError = ({ msg, onClose }) => {\n  if (!msg) return <></>;\n  return (\n    <div className=\"notification is-danger\">\n      <button onClick={onClose} className=\"delete\" />\n      {msg}\n    </div>\n  );\n};\n\nexport default NotifyError;\n","import React from \"react\";\nimport { IFarmDepositRecord } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface IMyPositionProps {\n  deposit?: IFarmDepositRecord;\n  lastSnapshotNo: string;\n  onCancel: () => void;\n  onPositionChange: () => void;\n  onClaim: () => void;\n}\nconst MyPosition = ({\n  deposit,\n  lastSnapshotNo,\n  onCancel,\n  onClaim,\n  onPositionChange,\n}: IMyPositionProps) => {\n  if (!deposit) return <div></div>;\n  const lastClaimNo = deposit.lastClaimNo ? parseFloat(deposit.lastClaimNo) : 0;\n  const isClaimable = parseFloat(lastSnapshotNo) > lastClaimNo;\n  return (\n    <>\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item is-block\">\n            <div className=\"\">\n              My position\n              <br />\n              <span className=\"is-capitalized\">\n                {deposit.position} / {deposit.amount} NEO\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"buttons\">\n            {!isClaimable && (\n              <button onClick={onPositionChange} className=\"button is-black\">\n                Change position\n              </button>\n            )}\n            <button onClick={onCancel} className=\"button is-light\">\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n      {isClaimable && (\n        <button onClick={onClaim} className=\"button is-primary is-fullwidth\">\n          Claim Reward\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default MyPosition;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport MyPosition from \"./MyPosition\";\n\ninterface IPoolProps {\n  contractStatus?: IFarmContractStatus;\n  onDeposit: () => void;\n  onCancel: () => void;\n  onPositionChange: () => void;\n  onClaim: () => void;\n}\nconst Pool = ({\n  contractStatus,\n  onDeposit,\n  onCancel,\n  onClaim,\n  onPositionChange,\n}: IPoolProps) => {\n  return (\n    <div className=\"\">\n      <div className=\"box\">\n        <div className=\"level\">\n          <div className=\"level-left\">\n            <div className=\"level-item is-block\">\n              <h1 className=\"title is-4 is-marginless\">Total</h1>\n            </div>\n          </div>\n          <div className=\"level-right\">\n            <div>\n              {contractStatus?.neoBalance} <strong>NEO</strong>\n              <br />\n              {contractStatus?.ftwBalance} <strong>FTW</strong>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {contractStatus && contractStatus.deposit ? (\n        <MyPosition\n          deposit={contractStatus.deposit}\n          lastSnapshotNo={contractStatus.snapshots.totalItems}\n          onCancel={onCancel}\n          onClaim={onClaim}\n          onPositionChange={onPositionChange}\n        />\n      ) : (\n        <button onClick={onDeposit} className=\"button is-primary is-fullwidth\">\n          Deposit\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Pool;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal, addPendingTransaction } =\n    useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).remove(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(txid);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm close</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Close my position\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).claim(connectedWallet);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm claim</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Claim my reward\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\n\ninterface IClaimsProps {\n  contractStatus?: IFarmContractStatus;\n  onClaim: () => void;\n}\nconst Claims = ({ contractStatus, onClaim }: IClaimsProps) => {\n  if (!contractStatus) return <div></div>;\n  if (!contractStatus.claims) return <div></div>;\n  if (!contractStatus.deposit) return <div></div>;\n  const lastClaimNo = contractStatus.deposit.lastClaimNo\n    ? parseFloat(contractStatus.deposit.lastClaimNo)\n    : 0;\n  const isClaimable =\n    parseFloat(contractStatus.snapshots.totalItems) > lastClaimNo;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">My Claims</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            {isClaimable && (\n              <button\n                onClick={onClaim}\n                className=\"button is-primary is-fullwidth\"\n              >\n                Claim Reward\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      {contractStatus.claims.items.length > 0 ? (\n        contractStatus.claims.items.map((item) => {\n          return (\n            <div key={item.createdAt} className=\"media\">\n              <div className=\"media-left\">#{item.no}</div>\n              <div className=\"media-content\">\n                Snapshots: {`${item.from} ~ ${item.end}`}\n                <br />\n                GAS: {item.GAS}\n                <br />\n                FTW: {item.FTW}\n                <br />\n                {item.createdAt}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>No claims to display</div>\n      )}\n    </div>\n  );\n};\n\nexport default Claims;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  currentPosition: string;\n  onClose: () => void;\n}\nconst PositionModal = ({ currentPosition, range, onClose }: IActionModal) => {\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onChange = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).changePosition(\n          connectedWallet,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-spaced\">Change your position</h1>\n          <p className=\"subtitle is-6\">\n            Your current position is <strong>{currentPosition}</strong>\n          </p>\n          <div className=\"field\">\n            <label className=\"label\">New position</label>\n            <div className=\"select is-fullwidth\">\n              <select\n                value={position}\n                onChange={(e) => setPosition(e.target.value)}\n              >\n                <option value=\"\">Select new position</option>\n                {_.range(0, range)\n                  .filter((i) => !(i + 1 === parseFloat(currentPosition)))\n                  .map((i) => (\n                    <option key={i} value={i + 1}>\n                      {i + 1}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <button\n            onClick={onChange}\n            disabled={!position}\n            className=\"button is-button is-black\"\n          >\n            Change\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PositionModal;\n","import React  from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport moment from \"moment\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  if (!contractStatus) return <div></div>;\n  const tempTime = moment.duration(contractStatus.interval);\n  const format = `Every ${\n    tempTime.hours() > 0\n      ? `${tempTime.hours()} hours ${tempTime.minutes()} mins`\n      : `${tempTime.minutes()} mins`\n  }`;\n  return (\n    <div className=\"\">\n      <h1 className=\"title is-4\">About</h1>\n      <h4 className=\"title is-6\">Current settings</h4>\n      <p className=\"subtitle is-6\">\n        Position range: {contractStatus.range}\n        <br />\n        Interval: {format}\n      </p>\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport ActionModal from \"./ActionModal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport toast from \"react-hot-toast\";\nimport SnapshotList from \"./SnapshotList\";\nimport NotifyError from \"../../components/NotifyError\";\nimport Pool from \"./Pool\";\nimport CancelModal from \"./CancelModal\";\nimport ClaimModal from \"./ClaimModal\";\nimport Claims from \"./Claims\";\nimport PositionModal from \"./PositionModal\";\nimport About from \"./About\";\nimport { TESTNET } from \"../../../packages/neo/consts\";\n\nconst Farm = () => {\n  // let location = useLocation();\n  const production = [TESTNET];\n  const [route, setRoute] = useState(\"POOL\");\n  const [modalActive, setModalActive] = useState(false);\n  const [cancelModalActive, setCancelModalActive] = useState(false);\n  const [claimModalActive, setClaimModalActive] = useState(false);\n  const [positionModalActive, setPositionModalActive] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [contractStatus, setContractStatus] = useState<IFarmContractStatus>();\n  const onActive = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onCancelModalActive = () => setCancelModalActive(true);\n  const onClaimModalActive = () => setClaimModalActive(true);\n  const onPositionChange = () => setPositionModalActive(true);\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new FarmContract(network).getStatus(connectedWallet);\n        setContractStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, route]);\n  if (!production.includes(network))\n    return (\n      <PageLayout>This smart contract is not support in {network}.</PageLayout>\n    );\n  return (\n    <PageLayout>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-half\">\n          <div className=\"box \">\n            <div className=\"tabs is-toggle\">\n              <ul>\n                <li className={route === \"POOL\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"POOL\")}>Pool</a>\n                </li>\n                {connectedWallet && contractStatus && contractStatus.deposit && (\n                  <li className={route === \"CLAIMS\" ? \"is-active\" : \"\"}>\n                    <a onClick={() => setRoute(\"CLAIMS\")}>Claims</a>\n                  </li>\n                )}\n                <li className={route === \"SNAPSHOTS\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"SNAPSHOTS\")}>Snapshots</a>\n                </li>\n                <li className={route === \"ABOUT\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"ABOUT\")}>About</a>\n                </li>\n              </ul>\n            </div>\n            <NotifyError msg={error} onClose={() => setError(\"\")} />\n            {route === \"POOL\" && (\n              <Pool\n                contractStatus={contractStatus}\n                onPositionChange={onPositionChange}\n                onDeposit={onActive}\n                onCancel={onCancelModalActive}\n                onClaim={onClaimModalActive}\n              />\n            )}\n            {route === \"SNAPSHOTS\" && (\n              <SnapshotList contractStatus={contractStatus} />\n            )}\n            {route === \"CLAIMS\" && (\n              <Claims\n                onClaim={onClaimModalActive}\n                contractStatus={contractStatus}\n              />\n            )}\n            {route === \"ABOUT\" && <About contractStatus={contractStatus} />}\n          </div>\n        </div>\n      </div>\n      {contractStatus && modalActive && (\n        <ActionModal\n          range={contractStatus.range}\n          onClose={() => setModalActive(false)}\n        />\n      )}\n      {contractStatus && contractStatus.deposit && positionModalActive && (\n        <PositionModal\n          currentPosition={contractStatus.deposit.position}\n          range={contractStatus.range}\n          onClose={() => setPositionModalActive(false)}\n        />\n      )}\n      {cancelModalActive && (\n        <CancelModal onClose={() => setCancelModalActive(false)} />\n      )}\n      {claimModalActive && (\n        <ClaimModal onClose={() => setClaimModalActive(false)} />\n      )}\n    </PageLayout>\n  );\n};\n\nexport default Farm;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\n\ninterface IPropertiesModal {\n  tokenId: string;\n  onClose: () => void;\n}\nconst PropertiesModal = ({ tokenId, onClose }: IPropertiesModal) => {\n  const [item, setItem] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getProperties(\n          tokenId.toString()\n        );\n        setItem(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network]);\n  return (\n    <Modal onClose={onClose}>\n      {isLoading ? (\n        <div>Loading the rune data from the chain..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <h1 className=\"title is-4\">{item.name}</h1>\n\n          <p className=\"subtitle is-7\">\n            <strong>Phase:</strong> {item.phase}, <strong>Luck:</strong>{\" \"}\n            {item.luck}\n          </p>\n          <figure className=\"image is-square\">\n            <img src={item.image} />\n          </figure>\n          <p className=\"subtitle is-7 has-text-right mt-3\">{item.owner}</p>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PropertiesModal;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport PropertiesModal from \"../Gallery/PropertiesModal\";\nimport { GALLERY_PATH } from \"../../../consts\";\nimport { Link } from \"react-router-dom\";\n\nconst MyCollection = () => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus(address: string) {\n      setError(\"\");\n      try {\n        const res = await new NFTContract(network).getTokensOf(address);\n        setTokens(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network]);\n  return (\n    <>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">My collection</h1>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"columns is-multiline\">\n            {tokens.length > 0 ? (\n              tokens.map((token) => (\n                <div className=\"column is-3\">\n                  <figure\n                    className=\"image\"\n                    onClick={() => onPropertiesModalActive(token.tokenId)}\n                  >\n                    <img src={token.image} />\n                  </figure>\n                </div>\n              ))\n            ) : (\n              <div className=\"column is-3\">\n                <div className=\"box\">\n                  <div className=\"block\">\n                    <p>You don't have any runes yet</p>\n                  </div>\n\n                  <Link className=\"button is-primary\" to={GALLERY_PATH}>\n                    Go Get Them\n                  </Link>\n                </div>\n                {/*<DisplayRandomRune width=\"100%\" height=\"100%\" />*/}\n              </div>\n            )}\n          </div>\n        )}\n      </PageLayout>\n      {/*<button onClick={onMint} className=\"button is-black\">Mint</button>*/}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MyCollection;\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\n\ninterface IDisplayRandomRuneProps {\n  width: string;\n  height: string;\n  isActive?: boolean;\n}\nconst DisplayRandomRune = ({\n  width,\n  height,\n  isActive,\n}: IDisplayRandomRuneProps) => {\n  const [colors, setColors] = useState(getColors());\n  const bg = \"rgb(\" + colors[0] + \",\" + colors[6] + \",\" + colors[12] + \")\";\n  const dot1 = \"rgb(\" + colors[1] + \",\" + colors[7] + \",\" + colors[13] + \")\";\n  const dot2 = \"rgb(\" + colors[2] + \",\" + colors[8] + \",\" + colors[14] + \")\";\n  const dot3 = \"rgb(\" + colors[3] + \",\" + colors[9] + \",\" + colors[15] + \")\";\n  const dot4 = \"rgb(\" + colors[4] + \",\" + colors[10] + \",\" + colors[16] + \")\";\n  const body = \"rgb(\" + colors[5] + \",\" + colors[11] + \",\" + colors[17] + \")\";\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    if (isActive) {\n      const interval = setInterval(() => {\n        setColors(getColors());\n      }, 2000);\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  return (\n    <img style={{ width, height }} src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default DisplayRandomRune;\n","import React from \"react\";\nimport { RUNE_PRICE } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport DisplayRandomRune from \"../../components/RandomRune\";\ninterface IBannerProps {\n  network: INetworkType;\n  filter: string;\n  onMint: () => void;\n  onFilterChange: (val: string) => void;\n}\nconst Banner = ({ onMint, network }: IBannerProps) => {\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div>\n                <h1 className=\"title\">Forthewin Runes</h1>\n                <p className=\"subtitle\">Algorithms-generated lucky runes</p>\n\n                <div className=\"content is-small\">\n                  <p>\n                    <strong>Max supply</strong>\n                    <br />\n                    500 runes\n                  </p>\n                  <p>\n                    <strong>Attribute #1</strong>\n                    <br />\n                    Random phase (Dark, Light, Fire, Water, Wood, Earth, Metal)\n                  </p>\n                  <p>\n                    <strong>Attribute #2</strong>\n                    <br /> Luck (1 ~ 10)\n                  </p>\n                </div>\n                <div className=\"block has-text-centered-mobile is-hidden-mobile\">\n                  <button\n                    onClick={onMint}\n                    className=\"button is-primary press-font\"\n                  >\n                    Mint: {RUNE_PRICE[network]} GAS\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div\n                className=\"block\"\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <DisplayRandomRune\n                  isActive={true}\n                  width=\"230px\"\n                  height=\"230px\"\n                />\n              </div>\n              <div className=\"block has-text-centered-mobile is-hidden-tablet\">\n                <button\n                  onClick={onMint}\n                  className=\"button is-primary press-font\"\n                >\n                  Mint: {RUNE_PRICE[network]} GAS\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/*<div className=\"hero-foot\">*/}\n      {/*  <nav className=\"tabs is-boxed is-fullwidth\">*/}\n      {/*    <div className=\"container\">*/}\n      {/*      <ul>*/}\n      {/*        {RUNE_PHASE_FILTER.map((phase) => {*/}\n      {/*          return (*/}\n      {/*            <li*/}\n      {/*              key={phase}*/}\n      {/*              className={filter === phase ? \"is-active\" : \"\"}*/}\n      {/*            >*/}\n      {/*              <a onClick={() => onFilterChange(phase)}>{phase}</a>*/}\n      {/*            </li>*/}\n      {/*          );*/}\n      {/*        })}*/}\n      {/*      </ul>*/}\n      {/*    </div>*/}\n      {/*  </nav>*/}\n      {/*</div>*/}\n    </section>\n  );\n};\n\nexport default Banner;\n","import { CONST } from \"..\";\n\nexport const ENDPOINT = {\n  [CONST.PRIVATENET]: \"http://localhost:3000\",\n  [CONST.TESTNET]:\n    \"https://jefzcuwe0e.execute-api.us-east-1.amazonaws.com/testnet\",\n  [CONST.MAINNET]:\n    \"https://z3fn74s0oa.execute-api.us-east-1.amazonaws.com/mainnet\",\n};\n","import { INetworkType } from \"../network\";\nimport { ENDPOINT } from \"./consts\";\n\n// interface IRuneFilter = \"All\" | \"Fire\" |  \"\"\n\nexport class RestAPI {\n  network: INetworkType;\n  endpoint: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.endpoint = ENDPOINT[networkType];\n  }\n\n  fetchResult = async (url: string) => {\n    const res = await fetch(url);\n    const json = await res.json();\n    if (res.status === 200) {\n      return json;\n    } else {\n      // throw new Error(json.message);\n      throw new Error(\"Network error\");\n    }\n  };\n\n  async getRunes(filter) {\n    return this.fetchResult(this.endpoint + \"/runes/\" + filter);\n  }\n\n  async getRune(tokenId) {\n    return this.fetchResult(this.endpoint + \"/rune/\" + tokenId);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\nconst RuneLoading = () => {\n\tconst [colors, setColors] = useState(getColors());\n  const [bg, setBg] = useState(\"black\");\n  const [dot1, setDot1] = useState(\"black\");\n  const [dot2, setDot2] = useState(\"black\");\n  const [dot3, setDot3] = useState(\"black\");\n  const [dot4, setDot4] = useState(\"black\");\n  const [body, setBody] = useState(\"black\");\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setBody(\"white\");\n    }, 1000);\n    timer = setTimeout(() => {\n      setDot1(\"white\");\n    }, 2000);\n    timer = setTimeout(() => {\n      setDot2(\"white\");\n    }, 3000);\n    timer = setTimeout(() => {\n      setDot3(\"white\");\n    }, 4000);\n    timer = setTimeout(() => {\n      setDot4(\"white\");\n    }, 5000);\n    timer = setTimeout(() => {\n      setBg(\"rgb(\" + colors[0] + \",\" + colors[1] + \",\" + colors[2] + \")\");\n    }, 6000);\n    timer = setTimeout(() => {\n      setBody(\"rgb(\" + colors[3] + \",\" + colors[4] + \",\" + colors[5] + \")\");\n    }, 7000);\n    timer = setTimeout(() => {\n      setDot1(\"rgb(\" + colors[6] + \",\" + colors[7] + \",\" + colors[8] + \")\");\n    }, 8000);\n    timer = setTimeout(() => {\n      setDot2(\"rgb(\" + colors[9] + \",\" + colors[10] + \",\" + colors[11] + \")\");\n    }, 9000);\n    timer = setTimeout(() => {\n      setDot3(\"rgb(\" + colors[12] + \",\" + colors[13] + \",\" + colors[14] + \")\");\n    }, 10000);\n    timer = setTimeout(() => {\n      setDot4(\"rgb(\" + colors[15] + \",\" + colors[16] + \",\" + colors[17] + \")\");\n    }, 11000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <img width=\"100%\" height=\"100%\" src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default RuneLoading;\n","import React from \"react\";\n\nconst CheckMark = () => {\n  return (\n    <div style={{width:\"90px\", height:\"90px\"}}>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 130.2 130.2\"\n      >\n        <circle\n          className=\"path circle\"\n          fill=\"none\"\n          stroke=\"#73AF55\"\n          strokeWidth=\"6\"\n          strokeMiterlimit=\"10\"\n          cx=\"65.1\"\n          cy=\"65.1\"\n          r=\"62.1\"\n        />\n        <polyline\n          className=\"path check\"\n          fill=\"none\"\n          stroke=\"#73AF55\"\n          strokeWidth=\"6\"\n          strokeLinecap=\"round\"\n          strokeMiterlimit=\"10\"\n          points=\"100.2,40.2 51.5,88.8 29.8,67.5 \"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default CheckMark;\n","import React, { useEffect, useState } from \"react\";\nimport { INetworkType, Network } from \"../../neo/network\";\nimport RuneLoading from \"./RuneLoading\";\nimport CheckMark from \"../../../ui/pages/Tournament/scenes/Arena/Players/components/CheckMark\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExclamationCircle } from \"react-icons/all\";\nimport { TESTNET } from \"../../neo/consts\";\n\ninterface IAfterTransactionSubmittedProps {\n  txid: string;\n  network: INetworkType;\n  onSuccess: () => void;\n  onError: () => void;\n}\nconst AfterTransactionSubmitted = ({\n  txid,\n  network,\n  onSuccess,\n  onError,\n}: IAfterTransactionSubmittedProps) => {\n  const [isDone, setDone] = useState(false);\n  const [hasError, setError] = useState(\"\");\n\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        const res = await Network.getRawTx(txid, network);\n        if (res) {\n          setDone(true);\n        }\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    checkTxid();\n  }, [txid]);\n\n  return (\n    <div>\n      <div\n        style={{\n          width: \"200px\",\n          height: \"200px\",\n          margin: \"auto\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        className=\"\"\n      >\n        {hasError ? (\n          <FaExclamationCircle size={90} className=\"has-text-danger\" />\n        ) : isDone ? (\n          <CheckMark />\n        ) : (\n          <RuneLoading />\n        )}\n      </div>\n      <div className=\"has-background  has-text-centered mt-5\">\n        {hasError ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Error occurred</h1>\n            <p className=\"subtitle is-7\">{hasError}</p>\n            <button onClick={onError} className=\"button is-black\">\n              Close\n            </button>\n          </div>\n        ) : isDone ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Submitted</h1>\n            <p className=\"subtitle is-7\">Your transaction accepted</p>\n            <div className=\"block\">\n              <a\n                target=\"_blank\"\n                href={`https://${\n                  network === TESTNET && \"testnet.\"\n                }explorer.onegate.space/transactionInfo/${txid}`}\n              >\n                View txid on explorer\n              </a>\n            </div>\n            <div className=\"block\">\n              <button onClick={onSuccess} className=\"button is-black\">\n                Close\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <h1 className=\"title is-5\">Submitting..</h1>\n            <p className=\"subtitle is-7\">\n              Please wait until your transaction accepted\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AfterTransactionSubmitted;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport PropertiesModal from \"./PropertiesModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport Banner from \"./Banner\";\nimport { RestAPI } from \"../../../packages/neo/api\";\nimport { RUNE_PHASE_FILTER } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../components/Modal\";\n\nconst Gallery = () => {\n  const [txid, setTxid] = useState(\"\");\n  const [filter, setFilter] = useState<string>(RUNE_PHASE_FILTER[0]);\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n  const onFilterChange = (val: string) => setFilter(val);\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).mint(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    document.title =\n      \"Forthewin Rune: Algorithms-generated lucky runes NFT on NEO\";\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const items = await new RestAPI(network).getRunes(filter);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getTokens();\n        setTokens(items);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network, filter]);\n  return (\n    <section id=\"Rune\">\n      <Banner\n        network={network}\n        filter={filter}\n        onFilterChange={onFilterChange}\n        onMint={onMint}\n      />\n      {isLoading ? (\n        <PageLayout>\n          <div>Loading..</div>\n        </PageLayout>\n      ) : error ? (\n        <PageLayout>\n          <div>{error}</div>\n        </PageLayout>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"wrap\",\n          }}\n        >\n          {tokens.map((token) => (\n            <figure\n              style={{ width: \"10%\" }}\n              key={token.tokenId}\n              className=\"image rune\"\n              onClick={() => onPropertiesModalActive(token.tokenId.toString())}\n            >\n              <img src={token.image} />\n              {/*<small*/}\n              {/*  className=\"has-text-white\"*/}\n              {/*  style={{ position: \"absolute\", top: 0 }}*/}\n              {/*>*/}\n              {/*  #{token.tokenId}*/}\n              {/*</small>*/}\n              {/*<span className=\"has-text-white\">{token.phase}</span>*/}\n            </figure>\n          ))}\n        </div>\n      )}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={() => setTxid(\"\")}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { GALLERY_PATH, MENU, SMITH_PATH } from \"../../consts\";\nimport { useWallet } from \"../../packages/provider\";\n\nconst SidebarNav = (props) => {\n  const { network } = useWallet();\n  const { toggleSidebar } = useApp();\n  return (\n    <aside className=\"menu p-5\">\n      <p className=\"menu-label\">Menu</p>\n      <ul className=\"menu-list\">\n        {MENU.map((route, i) => {\n          if (!route.network.includes(network)) return false;\n          return (\n            <li key={`${route.label}${i}`}>\n              <NavLink\n                onClick={toggleSidebar}\n                activeClassName={\"is-active\"}\n                to={route.path}\n              >\n                {route.label}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </aside>\n  );\n};\n\nexport default SidebarNav;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport SidebarNav from \"./SidebarNav\";\n\nconst MobileMenuSlider = (props) => {\n  const { sidebarStatus, toggleSidebar } = useApp();\n  return (\n    <SideNav\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={sidebarStatus}\n      onHideNav={toggleSidebar}\n      children={<SidebarNav />}\n    />\n  );\n};\n\nexport default MobileMenuSlider;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport PageLayout from \"../components/PageLayout\";\n// tslint:disable-next-line:no-submodule-imports\nimport DOTS from \"vanta/dist/vanta.halo.min\";\nimport RuneLoading from \"../../packages/ui/AfterTransactionSubmitted/RuneLoading\";\n// import * as THREE from \"three\";\n\nconst Home = (props) => {\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        DOTS({\n          el: myRef.current,\n          mouseControls: true,\n          touchControls: true,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          backgroundColor: 0x80822,\n          size: 2.8,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) {\n        // @ts-ignore\n        vantaEffect.destroy();\n      }\n    };\n  }, [vantaEffect]);\n  return (\n    <div>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-flex\" style={{ alignItems: \"center\" }}>\n                <div>\n                  <h1 className=\"title\">Forthewin is back</h1>\n                  <p className=\"subtitle\">\n                    Migrate your Neo-legacy FTX to the new <span>N3 FTW</span>\n                  </p>\n                  <a\n                    target=\"_blank\"\n                    href=\"https://nepmigration.com/\"\n                    className=\"button is-primary\"\n                  >\n                    Go to Migrate\n                  </a>\n                </div>\n              </div>\n              <div className=\"column is-hidden-touch\">\n                <div\n                  className=\"block\"\n                  // style={{ display: \"flex\", justifyContent: \"center\" }}\n                >\n                  <video style={{ width: \"450px\" }} autoPlay loop>\n                    <source src={\"/migration.mp4\"} type=\"video/mp4\" />\n                  </video>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns halo\" ref={myRef}>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>Neo-legacy</h3>\n                <h6>Symbol</h6>\n                <p>FTX</p>\n                <h6>Contract hash</h6>\n                <p>0xaac66f9779ca67d819d05492805d251dab02fc7b</p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://neotracker.io/asset/aac66f9779ca67d819d05492805d251dab02fc7b\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>N3</h3>\n                <h6>Symbol</h6>\n                <p>FTW</p>\n                <h6>Contract hash</h6>\n                <p>\n                  <a\n                    target=\"_blank\"\n                    className=\"has-text-dark\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\n                  </a>\n                </p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://explorer.onegate.space/NEP17tokeninfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Home;\n","import { CONST } from \"../../../index\";\n\nexport const SMITH_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"f161ae138e0255b809612e4d26e540c94c83c0cc\",\n  [CONST.TESTNET]: \"799704f9d8588b183204e154f8eea1de35bb3ecd\",\n  [CONST.MAINNET]: \"f860bbdcc5091a9ae7812b047fd325dfa7905ee1\",\n};\n\nexport const DEPLOY_FEE = {\n  [CONST.PRIVATENET]: \"10\",\n  [CONST.TESTNET]: \"10\",\n  [CONST.MAINNET]: \"10\",\n};\n","import {\n  base64ToAddress,\n  base64ToDate,\n  base64ToHash160,\n  base64ToString,\n} from \"../../../utils\";\nimport { u } from \"@cityofzion/neon-core\";\n\nexport const parsePaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseRecord(stackItem[3].value),\n  };\n};\n\nconst parseRecord = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractOwner: base64ToAddress(item.value[1].value),\n      contractHash: base64ToHash160(item.value[2].value), // NEO amount\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      decimals: item.value[5].value, // NEO amount\n      totalSupply: item.value[6].value, // NEO amount\n      author: base64ToString(item.value[7].value), // NEO amount\n      description: base64ToString(item.value[8].value), // NEO amount\n      createdAt: base64ToDate(item.value[9].value),\n    };\n  });\n};\n\nexport const parseNEP11RecordPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseNEP11Record(stackItem[3].value),\n  };\n};\n\nconst parseNEP11Record = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractHash: base64ToHash160(item.value[1].value), // NEO amount\n      contractOwner: base64ToAddress(item.value[2].value),\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      description: base64ToString(item.value[5].value), // NEO amount\n      author: base64ToString(item.value[6].value), // NEO amount\n      email: base64ToString(item.value[7].value), // NEO amount\n      createdAt: base64ToDate(item.value[8].value),\n    };\n  });\n};\n\nexport const parseSmithProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { DEPLOY_FEE, SMITH_SCRIPT_HASH } from \"./consts\";\nimport { ISmithContractStatus, ISmithNEP11RecordPaginate } from \"./interfaces\";\nimport {\n  parseNEP11RecordPaginate,\n  parsePaginate,\n  parseSmithProperties,\n} from \"./helpers\";\nimport { u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { IRuneMeta } from \"../nft/interfaces\";\n\nexport class SmithContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = SMITH_SCRIPT_HASH[networkType];\n  }\n\n  createNEP17 = async (\n    connectedWallet: IConnectedWallet,\n    contractName: string,\n    symbol: string,\n    decimals: string,\n    totalSupply: string,\n    author: string,\n    description: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(\n            DEPLOY_FEE[this.network],\n            8\n          ).toString(),\n        },\n        {\n          type: \"Array\",\n          value: [\n            {\n              type: \"String\",\n              value: \"nep17\",\n            },\n            {\n              type: \"Hash160\",\n              value: NeonWallet.getScriptHashFromAddress(\n                connectedWallet.account.address\n              ),\n            },\n            {\n              type: \"String\",\n              value: contractName,\n            },\n            {\n              type: \"String\",\n              value: author,\n            },\n            {\n              type: \"String\",\n              value: description,\n            },\n            {\n              type: \"String\",\n              value: symbol,\n            },\n            {\n              type: \"Integer\",\n              value: totalSupply,\n            },\n            {\n              type: \"Integer\",\n              value: decimals,\n            },\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  createNEP11 = async (\n    connectedWallet: IConnectedWallet,\n    contractName: string,\n    symbol: string,\n    author: string,\n    description: string,\n    email: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(\n            DEPLOY_FEE[this.network],\n            8\n          ).toString(),\n        },\n        {\n          type: \"Array\",\n          value: [\n            {\n              type: \"String\",\n              value: \"nep11\",\n            },\n            {\n              type: \"Hash160\",\n              value: NeonWallet.getScriptHashFromAddress(\n                connectedWallet.account.address\n              ),\n            },\n            {\n              type: \"String\",\n              value: symbol,\n            },\n            {\n              type: \"String\",\n              value: contractName,\n            },\n            {\n              type: \"String\",\n              value: description,\n            },\n            {\n              type: \"String\",\n              value: author,\n            },\n            {\n              type: \"String\",\n              value: email,\n            },\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  mintNFT = async (\n    connectedWallet: IConnectedWallet,\n    contractHash: string,\n    name: string,\n    description: string,\n    image: string,\n    json\n  ) => {\n    const invokeScript = {\n      operation: \"mintNFT\",\n      scriptHash: contractHash,\n      args: [\n        {\n          type: \"String\",\n          value: name,\n        },\n        {\n          type: \"String\",\n          value: description,\n        },\n        {\n          type: \"String\",\n          value: image,\n        },\n        {\n          type: \"String\",\n          value: json,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getStatus = async (): Promise<ISmithContractStatus> => {\n    const records = {\n      operation: \"getRecords\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n\n    const scripts = [records];\n\n    const res = await Network.read(this.network, scripts);\n    return {\n      records: parsePaginate(res.stack[0].value),\n    };\n  };\n\n  getNEP11Records = async (): Promise<ISmithNEP11RecordPaginate> => {\n    const records = {\n      operation: \"getNep11Records\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n    const scripts = [records];\n    const res = await Network.read(this.network, scripts);\n    return parseNEP11RecordPaginate(res.stack[0].value);\n  };\n\n  getTokens = async (contract): Promise<string[]> => {\n    const script = {\n      scriptHash: contract,\n      operation: \"tokens\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].iterator.map((item) => {\n      return u.HexString.fromBase64(item.value as string).toAscii();\n    });\n  };\n\n  totalSupply = async (contract): Promise<number> => {\n    const script = {\n      scriptHash: contract,\n      operation: \"totalSupply\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseFloat(res.stack[0].value);\n  };\n\n  getProperties = async (\n    contractHash: string,\n    tokenId: string\n  ): Promise<IRuneMeta> => {\n    const script = {\n      scriptHash: contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseSmithProperties(res.stack);\n  };\n}\n","const emojiRegexExp =\n  /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/gi;\n\nexport const detectEmojiInString = (values: object) => {\n  let detected = 0;\n  const keys = Object.keys(values);\n  keys.forEach((i) => {\n    detected = emojiRegexExp.test(values[i]) ? detected + 1 : detected;\n  });\n  return detected;\n};\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport NumberFormat from \"react-number-format\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\n\nconst NEP17FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    decimals: \"8\",\n    totalSupply: \"\",\n    author: \"\",\n    description: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        try {\n          const res = await new SmithContract(network).createNEP17(\n            connectedWallet,\n            values.name,\n            values.symbol,\n            values.decimals,\n            values.totalSupply,\n            values.author,\n            values.description\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Create NEP17 Contract</h1>\n\n          <div className=\"field is-grouped is-grouped-multiline\">\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Deploy fee</span>\n                <span className=\"tag is-primary\">10 GAS</span>\n              </div>\n            </div>\n\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">System fee</span>\n                <span className=\"tag is-primary\">\n                  {DEPLOY_FEE[network]} GAS\n                </span>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">Token Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Symbol</label>\n                <div className=\"control\">\n                  <input\n                    value={values.symbol}\n                    onChange={(e) =>\n                      handleValueChange(\"symbol\", e.target.value)\n                    }\n                    className=\"input\"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Decimals</label>\n                <div className=\"control\">\n                  <NumberFormat\n                    decimalScale={0}\n                    inputMode=\"decimal\"\n                    className=\"input\"\n                    value={values.decimals}\n                    onValueChange={(value) => {\n                      handleValueChange(\"decimals\", value.value);\n                    }}\n                    max={18}\n                    allowNegative={false}\n                    allowLeadingZeros={false}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Total supply</label>\n            <div className=\"control\">\n              <NumberFormat\n                allowNegative={false}\n                decimalScale={0}\n                inputMode=\"decimal\"\n                className=\"input\"\n                value={values.totalSupply}\n                onValueChange={(value) => {\n                  handleValueChange(\"totalSupply\", value.value);\n                }}\n                allowLeadingZeros={false}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.decimals ||\n              parseFloat(values.decimals) > 18 ||\n              parseFloat(values.totalSupply) < 1 ||\n              !values.author ||\n              !values.description ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP17FormModal;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst NEP11FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    author: \"\",\n    description: \"\",\n    email: \"\",\n  });\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        try {\n          const res = await new SmithContract(network).createNEP11(\n            connectedWallet,\n            values.name,\n            values.symbol,\n            values.author,\n            values.description,\n            values.email\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Create NEP11 Contract</h1>\n          <div className=\"field is-grouped is-grouped-multiline\">\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Deploy fee</span>\n                <span className=\"tag is-primary\">10 GAS</span>\n              </div>\n            </div>\n\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">System fee</span>\n                <span className=\"tag is-primary\">\n                  {DEPLOY_FEE[network]} GAS\n                </span>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">NFT Contract Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Symbol</label>\n            <div className=\"control\">\n              <input\n                value={values.symbol}\n                onChange={(e) => handleValueChange(\"symbol\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control\">\n              <input\n                value={values.email}\n                onChange={(e) => handleValueChange(\"email\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.author ||\n              !values.description ||\n              !values.email ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP11FormModal;\n","import React, { useState } from \"react\";\nimport { SMITH_PATH, TOURNAMENT_PATH } from \"../../../consts\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport NEP17FormModal from \"./NEP17FormModal\";\nimport NEP11FormModal from \"./NEP11FormModal\";\n\nconst Banner = () => {\n  const location = useLocation();\n  const [isNep11FormModalActive, setNep11FormModalActive] = useState(false);\n  const [isNep17FormModalActive, setNep17FormModalActive] = useState(false);\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">Forthewin Smith</h1>\n          <p className=\"subtitle\">\n            Create your own NEP11 and NEP17 smart contracts without any codes\n          </p>\n          <div className=\"buttons\">\n            <button\n              onClick={() => setNep11FormModalActive(true)}\n              className=\"button is-primary press-font\"\n            >\n              Deploy NEP11\n            </button>\n            <button\n              onClick={() => setNep17FormModalActive(true)}\n              className=\"button is-primary press-font\"\n            >\n              Deploy NEP17\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              <li\n                className={location.pathname === SMITH_PATH ? \"is-active\" : \"\"}\n              >\n                <Link to={SMITH_PATH}>NEP11 (NFT)</Link>\n              </li>\n              <li\n                className={\n                  location.pathname === SMITH_PATH + \"/nep17\" ? \"is-active\" : \"\"\n                }\n              >\n                <Link to={SMITH_PATH + \"/nep17\"}>NEP17 (Token)</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n      {isNep11FormModalActive && (\n        <NEP11FormModal onClose={() => setNep11FormModalActive(false)} />\n      )}\n      {isNep17FormModalActive && (\n        <NEP17FormModal onClose={() => setNep17FormModalActive(false)} />\n      )}\n    </section>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\nimport { ISmithRecord } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { FaExternalLinkAlt } from \"react-icons/all\";\n\ninterface IContractCardProps {\n  data: ISmithRecord;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network } = useWallet();\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">\n          #{data.no} {data.name}\n        </h5>\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/contractinfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n        </div>\n        <div className=\"field is-grouped is-grouped-multiline\">\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Symbol</span>\n              <span className=\"tag is-info\">{data.symbol}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Decimals</span>\n              <span className=\"tag is-info\">{data.decimals}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Total supply</span>\n              <span className=\"tag is-info\">{data.totalSupply}</span>\n            </div>\n          </div>\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Author</span>\n              <span className=\"tag is-info\">{data.author}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContractCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\n\nconst NEP17Smith = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [status, setStatus] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getStatus();\n        setStatus(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {status && status.records.items.length > 0 ? (\n            status.records.items.map((item, i) => (\n              <ContractCard key={\"contact17\" + i} data={item} />\n            ))\n          ) : (\n            <div></div>\n          )}\n        </div>\n      )}\n      {/*{isActionModalActive && (*/}\n      {/*  <ActionModal onClose={() => setActionModalActive(false)} />*/}\n      {/*)}*/}\n    </>\n  );\n};\n\nexport default NEP17Smith;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\n\ninterface IActionModal {\n  contractHash: string;\n  onClose: () => void;\n}\nconst NEP11MintFormModal = ({ contractHash, onClose }: IActionModal) => {\n  const { network, connectedWallet } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [showForm, setShowForm] = useState(false);\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    image: \"\",\n    attributes: {},\n  });\n  const [attValues, setAttValues] = useState({\n    key: \"\",\n    value: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n\n  const handleAttChange = (key: string, val: string) => {\n    setAttValues({\n      ...attValues,\n      [key]: val,\n    });\n  };\n\n  const handleAttributes = () => {\n    if (attValues.key && attValues.value) {\n      // @ts-ignore\n      const attributes = values.attributes;\n      attributes[attValues.key] = attValues.value;\n      setValues({\n        ...values,\n        attributes,\n      });\n      setAttValues({\n        key: \"\",\n        value: \"\",\n      });\n    }\n  };\n\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SmithContract(network).mintNFT(\n          connectedWallet,\n          contractHash,\n          values.name,\n          values.description,\n          values.image,\n          JSON.stringify(values.attributes)\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  const attKeys = Object.keys(values.attributes);\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Mint a NFT</h1>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">NFT Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Image</label>\n            <div className=\"control\">\n              <input\n                value={values.image}\n                onChange={(e) => handleValueChange(\"image\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"level\">\n            <div className=\"level-left\">\n              <div className=\"level-item\">\n                <label className=\"label\">NFT Attributes</label>\n              </div>\n            </div>\n\n            <div className=\"level-right\">\n              <div className=\"level-item\">\n                <button\n                  onClick={() => setShowForm(!showForm)}\n                  className=\"button is-dark\"\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"field is-grouped is-grouped-multiline\">\n              {attKeys.map((k) => {\n                return (\n                  <div className=\"control\">\n                    <div className=\"tags has-addons\">\n                      <span className=\"tag is-dark\">{k}</span>\n                      <span className=\"tag is-info\">\n                        {values.attributes[k]}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {showForm && (\n            <div className=\"block\">\n              <div className=\"columns is-mobile\">\n                <div className=\"column is-5\">\n                  <div className=\"control\">\n                    <input\n                      placeholder=\"KEY\"\n                      value={attValues.key}\n                      onChange={(e) => handleAttChange(\"key\", e.target.value)}\n                      className=\"input\"\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n                <div className=\"column\">\n                  <div className=\"control is-5\">\n                    <input\n                      placeholder=\"VALUE\"\n                      value={attValues.value}\n                      onChange={(e) => handleAttChange(\"value\", e.target.value)}\n                      className=\"input\"\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n                <div className=\"column is-2\">\n                  <button\n                    disabled={!attValues.key || !attValues.value}\n                    onClick={handleAttributes}\n                    className=\"button\"\n                  >\n                    Submit\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <hr />\n          <button\n            onClick={onMint}\n            disabled={!values.name || !values.description || !values.image}\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP11MintFormModal;\n","import React, { useEffect, useState } from \"react\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\n\ninterface IDisplayRuneProps {\n  contractHash: string;\n  tokenId: string;\n  network: INetworkType;\n}\n\nconst DisplayRune = ({ contractHash, tokenId, network }: IDisplayRuneProps) => {\n  const [token, setToken] = useState<any>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new SmithContract(network).getProperties(\n          contractHash,\n          tokenId\n        );\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return <img width=\"100%\" height=\"100%\" src={token.image} />;\n};\n\nexport default DisplayRune;\n","import React, { useEffect, useState } from \"react\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport DisplayNFT from \"./DisplayNFT\";\nimport _ from \"underscore\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport { wallet } from \"@cityofzion/neon-core\";\ninterface ITokensProps {\n  contractHash: string;\n}\nconst Tokens = ({ contractHash }: ITokensProps) => {\n  const [tokens, setTokens] = useState<number>(0);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new SmithContract(network).totalSupply(contractHash);\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [contractHash, network]);\n  return (\n    <>\n      <strong>Supply</strong>\n      <br />\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {tokens}\n          {tokens > 0 ? (\n            <>\n              <br />\n              <strong>Showcase</strong>\n              <div className=\"columns is-multiline is-mobile\">\n                {_.range(tokens > 12 ? 12 : tokens).map((i) => {\n                  const tokenId = i + 1;\n                  return (\n                    <div\n                      key={`token${i}`}\n                      className=\"column is-1-desktop is-3-mobile\"\n                    >\n                      <DisplayNFT\n                        network={network}\n                        contractHash={contractHash}\n                        tokenId={tokenId.toString()}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              {tokens > 12 && (\n                <a\n                  className=\"button is-black\"\n                  target=\"_blank\"\n                  href={`https://${\n                    network === MAINNET\n                      ? \"explorer.onegate.space\"\n                      : \"testnet.explorer.onegate.space\"\n                  }/NFTtokeninfo/0x${contractHash}`}\n                >\n                  <span className=\"icon\">\n                    <FaExternalLinkAlt />\n                  </span>\n                  <span>Browse more</span>\n                </a>\n              )}\n            </>\n          ) : (\n            <div></div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Tokens;\n","import React, { useState } from \"react\";\nimport { ISmithNEP11Record } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport NEP11MintFormModal from \"../../NEP11MintFormModal\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport Tokens from \"./Tokens\";\n\ninterface IContractCardProps {\n  data: ISmithNEP11Record;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network, connectedWallet } = useWallet();\n  const [isMintModalActive, setMintModalActive] = useState(\"\");\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">\n          #{data.no} {data.name}\n        </h5>\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/NFTtokeninfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n          <br />\n          <Tokens contractHash={data.contractHash} />\n        </div>\n      </div>\n      {connectedWallet &&\n        connectedWallet.account.address === data.contractOwner && (\n          <div className=\"media-right\">\n            <div className=\"block\">\n              <button\n                onClick={() => setMintModalActive(data.contractHash)}\n                className=\"button is-primary press-font\"\n              >\n                Mint\n              </button>\n            </div>\n          </div>\n        )}\n\n      {isMintModalActive && (\n        <NEP11MintFormModal\n          contractHash={isMintModalActive}\n          onClose={() => setMintModalActive(\"\")}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ContractCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\nimport { ISmithNEP11RecordPaginate } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\n\nconst NEP11Smith = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState<ISmithNEP11RecordPaginate>();\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getNEP11Records();\n        setData(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {data && data.items.length > 0 ? (\n            data.items.map((item, i) => (\n              <ContractCard key={\"contract\" + i} data={item} />\n            ))\n          ) : (\n            <div>No contracts to display</div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NEP11Smith;\n","import React, { useEffect } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { SMITH_PATH } from \"../../../consts\";\nimport { Route } from \"react-router-dom\";\nimport Banner from \"./Banner\";\nimport NEP17Smith from \"./scenes/NEP17\";\nimport NEP11Smith from \"./scenes/NEP11\";\n\nconst Smith = () => {\n  useEffect(() => {\n    document.title =\n      \"Forthewin Smith: Create your NEP11 and NEP17 smart contracts without any codes.\";\n  }, []);\n  return (\n    <>\n      <Banner />\n      <PageLayout>\n        <Route exact path={SMITH_PATH} component={() => <NEP11Smith />} />\n        <Route path={SMITH_PATH + \"/nep17\"} component={() => <NEP17Smith />} />\n      </PageLayout>\n    </>\n  );\n};\n\nexport default Smith;\n","import { TOURNAMENT_PATH } from \"../../../consts\";\n\nexport const ARENA_PATH = TOURNAMENT_PATH + \"/:arenaNo\";\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TOURNAMENT_PATH } from \"../../../../../consts\";\nimport PageLayout from \"../../../../components/PageLayout\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\n\nconst ArenaHome = (props) => {\n  const { network } = useWallet();\n  let ARENA_LIST = [\"8\", \"16\", \"32\", \"64\", \"128\", \"256\"];\n  if (network === MAINNET) {\n    ARENA_LIST = [\"8\", \"16\", \"32\", \"64\", \"128\"];\n  }\n  return (\n    <div\n      style={{\n        backgroundImage: 'url(\"arena-bg.jpeg\")',\n        backgroundSize: \"cover\",\n        height: \"calc(100vh - 52px)\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      <PageLayout>\n        {/*<div className=\"columns is-multiline\">*/}\n        {ARENA_LIST.map((arena) => {\n          return (\n            <div\n              key={arena}\n              // className=\"column is-4\"\n            >\n              <div\n                className=\"has-text-centered\"\n                // className={`notification has-text-centered ${ARENA_COLOR[arena]}`}\n              >\n                <Link\n                  to={TOURNAMENT_PATH + \"/\" + arena}\n                  className=\"title has-text-white\"\n                >\n                  ARENA {arena}\n                </Link>\n              </div>\n            </div>\n          );\n        })}\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default ArenaHome;\n","import { CONST } from \"../../../index\";\n\nexport const TOURNAMENT_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"d2016f40d26d420c696132e5dae453d93b0f3050\",\n  [CONST.TESTNET]: \"1666b9485e2faf13ccea24c9563dfa5cbd92a1ad\",\n  [CONST.MAINNET]: \"0eb288c413b5d5ec4aa0df5aea34d9538b28dd29\",\n};\n\nexport const ADMIN_FOR_PLAY = {\n  [CONST.PRIVATENET]: [\"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\"],\n  [CONST.TESTNET]: [\n    \"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\",\n    \"NS9QLsaY8RzN9fxTWj9AECyLaJvsk38XUb\",\n  ],\n  [CONST.MAINNET]: [\"NS9QLsaY8RzN9fxTWj9AECyLaJvsk38XUb\"],\n};\n","import {\n  base64ToAddress,\n  base64ToHash160,\n  base64ToString,\n  toDecimal,\n} from \"../../../utils\";\nimport { IHistory, IHistoryGame, IPlayer } from \"./interfaces\";\n\nexport const parsePlayer = (stackItem): IPlayer => {\n  return stackItem.map((item) => {\n    return {\n      // no: item.value[0].value,\n      owner: base64ToAddress(item.value[0].value),\n      tokenHash: base64ToHash160(item.value[1].value),\n      tokenId: base64ToString(item.value[2].value),\n      phase: base64ToString(item.value[3].value),\n      luck: item.value[4].value,\n      createdAt: item.value[5].value,\n    };\n  });\n};\n\nexport const parseHistory = (stackItem: any): IHistory => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    currentPage: stackItem[2].value,\n    items: parseGame(stackItem[3].value),\n  };\n};\n\nconst parseGame = (stackItem): IHistoryGame[] => {\n  return stackItem.map((item) => {\n    return {\n      gameNo: item.value[0].value,\n      tournamentTree: parsePlayer(item.value[1].value),\n      champion: base64ToString(item.value[2].value), // NEO amount\n      nonce: item.value[3].value,\n      betsOnChampion: item.value[4].value,\n      totalBets: item.value[5].value,\n      rollover: item.value[6].value,\n      fee: item.value[7].value,\n      championPrize: item.value[8].value,\n      createdAt: item.value[9].value,\n    };\n  });\n};\n\nexport const calculateClaimableAmount = (\n  history: IHistoryGame,\n  betAmount: number\n): number => {\n  let totalAmount =\n    parseFloat(history.totalBets) -\n    parseFloat(history.fee) -\n    parseFloat(history.championPrize);\n  totalAmount = totalAmount + parseFloat(history.rollover);\n  const ownershipPercentage =\n    (((betAmount * 1000) / parseFloat(history.betsOnChampion)) * 1000) / 100;\n  const myClaimAble = (totalAmount * ownershipPercentage) / (100 * 100);\n  return toDecimal(myClaimAble.toString());\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { TOURNAMENT_SCRIPT_HASH } from \"./consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { RUNE_SCRIPT_HASH } from \"../nft\";\nimport { parsePlayer, parseHistory } from \"./helpers\";\nimport { GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { toDecimal } from \"../../../utils\";\n\nexport class TournamentContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = TOURNAMENT_SCRIPT_HASH[networkType];\n  }\n\n  register = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: RUNE_SCRIPT_HASH[this.network],\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n        {\n          type: \"Array\",\n          value: [\n            {\n              type: \"Integer\",\n              value: arenaNo,\n            },\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n      // \"0.01\"\n    );\n  };\n\n  play = async (\n    connectedWallet: IConnectedWallet,\n    arenaNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"play\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      \"0.1\"\n    );\n  };\n\n  leave = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"leave\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n      // \"0.1\"\n    );\n  };\n\n  bet = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        { type: \"Address\", value: connectedWallet.account.address },\n        { type: \"Hash160\", value: this.contractHash },\n        { type: \"Integer\", value: \"10000000\" },\n        {\n          type: \"Array\",\n          value: [\n            { type: \"Integer\", value: arenaNo },\n            { type: \"String\", value: tokenId },\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      \"0.01\"\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    arenaNo: string,\n    gameNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getPlayers = async (arenaNo: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPlayers\",\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parsePlayer(res.stack[0].value);\n  };\n\n  history = async (arenaNo: string, page: number): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getHistoryPaginate\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: page },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    return parseHistory(res.stack[0].value);\n  };\n\n  getGameHeight = async (arenaNo: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getGameHeight\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].value;\n  };\n\n  getBetAmount = async (\n    arenaNo: string,\n    gameNo: string,\n    championTokenId: string,\n    address: string\n  ): Promise<any> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getBetsOnAccount\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"String\", value: championTokenId },\n        { type: \"Address\", value: address },\n      ],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"isClaimed\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"Address\", value: address },\n      ],\n    };\n    const res = await Network.read(this.network, [script, script1]);\n    return {\n      // @ts-ignore\n      betAmount: parseFloat(res.stack[0].value),\n      // @ts-ignore\n      isClaimed: res.stack[1].value,\n    };\n  };\n\n  getCurrentPrize = async (\n    arenaNo: string\n  ): Promise<{\n    prize: number;\n    gameNo: number;\n  }> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getCurrentPrize\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"getGameHeight\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const res = await Network.read(this.network, [script, script1]);\n    return {\n      prize: toDecimal(res.stack[0].value as string),\n      gameNo: parseFloat(res.stack[1].value as string) + 1,\n    };\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { TOURNAMENT_PATH } from \"../../../../../consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../packages/neo/contracts/ftw/tournament\";\n\ninterface IBanner {\n  arenaNo: string;\n}\nconst Banner = ({ arenaNo }: IBanner) => {\n  const location = useLocation();\n  const [status, setStatus] = useState<{\n    prize: number;\n    gameNo: number;\n  }>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchBetAmount() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getCurrentPrize(\n          arenaNo\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchBetAmount();\n  }, [network, location.pathname]);\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"level\">\n            <div className=\"level-left\">\n              <div className=\"level-item  has-text-centered\">\n                <div>\n                  <p className=\"heading\">Round</p>\n                  <p className=\"title is-5\">#{status ? status.gameNo : \"\"}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"level-left\">\n              <div className=\"level-item\">\n                <h1 className=\"title is-marginless\">ARENA {arenaNo}</h1>\n              </div>\n            </div>\n\n            <div className=\"level-left\">\n              <div className=\"level-item has-text-centered\">\n                <div>\n                  <p className=\"heading\">Prize</p>\n                  <p className=\"title is-5\">\n                    {status ? status.prize + \" GAS\" : \"\"}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              <li\n                className={\n                  location.pathname === TOURNAMENT_PATH + \"/\" + arenaNo\n                    ? \"is-active\"\n                    : \"\"\n                }\n              >\n                <Link to={TOURNAMENT_PATH + \"/\" + arenaNo}>Players</Link>\n              </li>\n              <li\n                className={\n                  location.pathname ===\n                  TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"\n                    ? \"is-active\"\n                    : \"\"\n                }\n              >\n                <Link to={TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"}>\n                  Champions\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\nimport { INetworkType } from \"../../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { RestAPI } from \"../../../../packages/neo/api\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaStar } from \"react-icons/fa\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  isOwner?: boolean;\n  onClick: (obj) => void;\n}\n\nconst DisplayRuneWithProperties = ({\n  width,\n  height,\n  tokenId,\n  network,\n  isOwner,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchRune() {\n      try {\n        const res = await new RestAPI(network).getRune(tokenId);\n        setToken(res);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getProperties(tokenId);\n        // setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchRune();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune is-relative\"\n      onClick={() => onClick({ ...token, tokenId })}\n    >\n      <img src={token.image} />\n      {isOwner && (\n        <FaStar\n          style={{ position: \"absolute\", top: \"2px\", left: \"3px\" }}\n          className=\"has-text-warning\"\n        />\n      )}\n    </figure>\n  );\n};\n\nexport default DisplayRuneWithProperties;\n","import React from \"react\";\nimport { MAINNET } from \"../../../../packages/neo/consts\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../packages/provider\";\n\ninterface IBetButtonProps {\n  arenaNo: string;\n  tokenId: string;\n  setTxid: (txid: string) => void;\n}\nconst BetButton = ({ arenaNo, tokenId, setTxid }: IBetButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onBet = async () => {\n    if (network === MAINNET) {\n      toast.error(\"Betting is not supported yet\");\n    } else {\n      if (connectedWallet) {\n        try {\n          const res = await new TournamentContract(network).bet(\n            connectedWallet,\n            tokenId,\n            arenaNo\n          );\n          addPendingTransaction(res);\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  return (\n    <button onClick={onBet} className=\"button is-primary is-fullwidth\">\n      BET 0.1 GAS\n    </button>\n  );\n};\n\nexport default BetButton;\n","import React from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\n\ninterface ILeaveButtonProps {\n  arenaNo: string;\n  tokenId: string;\n  setTxid: (txid: string) => void;\n}\nconst LeaveButton = ({ arenaNo, tokenId, setTxid }: ILeaveButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onLeave = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).leave(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  return (\n    <button onClick={onLeave} className=\"button is-danger is-fullwidth\">\n      Leave\n    </button>\n  );\n};\n\nexport default LeaveButton;\n","import React, { useState } from \"react\";\nimport { IRuneMeta } from \"../../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport BetButton from \"../../../../components/BetButton\";\nimport LeaveButton from \"../../../../components/LeaveButton\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\n\ninterface IPlayerModalProps {\n  arenaNo: string;\n  player: IRuneMeta & { tokenId: string; gameOwner: string };\n  onClose: () => void;\n}\n\nconst PlayerModal = ({ arenaNo, player, onClose }: IPlayerModalProps) => {\n  const [txid, setTxid] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  return (\n    <Modal onClose={onClose}>\n      <div>\n        {txid ? (\n          <AfterTransactionSubmitted\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n            txid={txid}\n            network={network}\n          />\n        ) : (\n          <div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <img src={player.image} />\n              </div>\n              <div className=\"column\">\n                <div className=\"content\">\n                  <strong>Name</strong>\n                  <br />\n                  <p>{player.name}</p>\n                  <strong>Phase</strong>\n                  <p>{player.phase}</p>\n                  <strong>Luck</strong>\n                  <p>{player.luck}</p>\n                  <strong>Owner</strong>\n                  <p>{player.gameOwner}</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <BetButton\n                  setTxid={setTxid}\n                  arenaNo={arenaNo}\n                  tokenId={player.tokenId}\n                />\n              </div>\n              <div className=\"column\">\n                <button\n                  onClick={onClose}\n                  className=\"button is-light is-fullwidth\"\n                >\n                  Close\n                </button>\n              </div>\n              {connectedWallet &&\n              connectedWallet.account.address === player.gameOwner ? (\n                <div className=\"column\">\n                  <LeaveButton\n                    setTxid={setTxid}\n                    arenaNo={arenaNo}\n                    tokenId={player.tokenId}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default PlayerModal;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { NFTContract } from \"../../../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toast } from \"react-hot-toast\";\n\ninterface INFTListModalModal {\n  arenaNo: string;\n  onClose: () => void;\n}\nconst NFTListModal = ({ arenaNo, onClose }: INFTListModalModal) => {\n  const [txid, setTxid] = useState(\"\");\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n\n  const onRegister = async (tokenId: string) => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).register(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        {txid ? (\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n          />\n        ) : (\n          <div>\n            <div className=\"block\">\n              <h5 className=\"title is-5\">Select a NFT to send to the ARENA</h5>\n            </div>\n            <div>\n              {isLoading ? (\n                <div>Loading..</div>\n              ) : error ? (\n                <div>{error}</div>\n              ) : tokens.length > 0 ? (\n                <div\n                  style={{\n                    flexFlow: \"wrap\",\n                  }}\n                  className=\"is-flex\"\n                >\n                  {tokens.map((token) => {\n                    return (\n                      <figure\n                        key={token.tokenId}\n                        // style={{ width, height }}\n                        className=\"image is-64x64\"\n                        onClick={() => onRegister(token.tokenId)}\n                      >\n                        <img src={token.image} />\n                      </figure>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div>You don't have runes</div>\n              )}\n            </div>\n          </div>\n        )}\n      </>\n    </Modal>\n  );\n};\n\nexport default NFTListModal;\n","import React, { useState } from \"react\";\nimport NFTListModal from \"./NFTListModal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\n\ninterface IRegisterButtonProps {\n  arenaNo: string;\n  playerCount: number;\n}\nconst RegisterButton = ({ arenaNo, playerCount }: IRegisterButtonProps) => {\n  const [modalActive, setModalActive] = useState(false);\n  const { connectedWallet } = useWallet();\n  const onPickModal = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Connect your wallet.\");\n    }\n  };\n  return (\n    <>\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title\">Players</h1>\n          </div>\n        </div>\n\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <button\n              disabled={playerCount === parseFloat(arenaNo)}\n              className=\"button is-primary press-font\"\n              onClick={onPickModal}\n            >\n              Register ({playerCount}/{arenaNo})\n            </button>\n          </div>\n        </div>\n      </div>\n      {modalActive && connectedWallet && (\n        <NFTListModal arenaNo={arenaNo} onClose={() => setModalActive(false)} />\n      )}\n    </>\n  );\n};\n\nexport default RegisterButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport DisplayRuneWithProperties from \"../../../components/DisplayRuneWithProperties\";\nimport PlayerModal from \"./components/PlayerModal\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport RegisterButton from \"./components/ArenaRegisterButton\";\n\nconst Players = ({ arenaNo }: { arenaNo: string }) => {\n  const [playerModalActive, setPlayerModalActive] = useState<\n    IRuneMeta & { tokenId: string; gameOwner: string }\n  >();\n\n  const onPlayerModalActive = (obj) => setPlayerModalActive(obj);\n  const [players, setPlayers] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getPlayers(arenaNo);\n        setPlayers(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          <RegisterButton playerCount={players.length} arenaNo={arenaNo} />\n          {players.length > 0 ? (\n            <div className=\"columns is-multiline is-mobile\">\n              {players.map(({ tokenId, owner }) => {\n                return (\n                  <div\n                    key={tokenId}\n                    className=\"column is-1-desktop is-3-mobile\"\n                  >\n                    <DisplayRuneWithProperties\n                      key={tokenId}\n                      width={\"100%\"}\n                      height={\"100%\"}\n                      tokenId={tokenId}\n                      network={network}\n                      isOwner={\n                        connectedWallet\n                          ? connectedWallet.account.address === owner\n                          : false\n                      }\n                      onClick={(obj: any) =>\n                        onPlayerModalActive({ ...obj, gameOwner: owner })\n                      }\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div>No players</div>\n          )}\n        </div>\n      )}\n      {playerModalActive && (\n        <PlayerModal\n          arenaNo={arenaNo}\n          onClose={() => setPlayerModalActive(undefined)}\n          player={playerModalActive}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Players;\n","import React from \"react\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IPlayerModalProps {\n  rune: IRuneMeta;\n  onClose: () => void;\n}\nconst NFTDetailModal = ({ rune, onClose }: IPlayerModalProps) => {\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <img src={rune.image} />\n        </div>\n        <div className=\"column\">\n          <div className=\"content\">\n            <strong>Name</strong>\n            <br />\n            <p>{rune.name}</p>\n            <strong>Phase</strong>\n            <p>{rune.phase}</p>\n            <strong>Luck</strong>\n            <p>{rune.luck}</p>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NFTDetailModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { IHistoryGame } from \"../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport { calculateClaimableAmount } from \"../../../../packages/neo/contracts/ftw/tournament/helpers\";\n\ninterface IClaimButtonProps {\n  arenaNo: string;\n  history: IHistoryGame;\n  onClaimed: (txid: string) => void;\n}\nconst ClaimButton = ({ arenaNo, history, onClaimed }: IClaimButtonProps) => {\n  const [status, setStatus] = useState<any>({\n    betAmount: 0,\n    isClaimed: false,\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).claim(\n          connectedWallet,\n          arenaNo,\n          history.gameNo\n        );\n        addPendingTransaction(res);\n        onClaimed(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  useEffect(() => {\n    async function fetchBetAmount(address: string) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetAmount(\n          arenaNo,\n          history.gameNo,\n          history.champion,\n          address\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchBetAmount(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network]);\n  if (!connectedWallet) return <></>;\n  if (!status.betAmount) return <></>;\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {status.isClaimed ? (\n            <button disabled={true} className=\"button is-info is-fullwidth\">\n              Claimed\n            </button>\n          ) : (\n            <button className=\"button is-info is-fullwidth\" onClick={onClaim}>\n              Claim {calculateClaimableAmount(history, status.betAmount)} GAS\n            </button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ClaimButton;\n","import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaPlay } from \"react-icons/fa\";\nimport { NFTContract } from \"../../../../../../packages/neo/contracts\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { INetworkType } from \"../../../../../../packages/neo/network\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport ClaimButton from \"../../../components/ClaimButton\";\nimport { u } from \"@cityofzion/neon-core\";\nimport { toDecimal } from \"../../../../../../packages/neo/utils\";\n\ninterface IDisplayRuneProps {\n  history: IHistoryGame;\n  arenaNo: string;\n  width: string;\n  height: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n  onReplay: () => void;\n  onClaimed: (txid: string) => void;\n}\n\nconst HistoryTable = ({\n  history,\n  arenaNo,\n  width,\n  height,\n  network,\n  onClick,\n  onReplay,\n  onClaimed,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(\n          history.champion\n        );\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [history]);\n  if (!token) return <></>;\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        {\" \"}\n        <figure\n          style={{ width, height }}\n          className=\"image rune\"\n          onClick={() => onClick(token)}\n        >\n          <img src={token.image} />\n        </figure>\n      </div>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          Game #{history.gameNo}\n          <br />\n          Champ: {token.name} ({token.phase} / {token.luck})\n          <br />\n          Total bets: {toDecimal(history.totalBets)}\n          <br />\n          Rollover: {toDecimal(history.rollover)}\n          <br />\n          Total bets on champ: {toDecimal(history.betsOnChampion)}\n          <br />\n          Fee: {toDecimal(history.fee)}\n          <br />\n          Champ prize: {toDecimal(history.championPrize)}\n        </div>\n        <button onClick={() => onReplay()} className=\"button is-black is-small\">\n          <span className=\"icon\">\n            <FaPlay />\n          </span>\n          <span>Replay</span>\n        </button>\n      </div>\n      <div className=\"media-right\">\n        <div>\n          <ClaimButton\n            onClaimed={onClaimed}\n            arenaNo={arenaNo}\n            history={history}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryTable;\n","export const fight = (aPhase, aLuck, bPhase, bLuck, nonce) => {\n  aLuck = parseFloat(aLuck);\n  bLuck = parseFloat(bLuck);\n  nonce = parseFloat(nonce);\n  if (aPhase === bPhase) {\n    return compareLuck(aLuck, bLuck, nonce);\n  }\n\n  switch (aPhase) {\n    case \"Fire\":\n      switch (bPhase) {\n        case \"Metal\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Wood\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Earth\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Water\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Water\":\n      switch (bPhase) {\n        case \"Fire\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Metal\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Wood\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Earth\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Wood\":\n      switch (bPhase) {\n        case \"Earth\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Water\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Fire\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Metal\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Earth\":\n      switch (bPhase) {\n        case \"Water\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Fire\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Metal\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Wood\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Metal\":\n      switch (bPhase) {\n        case \"Wood\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Earth\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Water\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Fire\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Dark\":\n      switch (bPhase) {\n        case \"Light\":\n          aLuck = aLuck - 3;\n          break;\n        default:\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Light\":\n      switch (bPhase) {\n        case \"Dark\":\n          aLuck = aLuck + 3;\n          break;\n        default:\n          aLuck = aLuck - 3;\n          break;\n      }\n      break;\n  }\n  return compareLuck(aLuck, bLuck, nonce);\n};\n\nconst compareLuck = (aLuck, bLuck, nonce) => {\n  if (aLuck > bLuck) {\n    return \"A\";\n  } else if (bLuck > aLuck) {\n    return \"B\";\n  } else {\n    // tslint:disable-next-line:no-unused-expression\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    return nonce % 2 === 0 ? \"A\" : \"B\";\n  }\n  // else\n  // {\n  // \tvar tx = (Transaction)Runtime.ScriptContainer;\n  // \treturn tx.Nonce % 2 == 0 ? \"A\" : \"B\";\n  // }\n};\n","import React from \"react\";\nimport { IPlayer } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport DisplayRuneWithProperties from \"../../../components/DisplayRuneWithProperties\";\nimport { fight } from \"../helpers\";\nimport { useWallet } from \"../../../../../../packages/provider\";\n\ninterface ITournamentTree {\n  champ: string;\n  nonce: string;\n  tree: IPlayer[];\n  onClick: (obj) => void;\n}\n\nfunction* chunks(arr, n) {\n  for (let i = 0; i < arr.length; i += n) {\n    yield arr.slice(i, i + n);\n  }\n}\n\nconst TournamentTree = ({ onClick, champ, tree, nonce }: ITournamentTree) => {\n  const { network } = useWallet();\n\n  let capacity = tree.length;\n  let stage: IPlayer[] = tree;\n  let winners: IPlayer[] = [];\n  let match: IPlayer[] = [];\n  let rounds: any[] = [];\n  while (capacity >= 2) {\n    for (let i = 0; i < capacity; i++) {\n      match.push(stage[i]);\n      if (match.length === 2) {\n        const res = fight(\n          match[0].phase,\n          match[0].luck,\n          match[1].phase,\n          match[1].luck,\n          nonce\n        );\n        if (res === \"A\") {\n          winners.push(match[0]);\n        } else {\n          winners.push(match[1]);\n        }\n        match = [];\n      }\n    }\n    // @ts-ignore\n    rounds.push([...chunks(stage, 2)]);\n    stage = winners;\n    winners = [];\n    capacity = capacity / 2;\n  }\n  rounds = rounds.reverse();\n\n  return (\n    <>\n      <div className=\"is-flex mb-5\" style={{ justifyContent: \"safe center\" }}>\n        <DisplayRuneWithProperties\n          network={network}\n          onClick={(obj) => {\n            onClick(obj);\n          }}\n          width={\"128px\"}\n          height={\"128px\"}\n          tokenId={champ}\n        />\n      </div>\n      {rounds.map((arena) => {\n        return (\n          <div className=\"is-flex mb-5\" style={{ justifyContent: \"center\" }}>\n            {arena.map((arr, i) => {\n              const winner = fight(\n                arr[0].phase,\n                arr[0].luck,\n                arr[1].phase,\n                arr[1].luck,\n                nonce\n              );\n              return (\n                <div\n                  className={`is-flex ${arena.length - 1 !== i ? \"mr-5\" : \"\"} `}\n                >\n                  <div style={{ opacity: winner === \"A\" ? \"1\" : \"0.3\" }}>\n                    <DisplayRuneWithProperties\n                      network={network}\n                      onClick={(obj) => {\n                        onClick(obj);\n                      }}\n                      width={\"32px\"}\n                      height={\"32px\"}\n                      tokenId={arr[0].tokenId}\n                    />\n                  </div>\n                  <div style={{ opacity: winner === \"B\" ? \"1\" : \"0.3\" }}>\n                    <DisplayRuneWithProperties\n                      network={network}\n                      onClick={(obj) => {\n                        onClick(obj);\n                      }}\n                      width={\"32px\"}\n                      height={\"32px\"}\n                      tokenId={arr[1].tokenId}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default TournamentTree;\n","import React from \"react\";\nimport TournamentTree from \"./TournamentTree\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\n\ninterface IReplayProps {\n  arenaNo: string;\n  gameHistory: IHistoryGame;\n  onClick: (obj) => void;\n  onClose: () => void;\n}\nconst Replay = ({ arenaNo, gameHistory, onClick, onClose }: IReplayProps) => {\n  return (\n    <div className=\"modal is-active\">\n      <div\n        className=\"modal-background\"\n        onClick={onClose}\n        style={{ backgroundColor: \"black\" }}\n      />\n      <h1\n        className=\"title has-text-white\"\n        style={{ position: \"absolute\", top: \"20px\", left: \"20px\" }}\n      >\n        ARENA {arenaNo}\n      </h1>\n      <section className=\"modal-content\" style={{ width: \"100%\" }}>\n        <TournamentTree\n          champ={gameHistory.champion}\n          tree={gameHistory.tournamentTree}\n          nonce={gameHistory.nonce}\n          onClick={onClick}\n        />\n      </section>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};\n\nexport default Replay;\n","import React from \"react\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../packages/provider\";\n\ninterface IPlayButtonProps {\n  arenaNo: string;\n  onSubmitted: (txid: string) => void;\n}\nconst PlayButton = ({ arenaNo, onSubmitted }: IPlayButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPlay = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).play(\n          connectedWallet,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        onSubmitted(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <button className=\"button is-primary press-font\" onClick={onPlay}>\n      Start\n    </button>\n  );\n};\n\nexport default PlayButton;\n","import React, { useEffect, useState } from \"react\";\nimport Pagination from \"bulma-pagination-react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport NFTDetailModal from \"./NFTDetailModal\";\nimport HistoryTable from \"./HistoryTable\";\nimport Replay from \"./Replay\";\nimport PlayButton from \"../../../components/PlayButton\";\nimport { ADMIN_FOR_PLAY } from \"../../../../../../packages/neo/contracts/ftw/tournament/consts\";\nimport AfterTransactionSubmitted from \"../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IHistoryProps {\n  arenaNo: string;\n}\nconst History = ({ arenaNo }: IHistoryProps) => {\n  const [playTxid, setPlayTxid] = useState(\"\");\n  const [claimTxid, setClaimTxid] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [nftModalActive, setNftModalActive] = useState();\n  const [replayModalActive, setReplayModalActive] = useState();\n  const [history, setHistory] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const onNFTModalActive = (obj) => setNftModalActive(obj);\n  const onReplayModalActive = (obj) => setReplayModalActive(obj);\n\n  useEffect(() => {\n    async function fetchHistory() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).history(\n          arenaNo,\n          page\n        );\n        setHistory(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchHistory();\n  }, [connectedWallet, network, page]);\n\n  let totalPages = 0;\n  if (history) {\n    const itemsPerPage = parseFloat(arenaNo) >= 64 ? 2 : 5;\n    totalPages = Math.ceil(history.totalItems / itemsPerPage);\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <div className=\"box\">\n            <div className=\"level is-mobile\">\n              <div className=\"level-left\">\n                <div className=\"level-item\">\n                  <h3 className=\"title\">History</h3>\n                </div>\n              </div>\n\n              {ADMIN_FOR_PLAY[network].length !== 0 &&\n              ADMIN_FOR_PLAY[network].includes(\n                connectedWallet?.account.address\n              ) ? (\n                <div className=\"level-right\">\n                  <div className=\"level-item\">\n                    <PlayButton onSubmitted={setPlayTxid} arenaNo={arenaNo} />\n                  </div>\n                </div>\n              ) : ADMIN_FOR_PLAY[network].length === 0 ? (\n                <div className=\"level-right\">\n                  <div className=\"level-item\">\n                    <PlayButton onSubmitted={setPlayTxid} arenaNo={arenaNo} />\n                  </div>\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </div>\n            {history.items && history.items.length > 0 ? (\n              history.items.map((game) => {\n                return (\n                  <HistoryTable\n                    key={game.gameNo}\n                    width={\"64px\"}\n                    height={\"64px\"}\n                    history={game}\n                    arenaNo={arenaNo}\n                    network={network}\n                    onClick={(obj) => {\n                      onNFTModalActive(obj);\n                    }}\n                    onReplay={() => onReplayModalActive(game)}\n                    onClaimed={setClaimTxid}\n                  />\n                );\n              })\n            ) : (\n              <div>Game hasn't been played</div>\n            )}\n            {totalPages > 1 && (\n              <div className=\"media\">\n                <div className=\"media-content\">\n                  <Pagination\n                    pages={totalPages}\n                    currentPage={page}\n                    onChange={(_page) => {\n                      if (page !== _page) {\n                        setPage(_page);\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      {nftModalActive && (\n        <NFTDetailModal\n          rune={nftModalActive}\n          onClose={() => setNftModalActive(undefined)}\n        />\n      )}\n\n      {replayModalActive && (\n        <Replay\n          arenaNo={arenaNo}\n          gameHistory={replayModalActive}\n          onClick={(obj) => {\n            onNFTModalActive(obj);\n          }}\n          onClose={() => setReplayModalActive(undefined)}\n        />\n      )}\n\n      {playTxid && (\n        <Modal onClose={() => setPlayTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={playTxid}\n            network={network}\n            onSuccess={() => setPlayTxid(\"\")}\n            onError={() => setPlayTxid(\"\")}\n          />\n        </Modal>\n      )}\n\n      {claimTxid && (\n        <Modal onClose={() => setClaimTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={playTxid}\n            network={network}\n            onSuccess={() => setClaimTxid(\"\")}\n            onError={() => setClaimTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default History;\n","import React from \"react\";\nimport Banner from \"./Banner\";\nimport PageLayout from \"../../../../components/PageLayout\";\nimport { ARENA_PATH } from \"../../pageRoutes\";\nimport { Route } from \"react-router-dom\";\nimport Players from \"./Players\";\nimport History from \"./History\";\n\nconst Arena = (props) => {\n  const { arenaNo } = props.match.params;\n  return (\n    <div>\n      <Banner arenaNo={arenaNo} />\n      <PageLayout>\n        <Route\n          exact\n          path={ARENA_PATH}\n          component={() => <Players arenaNo={arenaNo} />}\n        />\n        <Route\n          path={ARENA_PATH + \"/history\"}\n          component={() => <History arenaNo={arenaNo} />}\n        />\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Arena;\n","import React, { useEffect } from \"react\";\nimport { ARENA_PATH } from \"./pageRoutes\";\nimport { Route } from \"react-router-dom\";\nimport ArenaMenu from \"./scenes/Home\";\nimport Arena from \"./scenes/Arena\";\nimport { TOURNAMENT_PATH } from \"../../../consts\";\n\nconst Tournament = () => {\n  useEffect(() => {\n    document.title = \"Forthewin Arena: NFT tournament on NEO\";\n  }, []);\n  return (\n    <section>\n      <Route exact={true} path={TOURNAMENT_PATH} component={ArenaMenu} />\n      <Route path={ARENA_PATH} component={Arena} />\n    </section>\n  );\n};\n\nexport default Tournament;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\n\nimport {\n  COLLECTION_PATH,\n  FARM_PATH,\n  GALLERY_PATH,\n  HOME_PATH,\n  SMITH_PATH,\n  TOURNAMENT_PATH,\n} from \"../consts\";\nimport { WalletContextProvider } from \"../packages/provider\";\nimport WalletSidebar from \"./components/WalletSidebar\";\nimport Farm from \"./pages/Farm\";\nimport { Toaster } from \"react-hot-toast\";\nimport MyCollection from \"./pages/MyCollection\";\nimport Gallery from \"./pages/Gallery\";\nimport MobileMenuSlider from \"./components/MobileMenuSlider\";\nimport Home from \"./pages/Home\";\nimport Smith from \"./pages/Smith\";\nimport Tournament from \"./pages/Tournament\";\n\nconst App = () => {\n  return (\n    <WalletContextProvider\n      options={{\n        useLocalStorage: true,\n        useDevWallet: process.env.NODE_ENV === \"development\",\n      }}\n    >\n      <Router>\n        <Toaster position=\"bottom-center\" />\n        <Header />\n        <Route exact path={HOME_PATH} component={Home} />\n        <Route path={GALLERY_PATH} component={Gallery} />\n        <Route path={TOURNAMENT_PATH} component={Tournament} />\n        <Route path={SMITH_PATH} component={Smith} />\n        <Route path={FARM_PATH} component={Farm} />\n        <Route path={COLLECTION_PATH} component={MyCollection} />\n        <MobileMenuSlider />\n        <WalletSidebar />\n      </Router>\n    </WalletContextProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppCContextProvider } from \"./common/hooks/use-app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/style.scss\";\nimport App from \"./ui\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppCContextProvider>\n      <App />\n    </AppCContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}