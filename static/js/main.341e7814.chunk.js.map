{"version":3,"sources":["common/hooks/use-app.tsx","reportWebVitals.ts","ui/components/Logo.tsx","packages/neo/consts/index.ts","packages/neo/utils/index.ts","packages/neo/network/index.ts","packages/neo/contracts/ftw/farm/helpers.ts","packages/neo/contracts/ftw/nep17/index.ts","packages/neo/contracts/ftw/farm/index.ts","packages/neo/contracts/ftw/nft/consts.ts","packages/neo/contracts/ftw/nft/helpers.ts","packages/neo/contracts/ftw/nft/index.ts","packages/neo/contracts/ftw/swap/consts.ts","packages/neo/contracts/ftw/bank/index.ts","packages/neo/contracts/ftw/swap/helpers.ts","packages/neo/contracts/ftw/swap/index.ts","packages/neo/wallet/dev-wallet.ts","packages/neo/wallet/index.ts","packages/neo/contracts/ftw/farm/consts.ts","packages/neo/local-storage/index.ts","packages/provider/wallet-provider.tsx","consts/pageRoutes.ts","packages/ui/Wallet/helpers.ts","ui/components/WalletDropdown.tsx","ui/components/NetworkSwitch.tsx","ui/components/Header.tsx","packages/ui/Wallet/WalletDropdown.tsx","packages/ui/Wallet/WalletList.tsx","packages/ui/Wallet/AssetCard.tsx","packages/ui/Wallet/index.tsx","ui/components/WalletSidebar.tsx","ui/components/PageLayout.tsx","ui/components/Modal.tsx","ui/components/TransactionSubmitted.tsx","ui/pages/Farm/ActionModal.tsx","ui/pages/Farm/SnapshotCountdown.tsx","ui/pages/Farm/SnapshotCard.tsx","ui/pages/Farm/SnapshotList.tsx","ui/components/NotifyError.tsx","ui/pages/Farm/MyPosition.tsx","ui/pages/Farm/Pool.tsx","ui/pages/Farm/CancelModal.tsx","ui/pages/Farm/ClaimModal.tsx","ui/pages/Farm/Claims.tsx","ui/pages/Farm/PositionModal.tsx","ui/pages/Farm/About.tsx","ui/pages/Farm/index.tsx","ui/pages/Gallery/PropertiesModal.tsx","ui/pages/MyCollection/index.tsx","ui/components/RandomRune.tsx","ui/pages/Gallery/Banner.tsx","packages/neo/api/consts.ts","packages/neo/api/rest.ts","packages/ui/AfterTransactionSubmitted/RuneLoading.tsx","ui/pages/Tournament/scenes/Arena/Players/components/CheckMark.tsx","packages/ui/AfterTransactionSubmitted/index.tsx","ui/pages/Gallery/index.tsx","ui/components/SidebarNav.tsx","ui/components/MobileMenuSlider.tsx","ui/components/BgContainer.tsx","ui/pages/Tournament/pageRoutes.ts","ui/pages/Home.tsx","packages/neo/contracts/ftw/smith/consts.ts","packages/neo/contracts/ftw/smith/helpers.ts","packages/neo/contracts/ftw/smith/index.ts","ui/pages/Smith/helpers.ts","ui/pages/Smith/NEP17FormModal.tsx","ui/pages/Smith/NEP11FormModal.tsx","ui/pages/Smith/Banner.tsx","ui/pages/Smith/scenes/NEP17/ContractCard.tsx","ui/pages/Smith/scenes/NEP17/index.tsx","ui/pages/Smith/NEP11MintFormModal.tsx","ui/pages/Smith/scenes/NEP11/DisplayNFT.tsx","ui/pages/Smith/scenes/NEP11/Tokens.tsx","ui/pages/Smith/scenes/NEP11/ContractCard.tsx","ui/pages/Smith/scenes/NEP11/index.tsx","ui/pages/Smith/index.tsx","ui/pages/Tournament/scenes/Home/index.tsx","packages/neo/contracts/ftw/tournament/consts.ts","packages/neo/contracts/ftw/tournament/helpers.ts","packages/neo/contracts/ftw/tournament/index.ts","ui/pages/Tournament/components/PlayButton.tsx","ui/pages/Tournament/scenes/Arena/Banner.tsx","ui/pages/Tournament/components/DisplayRuneWithProperties.tsx","ui/pages/Tournament/components/BetButton.tsx","ui/pages/Tournament/components/LeaveButton.tsx","ui/pages/Tournament/scenes/Arena/Players/components/PlayerModal.tsx","ui/pages/Tournament/scenes/Arena/Players/components/NFTListModal.tsx","ui/pages/Tournament/scenes/Arena/Players/components/ArenaRegisterButton.tsx","ui/pages/Tournament/scenes/Arena/Players/index.tsx","ui/pages/Tournament/scenes/Arena/History/NFTDetailModal.tsx","ui/pages/Tournament/components/ClaimButton.tsx","ui/pages/Tournament/scenes/Arena/History/HistoryTable.tsx","ui/pages/Tournament/scenes/Arena/helpers.ts","ui/pages/Tournament/scenes/Arena/History/TournamentTree.tsx","ui/pages/Tournament/scenes/Arena/History/Replay.tsx","ui/pages/Tournament/scenes/Arena/History/index.tsx","ui/pages/Tournament/scenes/Arena/index.tsx","ui/pages/Tournament/index.tsx","ui/pages/Swap/components/NavSwitch/index.tsx","ui/pages/Swap/components/Input/index.tsx","ui/pages/Swap/components/AssetListModal/index.tsx","ui/pages/Swap/scenes/Liquidity/index.tsx","ui/pages/Swap/scenes/Swap/index.tsx","ui/pages/Swap/scenes/Farm/scenes/Detail/index.tsx","ui/pages/Swap/scenes/Farm/index.tsx","ui/pages/Swap/index.tsx","ui/pages/Fusion/components/FusionBox.tsx","ui/pages/Fusion/components/RuneListModal.tsx","packages/neo/contracts/ttm/nft/helpers.ts","packages/neo/contracts/ttm/nft/consts.ts","packages/neo/contracts/ttm/nft/index.ts","ui/pages/Fusion/components/CryptonatuListModal.tsx","packages/neo/contracts/ftw/fuse/index.ts","ui/pages/Fusion/components/FusedList.tsx","ui/pages/Fusion/index.tsx","ui/pages/Migration/index.tsx","ui/components/ReactGa.tsx","ui/index.tsx","index.tsx"],"names":["AppContext","createContext","AppCContextProvider","props","useState","sidebarStatus","setSidebarStatus","walletSidebarStatus","setWalletSidebarStatus","contextValue","openSidebar","closeSidebar","toggleSidebar","toggleWalletSidebar","Provider","value","children","useApp","useContext","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Logo","alt","src","width","height","O3","NEO_LINE","DEV","ONE_GATE","WALLET_LIST","label","key","PRIVATENET","TESTNET","MAINNET","PRIVATE_CONFIG","url","TESTNET_CONFIG","TESTNET_CONFIG_2","MAINNET_CONFIG","MAINNET_CONFIG_2","GAS_SCRIPT_HASH","NEON_CONST","NATIVE_CONTRACT_HASH","GasToken","NEO_SCRIPT_HASH","NeoToken","TOKEN_LIST","DEV_WALLET_PRIVATE_KEY","truncateAddress","address","substring","substr","length","convertContractCallParam","param","type","sc","ContractParam","hash160","wallet","getScriptHashFromAddress","string","integer","array","map","i","byteArray","u","hex2base64","str2hexstring","Error","base64ToAddress","str","getAddressFromScriptHash","base64ToHash160","reverseHex","base642hex","base64ToString","HexString","fromBase64","toAscii","toString","base64ToFixed8","BigInteger","fromNumber","toDecimal","val","parseFloat","e","base64ToDate","moment","unix","format","truncateDecimal","v","p","s","Math","pow","trunc","balanceCheck","balances","requiredAmount","hasBalance","forEach","bal","symbol","amount","Network","READ_LOG_FREQUENCY","getRPCClient","networkType","config","rpc","RPCClient","getRawTx","txid","a","rpcClient","getApplicationLog","rawTx","sleep","findNotificationFromTxId","txId","scriptHash","eventName","getNotificationsFromTxId","notifications","find","n","contract","eventname","network","appLog","executions","push","read","scripts","passFaultCheck","sb","ScriptBuilder","script","params","args","arg","emitAppCall","operation","invokeScript","fromHex","build","res","state","console","error","exception","duration","Promise","resolve","setTimeout","parseDeposit","stackItem","position","lastClaimNo","createdAt","parseClaimPaginate","totalItems","totalPages","page","items","parseClaim","item","no","from","end","GAS","FTW","parseSnapshotItem","totalPositionPool","totalNeo","totalGas","range","winPosition","FTW_SCRIPT_HASH","CONST","NUDES_SCRIPT_HASH","DOGE_SCRIPT_HASH","MOON_SCRIPT_HASH","FarmContract","contractHash","deposit","connectedWallet","account","WalletAPI","invoke","remove","createSnapshot","claim","changePosition","getStatus","neoBalance","ftwBalance","timeLeft","interval","vote","snapshots","claims","stack","undefined","this","FARM_SCRIPT_HASH","RUNE_SCRIPT_HASH","RUNE_PRICE","RUNE_PHASE_FILTER","parseProperties","obj","base642utf8","NFTContract","mint","fromDecimal","withdrawFund","getTotalSupplyScript","getPropertiesScript","tokenId","getProperties","getTokensOfScript","ownerAddress","getTokensOf","metaList","iterator","meta","getTokens","SWAP_SCRIPT_HASH","ASSET_LIST","logo","getEstimate","reserveA","reserveB","fixed8TokenAmount","estimated","floor","parseUserStake","tokenA","tokenB","amountA","amountB","parsePair","totalShare","SwapContract","provide","swap","getPair","script1","script2","pair","reserve","getPairs","swapToken","getUserStake","stake","getClaimAble","log","DevWallet","name","version","website","compatibility","extra","currency","theme","chainId","defaultNetwork","networks","getNep17Balances","balance","assethash","includes","getVersion","txObj","sign","protocol","sendRawTransaction","nodeUrl","Account","createScript","getBlockCount","currentHeight","transaction","tx","Transaction","validUntilBlock","signers","calculateNetworkFee","networkFee","calculateSystemFee","systemFee","extraSystemFee","fee","add","invokeFunction","PolicyContract","invokeFunctionResponse","feePerByte","transactionByteSize","serialize","witnessProcessingFee","mul","gasconsumed","sender","transferScript","gasBalance","requiredGas","transferTokenBalance","Fixed8","fromRawNumber","toNumber","transferAmount","walletType","O3Wallet","instance","neo3Dapi","getProvider","provider","getAccount","getNetworks","getBalance","contracts","OneGate","NeoDapi","window","assetHashes","NeoLine","NEOLineN3","Init","instance2","NEOLine","Dev","init","description","message","currentNetwork","senderAddress","testInvoke","isGlobal","NeonWallet","scopes","WitnessScope","Global","CalledByEntry","submittedTx","method","LocalStorage","addTransaction","list","CONNECTED_WALLET","TRANSACTIONS","NETWORK","validated","validateConnectedWallet","store","set","has","dispatchEvent","Event","transactions","get","status","initStorage","supportContracts","getTransactions","validatedTx","removeTransaction","getNetwork","setNetwork","getWallet","clearTransaction","WalletContext","WalletContextProvider","totalTxSubmit","setTotalTxSubmit","isWalletModalActive","setWalletModalActive","options","useLocalStorage","setConnectedWallet","setInvokeScript","pendingTransactions","setPendingTransactions","connectWallet","setWallet","toast","useDevWallet","openWalletModal","closeWalletModal","disConnectWallet","removeWallet","doInvoke","closeInvoke","addPendingTransaction","removePendingTransaction","filter","switchNetwork","increaseTotalTxSubmit","useWallet","MIGRATION_PATH","FARM_PATH","GALLERY_PATH","TOURNAMENT_PATH","SMITH_PATH","COLLECTION_PATH","SWAP_PATH","SWAP_PATH_LIQUIDITY","SWAP_PATH_FARM","FUSION_PATH","MENU","path","getWalletIcon","svg","WalletDropdown","isActive","setActive","useEffect","refresh","disconnected","addEventListener","removeEventListener","Constants","EventName","ACCOUNT_CHANGED","NETWORK_CHANGED","DISCONNECTED","className","onClick","utils","id","role","to","NetworkSwitch","networkList","confirm","Header","style","justifyContent","marginLeft","alignItems","targetNetwork","success","route","activeClassName","target","href","WalletList","_wallet","AssetCard","Wallet","WalletSidebar","openFromRight","top","showNav","onHideNav","PageLayout","ModalCard","onClose","isLoading","React","$","addClass","removeClass","zIndex","TransactionSubmitted","ActionModal","setAmount","setPosition","setTxid","onDeposit","Modal","onChange","_","autoFocus","decimalScale","inputMode","onValueChange","thousandSeparator","suffix","allowLeadingZeros","disabled","SnapshotCountdown","onCreateSnapshot","CreateSnapshotBtn","date","Date","now","renderer","completed","hours","minutes","seconds","SnapshotCard","SnapshotList","contractStatus","NotifyError","msg","MyPosition","lastSnapshotNo","onCancel","onClaim","onPositionChange","isClaimable","Pool","CancelModal","Claims","PositionModal","currentPosition","tempTime","Farm","production","setRoute","modalActive","setModalActive","cancelModalActive","setCancelModalActive","claimModalActive","setClaimModalActive","positionModalActive","setPositionModalActive","setError","setContractStatus","onClaimModalActive","fetchContractStatus","About","ClaimModal","PropertiesModal","setItem","setLoading","phase","luck","image","owner","MyCollection","tokens","setTokens","propertiesModalActive","setPropertiesModalActive","token","getColors","random","DisplayRandomRune","colors","setColors","bg","dot1","dot2","dot3","dot4","body","setInterval","clearInterval","Banner","onMint","display","ENDPOINT","RestAPI","endpoint","fetchResult","fetch","mode","json","RuneLoading","setBg","setDot1","setDot2","setDot3","setDot4","setBody","timer","clearTimeout","CheckMark","xmlns","viewBox","fill","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","strokeLinecap","points","AfterTransactionSubmitted","onSuccess","onError","isDone","setDone","hasError","checkTxid","margin","size","marginTop","Gallery","setFilter","getRunes","document","title","onFilterChange","flexFlow","SidebarNav","bottom","MobileMenuSlider","BgContainer","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","ARENA_PATH","CARDS","desc","img","link","Home","onSwitchNetwork","card","minHeight","SMITH_SCRIPT_HASH","DEPLOY_FEE","parseRecord","contractOwner","decimals","totalSupply","author","parseNEP11Record","email","parseSmithProperties","SmithContract","createNEP17","contractName","createNEP11","mintNFT","records","getNEP11Records","emojiRegexExp","detectEmojiInString","values","detected","Object","keys","test","NEP17FormModal","setValues","handleValueChange","hasEmoji","max","allowNegative","NEP11FormModal","location","useLocation","isNep11FormModalActive","setNep11FormModalActive","isNep17FormModalActive","setNep17FormModalActive","pathname","ContractCard","data","NEP17Smith","setStatus","NEP11MintFormModal","showForm","setShowForm","attributes","attValues","setAttValues","handleAttChange","JSON","stringify","attKeys","k","placeholder","DisplayRune","setToken","Tokens","DisplayNFT","isMintModalActive","setMintModalActive","NEP11Smith","setData","Smith","exact","component","NEP11","NEP17","ArenaHome","ARENA_LIST","arena","TOURNAMENT_SCRIPT_HASH","ADMIN_FOR_PLAY","SUPPORT_TICKET_PRICE","parsePlayer","tokenHash","parseGame","gameNo","tournamentTree","champion","nonce","betsOnChampion","totalBets","rollover","championPrize","champOwner","calculateClaimableAmount","history","betAmount","totalAmount","myClaimAble","TournamentContract","register","arenaNo","play","leave","bet","getPlayers","currentPage","getGameHeight","getBetAmount","championTokenId","isClaimed","getBetOnPlayer","userBets","getCurrentPrize","script3","prize","previousChampWallet","timeElapsedFromPreviousGame","PlayButton","onSubmitted","onPlay","playTxid","setPlayTxid","hasPermissionToPlay","DisplayRuneWithProperties","isOwner","getRune","fetchRune","left","BetButton","onBet","LeaveButton","onLeave","PlayerModal","player","_gameNo","gameOwner","NFTListModal","onRegister","RegisterButton","playerCount","Players","playerModalActive","setPlayerModalActive","players","setPlayers","onPlayerModalActive","NFTDetailModal","rune","ClaimButton","onClaimed","fetchBetAmount","HistoryTable","onReplay","fight","aPhase","aLuck","bPhase","bLuck","compareLuck","chunks","arr","slice","TournamentTree","champ","tree","capacity","stage","winners","match","rounds","reverse","winner","opacity","Replay","gameHistory","backgroundColor","History","claimTxid","setClaimTxid","setPage","nftModalActive","setNftModalActive","replayModalActive","setReplayModalActive","setHistory","onNFTModalActive","fetchHistory","itemsPerPage","ceil","game","pages","_page","Arena","useMemo","Tournament","ArenaMenu","NavSwitch","Input","asset","heading","setValue","onClickAsset","isReadOnly","userBalance","readOnly","source","event","AssetListModal","onAssetClick","assets","ASSETS","Liquidity","isAssetChangeModalActive","setAssetChangeModalActive","setTokenA","setAmountA","setTokenB","setAmountB","setReserve","isPairLoading","setPairLoading","onAssetChange","onAddLiquidity","onTokenAAmountChange","A","B","fetchPair","noLiquidity","assetHash","Swap","onSwap","loadPair","FarmDetail","claimable","setClaimable","onRemoveLiquidity","res1","res2","userShare","totalShares","poolA","poolB","getUserShare","setList","detail","setDetail","SwapBox","FusionBox","RuneListModal","TTM_SCRIPT_HASH","CRYPTONAUT_REGEX","TTMNFTContract","properties","CryptonatuListModal","FUSE_SCRIPT_HASH","FusionContract","fuse","cryptonautTokenId","runeTokenId","refund","FusedList","onReset","onRefund","element","Fusion","isTTMModalActive","setTTMModalActive","isFTWModalActive","setFTWModalActive","cryptonaut","setCryptonaut","setRune","onFuse","_txid","Migration","vantaEffect","setVantaEffect","myRef","useRef","DOTS","el","current","mouseControls","touchControls","gyroControls","minWidth","destroy","autoPlay","loop","ref","ReactGa","ReactGA","pageview","initialize","App","process","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.341e7814.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n// import toast from \"react-hot-toast\";\n\ninterface IAppContext {\n  sidebarStatus: boolean;\n  walletSidebarStatus: boolean;\n  openSidebar: () => void;\n  closeSidebar: () => void;\n  toggleSidebar: () => void;\n  toggleWalletSidebar: () => void;\n}\n\nexport const AppContext = createContext({} as IAppContext);\n\nexport const AppCContextProvider = (props: { children: any }) => {\n  const [sidebarStatus, setSidebarStatus] = useState(false);\n  const [walletSidebarStatus, setWalletSidebarStatus] = useState(false);\n  const openSidebar = () => setSidebarStatus(true);\n  const closeSidebar = () => setSidebarStatus(false);\n  const toggleSidebar = () => {\n    if (walletSidebarStatus) {\n      setWalletSidebarStatus(false);\n    }\n    setSidebarStatus(!sidebarStatus);\n  };\n  const toggleWalletSidebar = () => {\n    if (sidebarStatus) {\n      setSidebarStatus(false);\n    }\n    setWalletSidebarStatus(!walletSidebarStatus);\n  };\n\n  const contextValue = {\n    sidebarStatus,\n    openSidebar,\n    closeSidebar,\n    toggleSidebar,\n    walletSidebarStatus,\n    toggleWalletSidebar,\n  };\n\n  return (\n    <AppContext.Provider value={contextValue}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => useContext(AppContext);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nconst Logo = () => {\n  return (\n    <>\n      <img\n        alt=\"Forthewin Logo\"\n        src={\"/logo/FTW_512_512.svg\"}\n        width=\"36px\"\n        height=\"36px\"\n      />\n      {/*<DisplayRandomRune width=\"36px\" height=\"36px\" />*/}\n    </>\n  );\n};\n\nexport default Logo;\n","import { CONST as NEON_CONST } from \"@cityofzion/neon-core\";\nimport { IWalletType } from \"../wallet/interfaces\";\n\n/* Wallets */\nexport const O3 = \"O3\";\nexport const NEO_LINE = \"NEO_LINE\";\nexport const DEV = \"DEV\";\nexport const ONE_GATE = \"ONE_GATE\";\nexport const WALLET_LIST: {\n  label: string;\n  key: IWalletType;\n}[] = [\n  {\n    label: \"Dev\",\n    key: DEV,\n  },\n  {\n    label: \"NEO Line\",\n    key: NEO_LINE,\n  },\n  {\n    label: \"O3\",\n    key: O3,\n  },\n  // {\n  //   label: \"OneGate\",\n  //   key: ONE_GATE,\n  // },\n];\n\n/* Network types */\nexport const PRIVATENET = \"N3PrivateNet\";\nexport const TESTNET = \"N3TestNet\";\nexport const MAINNET = \"N3MainNet\";\n\n/* Network configs */\nexport const PRIVATE_CONFIG = {\n  label: \"privateNet\",\n  url: \"http://127.0.0.1:50012\",\n};\n\nexport const TESTNET_CONFIG = {\n  label: \"N3TestNet\",\n  // url: \"https://testnet1.neo.coz.io:443\",\n  url: \"https://testnet2.neo.coz.io:443\",\n};\n\n// Using for tx monitor\nexport const TESTNET_CONFIG_2 = {\n  label: \"N3TestNet\",\n  url: \"https://testnet1.neo.coz.io:443\",\n};\n\nexport const MAINNET_CONFIG = {\n  label: \"N3MainNet\",\n  url: \"https://n3seed2.ngd.network:10332\",\n};\n\nexport const MAINNET_CONFIG_2 = {\n  label: \"N3MainNet\",\n  url: \"https://mainnet1.neo.coz.io:443\",\n};\n\n/* Contract hashes */\nexport const GAS_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.GasToken;\nexport const NEO_SCRIPT_HASH = NEON_CONST.NATIVE_CONTRACT_HASH.NeoToken;\n\nexport const TOKEN_LIST = () => [NEO_SCRIPT_HASH, GAS_SCRIPT_HASH];\n\n/* Dev wallet */\nexport const DEV_WALLET_PRIVATE_KEY =\n  \"7b5d7fda53932ed9d43eb848dd521455767a4d40b5a994e6f351605e5a4ce26a\";\n","import { sc, u, wallet } from \"@cityofzion/neon-core\";\nimport moment from \"moment\";\nimport { IBalance } from \"../wallet/interfaces\";\n\nexport const truncateAddress = (address: string) => {\n  return `${address.substring(0, 4)}...${address.substr(address.length - 2)}`;\n};\n\n/**\n * It converts contract call params for dev wallet. Depending on 3rd wallet params.\n * @param param\n */\nexport const convertContractCallParam = (param: any) => {\n  switch (param.type) {\n    case \"Address\":\n      return sc.ContractParam.hash160(\n        wallet.getScriptHashFromAddress(param.value)\n      );\n    case \"Hash160\":\n      return sc.ContractParam.hash160(param.value);\n    case \"String\":\n      return sc.ContractParam.string(param.value);\n    case \"Integer\":\n      return sc.ContractParam.integer(param.value);\n    case \"Array\":\n      return sc.ContractParam.array(\n        ...param.value.map((i: any) => convertContractCallParam(i))\n      );\n    case \"ByteArray\":\n      return sc.ContractParam.byteArray(\n        u.hex2base64(u.str2hexstring(param.value))\n      );\n    default:\n      throw new Error(\"No support param\");\n  }\n};\n\nexport const base64ToAddress = (str: string) =>\n  wallet.getAddressFromScriptHash(base64ToHash160(str));\n\nexport const base64ToHash160 = (str: string) => u.reverseHex(u.base642hex(str));\n\nexport const base64ToString = (str: string) =>\n  u.HexString.fromBase64(str).toAscii().toString();\n\nexport const base64ToFixed8 = (str: string) => {\n  const no = u.BigInteger.fromNumber(str).toDecimal(8);\n  return no;\n};\n\nexport const toDecimal = (val: string): number => {\n  try {\n    const amount = parseFloat(\n      u.BigInteger.fromNumber(parseFloat(val)).toDecimal(8).toString()\n    );\n    return amount;\n  } catch (e) {\n    return 0;\n  }\n};\n\n// export const toNumber = () => {\n//\n// }\n\nexport const base64ToDate = (str: string) =>\n  moment.unix(parseFloat(str) / 1000).format(\"lll\");\n\nexport function truncateDecimal(v, p) {\n  const s = Math.pow(10, p || 0);\n  return Math.trunc(s * v) / s;\n}\n\nexport const balanceCheck = (\n  balances: IBalance[],\n  requiredAmount: number\n): boolean => {\n  let hasBalance = false;\n  balances.forEach((bal) => {\n    if (bal.symbol === \"GAS\") {\n      if (parseFloat(bal.amount) > requiredAmount) {\n        hasBalance = true;\n      }\n    }\n  });\n  return hasBalance;\n};\n","import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG,\n  TESTNET_CONFIG_2,\n  MAINNET_CONFIG_2,\n} from \"../consts\";\n// tslint:disable-next-line:no-submodule-imports\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport {\n  ApplicationLogJson,\n  GetRawTransactionResult,\n  // tslint:disable-next-line:no-submodule-imports\n} from \"@cityofzion/neon-core/lib/rpc/Query\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n  private static readonly READ_LOG_FREQUENCY = 6000;\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static getRawTx = async (txid: string, networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG_2;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG_2;\n        break;\n    }\n    const rpcClient = new rpc.RPCClient(config.url);\n    let rawTx: any;\n    do {\n      try {\n        rawTx = await rpcClient.getApplicationLog(txid);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!rawTx);\n\n    return rawTx;\n  };\n\n  static findNotificationFromTxId = async (\n    txId: string,\n    scriptHash: string,\n    eventName: string,\n    networkType: INetworkType\n  ) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(\n      txId,\n      networkType\n    );\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName\n    );\n  };\n\n  static getNotificationsFromTxId = async (\n    txId: string,\n    network: INetworkType\n  ) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[],\n    passFaultCheck?: boolean\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    const res = await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    if (!passFaultCheck && res.state === \"FAULT\") {\n      console.error(\"RPC read error\" + res);\n      throw new Error(res.exception ? res.exception : \"Network error\");\n    }\n    return res;\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","import { IFarmDepositRecord } from \"./interfaces\";\nimport { base64ToDate, base64ToFixed8, base64ToString } from \"../../../utils\";\n\nexport const parseDeposit = (\n  stackItem: any\n): IFarmDepositRecord | undefined => {\n  // TODO check if there no deposit\n  // if (!stackItem.value) return undefined;\n  return {\n    position: stackItem[0].value,\n    amount: stackItem[1].value,\n    lastClaimNo: stackItem[2].value,\n    createdAt: stackItem[3].value,\n  };\n};\n\nexport const parseClaimPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseClaim(stackItem[3].value),\n  };\n};\n\nexport const parseClaim = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      from: item.value[1].value,\n      end: item.value[2].value,\n      GAS: base64ToFixed8(item.value[3].value),\n      FTW: base64ToFixed8(item.value[4].value),\n      createdAt: base64ToDate(item.value[5].value),\n    };\n  });\n};\n\nexport const parseSnapshotPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSnapshotItem(stackItem[3].value),\n  };\n};\n\nconst parseSnapshotItem = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      totalPositionPool: item.value[1].value, // NEO amount\n      totalNeo: item.value[2].value, // NEO amount\n      totalGas: base64ToFixed8(item.value[3].value),\n      range: base64ToFixed8(item.value[4].value),\n      winPosition: item.value[5].value,\n      createdAt: base64ToDate(item.value[6].value),\n    };\n  });\n};\n","import { CONST } from \"../../../index\";\n\nexport const FTW_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"c1a56650f12420405c5b7e2634eb3779a0c3e396\",\n  [CONST.TESTNET]: \"c1a56650f12420405c5b7e2634eb3779a0c3e396\",\n  [CONST.MAINNET]: \"9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20 \",\n};\n\nexport const NUDES_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"\",\n  [CONST.TESTNET]: \"340720c7107ef5721e44ed2ea8e314cce5c130fa\",\n  [CONST.MAINNET]: \"340720c7107ef5721e44ed2ea8e314cce5c130fa \",\n};\n\nexport const DOGE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"\",\n  [CONST.TESTNET]: \"cea6b1fac256c3c7aa704e599eb8a615b88e0c69\",\n  [CONST.MAINNET]: \"\",\n};\n\nexport const MOON_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"\",\n  [CONST.TESTNET]: \"15135cdb4e0130398ab95f830062bd316621230d\",\n  [CONST.MAINNET]: \"\",\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { NEO_SCRIPT_HASH } from \"../../../consts\";\nimport { FARM_SCRIPT_HASH } from \"./consts\";\nimport { IFarmContractStatus } from \"./interfaces\";\nimport {\n  parseClaimPaginate,\n  parseDeposit,\n  parseSnapshotPaginate,\n} from \"./helpers\";\nimport { FTW_SCRIPT_HASH } from \"../nep17\";\nimport { base64ToFixed8 } from \"../../../utils\";\n\nexport class FarmContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FARM_SCRIPT_HASH[networkType];\n  }\n\n  deposit = async (\n    connectedWallet: IConnectedWallet,\n    amount: string,\n    position: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: amount,\n        },\n        {\n          type: \"Integer\",\n          value: parseFloat(position),\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  remove = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"removeFund\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  createSnapshot = async (\n    connectedWallet: IConnectedWallet\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"createSnapshot\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  claim = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  changePosition = async (\n    connectedWallet: IConnectedWallet,\n    position: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"changePosition\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Integer\",\n          value: position,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getStatus = async (\n    connectedWallet?: IConnectedWallet\n  ): Promise<IFarmContractStatus> => {\n    const neoBalance = {\n      operation: \"balanceOf\",\n      scriptHash: NEO_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const ftwBalance = {\n      operation: \"balanceOf\",\n      scriptHash: FTW_SCRIPT_HASH[this.network],\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n      ],\n    };\n\n    const timeLeft = {\n      operation: \"timeLeft\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const interval = {\n      operation: \"getSnapshotInterval\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const range = {\n      operation: \"getRange\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const vote = {\n      operation: \"getVote\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n\n    const snapshots = {\n      operation: \"getSnapshots\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n\n    const scripts = [\n      neoBalance,\n      ftwBalance,\n      timeLeft,\n      interval,\n      range,\n      vote,\n      snapshots,\n    ];\n\n    if (connectedWallet) {\n      const deposit = {\n        operation: \"getDeposit\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            type: \"Address\",\n            value: connectedWallet.account.address,\n          },\n        ],\n      };\n      const claims = {\n        operation: \"getClaims\",\n        scriptHash: this.contractHash,\n        args: [\n          {\n            // @ts-ignore\n            type: \"Address\",\n            // @ts-ignore\n            value: connectedWallet.account.address,\n          },\n          {\n            type: \"Integer\",\n            value: 1,\n          },\n        ],\n      };\n      scripts.push(deposit);\n      scripts.push(claims);\n    }\n\n    const res = await Network.read(this.network, scripts);\n    return {\n      neoBalance: res.stack[0].value as string,\n      ftwBalance: base64ToFixed8(res.stack[1].value as string),\n      timeLeft: res.stack[2].value as string,\n      interval: res.stack[3].value as string,\n      range: res.stack[4].value as string,\n      vote: res.stack[5].value as string,\n      snapshots: parseSnapshotPaginate(res.stack[6].value),\n      deposit:\n        connectedWallet && res.stack[7].value\n          ? parseDeposit(res.stack[7].value)\n          : undefined,\n      claims:\n        connectedWallet && res.stack[8].value\n          ? parseClaimPaginate(res.stack[8].value)\n          : undefined,\n    };\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const RUNE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.TESTNET]: \"3863225be4e0e3ea1874a32842fab0a3dc2fbfe3\",\n  [CONST.MAINNET]: \"bebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\",\n};\n\nexport const RUNE_PRICE = {\n  [CONST.PRIVATENET]: \"10\",\n  [CONST.TESTNET]: \"0.1\", // Testnet mint is cheaper than mainnet\n  [CONST.MAINNET]: \"10\",\n};\n\nexport const RUNE_PHASE_FILTER = [\n  \"All\",\n  \"Fire\",\n  \"Water\",\n  \"Wood\",\n  \"Earth\",\n  \"Metal\",\n  \"Dark\",\n  \"Light\",\n];\n","import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { sc, u } from \"@cityofzion/neon-core\";\nimport { GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { RUNE_SCRIPT_HASH, RUNE_PRICE } from \"./consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { IRuneMeta } from \"./interfaces\";\nimport { parseProperties } from \"./helpers\";\n\nexport class NFTContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = RUNE_SCRIPT_HASH[networkType];\n  }\n\n  mint = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(\n            RUNE_PRICE[this.network],\n            8\n          ).toString(),\n        },\n        {\n          type: \"String\",\n          value: \"1\",\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      \"0.01\"\n    );\n  };\n\n  withdrawFund = async (connectedWallet: IConnectedWallet): Promise<string> => {\n    const invokeScript = {\n      operation: \"withdrawFund\",\n      scriptHash: this.contractHash,\n      args: [],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getTotalSupplyScript = (): sc.ContractCallJson => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"totalSupply\",\n      args: [],\n    };\n  };\n\n  getPropertiesScript = (tokenId: string) => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n  };\n\n  getProperties = async (tokenId: string): Promise<IRuneMeta> => {\n    const script = this.getPropertiesScript(tokenId);\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseProperties(res.stack);\n  };\n\n  getTokensOfScript = (ownerAddress: string) => {\n    return {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = this.getTokensOfScript(ownerAddress);\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      const meta = await this.getProperties(tokenId);\n      // @ts-ignore\n      metaList.push({ tokenId, ...meta });\n    }\n    return metaList;\n  };\n\n  getTokens = async (): Promise<string[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokens\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].iterator.map((item) => {\n      return u.HexString.fromBase64(item.value as string).toAscii();\n    });\n  };\n}\nexport { RUNE_SCRIPT_HASH } from \"./consts\";\n","import { CONST } from \"../../../index\";\nimport {\n  DOGE_SCRIPT_HASH,\n  FTW_SCRIPT_HASH,\n  MOON_SCRIPT_HASH,\n  NUDES_SCRIPT_HASH,\n} from \"../nep17\";\nimport { GAS_SCRIPT_HASH, MAINNET, PRIVATENET, TESTNET } from \"../../../consts\";\nimport { INetworkType } from \"../../../network\";\n\nexport const SWAP_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"aeac82f7830f4083b98089baa51060e621febb10\",\n  [CONST.TESTNET]: \"428783fccfb6b194f7d33cd421e9f56f48efbde5\",\n  [CONST.MAINNET]: \"\",\n};\n\nexport const ASSET_LIST = {\n  [PRIVATENET]: {\n    [GAS_SCRIPT_HASH]: {\n      contractHash: GAS_SCRIPT_HASH,\n      symbol: \"GAS\",\n      logo: \"/symbols/neo.svg\",\n    },\n    [FTW_SCRIPT_HASH[PRIVATENET]]: {\n      contractHash: FTW_SCRIPT_HASH[PRIVATENET],\n      symbol: \"FTW\",\n      logo: \"/symbols/ftw.svg\",\n    },\n    [NUDES_SCRIPT_HASH[PRIVATENET]]: {\n      contractHash: NUDES_SCRIPT_HASH[PRIVATENET],\n      symbol: \"NUDES\",\n      logo: \"/symbols/nudes.png\",\n    },\n  },\n  [TESTNET]: {\n    [GAS_SCRIPT_HASH]: {\n      contractHash: GAS_SCRIPT_HASH,\n      symbol: \"GAS\",\n      logo: \"/symbols/neo.svg\",\n    },\n    [FTW_SCRIPT_HASH[TESTNET]]: {\n      contractHash: FTW_SCRIPT_HASH[TESTNET],\n      symbol: \"FTW\",\n      logo: \"/symbols/ftw.svg\",\n    },\n    [NUDES_SCRIPT_HASH[TESTNET]]: {\n      contractHash: NUDES_SCRIPT_HASH[TESTNET],\n      symbol: \"NUDES\",\n      logo: \"/symbols/nudes.png\",\n    },\n    [DOGE_SCRIPT_HASH[TESTNET]]: {\n      contractHash: DOGE_SCRIPT_HASH[TESTNET],\n      symbol: \"DOGE\",\n      logo: \"/symbols/unknown.png\",\n    },\n    [MOON_SCRIPT_HASH[TESTNET]]: {\n      contractHash: MOON_SCRIPT_HASH[TESTNET],\n      symbol: \"WMOON\",\n      logo: \"/symbols/unknown.png\",\n    },\n  },\n  [MAINNET]: {\n    [GAS_SCRIPT_HASH]: {\n      contractHash: GAS_SCRIPT_HASH,\n      symbol: \"GAS\",\n      logo: \"/symbols/neo.svg\",\n    },\n    [FTW_SCRIPT_HASH[MAINNET]]: {\n      contractHash: FTW_SCRIPT_HASH[MAINNET],\n      symbol: \"FTW\",\n      logo: \"/symbols/ftw.svg\",\n    },\n    [NUDES_SCRIPT_HASH[MAINNET]]: {\n      contractHash: NUDES_SCRIPT_HASH[MAINNET],\n      symbol: \"NUDES\",\n      logo: \"/symbols/nudes.png\",\n    },\n  },\n};\nexport const ASSETS = (network: INetworkType) => {\n  const keys = Object.keys(ASSET_LIST[network]);\n  return keys.map((key) => {\n    return ASSET_LIST[network][key];\n  });\n};\n","import { CONST } from \"../../../index\";\n\nexport const BANK_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.TESTNET]: \"e2fe6a4ef757c3847e626271b2392b2cf5d7b3be\",\n  [CONST.MAINNET]: \"\",\n};\n","import { u } from \"@cityofzion/neon-core\";\nimport { base64ToHash160, toDecimal } from \"../../../utils\";\n\nexport const getEstimate = (\n  amount: string,\n  reserveA: number,\n  reserveB: number\n) => {\n  const fixed8TokenAmount = u.BigInteger.fromDecimal(amount, 8).toString();\n  // let keys = Object.keys(pairInfo);\n  // keys = keys.filter((k) => k !== token);\n  // const reservedA = pairInfo[token];\n  // const reservedB = pairInfo[keys[0]];\n  let estimated = (parseFloat(fixed8TokenAmount) * reserveB) / reserveA;\n  estimated = Math.floor(estimated);\n  estimated = toDecimal(estimated.toString());\n  return estimated;\n};\n\nexport const getUserShare = (totalShares, userShare, poolA, poolB) => {\n  // totalShares = parseFloat(totalShares);\n  // userShare = parseFloat(userShare);\n  // poolA = parseFloat(poolA);\n  // poolB = parseFloat(poolB);\n  return {\n    amountA: (poolA * userShare) / totalShares,\n    amountB: (poolB * userShare) / totalShares,\n  };\n};\n\nexport const parseUserStake = (stackItem) => {\n  return {\n    tokenA: base64ToHash160(stackItem.value[0].value as string),\n    tokenB: base64ToHash160(stackItem.value[1].value as string),\n    amountA: toDecimal(stackItem.value[2].value),\n    amountB: toDecimal(stackItem.value[3].value),\n  };\n};\n\nexport const parsePair = (stackItem) => {\n  return {\n    tokenA: base64ToHash160(stackItem.value[0].value as string),\n    tokenB: base64ToHash160(stackItem.value[1].value as string),\n    amountA: toDecimal(stackItem.value[2].value),\n    amountB: toDecimal(stackItem.value[3].value),\n    totalShare: toDecimal(stackItem.value[4].value),\n  };\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { SWAP_SCRIPT_HASH } from \"./consts\";\nimport { base64ToHash160, toDecimal } from \"../../../utils\";\nimport { u } from \"@cityofzion/neon-core\";\nimport { parsePair, parseUserStake } from \"./helpers\";\n\nexport class SwapContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = SWAP_SCRIPT_HASH[networkType];\n  }\n\n  provide = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    amountA: string,\n    tokenB: string,\n    amountB: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"addPair\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountA, 8).toString(),\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountB, 8).toString(),\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      undefined,\n      undefined,\n      true\n    );\n  };\n\n  remove = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"removeLiquidity\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      undefined,\n      undefined,\n      true\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      undefined,\n      undefined,\n      true\n    );\n  };\n\n  swap = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    amountA: string,\n    tokenB: string,\n    amountB: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"swap\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountA, 8).toString(),\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountB, 8).toString(),\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      undefined,\n      undefined,\n      true\n    );\n  };\n\n  getPair = async (\n    tokenA: string,\n    tokenB: string,\n    connectedWallet?: IConnectedWallet\n  ) => {\n    const scripts: any = [];\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPair\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    scripts.push(script);\n    if (connectedWallet) {\n      const script1 = {\n        scriptHash: tokenA,\n        operation: \"balanceOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      };\n      const script2 = {\n        scriptHash: tokenB,\n        operation: \"balanceOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      };\n      scripts.push(script1);\n      scripts.push(script2);\n    }\n    const res = await Network.read(this.network, scripts);\n    const pair = parsePair(res.stack[0]);\n    const obj = {\n      reserve: pair,\n      [pair.tokenA]: pair.amountA,\n      [pair.tokenB]: pair.amountB,\n      balances: {\n        [tokenA]: 0,\n        [tokenB]: 0,\n      },\n    };\n    if (connectedWallet) {\n      obj.balances[tokenA] = toDecimal(res.stack[1].value as string);\n      obj.balances[tokenB] = toDecimal(res.stack[2].value as string);\n    }\n    return obj;\n  };\n\n  getPairs = async () => {\n    const scripts: any = [];\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPairs\",\n      args: [],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      // @ts-ignore\n      return res.stack[0].iterator.map((item) => {\n        const tokenA = base64ToHash160(item.value[0].value as string);\n        const tokenB = base64ToHash160(item.value[1].value as string);\n        const amountA = item.value[2].value;\n        const amountB = item.value[3].value;\n        return {\n          tokenA,\n          tokenB,\n          amountA: toDecimal(amountA),\n          amountB: toDecimal(amountB),\n        };\n      });\n    } catch (e) {\n      // tslint:disable-next-line:no-console\n      return [];\n    }\n  };\n\n  getEstimate = async (tokenA, tokenB, swapToken, amount) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getEstimate\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n        { type: \"Hash160\", value: swapToken },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amount, 8).toString(),\n        },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      // @ts-ignore\n      return toDecimal(res.stack[0].value);\n    } catch (e) {\n      return undefined;\n    }\n  };\n\n  getUserStake = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getUserStake\",\n      args: [\n        { type: \"Address\", value: connectedWallet.account.address },\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"getPair\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script, script1], true);\n      return {\n        stake: parseUserStake(res.stack[0]),\n        pair: parsePair(res.stack[1]),\n      };\n    } catch (e) {\n      // tslint:disable-next-line:no-console\n      return undefined;\n    }\n  };\n\n  getClaimAble = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getClaimableFee\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n        { type: \"Address\", value: connectedWallet.account.address },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      return parseUserStake(res.stack[0]);\n    } catch (e) {\n    \tconsole.log(e)\n      // tslint:disable-next-line:no-console\n      return undefined;\n    }\n  };\n}\n","import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\n// tslint:disable-next-line:no-submodule-imports\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpcClient = Network.getRPCClient(network);\n    const res = await rpcClient.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      let amount;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n        amount = u.BigInteger.fromNumber(item.amount).toDecimal(8).toString();\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n        amount = item.amount;\n      }\n      balances.push({\n        contract: item.assethash,\n        amount,\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    },\n    network: INetworkType\n  ) {\n    const rpcClient = Network.getRPCClient(network);\n    const version: any = await rpcClient.getVersion();\n    const txObj = await DevWallet.build(rpcClient, invokeScript);\n    txObj.sign(DevWallet.account, version.protocol.network);\n    const txid = await rpcClient.sendRawTransaction(txObj);\n    // // tslint:disable-next-line:no-console\n    //   JSON.stringify(\n    //     {\n    //       RPC: rpc,\n    //       Transaction: txObj,\n    //       Network: version,\n    //       \"Network Fee\": txObj.networkFee.toDecimal(8).toString(),\n    //       \"System Fee\": txObj.systemFee.toDecimal(8).toString(),\n    //     },\n    //     null,\n    //     4\n    //   )\n    // );\n    return {\n      txid,\n      nodeUrl: rpcClient.url,\n    };\n  }\n\n  static createScript = (invokeScript: sc.ContractCallJson) => {\n    return sc.createScript({\n      scriptHash: invokeScript.scriptHash,\n      operation: invokeScript.operation,\n      args: invokeScript.args\n        ? invokeScript.args.map((param: any) => convertContractCallParam(param))\n        : [],\n    });\n  };\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    }\n    // cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n\n    const script = this.createScript(invokeScript);\n\n    // if (cosignerAddress) {\n    //   signers.push({\n    //     account: wallet.getScriptHashFromAddress(cosignerAddress),\n    //     scopes: tx.WitnessScope.Global,\n    //   });\n    // }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers: invokeScript.signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    if (invokeScript.extraSystemFee) {\n      const fee = u.BigInteger.fromDecimal(\n        invokeScript.extraSystemFee,\n        8\n      ).toString();\n      transaction.systemFee = systemFee.add(parseFloat(fee));\n    }\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","import neo3Dapi from \"neo3-dapi\";\nimport { ITransaction, IWalletType } from \"./interfaces\";\nimport {\n  DEV,\n  MAINNET,\n  NEO_LINE,\n  O3,\n  ONE_GATE,\n  TESTNET,\n  WALLET_LIST,\n} from \"../consts\";\nimport { NeoDapi } from \"@neongd/neo-dapi\";\nimport { DevWallet } from \"./dev-wallet\";\nimport { tx, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { INetworkType, Network } from \"../network\";\nimport { LocalStorage } from \"../local-storage\";\nimport moment from \"moment\";\nimport * as net from \"net\";\n\nexport class WalletAPI {\n  walletType: IWalletType;\n\n  constructor(walletType: IWalletType) {\n    this.walletType = walletType;\n  }\n\n  static list = WALLET_LIST;\n\n  private O3Wallet = async () => {\n    const instance = neo3Dapi;\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const network = await instance.getNetworks();\n    const balances = await instance.getBalance(\n      {\n        params: {\n          address: account.address,\n          contracts: [],\n        },\n      },\n      network.defaultNetwork\n    );\n    // TODO: Need to some sort of validation for balances in case wallet doesn't have any address?\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private OneGate = async () => {\n    // @ts-ignore\n    const instance = new NeoDapi(window.OneGate);\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const network = await instance.getNetworks();\n    network.defaultNetwork =\n      network.defaultNetwork === \"MainNet\" ? MAINNET : TESTNET;\n    const balances = await instance.getNep17Balances({\n      address: account.address,\n      assetHashes: [],\n    });\n    // TODO: Need to some sort of validation for balances in case wallet doesn't have any address?\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances,\n    };\n  };\n\n  private NeoLine = async () => {\n    // @ts-ignore\n    const instance = new NEOLineN3.Init();\n    // @ts-ignore\n    // NEOLineN3 doesn't have getNetworks function\n    const instance2 = new NEOLine.Init();\n    const network = await instance2.getNetworks();\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance({\n      params: {\n        address: account.address,\n        contracts: [],\n      },\n    });\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private Dev = async (defaultNetwork: INetworkType) => {\n    const instance = DevWallet;\n    const network = await instance.getNetworks(defaultNetwork);\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance(defaultNetwork);\n    return { instance, provider, account, network, balances };\n  };\n\n  /**\n   * TODO: Remove dev wallet when 3rd party has privatenet support\n   * @param defaultNetwork\n   */\n  init = async (defaultNetwork: INetworkType): Promise<any> => {\n    let wallet;\n    try {\n      switch (this.walletType) {\n        case O3:\n          wallet = await this.O3Wallet();\n          break;\n        case NEO_LINE:\n          wallet = await this.NeoLine();\n          break;\n        case ONE_GATE:\n          wallet = await this.OneGate();\n          break;\n        case DEV:\n          wallet = await this.Dev(defaultNetwork);\n          break;\n      }\n      return {\n        key: this.walletType,\n        ...wallet,\n      };\n    } catch (e: any) {\n      throw new Error(e.description ? e.description : e.message);\n    }\n  };\n\n  /* Control signing and send transaction. TODO:Need to improve type hardcoding later */\n  invoke = async (\n    currentNetwork: INetworkType,\n    senderAddress: string,\n    invokeScript: any,\n    extraSystemFee?: string,\n    testInvoke?: boolean,\n    isGlobal?: boolean\n  ): Promise<string> => {\n    const { instance, network } = await this.init(currentNetwork);\n    if (network.defaultNetwork !== currentNetwork) {\n      throw new Error(\n        \"Your wallet's network doesn't match with the app network setting.\"\n      );\n    }\n    if (extraSystemFee) {\n      invokeScript.extraSystemFee = extraSystemFee;\n    }\n\n    invokeScript.signers = [\n      {\n        account: NeonWallet.getScriptHashFromAddress(senderAddress),\n        scopes: isGlobal\n          ? tx.WitnessScope.Global\n          : tx.WitnessScope.CalledByEntry,\n      },\n    ];\n\n    // Do test invoke if required.\n    if (testInvoke) {\n      const rpcClient = Network.getRPCClient(currentNetwork);\n      const transaction = await DevWallet.build(rpcClient, invokeScript);\n      const invokeFunctionResponse = await rpcClient.invokeScript(\n        transaction.script,\n        transaction.signers\n      );\n      if (invokeFunctionResponse.state === \"FAULT\") {\n        throw new Error(invokeFunctionResponse.exception as string);\n      }\n    }\n\n    try {\n      const res = await instance.invoke(invokeScript, currentNetwork);\n      const submittedTx: ITransaction = {\n        network,\n        wallet: this.walletType,\n        txid: res.txid,\n        contractHash: invokeScript.scriptHash,\n        method: invokeScript.operation,\n        args: invokeScript.args,\n        createdAt: moment().format(\"MMMM Do YYYY, h:mm:ss a\"),\n      };\n      LocalStorage.addTransaction(submittedTx);\n      return res.txid;\n    } catch (e: any) {\n      // TODO: Need to improve dev wallet error handling as dapi standard.\n      if (e.description) {\n        throw new Error(e.description);\n      }\n      throw e;\n    }\n  };\n}\n","import { CONST } from \"../../../index\";\n\nexport const FARM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\",\n  [CONST.TESTNET]: \"5c8c66dd594e5492c28cbf4bdf0f66232cca208a\", // 11/26\n  [CONST.MAINNET]: \"\",\n};\n","import store from \"store2\";\nimport { IConnectedWallet, ITransaction } from \"../wallet/interfaces\";\nimport { FARM_SCRIPT_HASH } from \"../contracts/ftw/farm/consts\";\nimport { RUNE_SCRIPT_HASH } from \"../contracts\";\nimport { MAINNET } from \"../consts\";\nimport { INetworkType } from \"../network\";\n\nconst CONNECTED_WALLET = \"CONNECTED_WALLET\";\nconst TRANSACTIONS = \"TRANSACTIONS\";\nconst NETWORK = \"NETWORK\";\n\nexport class LocalStorage {\n  public static initStorage = (network: string): ITransaction[] => {\n    const supportContracts = [\n      FARM_SCRIPT_HASH[network],\n      RUNE_SCRIPT_HASH[network],\n    ];\n    const transactions = LocalStorage.getTransactions();\n    const validatedTx: ITransaction[] = [];\n    transactions.forEach((tx) => {\n      if (supportContracts.includes(tx.contractHash)) {\n        validatedTx.push(tx);\n      } else {\n        LocalStorage.removeTransaction(tx);\n      }\n    });\n    return validatedTx;\n  };\n\n  public static getNetwork = () => {\n    return store.get(NETWORK) ? store.get(NETWORK) : MAINNET;\n  };\n\n  public static setNetwork = (network: INetworkType) => {\n    return store.set(NETWORK, network);\n  };\n\n  public static getWallet = (): IConnectedWallet | undefined =>\n    validateConnectedWallet(store.get(CONNECTED_WALLET));\n\n  public static setWallet(connectedWallet: IConnectedWallet) {\n    const validated = validateConnectedWallet(connectedWallet);\n    store.set(CONNECTED_WALLET, validated);\n  }\n\n  public static removeWallet() {\n    store.remove(CONNECTED_WALLET);\n  }\n\n  public static getTransactions = (): ITransaction[] =>\n    store.has(TRANSACTIONS) ? store.get(TRANSACTIONS) : [];\n\n  public static addTransaction(tx: ITransaction) {\n    if (store.has(TRANSACTIONS)) {\n      store.add(TRANSACTIONS, tx);\n    } else {\n      store.set(TRANSACTIONS, [tx]);\n    }\n    window.dispatchEvent(new Event(\"transactions\"));\n  }\n\n  public static updatePendingTransaction(txId: string) {\n    let transactions = store.get(TRANSACTIONS);\n    transactions = transactions.map((tx) => {\n      if (tx.txid === txId) {\n        tx.status = \"SUBMITTED\";\n      }\n      return tx;\n    });\n    store.set(TRANSACTIONS, transactions);\n  }\n\n  public static removeTransaction = (tx: ITransaction) =>\n    store.remove(TRANSACTIONS, tx);\n\n  public static clearTransaction = () => store.set(TRANSACTIONS, []);\n}\n\nconst validateConnectedWallet = (connectedWallet?: IConnectedWallet) => {\n  if (\n    !connectedWallet ||\n    !connectedWallet.account ||\n    !connectedWallet.provider ||\n    !connectedWallet.network\n  ) {\n    return undefined;\n  }\n  return connectedWallet;\n};\n//\n// const validateTransaction = (connectedWallet?: IConnectedWallet) => {\n//   if (\n//     !connectedWallet ||\n//     !connectedWallet.account ||\n//     !connectedWallet.provider ||\n//     !connectedWallet.network\n//   ) {\n//     return undefined;\n//   }\n//   return connectedWallet;\n// };\n","import { ContextOptions, IWalletStates } from \"./interfaces\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { IConnectedWallet, IWalletType } from \"../neo/wallet/interfaces\";\nimport { LocalStorage } from \"../neo/local-storage\";\nimport { sc } from \"@cityofzion/neon-core\";\nimport { WalletAPI } from \"../neo/wallet\";\nimport toast from \"react-hot-toast\";\nimport { INetworkType } from \"../neo/network\";\n\n// tslint:disable-next-line:no-object-literal-type-assertion\nexport const WalletContext = createContext({} as IWalletStates);\nexport const WalletContextProvider = (props: {\n  options: ContextOptions;\n  children: any;\n}) => {\n  const [network, setNetwork] = useState(LocalStorage.getNetwork());\n  const [totalTxSubmit, setTotalTxSubmit] = useState(0);\n\n  const [isWalletModalActive, setWalletModalActive] = useState(false);\n\n  const [connectedWallet, setConnectedWallet] = useState<\n    IConnectedWallet | undefined\n  >(props.options.useLocalStorage ? LocalStorage.getWallet() : undefined);\n\n  const [invokeScript, setInvokeScript] = useState<\n    sc.ContractCallJson | undefined\n  >();\n\n  // const [transactions, setTransactions] = useState(\n  //   props.options.useLocalStorage ? LocalStorage.initStorage(network) : []\n  // );\n\n  const [pendingTransactions, setPendingTransactions] = useState<string[]>([]);\n\n  const openWalletModal = () => setWalletModalActive(true);\n\n  const closeWalletModal = () => setWalletModalActive(false);\n\n  const connectWallet = async (walletType: IWalletType) => {\n    try {\n      const res = await new WalletAPI(walletType).init(network);\n      setConnectedWallet(res);\n      if (props.options.useLocalStorage) {\n        LocalStorage.setWallet(res);\n      }\n      setWalletModalActive(false);\n    } catch (e: any) {\n      toast.error(e.message);\n    }\n  };\n\n  const disConnectWallet = () => {\n    LocalStorage.removeWallet();\n    setConnectedWallet(undefined);\n  };\n\n  const doInvoke = (args: sc.ContractCallJson) => {\n    if (isWalletModalActive) setWalletModalActive(false);\n    setInvokeScript(args);\n  };\n\n  const closeInvoke = () => setInvokeScript(undefined);\n\n  const addPendingTransaction = (txid: string) => {\n    setPendingTransactions([...pendingTransactions, txid]);\n  };\n\n  const switchNetwork = (val: INetworkType) => {\n    setNetwork(val);\n    LocalStorage.setNetwork(val);\n  };\n\n  const removePendingTransaction = (txid: string) => {\n    setPendingTransactions(pendingTransactions.filter((i) => i !== txid));\n  };\n\n  const increaseTotalTxSubmit = () => {\n    setTotalTxSubmit(totalTxSubmit + 1);\n  };\n\n  const contextValue: IWalletStates = {\n    useDevWallet: props.options.useDevWallet,\n    network,\n    invokeScript,\n    list: WalletAPI.list,\n    connectedWallet,\n    isWalletModalActive,\n    openWalletModal,\n    closeWalletModal,\n    connectWallet,\n    disConnectWallet,\n    doInvoke,\n    closeInvoke,\n    addPendingTransaction,\n    removePendingTransaction,\n    pendingTransactions,\n    switchNetwork,\n    totalTxSubmit,\n    increaseTotalTxSubmit,\n  };\n\n  return (\n    <WalletContext.Provider value={contextValue}>\n      {props.children}\n    </WalletContext.Provider>\n  );\n};\nexport const useWallet = () => useContext(WalletContext);\n","import { MAINNET, PRIVATENET, TESTNET } from \"../packages/neo/consts\";\n\nexport const HOME_PATH = \"/\";\nexport const MIGRATION_PATH = \"/migration\";\nexport const FARM_PATH = \"/gas\";\nexport const GALLERY_PATH = \"/NFT/gallery\";\nexport const TOURNAMENT_PATH = \"/arena\";\nexport const SMITH_PATH = \"/smith\";\nexport const COLLECTION_PATH = \"/NFT/collection\";\nexport const SWAP_PATH = \"/swap\";\nexport const SWAP_PATH_LIQUIDITY = \"/swap/liquidity\";\nexport const SWAP_PATH_FARM = \"/swap/claim\";\nexport const FUSION_PATH = \"/fusion\";\n\nexport const MENU = [\n  {\n    label: \"Rune\",\n    path: GALLERY_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n  {\n    label: \"Arena\",\n    path: TOURNAMENT_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n  {\n    label: \"Smith\",\n    path: SMITH_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n  {\n    label: \"Swap\",\n    path: SWAP_PATH,\n    network: [PRIVATENET, TESTNET],\n  },\n  {\n    label: \"GAS-FI\",\n    path: FARM_PATH,\n    network: [PRIVATENET, TESTNET],\n  },\n  {\n    label: \"Fusion\",\n    path: FUSION_PATH,\n    network: [PRIVATENET, TESTNET],\n  },\n  {\n    label: \"Migration\",\n    path: MIGRATION_PATH,\n    network: [PRIVATENET, TESTNET, MAINNET],\n  },\n];\n","import { CONST } from \"../../neo\";\n\nexport const getWalletIcon = (key: string) => {\n  let svg = \"\";\n  switch (key) {\n    case CONST.DEV:\n      svg = \"/icons/dev.png\";\n      break;\n    case CONST.O3:\n      svg = \"/icons/o3.svg\";\n      break;\n    case CONST.NEO_LINE:\n      svg = \"/icons/neoline.svg\";\n      break;\n    case CONST.ONE_GATE:\n      svg = \"/icons/onegate.png\";\n      break;\n  }\n  return svg;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { utils } from \"../../packages/neo\";\nimport { IConnectedWallet } from \"../../packages/neo/wallet/interfaces\";\nimport { useWallet } from \"../../packages/provider\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport { COLLECTION_PATH } from \"../../consts\";\nimport { NavLink } from \"react-router-dom\";\nimport { NEO_LINE, O3 } from \"../../packages/neo/consts\";\nimport neo3Dapi from \"neo3-dapi\";\ninterface IWalletDropdownProps {\n  connectedWallet: IConnectedWallet;\n}\nconst WalletDropdown = ({ connectedWallet }: IWalletDropdownProps) => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n\n  const onActive = () => setActive(!isActive);\n\n  useEffect(() => {\n    const refresh = () => {\n      connectWallet(connectedWallet.key);\n    };\n    const disconnected = () => {\n      disConnectWallet();\n    };\n\n    if (connectedWallet.key === NEO_LINE) {\n      window.addEventListener(\"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.NETWORK_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.DISCONNECTED\", disconnected);\n      return () => {\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.NETWORK_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.DISCONNECTED\",\n          disconnected\n        );\n      };\n    }\n    if (connectedWallet.key === O3) {\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.DISCONNECTED,\n        disconnected\n      );\n\n      return () => {\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.DISCONNECTED,\n          disconnected\n        );\n      };\n    }\n  }, []);\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className=\"button is-small is-black is-rounded\"\n          aria-controls=\"dropdown-wallet\"\n        >\n          <span>{utils.truncateAddress(connectedWallet.account.address)}</span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <img src={getWalletIcon(connectedWallet.key)} />\n              </div>\n              <div className=\"media-content\">\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </div>\n            </div>\n          </div>\n          <hr className=\"dropdown-divider\" />\n          <NavLink\n            className=\"dropdown-item has-text-dark\"\n            onClick={() => setActive(false)}\n            to={COLLECTION_PATH}\n          >\n            My NFT\n          </NavLink>\n          <hr className=\"dropdown-divider\" />\n          <a onClick={handleDisconnectWallet} className=\"dropdown-item\">\n            Disconnect\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React, { useState } from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, PRIVATENET, TESTNET } from \"../../packages/neo/consts\";\nimport { INetworkType } from \"../../packages/neo/network\";\n\nconst NetworkSwitch = () => {\n  const [isActive, setActive] = useState(false);\n  const { network, switchNetwork } = useWallet();\n  const onActive = () => setActive(!isActive);\n  const handleNetworkChange = (val: string) => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(\"Are you sure to switch network?\")) {\n      switchNetwork(val as INetworkType);\n      setActive(false);\n    }\n  };\n  const networkList = [PRIVATENET, TESTNET, MAINNET];\n\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className={`button is-small ${\n            network === MAINNET ? \"is-white\" : \"is-danger\"\n          }`}\n          aria-controls=\"dropdown-wallet\"\n        >\n          {network}\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {networkList.map((v) => {\n            if (\n              (process.env.NODE_ENV !== \"development\" && v === PRIVATENET) ||\n              network === v\n            ) {\n              return false;\n            }\n            return (\n              <div key={`network${v}`} className=\"dropdown-item\">\n                <a onClick={() => handleNetworkChange(v)}>Switch to {v}</a>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaBars, FaGithub, FaWallet } from \"react-icons/fa\";\nimport Logo from \"./Logo\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { useWallet } from \"../../packages/provider\";\nimport { utils } from \"../../packages/neo\";\nimport { MENU } from \"../../consts\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport NetworkSwitch from \"./NetworkSwitch\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaMedium, FaTwitter } from \"react-icons/all\";\nimport { MAINNET, TESTNET } from \"../../packages/neo/consts\";\nimport toast from \"react-hot-toast\";\n\nconst Header = () => {\n  const { toggleSidebar, toggleWalletSidebar } = useApp();\n  const { connectedWallet, network, disConnectWallet, switchNetwork } =\n    useWallet();\n  const [isActive, setActive] = useState(false);\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    disConnectWallet();\n  };\n  const handleSwitchNetwork = () => {\n    const targetNetwork = network === TESTNET ? MAINNET : TESTNET;\n    switchNetwork(targetNetwork);\n    setActive(false);\n    toast.success(`Network switched. You are on ${targetNetwork}`);\n  };\n  return (\n    <nav\n      className=\"navbar has-shadow is-white is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ height: \"52px\" }}\n    >\n      <div className=\"container\">\n        <div\n          className=\"navbar-brand\"\n          style={{ justifyContent: \"space-between\" }}\n        >\n          <div\n            role=\"button\"\n            className=\"navbar-burger is-center is-hidden-tablet\"\n            style={{ marginLeft: 0 }}\n            onClick={toggleSidebar}\n          >\n            <FaBars />\n          </div>\n          <Link className=\"has-text-white navbar-item is-center\" to=\"/\">\n            <Logo />\n          </Link>\n          <div\n            role=\"button\"\n            className={`navbar-burger is-center is-hidden-desktop`}\n            onClick={() => {\n              if (connectedWallet) {\n                setActive(!isActive);\n              } else {\n                toggleWalletSidebar();\n              }\n            }}\n            style={{ marginLeft: 0 }}\n          >\n            <FaWallet />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div\n            className={`navbar-menu  is-hidden-tablet ${\n              isActive && \"is-active\"\n            }`}\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item\">\n                <div className=\"media\" style={{ alignItems: \"center\" }}>\n                  <div className=\"media-left\">\n                    <img\n                      width=\"32px\"\n                      src={getWalletIcon(connectedWallet.key)}\n                    />\n                  </div>\n                  <div className=\"media-content\">\n                    {utils.truncateAddress(connectedWallet.account.address)}\n                  </div>\n                </div>\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <div className=\"navbar-item\">\n                <div className=\"level is-mobile\">\n                  <div className=\"level-left\">\n                    <div className=\"level-item\">\n                      <span\n                        className={\n                          network === TESTNET\n                            ? \"has-text-danger\"\n                            : \"has-text-info\"\n                        }\n                      >\n                        {\" \"}\n                        {network}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"level-right\">\n                    <div className=\"level-item\">\n                      <button\n                        onClick={handleSwitchNetwork}\n                        className=\"button is-small\"\n                      >\n                        Switch\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/*<hr className=\"dropdown-divider\" />*/}\n              {/*<Link*/}\n              {/*  onClick={() => setActive(false)}*/}\n              {/*  className=\"navbar-item has-text-dark\"*/}\n              {/*  to={COLLECTION_PATH}*/}\n              {/*>*/}\n              {/*  My NFT*/}\n              {/*</Link>*/}\n              <hr className=\"dropdown-divider\" />\n              <a onClick={handleDisconnectWallet} className=\"navbar-item\">\n                Disconnect wallet\n              </a>\n            </div>\n          </div>\n        )}\n\n        <div className=\"navbar-menu ml-3\">\n          <div className=\"navbar-start\">\n            {MENU.map((route, i) => {\n              if (!route.network.includes(network)) return false;\n              return (\n                <NavLink\n                  key={`header-${route.label}${i}`}\n                  activeClassName=\"is-active\"\n                  to={route.path}\n                  className=\"navbar-item\"\n                >\n                  <strong>{route.label}</strong>\n                </NavLink>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"navbar-end is-hidden-touch\">\n          <div className=\"navbar-item\">\n            <a\n              target=\"_blank\"\n              href=\"https://twitter.com/N3_FTW_NETWORK\"\n              className=\"button is-white is-small \"\n            >\n              <FaTwitter />\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://github.com/ForTheWinn\"\n              className=\"button is-white is-small\"\n            >\n              <FaGithub />\n            </a>\n            <a\n              target=\"_blank\"\n              href=\"https://medium.com/@Forthewin_network\"\n              className=\"button is-white is-small\"\n            >\n              <FaMedium />\n            </a>\n          </div>\n          <div className=\"navbar-item\">\n            <NetworkSwitch />\n          </div>\n          {/*<PendingTransaction />*/}\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              {connectedWallet ? (\n                <WalletDropdown connectedWallet={connectedWallet} />\n              ) : (\n                <button\n                  onClick={toggleWalletSidebar}\n                  className=\"button is-small is-black is-rounded\"\n                >\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown } from \"react-icons/all\";\nimport { useApp } from \"../../../common/hooks/use-app\";\nimport { useWallet } from \"../../provider\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletDropdown = () => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectedWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n  if (!connectedWallet) {\n    return (\n      <button className=\"button is-white \" onClick={() => setActive(!isActive)}>\n        <strong>Wallet</strong>\n      </button>\n    );\n  }\n  return (\n    <div className={`dropdown ${isActive && \"is-active\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-white\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu3\"\n          onClick={() => setActive(!isActive)}\n        >\n          <span className=\"icon is-small\">\n            <img src={getWalletIcon(connectedWallet.key)} />\n          </span>\n          <span>\n            <strong>Wallet</strong>\n          </span>\n          <span className=\"icon is-small\">\n            <FaAngleDown />\n            {/*<i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>*/}\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a\n            onClick={handleDisconnectWallet}\n            href=\"#\"\n            className=\"dropdown-item\"\n          >\n            Disconnect\n          </a>\n          {/*<hr className=\"dropdown-divider\"/>*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","import React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletList = () => {\n  const { connectWallet, list, useDevWallet } = useWallet();\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          if (!useDevWallet && _wallet.key === DEV) return false;\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n","import React from \"react\";\nimport { IBalance } from \"../../neo/wallet/interfaces\";\n\nconst AssetCard = (props: IBalance) => {\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        <strong>{props.symbol}</strong>\n      </div>\n      <div className=\"media-content\"></div>\n      <div className=\"media-right has-text-right\">{props.amount}</div>\n    </div>\n  );\n};\n\nexport default AssetCard;\n","import React from \"react\";\nimport { utils } from \"../../neo\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport WalletList from \"./WalletList\";\nimport AssetCard from \"./AssetCard\";\nimport { useWallet } from \"../../provider\";\n\nconst Wallet = (props) => {\n  const { connectedWallet } = useWallet();\n  return (\n    <>\n      <header className=\"level is-mobile p-3 is-marginless\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <WalletDropdown />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <small>\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </small>\n            </div>\n          </div>\n        )}\n      </header>\n      <hr className=\"m-0\" />\n      <section className=\"p-5\">\n        {connectedWallet ? (\n          <>\n            <div>\n              {connectedWallet &&\n                connectedWallet.balances.map((balance) => {\n                  return <AssetCard key={balance.symbol} {...balance} />;\n                })}\n            </div>\n          </>\n        ) : (\n          <WalletList />\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default Wallet;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport Wallet from \"../../packages/ui/Wallet\";\nimport { useWallet } from \"../../packages/provider\";\n\nconst WalletSidebar = () => {\n  const { walletSidebarStatus, toggleWalletSidebar } = useApp();\n  const { connectedWallet } = useWallet();\n  if (connectedWallet) return <div></div>;\n  return (\n    <SideNav\n      openFromRight={true}\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={walletSidebarStatus}\n      onHideNav={toggleWalletSidebar}\n      children={<Wallet />}\n    />\n  );\n};\n\nexport default WalletSidebar;\n","import React from \"react\";\n\nconst PageLayout = (props) => {\n  return (\n    <section className=\"section\">\n      <div className=\"container\">{props.children}</div>\n    </section>\n  );\n};\n\nexport default PageLayout;\n","import React, { ReactElement } from \"react\";\nimport $ from \"jquery\";\n\ninterface IProps {\n  onClose: () => void;\n  children: ReactElement;\n  isLoading?: boolean;\n  error?: string;\n}\nconst ModalCard = ({ onClose, children, isLoading, error }: IProps) => {\n  React.useEffect(() => {\n    $(\"html\").addClass(\"is-clipped\");\n    return () => {\n      $(\"html\").removeClass(\"is-clipped\");\n    };\n  }, []);\n  return (\n    <div className=\"modal is-active\" style={{ zIndex: 99 }}>\n      <div className=\"modal-background\" onClick={onClose} />\n      <section className=\"modal-content\">\n        <div className=\"box\">\n          {isLoading ? <div>Loading</div> : error ? <div>Error</div> : children}\n        </div>\n      </section>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};\n\nexport default ModalCard;\n","import React from \"react\";\n\n/**\n * TODO: Better ux needed\n * @param props\n * @constructor\n */\ninterface ITransactionSuccessProps {\n  txid: string;\n  onClick: () => void;\n}\nconst TransactionSubmitted = ({ txid, onClick }: ITransactionSuccessProps) => {\n  return (\n    <div className=\"has-text-centered\">\n      <h1 className=\"title is-5\">Transaction submitted!</h1>\n      <p className=\"subtitle is-7\">{txid}</p>\n      <button onClick={onClick} className=\"button is-black\">\n        Close\n      </button>\n    </div>\n  );\n};\n\nexport default TransactionSubmitted;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport NumberFormat from \"react-number-format\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  onClose: () => void;\n}\nconst ActionModal = ({ range, onClose }: IActionModal) => {\n  const [amount, setAmount] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onDeposit = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).deposit(\n          connectedWallet,\n          amount,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">\n            {/*<img src={\"/neo_512_512.svg\"} />*/}\n            Deposit NEO\n          </h1>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Your position</label>\n                <div className=\"select is-fullwidth\">\n                  <select\n                    value={position}\n                    onChange={(e) => setPosition(e.target.value)}\n                  >\n                    <option value=\"\">Select your position</option>\n                    {_.range(0, range).map((i) => (\n                      <option key={i} value={i + 1}>\n                        {i + 1}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Amount</label>\n                <NumberFormat\n                  autoFocus={true}\n                  // ref={this.props, inputRef}\n                  decimalScale={0}\n                  inputMode=\"decimal\"\n                  className=\"input\"\n                  value={amount}\n                  onValueChange={(value) => {\n                    setAmount(value.value);\n                  }}\n                  thousandSeparator={true}\n                  suffix={\" NEO\"}\n                  allowLeadingZeros={false}\n                />\n              </div>\n            </div>\n          </div>\n          <button\n            onClick={onDeposit}\n            disabled={!position || !amount || parseFloat(amount) < 1}\n            className=\"button is-button is-black\"\n          >\n            Deposit\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default ActionModal;\n","import React from \"react\";\nimport Countdown from \"react-countdown\";\n\ninterface ISnapshotCountdownProps {\n  timeLeft: number;\n  onCreateSnapshot: () => void;\n}\nconst SnapshotCountdown = ({\n  timeLeft,\n  onCreateSnapshot,\n}: ISnapshotCountdownProps) => {\n  const CreateSnapshotBtn = () => (\n    <button onClick={onCreateSnapshot} className=\"button is-button is-black\">\n      Creat snapshot\n    </button>\n  );\n  if (timeLeft < 1) {\n    return <CreateSnapshotBtn />;\n  }\n  return (\n    <Countdown\n      date={Date.now() + timeLeft}\n      renderer={(props) => {\n        if (props.completed) {\n          return <CreateSnapshotBtn />;\n        } else {\n          return (\n            <span>\n              {props.hours}:{props.minutes}:{props.seconds}\n            </span>\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default SnapshotCountdown;\n","import React from \"react\";\nimport { IFarmSnapshot } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface ISnapshotListProps {\n  item: IFarmSnapshot;\n}\nconst SnapshotCard = ({ item }: ISnapshotListProps) => {\n  return (\n    <div key={item.createdAt} className=\"media\">\n      <div className=\"media-left\">#{item.no}</div>\n      <div className=\"media-content\">\n        Position: <span className=\"is-capitalized\">{item.winPosition}</span>\n        <br />\n        GAS: {item.totalGas}\n        <br />\n        {item.createdAt}\n      </div>\n    </div>\n  );\n};\n\nexport default SnapshotCard;\n","import React, { useState } from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\nimport SnapshotCard from \"./SnapshotCard\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCreateSnapshot = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).createSnapshot(\n          connectedWallet\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  if (!contractStatus) return <div></div>;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">Snapshots</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <SnapshotCountdown\n              timeLeft={parseFloat(contractStatus.timeLeft)}\n              onCreateSnapshot={onCreateSnapshot}\n            />\n          </div>\n        </div>\n      </div>\n\n      {contractStatus.snapshots.items.map((item) => (\n        <SnapshotCard key={item.no} item={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React from \"react\";\n\nconst NotifyError = ({ msg, onClose }) => {\n  if (!msg) return <></>;\n  return (\n    <div className=\"notification is-danger\">\n      <button onClick={onClose} className=\"delete\" />\n      {msg}\n    </div>\n  );\n};\n\nexport default NotifyError;\n","import React from \"react\";\nimport { IFarmDepositRecord } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\n\ninterface IMyPositionProps {\n  deposit?: IFarmDepositRecord;\n  lastSnapshotNo: string;\n  onCancel: () => void;\n  onPositionChange: () => void;\n  onClaim: () => void;\n}\nconst MyPosition = ({\n  deposit,\n  lastSnapshotNo,\n  onCancel,\n  onClaim,\n  onPositionChange,\n}: IMyPositionProps) => {\n  if (!deposit) return <div></div>;\n  const lastClaimNo = deposit.lastClaimNo ? parseFloat(deposit.lastClaimNo) : 0;\n  const isClaimable = parseFloat(lastSnapshotNo) > lastClaimNo;\n  return (\n    <>\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item is-block\">\n            <div className=\"\">\n              My position\n              <br />\n              <span className=\"is-capitalized\">\n                {deposit.position} / {deposit.amount} NEO\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"buttons\">\n            {!isClaimable && (\n              <button onClick={onPositionChange} className=\"button is-black\">\n                Change position\n              </button>\n            )}\n            <button onClick={onCancel} className=\"button is-light\">\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n      {isClaimable && (\n        <button onClick={onClaim} className=\"button is-primary is-fullwidth\">\n          Claim Reward\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default MyPosition;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport MyPosition from \"./MyPosition\";\n\ninterface IPoolProps {\n  contractStatus?: IFarmContractStatus;\n  onDeposit: () => void;\n  onCancel: () => void;\n  onPositionChange: () => void;\n  onClaim: () => void;\n}\nconst Pool = ({\n  contractStatus,\n  onDeposit,\n  onCancel,\n  onClaim,\n  onPositionChange,\n}: IPoolProps) => {\n  return (\n    <div className=\"\">\n      <div className=\"box\">\n        <div className=\"level\">\n          <div className=\"level-left\">\n            <div className=\"level-item is-block\">\n              <h1 className=\"title is-4 is-marginless\">Total</h1>\n            </div>\n          </div>\n          <div className=\"level-right\">\n            <div>\n              {contractStatus?.neoBalance} <strong>NEO</strong>\n              <br />\n              {contractStatus?.ftwBalance} <strong>FTW</strong>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {contractStatus && contractStatus.deposit ? (\n        <MyPosition\n          deposit={contractStatus.deposit}\n          lastSnapshotNo={contractStatus.snapshots.totalItems}\n          onCancel={onCancel}\n          onClaim={onClaim}\n          onPositionChange={onPositionChange}\n        />\n      ) : (\n        <button onClick={onDeposit} className=\"button is-primary is-fullwidth\">\n          Deposit\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Pool;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal, addPendingTransaction } =\n    useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).remove(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(txid);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm close</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Close my position\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst CancelModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCancel = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).claim(connectedWallet);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">Confirm claim</h1>\n          <button onClick={onCancel} className=\"button is-button is-black\">\n            Claim my reward\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default CancelModal;\n","import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\n\ninterface IClaimsProps {\n  contractStatus?: IFarmContractStatus;\n  onClaim: () => void;\n}\nconst Claims = ({ contractStatus, onClaim }: IClaimsProps) => {\n  if (!contractStatus) return <div></div>;\n  if (!contractStatus.claims) return <div></div>;\n  if (!contractStatus.deposit) return <div></div>;\n  const lastClaimNo = contractStatus.deposit.lastClaimNo\n    ? parseFloat(contractStatus.deposit.lastClaimNo)\n    : 0;\n  const isClaimable =\n    parseFloat(contractStatus.snapshots.totalItems) > lastClaimNo;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">My Claims</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            {isClaimable && (\n              <button\n                onClick={onClaim}\n                className=\"button is-primary is-fullwidth\"\n              >\n                Claim Reward\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      {contractStatus.claims.items.length > 0 ? (\n        contractStatus.claims.items.map((item) => {\n          return (\n            <div key={item.createdAt} className=\"media\">\n              <div className=\"media-left\">#{item.no}</div>\n              <div className=\"media-content\">\n                Snapshots: {`${item.from} ~ ${item.end}`}\n                <br />\n                GAS: {item.GAS}\n                <br />\n                FTW: {item.FTW}\n                <br />\n                {item.createdAt}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>No claims to display</div>\n      )}\n    </div>\n  );\n};\n\nexport default Claims;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  currentPosition: string;\n  onClose: () => void;\n}\nconst PositionModal = ({ currentPosition, range, onClose }: IActionModal) => {\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onChange = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).changePosition(\n          connectedWallet,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-spaced\">Change your position</h1>\n          <p className=\"subtitle is-6\">\n            Your current position is <strong>{currentPosition}</strong>\n          </p>\n          <div className=\"field\">\n            <label className=\"label\">New position</label>\n            <div className=\"select is-fullwidth\">\n              <select\n                value={position}\n                onChange={(e) => setPosition(e.target.value)}\n              >\n                <option value=\"\">Select new position</option>\n                {_.range(0, range)\n                  .filter((i) => !(i + 1 === parseFloat(currentPosition)))\n                  .map((i) => (\n                    <option key={i} value={i + 1}>\n                      {i + 1}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          </div>\n          <button\n            onClick={onChange}\n            disabled={!position}\n            className=\"button is-button is-black\"\n          >\n            Change\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PositionModal;\n","import React  from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport moment from \"moment\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  if (!contractStatus) return <div></div>;\n  const tempTime = moment.duration(contractStatus.interval);\n  const format = `Every ${\n    tempTime.hours() > 0\n      ? `${tempTime.hours()} hours ${tempTime.minutes()} mins`\n      : `${tempTime.minutes()} mins`\n  }`;\n  return (\n    <div className=\"\">\n      <h1 className=\"title is-4\">About</h1>\n      <h4 className=\"title is-6\">Current settings</h4>\n      <p className=\"subtitle is-6\">\n        Position range: {contractStatus.range}\n        <br />\n        Interval: {format}\n      </p>\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport ActionModal from \"./ActionModal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport toast from \"react-hot-toast\";\nimport SnapshotList from \"./SnapshotList\";\nimport NotifyError from \"../../components/NotifyError\";\nimport Pool from \"./Pool\";\nimport CancelModal from \"./CancelModal\";\nimport ClaimModal from \"./ClaimModal\";\nimport Claims from \"./Claims\";\nimport PositionModal from \"./PositionModal\";\nimport About from \"./About\";\nimport { TESTNET } from \"../../../packages/neo/consts\";\n\nconst Farm = () => {\n  // let location = useLocation();\n  const production = [TESTNET];\n  const [route, setRoute] = useState(\"POOL\");\n  const [modalActive, setModalActive] = useState(false);\n  const [cancelModalActive, setCancelModalActive] = useState(false);\n  const [claimModalActive, setClaimModalActive] = useState(false);\n  const [positionModalActive, setPositionModalActive] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [contractStatus, setContractStatus] = useState<IFarmContractStatus>();\n  const onActive = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onCancelModalActive = () => setCancelModalActive(true);\n  const onClaimModalActive = () => setClaimModalActive(true);\n  const onPositionChange = () => setPositionModalActive(true);\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new FarmContract(network).getStatus(connectedWallet);\n        setContractStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, route]);\n  if (!production.includes(network))\n    return (\n      <PageLayout>This smart contract is not support in {network}.</PageLayout>\n    );\n  return (\n    <PageLayout>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-half\">\n          <div className=\"box \">\n            <div className=\"tabs is-toggle\">\n              <ul>\n                <li className={route === \"POOL\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"POOL\")}>Pool</a>\n                </li>\n                {connectedWallet && contractStatus && contractStatus.deposit && (\n                  <li className={route === \"CLAIMS\" ? \"is-active\" : \"\"}>\n                    <a onClick={() => setRoute(\"CLAIMS\")}>Claims</a>\n                  </li>\n                )}\n                <li className={route === \"SNAPSHOTS\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"SNAPSHOTS\")}>Snapshots</a>\n                </li>\n                <li className={route === \"ABOUT\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"ABOUT\")}>About</a>\n                </li>\n              </ul>\n            </div>\n            <NotifyError msg={error} onClose={() => setError(\"\")} />\n            {route === \"POOL\" && (\n              <Pool\n                contractStatus={contractStatus}\n                onPositionChange={onPositionChange}\n                onDeposit={onActive}\n                onCancel={onCancelModalActive}\n                onClaim={onClaimModalActive}\n              />\n            )}\n            {route === \"SNAPSHOTS\" && (\n              <SnapshotList contractStatus={contractStatus} />\n            )}\n            {route === \"CLAIMS\" && (\n              <Claims\n                onClaim={onClaimModalActive}\n                contractStatus={contractStatus}\n              />\n            )}\n            {route === \"ABOUT\" && <About contractStatus={contractStatus} />}\n          </div>\n        </div>\n      </div>\n      {contractStatus && modalActive && (\n        <ActionModal\n          range={contractStatus.range}\n          onClose={() => setModalActive(false)}\n        />\n      )}\n      {contractStatus && contractStatus.deposit && positionModalActive && (\n        <PositionModal\n          currentPosition={contractStatus.deposit.position}\n          range={contractStatus.range}\n          onClose={() => setPositionModalActive(false)}\n        />\n      )}\n      {cancelModalActive && (\n        <CancelModal onClose={() => setCancelModalActive(false)} />\n      )}\n      {claimModalActive && (\n        <ClaimModal onClose={() => setClaimModalActive(false)} />\n      )}\n    </PageLayout>\n  );\n};\n\nexport default Farm;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\n\ninterface IPropertiesModal {\n  tokenId: string;\n  onClose: () => void;\n}\nconst PropertiesModal = ({ tokenId, onClose }: IPropertiesModal) => {\n  const [item, setItem] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getProperties(\n          tokenId.toString()\n        );\n        setItem(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network]);\n  return (\n    <Modal onClose={onClose}>\n      {isLoading ? (\n        <div>Loading the rune data from the chain..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <h1 className=\"title is-4\">{item.name}</h1>\n\n          <p className=\"subtitle is-7\">\n            <strong>Phase:</strong> {item.phase}, <strong>Luck:</strong>{\" \"}\n            {item.luck}\n          </p>\n          <figure className=\"image is-square\">\n            <img src={item.image} />\n          </figure>\n          <p className=\"subtitle is-7 has-text-right mt-3\">{item.owner}</p>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PropertiesModal;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport PropertiesModal from \"../Gallery/PropertiesModal\";\nimport { GALLERY_PATH } from \"../../../consts\";\nimport { Link } from \"react-router-dom\";\n\nconst MyCollection = () => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus(address: string) {\n      setError(\"\");\n      try {\n        const res = await new NFTContract(network).getTokensOf(address);\n        setTokens(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network]);\n  return (\n    <>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">My collection</h1>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"columns is-multiline\">\n            {tokens.length > 0 ? (\n              tokens.map((token) => (\n                <div className=\"column is-3\">\n                  <figure\n                    className=\"image\"\n                    onClick={() => onPropertiesModalActive(token.tokenId)}\n                  >\n                    <img src={token.image} />\n                  </figure>\n                </div>\n              ))\n            ) : (\n              <div className=\"column is-3\">\n                <div className=\"box\">\n                  <div className=\"block\">\n                    <p>You don't have any runes yet</p>\n                  </div>\n\n                  <Link className=\"button is-primary\" to={GALLERY_PATH}>\n                    Go Get Them\n                  </Link>\n                </div>\n                {/*<DisplayRandomRune width=\"100%\" height=\"100%\" />*/}\n              </div>\n            )}\n          </div>\n        )}\n      </PageLayout>\n      {/*<button onClick={onMint} className=\"button is-black\">Mint</button>*/}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MyCollection;\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\n\ninterface IDisplayRandomRuneProps {\n  width: string;\n  height: string;\n  isActive?: boolean;\n}\nconst DisplayRandomRune = ({\n  width,\n  height,\n  isActive,\n}: IDisplayRandomRuneProps) => {\n  const [colors, setColors] = useState(getColors());\n  const bg = \"rgb(\" + colors[0] + \",\" + colors[6] + \",\" + colors[12] + \")\";\n  const dot1 = \"rgb(\" + colors[1] + \",\" + colors[7] + \",\" + colors[13] + \")\";\n  const dot2 = \"rgb(\" + colors[2] + \",\" + colors[8] + \",\" + colors[14] + \")\";\n  const dot3 = \"rgb(\" + colors[3] + \",\" + colors[9] + \",\" + colors[15] + \")\";\n  const dot4 = \"rgb(\" + colors[4] + \",\" + colors[10] + \",\" + colors[16] + \")\";\n  const body = \"rgb(\" + colors[5] + \",\" + colors[11] + \",\" + colors[17] + \")\";\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    if (isActive) {\n      const interval = setInterval(() => {\n        setColors(getColors());\n      }, 2000);\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  return (\n    <img style={{ width, height }} src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default DisplayRandomRune;\n","import React from \"react\";\nimport { RUNE_PRICE } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport DisplayRandomRune from \"../../components/RandomRune\";\ninterface IBannerProps {\n  network: INetworkType;\n  filter: string;\n  onMint: () => void;\n  onFilterChange: (val: string) => void;\n}\nconst Banner = ({ onMint, network }: IBannerProps) => {\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div>\n                <h1 className=\"title\">Forthewin Runes</h1>\n                <p className=\"subtitle\">Algorithms-generated lucky runes</p>\n\n                <div className=\"content is-small\">\n                  <p>\n                    <strong>Max supply</strong>\n                    <br />\n                    500 runes\n                  </p>\n                  <p>\n                    <strong>Attribute #1</strong>\n                    <br />\n                    Random phase (Dark, Light, Fire, Water, Wood, Earth, Metal)\n                  </p>\n                  <p>\n                    <strong>Attribute #2</strong>\n                    <br /> Luck (1 ~ 10)\n                  </p>\n                </div>\n                <div className=\"block has-text-centered-mobile is-hidden-mobile\">\n                  <button\n                    onClick={onMint}\n                    className=\"button is-primary press-font\"\n                  >\n                    Mint: {RUNE_PRICE[network]} GAS\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div\n                className=\"block\"\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <DisplayRandomRune\n                  isActive={true}\n                  width=\"230px\"\n                  height=\"230px\"\n                />\n              </div>\n              <div className=\"block has-text-centered-mobile is-hidden-tablet\">\n                <button\n                  onClick={onMint}\n                  className=\"button is-primary press-font\"\n                >\n                  Mint: {RUNE_PRICE[network]} GAS\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/*<div className=\"hero-foot\">*/}\n      {/*  <nav className=\"tabs is-boxed is-fullwidth\">*/}\n      {/*    <div className=\"container\">*/}\n      {/*      <ul>*/}\n      {/*        {RUNE_PHASE_FILTER.map((phase) => {*/}\n      {/*          return (*/}\n      {/*            <li*/}\n      {/*              key={phase}*/}\n      {/*              className={filter === phase ? \"is-active\" : \"\"}*/}\n      {/*            >*/}\n      {/*              <a onClick={() => onFilterChange(phase)}>{phase}</a>*/}\n      {/*            </li>*/}\n      {/*          );*/}\n      {/*        })}*/}\n      {/*      </ul>*/}\n      {/*    </div>*/}\n      {/*  </nav>*/}\n      {/*</div>*/}\n    </section>\n  );\n};\n\nexport default Banner;\n","import { CONST } from \"..\";\n\nexport const ENDPOINT = {\n  [CONST.PRIVATENET]: \"http://localhost:3000\",\n  [CONST.TESTNET]:\n    \"https://jefzcuwe0e.execute-api.us-east-1.amazonaws.com/testnet\",\n  [CONST.MAINNET]:\n    \"https://z3fn74s0oa.execute-api.us-east-1.amazonaws.com/mainnet\",\n};\n","import { INetworkType } from \"../network\";\nimport { ENDPOINT } from \"./consts\";\n\n// interface IRuneFilter = \"All\" | \"Fire\" |  \"\"\n\nexport class RestAPI {\n  network: INetworkType;\n  endpoint: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.endpoint = ENDPOINT[networkType];\n  }\n\n  fetchResult = async (url: string) => {\n    const res = await fetch(url, { mode: \"cors\" });\n    const json = await res.json();\n    if (res.status === 200) {\n      return json;\n    } else {\n      // throw new Error(json.message);\n      throw new Error(\"Network error\");\n    }\n  };\n\n  async getRunes(filter) {\n    return this.fetchResult(this.endpoint + \"/runes/\" + filter);\n  }\n\n  async getRune(tokenId) {\n    return this.fetchResult(this.endpoint + \"/rune/\" + tokenId);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\nconst RuneLoading = () => {\n\tconst [colors, setColors] = useState(getColors());\n  const [bg, setBg] = useState(\"black\");\n  const [dot1, setDot1] = useState(\"black\");\n  const [dot2, setDot2] = useState(\"black\");\n  const [dot3, setDot3] = useState(\"black\");\n  const [dot4, setDot4] = useState(\"black\");\n  const [body, setBody] = useState(\"black\");\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setBody(\"white\");\n    }, 1000);\n    timer = setTimeout(() => {\n      setDot1(\"white\");\n    }, 2000);\n    timer = setTimeout(() => {\n      setDot2(\"white\");\n    }, 3000);\n    timer = setTimeout(() => {\n      setDot3(\"white\");\n    }, 4000);\n    timer = setTimeout(() => {\n      setDot4(\"white\");\n    }, 5000);\n    timer = setTimeout(() => {\n      setBg(\"rgb(\" + colors[0] + \",\" + colors[1] + \",\" + colors[2] + \")\");\n    }, 6000);\n    timer = setTimeout(() => {\n      setBody(\"rgb(\" + colors[3] + \",\" + colors[4] + \",\" + colors[5] + \")\");\n    }, 7000);\n    timer = setTimeout(() => {\n      setDot1(\"rgb(\" + colors[6] + \",\" + colors[7] + \",\" + colors[8] + \")\");\n    }, 8000);\n    timer = setTimeout(() => {\n      setDot2(\"rgb(\" + colors[9] + \",\" + colors[10] + \",\" + colors[11] + \")\");\n    }, 9000);\n    timer = setTimeout(() => {\n      setDot3(\"rgb(\" + colors[12] + \",\" + colors[13] + \",\" + colors[14] + \")\");\n    }, 10000);\n    timer = setTimeout(() => {\n      setDot4(\"rgb(\" + colors[15] + \",\" + colors[16] + \",\" + colors[17] + \")\");\n    }, 11000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <img width=\"100%\" height=\"100%\" src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default RuneLoading;\n","import React from \"react\";\n\nconst CheckMark = () => {\n  return (\n    <div style={{width:\"90px\", height:\"90px\"}}>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 130.2 130.2\"\n      >\n        <circle\n          className=\"path circle\"\n          fill=\"none\"\n          stroke=\"#73AF55\"\n          strokeWidth=\"6\"\n          strokeMiterlimit=\"10\"\n          cx=\"65.1\"\n          cy=\"65.1\"\n          r=\"62.1\"\n        />\n        <polyline\n          className=\"path check\"\n          fill=\"none\"\n          stroke=\"#73AF55\"\n          strokeWidth=\"6\"\n          strokeLinecap=\"round\"\n          strokeMiterlimit=\"10\"\n          points=\"100.2,40.2 51.5,88.8 29.8,67.5 \"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default CheckMark;\n","import React, { useEffect, useState } from \"react\";\nimport { INetworkType, Network } from \"../../neo/network\";\nimport RuneLoading from \"./RuneLoading\";\nimport CheckMark from \"../../../ui/pages/Tournament/scenes/Arena/Players/components/CheckMark\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExclamationCircle } from \"react-icons/all\";\nimport { TESTNET } from \"../../neo/consts\";\n\ninterface IAfterTransactionSubmittedProps {\n  txid: string;\n  network: INetworkType;\n  onSuccess: () => void;\n  onError: () => void;\n}\nconst AfterTransactionSubmitted = ({\n  txid,\n  network,\n  onSuccess,\n  onError,\n}: IAfterTransactionSubmittedProps) => {\n  const [isDone, setDone] = useState(false);\n  const [hasError, setError] = useState(\"\");\n\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        const res = await Network.getRawTx(txid, network);\n        if (res) {\n          setDone(true);\n        }\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    checkTxid();\n  }, [txid]);\n\n  return (\n    <div>\n      <div\n        style={{\n          width: \"200px\",\n          height: \"200px\",\n          margin: \"auto\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        className=\"\"\n      >\n        {hasError ? (\n          <FaExclamationCircle size={90} className=\"has-text-danger\" />\n        ) : isDone ? (\n          <CheckMark />\n        ) : (\n          <RuneLoading />\n        )}\n      </div>\n      <div className=\"has-background  has-text-centered mt-5\">\n        {hasError ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Error occurred</h1>\n            <p className=\"subtitle is-7\">{hasError}</p>\n            <button onClick={onError} className=\"button is-black\">\n              Close\n            </button>\n          </div>\n        ) : isDone ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Submitted</h1>\n            <p className=\"subtitle is-7\">Your transaction accepted</p>\n            <div className=\"block\">\n              <a\n                target=\"_blank\"\n                href={`https://${\n                  network === TESTNET ? \"testnet.\" : \"\"\n                }explorer.onegate.space/transactionInfo/${txid}`}\n              >\n                View txid on explorer\n              </a>\n            </div>\n            <div className=\"block\">\n              <button onClick={onSuccess} className=\"button is-black\">\n                Close\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <h1 className=\"title is-5\">Submitting..</h1>\n            <p className=\"subtitle is-7\">\n              Please wait until your transaction accepted\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AfterTransactionSubmitted;\n","import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport PropertiesModal from \"./PropertiesModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport Banner from \"./Banner\";\nimport { RestAPI } from \"../../../packages/neo/api\";\nimport { RUNE_PHASE_FILTER } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../components/Modal\";\n\nconst Gallery = () => {\n  const [txid, setTxid] = useState(\"\");\n  const [filter, setFilter] = useState<string>(RUNE_PHASE_FILTER[0]);\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n  const onFilterChange = (val: string) => setFilter(val);\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).mint(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    document.title =\n      \"Forthewin Rune: Algorithms-generated lucky runes NFT on NEO\";\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const items = await new RestAPI(network).getRunes(filter);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getTokens();\n        setTokens(items);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network, filter]);\n  return (\n    <section id=\"Rune\">\n      <Banner\n        network={network}\n        filter={filter}\n        onFilterChange={onFilterChange}\n        onMint={onMint}\n      />\n      {isLoading ? (\n        <PageLayout>\n          <div>Loading..</div>\n        </PageLayout>\n      ) : error ? (\n        <PageLayout>\n          <div>{error}</div>\n        </PageLayout>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"wrap\",\n          }}\n        >\n          {tokens.map((token) => (\n            <figure\n              style={{ width: \"10%\" }}\n              key={token.tokenId}\n              className=\"image rune\"\n              onClick={() => onPropertiesModalActive(token.tokenId.toString())}\n            >\n              <img src={token.image} />\n              {/*<small*/}\n              {/*  className=\"has-text-white\"*/}\n              {/*  style={{ position: \"absolute\", top: 0 }}*/}\n              {/*>*/}\n              {/*  #{token.tokenId}*/}\n              {/*</small>*/}\n              {/*<span className=\"has-text-white\">{token.phase}</span>*/}\n            </figure>\n          ))}\n        </div>\n      )}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={() => setTxid(\"\")}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { MENU } from \"../../consts\";\nimport { useWallet } from \"../../packages/provider\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaMedium, FaTwitter } from \"react-icons/all\";\nimport { FaGithub } from \"react-icons/fa\";\n\nconst SidebarNav = (props) => {\n  const { network } = useWallet();\n  const { toggleSidebar } = useApp();\n  return (\n    <>\n      <aside className=\"menu p-5\">\n        <p className=\"menu-label\">Menu</p>\n        <ul className=\"menu-list\">\n          {MENU.map((route, i) => {\n            if (!route.network.includes(network)) return false;\n            return (\n              <li key={`${route.label}${i}`}>\n                <NavLink\n                  onClick={toggleSidebar}\n                  activeClassName={\"is-active\"}\n                  to={route.path}\n                >\n                  {route.label}\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      </aside>\n      <div className=\"p-5\" style={{ position: \"absolute\", bottom: \"40px\" }}>\n        <div className=\"buttons\">\n          <a\n            target=\"_blank\"\n            href=\"https://twitter.com/N3_FTW_NETWORK\"\n            className=\"button is-white is-small \"\n          >\n            <FaTwitter />\n          </a>\n          <a\n            target=\"_blank\"\n            href=\"https://github.com/ForTheWinn\"\n            className=\"button is-white is-small\"\n          >\n            <FaGithub />\n          </a>\n          <a\n            target=\"_blank\"\n            href=\"https://medium.com/@Forthewin_network\"\n            className=\"button is-white is-small\"\n          >\n            <FaMedium />\n          </a>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SidebarNav;\n","import React from \"react\";\nimport SideNav from \"react-simple-sidenav\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport SidebarNav from \"./SidebarNav\";\n\nconst MobileMenuSlider = (props) => {\n  const { sidebarStatus, toggleSidebar } = useApp();\n  return (\n    <SideNav\n      style={{ top: \"52px\" }}\n      // navStyle={{ width: \"80%\" }}\n      showNav={sidebarStatus}\n      onHideNav={toggleSidebar}\n      children={<SidebarNav />}\n    />\n  );\n};\n\nexport default MobileMenuSlider;\n","import React from \"react\";\n\ninterface IBackgroundImageContainerProps {\n  src: string;\n  height: string;\n}\nconst BgContainer = ({ src, height }: IBackgroundImageContainerProps) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"none\",\n        backgroundImage: `url(${src})`,\n        // padding: \"80px 16px\",\n      }}\n    />\n  );\n};\n\nexport default BgContainer;\n","import { TOURNAMENT_PATH } from \"../../../consts\";\n\nexport const ARENA_PATH = TOURNAMENT_PATH + \"/:arenaNo\";\n","import React from \"react\";\nimport PageLayout from \"../components/PageLayout\";\nimport BgContainer from \"../components/BgContainer\";\nimport { GALLERY_PATH, SMITH_PATH, SWAP_PATH } from \"../../consts\";\nimport { ARENA_PATH } from \"./Tournament/pageRoutes\";\nimport { Link } from \"react-router-dom\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, TESTNET } from \"../../packages/neo/consts\";\nimport toast from \"react-hot-toast\";\n\nconst CARDS = [\n  {\n    title: \"FTW Rune\",\n    type: \"NFT\",\n    desc: \"FTW Rune is an algorithmically generated NFT created and stored onchain.\",\n    img: \"assets/runes.png\",\n    link: GALLERY_PATH,\n  },\n  {\n    title: \"FTW Arena\",\n    type: \"GameFi\",\n    desc: \" FTW Runes against each other with the victor earning a GAS prize.\",\n    img: \"assets/arena-bg.jpeg\",\n    link: ARENA_PATH,\n  },\n  {\n    title: \"FTW Smith\",\n    type: \"Utility\",\n    desc: \"FTW Smith helps users to create and deploy fungible/Non-fungible token smart contracts without any codes.\",\n    img: \"assets/smith.png\",\n    link: SMITH_PATH,\n  },\n  {\n    title: \"FTW Swap\",\n    type: \"DeFi\",\n    desc: \"Coming soon. Try on our Testnet.\",\n    img: \"assets/swap.png\",\n    link: SWAP_PATH,\n  },\n  // {\n  //   title: \"FTW Lab\",\n  //   type: \"Testnet\",\n  //   desc: \"Preview FTW future apps.\",\n  //   img: \"assets/testnet.png\",\n  //   link: SMITH_PATH,\n  // },\n];\n\nconst Home = () => {\n  const { network, switchNetwork } = useWallet();\n  const onSwitchNetwork = () => {\n    if (network !== TESTNET) {\n      // eslint-disable-next-line no-restricted-globals\n      if (confirm(\"Are you sure to switch network?\")) {\n        switchNetwork(TESTNET);\n        toast.success(\"Network switched\");\n      }\n    }\n  };\n  return (\n    <div>\n      <section className=\"hero is-black\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Forthewin Network</h1>\n            <p className=\"subtitle\">\n              Building something cool decentralized stuff on NEO blockchain.{\" \"}\n            </p>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns is-multiline\">\n          {CARDS.map((card) => {\n            return (\n              <div key={card.title} className=\"column is-4\">\n                <div className=\"card\">\n                  <div className=\"card-image is-clickable\">\n                    <Link to={card.link}>\n                      <figure className=\"image\">\n                        <BgContainer src={card.img} height=\"300px\" />\n                      </figure>\n                    </Link>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"media\">\n                      <div className=\"media-content\">\n                        <p className=\"title is-4\">\n                          <Link className={\"has-text-dark\"} to={card.link}>\n                            {card.title}\n                          </Link>\n                        </p>\n                        <span className=\"tag is-primary\">{card.type}</span>\n                      </div>\n                    </div>\n                    <div className=\"content\" style={{ minHeight: \"100px\" }}>\n                      {card.desc}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"column is-4\">\n            <div className=\"card\">\n              <div\n                className=\"card-image is-clickable\"\n                onClick={onSwitchNetwork}\n              >\n                <figure className=\"image\">\n                  <BgContainer src={\"assets/lab.png\"} height=\"300px\" />\n                </figure>\n              </div>\n              <div className=\"card-content\">\n                <div className=\"media\">\n                  <div className=\"media-content\">\n                    <p\n                      onClick={onSwitchNetwork}\n                      className=\"title is-4 is-clickable\"\n                    >\n                      FTW Lab\n                    </p>\n                    <span className=\"tag is-primary\">Testnet</span>\n                  </div>\n                </div>\n                <div className=\"content\" style={{ minHeight: \"100px\" }}>\n                  Preview FTW future apps.\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Home;\n","import { CONST } from \"../../../index\";\n\nexport const SMITH_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"f161ae138e0255b809612e4d26e540c94c83c0cc\",\n  [CONST.TESTNET]: \"799704f9d8588b183204e154f8eea1de35bb3ecd\",\n  [CONST.MAINNET]: \"f860bbdcc5091a9ae7812b047fd325dfa7905ee1\",\n};\n\nexport const DEPLOY_FEE = {\n  [CONST.PRIVATENET]: \"10\",\n  [CONST.TESTNET]: \"10\",\n  [CONST.MAINNET]: \"10\",\n};\n","import {\n  base64ToAddress,\n  base64ToDate,\n  base64ToHash160,\n  base64ToString,\n} from \"../../../utils\";\nimport { u } from \"@cityofzion/neon-core\";\n\nexport const parsePaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseRecord(stackItem[3].value),\n  };\n};\n\nconst parseRecord = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractOwner: base64ToAddress(item.value[1].value),\n      contractHash: base64ToHash160(item.value[2].value), // NEO amount\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      decimals: item.value[5].value, // NEO amount\n      totalSupply: item.value[6].value, // NEO amount\n      author: base64ToString(item.value[7].value), // NEO amount\n      description: base64ToString(item.value[8].value), // NEO amount\n      createdAt: base64ToDate(item.value[9].value),\n    };\n  });\n};\n\nexport const parseNEP11RecordPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseNEP11Record(stackItem[3].value),\n  };\n};\n\nconst parseNEP11Record = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractHash: base64ToHash160(item.value[1].value), // NEO amount\n      contractOwner: base64ToAddress(item.value[2].value),\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      description: base64ToString(item.value[5].value), // NEO amount\n      author: base64ToString(item.value[6].value), // NEO amount\n      email: base64ToString(item.value[7].value), // NEO amount\n      createdAt: base64ToDate(item.value[8].value),\n    };\n  });\n};\n\nexport const parseSmithProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { DEPLOY_FEE, SMITH_SCRIPT_HASH } from \"./consts\";\nimport { ISmithContractStatus, ISmithNEP11RecordPaginate } from \"./interfaces\";\nimport {\n  parseNEP11RecordPaginate,\n  parsePaginate,\n  parseSmithProperties,\n} from \"./helpers\";\nimport { u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { IRuneMeta } from \"../nft/interfaces\";\n\nexport class SmithContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = SMITH_SCRIPT_HASH[networkType];\n  }\n\n  createNEP17 = async (\n    connectedWallet: IConnectedWallet,\n    contractName: string,\n    symbol: string,\n    decimals: string,\n    totalSupply: string,\n    author: string,\n    description: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(\n            DEPLOY_FEE[this.network],\n            8\n          ).toString(),\n        },\n        {\n          type: \"Array\",\n          value: [\n            {\n              type: \"String\",\n              value: \"nep17\",\n            },\n            {\n              type: \"Hash160\",\n              value: NeonWallet.getScriptHashFromAddress(\n                connectedWallet.account.address\n              ),\n            },\n            {\n              type: \"String\",\n              value: contractName,\n            },\n            {\n              type: \"String\",\n              value: author,\n            },\n            {\n              type: \"String\",\n              value: description,\n            },\n            {\n              type: \"String\",\n              value: symbol,\n            },\n            {\n              type: \"Integer\",\n              value: totalSupply,\n            },\n            {\n              type: \"Integer\",\n              value: decimals,\n            },\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  createNEP11 = async (\n    connectedWallet: IConnectedWallet,\n    contractName: string,\n    symbol: string,\n    author: string,\n    description: string,\n    email: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(\n            DEPLOY_FEE[this.network],\n            8\n          ).toString(),\n        },\n        {\n          type: \"Array\",\n          value: [\n            {\n              type: \"String\",\n              value: \"nep11\",\n            },\n            {\n              type: \"Hash160\",\n              value: NeonWallet.getScriptHashFromAddress(\n                connectedWallet.account.address\n              ),\n            },\n            {\n              type: \"String\",\n              value: symbol,\n            },\n            {\n              type: \"String\",\n              value: contractName,\n            },\n            {\n              type: \"String\",\n              value: description,\n            },\n            {\n              type: \"String\",\n              value: author,\n            },\n            {\n              type: \"String\",\n              value: email,\n            },\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  mintNFT = async (\n    connectedWallet: IConnectedWallet,\n    contractHash: string,\n    name: string,\n    description: string,\n    image: string,\n    json\n  ) => {\n    const invokeScript = {\n      operation: \"mintNFT\",\n      scriptHash: contractHash,\n      args: [\n        {\n          type: \"String\",\n          value: name,\n        },\n        {\n          type: \"String\",\n          value: description,\n        },\n        {\n          type: \"String\",\n          value: image,\n        },\n        {\n          type: \"String\",\n          value: json,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getStatus = async (): Promise<ISmithContractStatus> => {\n    const records = {\n      operation: \"getRecords\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n\n    const scripts = [records];\n\n    const res = await Network.read(this.network, scripts);\n    return {\n      records: parsePaginate(res.stack[0].value),\n    };\n  };\n\n  getNEP11Records = async (): Promise<ISmithNEP11RecordPaginate> => {\n    const records = {\n      operation: \"getNep11Records\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: 1,\n        },\n      ],\n    };\n    const scripts = [records];\n    const res = await Network.read(this.network, scripts);\n    return parseNEP11RecordPaginate(res.stack[0].value);\n  };\n\n  getTokens = async (contract): Promise<string[]> => {\n    const script = {\n      scriptHash: contract,\n      operation: \"tokens\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].iterator.map((item) => {\n      return u.HexString.fromBase64(item.value as string).toAscii();\n    });\n  };\n\n  totalSupply = async (contract): Promise<number> => {\n    const script = {\n      scriptHash: contract,\n      operation: \"totalSupply\",\n      args: [],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseFloat(res.stack[0].value);\n  };\n\n  getProperties = async (\n    contractHash: string,\n    tokenId: string\n  ): Promise<IRuneMeta> => {\n    const script = {\n      scriptHash: contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parseSmithProperties(res.stack);\n  };\n}\n","const emojiRegexExp =\n  /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/gi;\n\nexport const detectEmojiInString = (values: object) => {\n  let detected = 0;\n  const keys = Object.keys(values);\n  keys.forEach((i) => {\n    detected = emojiRegexExp.test(values[i]) ? detected + 1 : detected;\n  });\n  return detected;\n};\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport NumberFormat from \"react-number-format\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport { balanceCheck } from \"../../../packages/neo/utils\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\n\nconst NEP17FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    decimals: \"8\",\n    totalSupply: \"\",\n    author: \"\",\n    description: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        if (balanceCheck(connectedWallet.balances, 20)) {\n          try {\n            const res = await new SmithContract(network).createNEP17(\n              connectedWallet,\n              values.name,\n              values.symbol,\n              values.decimals,\n              values.totalSupply,\n              values.author,\n              values.description\n            );\n            setTxid(res);\n          } catch (e: any) {\n            toast.error(e.message);\n          }\n        } else {\n          toast.error(\"You must have more than 20 GAS.\");\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Create NEP17 Contract</h1>\n\n          <div className=\"field is-grouped is-grouped-multiline\">\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Deploy fee</span>\n                <span className=\"tag is-primary\">10 GAS</span>\n              </div>\n            </div>\n\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">System fee</span>\n                <span className=\"tag is-primary\">\n                  {DEPLOY_FEE[network]} GAS\n                </span>\n              </div>\n            </div>\n          </div>\n          <small>NOTE: Please do not use EMOJI or Unicode.</small>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">Token Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Symbol</label>\n                <div className=\"control\">\n                  <input\n                    value={values.symbol}\n                    onChange={(e) =>\n                      handleValueChange(\"symbol\", e.target.value)\n                    }\n                    className=\"input\"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Decimals</label>\n                <div className=\"control\">\n                  <NumberFormat\n                    decimalScale={0}\n                    inputMode=\"decimal\"\n                    className=\"input\"\n                    value={values.decimals}\n                    onValueChange={(value) => {\n                      handleValueChange(\"decimals\", value.value);\n                    }}\n                    max={18}\n                    allowNegative={false}\n                    allowLeadingZeros={false}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Total supply</label>\n            <div className=\"control\">\n              <NumberFormat\n                allowNegative={false}\n                decimalScale={0}\n                inputMode=\"decimal\"\n                className=\"input\"\n                value={values.totalSupply}\n                onValueChange={(value) => {\n                  handleValueChange(\"totalSupply\", value.value);\n                }}\n                allowLeadingZeros={false}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.decimals ||\n              parseFloat(values.decimals) > 18 ||\n              parseFloat(values.totalSupply) < 1 ||\n              !values.author ||\n              !values.description ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP17FormModal;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport { balanceCheck } from \"../../../packages/neo/utils\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst NEP11FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    author: \"\",\n    description: \"\",\n    email: \"\",\n  });\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        if (balanceCheck(connectedWallet.balances, 20)) {\n          try {\n            const res = await new SmithContract(network).createNEP11(\n              connectedWallet,\n              values.name,\n              values.symbol,\n              values.author,\n              values.description,\n              values.email\n            );\n            setTxid(res);\n          } catch (e: any) {\n            toast.error(e.message);\n          }\n        } else {\n          toast.error(\"You must have more than 20 GAS.\");\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Create NEP11 Contract</h1>\n          <div className=\"field is-grouped is-grouped-multiline\">\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Deploy fee</span>\n                <span className=\"tag is-primary\">10 GAS</span>\n              </div>\n            </div>\n\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">System fee</span>\n                <span className=\"tag is-primary\">\n                  {DEPLOY_FEE[network]} GAS\n                </span>\n              </div>\n            </div>\n          </div>\n          <small>NOTE: Please do not use EMOJI or Unicode.</small>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">NFT Contract Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Symbol</label>\n            <div className=\"control\">\n              <input\n                value={values.symbol}\n                onChange={(e) => handleValueChange(\"symbol\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control\">\n              <input\n                value={values.email}\n                onChange={(e) => handleValueChange(\"email\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.author ||\n              !values.description ||\n              !values.email ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP11FormModal;\n","import React, { useState } from \"react\";\nimport { SMITH_PATH, TOURNAMENT_PATH } from \"../../../consts\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport NEP17FormModal from \"./NEP17FormModal\";\nimport NEP11FormModal from \"./NEP11FormModal\";\n\nconst Banner = () => {\n  const location = useLocation();\n  const [isNep11FormModalActive, setNep11FormModalActive] = useState(false);\n  const [isNep17FormModalActive, setNep17FormModalActive] = useState(false);\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">Forthewin Smith</h1>\n          <p className=\"subtitle\">\n            Create your own NEP11 and NEP17 smart contracts without any codes\n          </p>\n          <div className=\"buttons\">\n            <button\n              onClick={() => setNep11FormModalActive(true)}\n              className=\"button is-primary press-font\"\n            >\n              Deploy NEP11\n            </button>\n            <button\n              onClick={() => setNep17FormModalActive(true)}\n              className=\"button is-primary press-font\"\n            >\n              Deploy NEP17\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              <li\n                className={location.pathname === SMITH_PATH ? \"is-active\" : \"\"}\n              >\n                <Link to={SMITH_PATH}>NEP11 (NFT)</Link>\n              </li>\n              <li\n                className={\n                  location.pathname === SMITH_PATH + \"/nep17\" ? \"is-active\" : \"\"\n                }\n              >\n                <Link to={SMITH_PATH + \"/nep17\"}>NEP17 (Token)</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n      {isNep11FormModalActive && (\n        <NEP11FormModal onClose={() => setNep11FormModalActive(false)} />\n      )}\n      {isNep17FormModalActive && (\n        <NEP17FormModal onClose={() => setNep17FormModalActive(false)} />\n      )}\n    </section>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\nimport { ISmithRecord } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { FaExternalLinkAlt } from \"react-icons/all\";\n\ninterface IContractCardProps {\n  data: ISmithRecord;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network } = useWallet();\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">\n          #{data.no} {data.name}\n        </h5>\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/contractinfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n        </div>\n        <div className=\"field is-grouped is-grouped-multiline\">\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Symbol</span>\n              <span className=\"tag is-info\">{data.symbol}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Decimals</span>\n              <span className=\"tag is-info\">{data.decimals}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Total supply</span>\n              <span className=\"tag is-info\">{data.totalSupply}</span>\n            </div>\n          </div>\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Author</span>\n              <span className=\"tag is-info\">{data.author}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContractCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\n\nconst NEP17Smith = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [status, setStatus] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getStatus();\n        setStatus(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {status && status.records.items.length > 0 ? (\n            status.records.items.map((item, i) => (\n              <ContractCard key={\"contact17\" + i} data={item} />\n            ))\n          ) : (\n            <div></div>\n          )}\n        </div>\n      )}\n      {/*{isActionModalActive && (*/}\n      {/*  <ActionModal onClose={() => setActionModalActive(false)} />*/}\n      {/*)}*/}\n    </>\n  );\n};\n\nexport default NEP17Smith;\n","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\n\ninterface IActionModal {\n  contractHash: string;\n  onClose: () => void;\n}\nconst NEP11MintFormModal = ({ contractHash, onClose }: IActionModal) => {\n  const { network, connectedWallet } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [showForm, setShowForm] = useState(false);\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    image: \"\",\n    attributes: {},\n  });\n  const [attValues, setAttValues] = useState({\n    key: \"\",\n    value: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n\n  const handleAttChange = (key: string, val: string) => {\n    setAttValues({\n      ...attValues,\n      [key]: val,\n    });\n  };\n\n  const handleAttributes = () => {\n    if (attValues.key && attValues.value) {\n      // @ts-ignore\n      const attributes = values.attributes;\n      attributes[attValues.key] = attValues.value;\n      setValues({\n        ...values,\n        attributes,\n      });\n      setAttValues({\n        key: \"\",\n        value: \"\",\n      });\n    }\n  };\n\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SmithContract(network).mintNFT(\n          connectedWallet,\n          contractHash,\n          values.name,\n          values.description,\n          values.image,\n          JSON.stringify(values.attributes)\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  const attKeys = Object.keys(values.attributes);\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Mint a NFT</h1>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">NFT Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Image</label>\n            <div className=\"control\">\n              <input\n                value={values.image}\n                onChange={(e) => handleValueChange(\"image\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"level\">\n            <div className=\"level-left\">\n              <div className=\"level-item\">\n                <label className=\"label\">NFT Attributes</label>\n              </div>\n            </div>\n\n            <div className=\"level-right\">\n              <div className=\"level-item\">\n                <button\n                  onClick={() => setShowForm(!showForm)}\n                  className=\"button is-dark\"\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"field is-grouped is-grouped-multiline\">\n              {attKeys.map((k) => {\n                return (\n                  <div className=\"control\">\n                    <div className=\"tags has-addons\">\n                      <span className=\"tag is-dark\">{k}</span>\n                      <span className=\"tag is-info\">\n                        {values.attributes[k]}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {showForm && (\n            <div className=\"block\">\n              <div className=\"columns is-mobile\">\n                <div className=\"column is-5\">\n                  <div className=\"control\">\n                    <input\n                      placeholder=\"KEY\"\n                      value={attValues.key}\n                      onChange={(e) => handleAttChange(\"key\", e.target.value)}\n                      className=\"input\"\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n                <div className=\"column\">\n                  <div className=\"control is-5\">\n                    <input\n                      placeholder=\"VALUE\"\n                      value={attValues.value}\n                      onChange={(e) => handleAttChange(\"value\", e.target.value)}\n                      className=\"input\"\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n                <div className=\"column is-2\">\n                  <button\n                    disabled={!attValues.key || !attValues.value}\n                    onClick={handleAttributes}\n                    className=\"button\"\n                  >\n                    Submit\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <hr />\n          <button\n            onClick={onMint}\n            disabled={!values.name || !values.description || !values.image}\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP11MintFormModal;\n","import React, { useEffect, useState } from \"react\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\n\ninterface IDisplayRuneProps {\n  contractHash: string;\n  tokenId: string;\n  network: INetworkType;\n}\n\nconst DisplayRune = ({ contractHash, tokenId, network }: IDisplayRuneProps) => {\n  const [token, setToken] = useState<any>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new SmithContract(network).getProperties(\n          contractHash,\n          tokenId\n        );\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return <img width=\"100%\" height=\"100%\" src={token.image} />;\n};\n\nexport default DisplayRune;\n","import React, { useEffect, useState } from \"react\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport DisplayNFT from \"./DisplayNFT\";\nimport _ from \"underscore\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport { wallet } from \"@cityofzion/neon-core\";\ninterface ITokensProps {\n  contractHash: string;\n}\nconst Tokens = ({ contractHash }: ITokensProps) => {\n  const [tokens, setTokens] = useState<number>(0);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new SmithContract(network).totalSupply(contractHash);\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [contractHash, network]);\n  return (\n    <>\n      <strong>Supply</strong>\n      <br />\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {tokens}\n          {tokens > 0 ? (\n            <>\n              <br />\n              <strong>Showcase</strong>\n              <div className=\"columns is-multiline is-mobile\">\n                {_.range(tokens > 12 ? 12 : tokens).map((i) => {\n                  const tokenId = i + 1;\n                  return (\n                    <div\n                      key={`token${i}`}\n                      className=\"column is-1-desktop is-3-mobile\"\n                    >\n                      <DisplayNFT\n                        network={network}\n                        contractHash={contractHash}\n                        tokenId={tokenId.toString()}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              {tokens > 12 && (\n                <a\n                  className=\"button is-black\"\n                  target=\"_blank\"\n                  href={`https://${\n                    network === MAINNET\n                      ? \"explorer.onegate.space\"\n                      : \"testnet.explorer.onegate.space\"\n                  }/NFTtokeninfo/0x${contractHash}`}\n                >\n                  <span className=\"icon\">\n                    <FaExternalLinkAlt />\n                  </span>\n                  <span>Browse more</span>\n                </a>\n              )}\n            </>\n          ) : (\n            <div></div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Tokens;\n","import React, { useState } from \"react\";\nimport { ISmithNEP11Record } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport NEP11MintFormModal from \"../../NEP11MintFormModal\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport Tokens from \"./Tokens\";\n\ninterface IContractCardProps {\n  data: ISmithNEP11Record;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network, connectedWallet } = useWallet();\n  const [isMintModalActive, setMintModalActive] = useState(\"\");\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">\n          #{data.no} {data.name}\n        </h5>\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/NFTtokeninfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n          <br />\n          <Tokens contractHash={data.contractHash} />\n        </div>\n      </div>\n      {connectedWallet &&\n        connectedWallet.account.address === data.contractOwner && (\n          <div className=\"media-right\">\n            <div className=\"block\">\n              <button\n                onClick={() => setMintModalActive(data.contractHash)}\n                className=\"button is-primary press-font\"\n              >\n                Mint\n              </button>\n            </div>\n          </div>\n        )}\n\n      {isMintModalActive && (\n        <NEP11MintFormModal\n          contractHash={isMintModalActive}\n          onClose={() => setMintModalActive(\"\")}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ContractCard;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\nimport { ISmithNEP11RecordPaginate } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\n\nconst NEP11Smith = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState<ISmithNEP11RecordPaginate>();\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getNEP11Records();\n        setData(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {data && data.items.length > 0 ? (\n            data.items.map((item, i) => (\n              <ContractCard key={\"contract\" + i} data={item} />\n            ))\n          ) : (\n            <div>No contracts to display</div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NEP11Smith;\n","import React, { useEffect } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { SMITH_PATH } from \"../../../consts\";\nimport { Route } from \"react-router-dom\";\nimport Banner from \"./Banner\";\nimport NEP17Smith from \"./scenes/NEP17\";\nimport NEP11Smith from \"./scenes/NEP11\";\n\nconst Smith = () => {\n  useEffect(() => {\n    document.title =\n      \"Forthewin Smith: Create your NEP11 and NEP17 smart contracts without any codes.\";\n  }, []);\n  return (\n    <>\n      <Banner />\n      <PageLayout>\n        <Route exact path={SMITH_PATH} component={() => <NEP11Smith />} />\n        <Route path={SMITH_PATH + \"/nep17\"} component={() => <NEP17Smith />} />\n      </PageLayout>\n    </>\n  );\n};\n\nexport default Smith;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TOURNAMENT_PATH } from \"../../../../../consts\";\nimport PageLayout from \"../../../../components/PageLayout\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\n\nconst ArenaHome = (props) => {\n  const { network } = useWallet();\n  let ARENA_LIST = [\"4\", \"8\", \"16\", \"32\", \"64\", \"128\", \"256\"];\n  if (network === MAINNET) {\n    ARENA_LIST = [\"8\", \"16\", \"32\", \"64\", \"128\"];\n  }\n  return (\n    <div\n      style={{\n        backgroundImage: 'url(\"/assets/arena-bg.jpeg\")',\n        backgroundSize: \"cover\",\n        height: \"calc(100vh - 52px)\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      <PageLayout>\n        {/*<div className=\"columns is-multiline\">*/}\n        {ARENA_LIST.map((arena) => {\n          return (\n            <div\n              key={arena}\n              // className=\"column is-4\"\n            >\n              <div\n                className=\"has-text-centered\"\n                // className={`notification has-text-centered ${ARENA_COLOR[arena]}`}\n              >\n                <Link\n                  to={TOURNAMENT_PATH + \"/\" + arena}\n                  className=\"title has-text-white\"\n                >\n                  ARENA {arena}\n                </Link>\n              </div>\n            </div>\n          );\n        })}\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default ArenaHome;\n","import { CONST } from \"../../../index\";\n\nexport const TOURNAMENT_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"d2016f40d26d420c696132e5dae453d93b0f3050\",\n  [CONST.TESTNET]: \"1666b9485e2faf13ccea24c9563dfa5cbd92a1ad\",\n  [CONST.MAINNET]: \"0eb288c413b5d5ec4aa0df5aea34d9538b28dd29\",\n};\n\nexport const ADMIN_FOR_PLAY = {\n  [CONST.PRIVATENET]: [\"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\"],\n  [CONST.TESTNET]: [\n    \"NTsSEKhpngsRsLZDcrJpMUT7523fcdM9qF\",\n    \"NS9QLsaY8RzN9fxTWj9AECyLaJvsk38XUb\",\n  ],\n  [CONST.MAINNET]: [\"NS9QLsaY8RzN9fxTWj9AECyLaJvsk38XUb\"],\n};\n\nexport const SUPPORT_TICKET_PRICE = \"0.2\";\nexport const TOURNAMENT_TIME_PADDING = 3600000;\n","import {\n  base64ToAddress,\n  base64ToHash160,\n  base64ToString,\n  toDecimal,\n} from \"../../../utils\";\nimport { IHistory, IHistoryGame, IPlayer } from \"./interfaces\";\n\nexport const parsePlayer = (stackItem): IPlayer => {\n  return stackItem.map((item) => {\n    return {\n      // no: item.value[0].value,\n      owner: base64ToAddress(item.value[0].value),\n      tokenHash: base64ToHash160(item.value[1].value),\n      tokenId: base64ToString(item.value[2].value),\n      phase: base64ToString(item.value[3].value),\n      luck: item.value[4].value,\n      createdAt: item.value[5].value,\n    };\n  });\n};\n\nexport const parseHistory = (stackItem: any): IHistory => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    currentPage: stackItem[2].value,\n    items: parseGame(stackItem[3].value),\n  };\n};\n\nconst parseGame = (stackItem): IHistoryGame[] => {\n  return stackItem.map((item) => {\n    return {\n      gameNo: item.value[0].value,\n      tournamentTree: parsePlayer(item.value[1].value),\n      champion: base64ToString(item.value[2].value), // NEO amount\n      nonce: item.value[3].value,\n      betsOnChampion: item.value[4].value,\n      totalBets: item.value[5].value,\n      rollover: item.value[6].value,\n      fee: item.value[7].value,\n      championPrize: item.value[8].value,\n      createdAt: item.value[9].value,\n      champOwner: item.value[10]\n        ? base64ToAddress(item.value[10].value)\n        : undefined,\n    };\n  });\n};\n\nexport const calculateClaimableAmount = (\n  history: IHistoryGame,\n  betAmount: number\n): number => {\n  let totalAmount =\n    parseFloat(history.totalBets) -\n    parseFloat(history.fee) -\n    parseFloat(history.championPrize);\n  totalAmount = totalAmount + parseFloat(history.rollover);\n  let myClaimAble =\n    (totalAmount * betAmount) / parseFloat(history.betsOnChampion);\n  myClaimAble = Math.floor(myClaimAble);\n  return toDecimal(myClaimAble.toString());\n};\n","import { INetworkType, Network } from \"../../../network\";\nimport { SUPPORT_TICKET_PRICE, TOURNAMENT_SCRIPT_HASH } from \"./consts\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { RUNE_SCRIPT_HASH } from \"../nft\";\nimport { parsePlayer, parseHistory } from \"./helpers\";\nimport { GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { base64ToAddress, toDecimal } from \"../../../utils\";\nimport { u } from \"@cityofzion/neon-core\";\n\nexport class TournamentContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = TOURNAMENT_SCRIPT_HASH[networkType];\n  }\n\n  register = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: RUNE_SCRIPT_HASH[this.network],\n      args: [\n        {\n          type: \"Hash160\",\n          value: this.contractHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n        {\n          type: \"Array\",\n          value: [\n            {\n              type: \"Integer\",\n              value: arenaNo,\n            },\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  play = async (\n    connectedWallet: IConnectedWallet,\n    arenaNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"play\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      \"0.05\",\n      true\n    );\n  };\n\n  leave = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"leave\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n      // \"0.1\"\n    );\n  };\n\n  bet = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n    arenaNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"transfer\",\n      scriptHash: GAS_SCRIPT_HASH,\n      args: [\n        { type: \"Address\", value: connectedWallet.account.address },\n        { type: \"Hash160\", value: this.contractHash },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(SUPPORT_TICKET_PRICE, 8).toString(),\n        },\n        {\n          type: \"Array\",\n          value: [\n            { type: \"Integer\", value: arenaNo },\n            { type: \"String\", value: tokenId },\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      undefined,\n      true\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    arenaNo: string,\n    gameNo: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript\n    );\n  };\n\n  getPlayers = async (arenaNo: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPlayers\",\n      args: [\n        {\n          type: \"Integer\",\n          value: arenaNo,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return parsePlayer(res.stack[0].value);\n  };\n\n  history = async (arenaNo: string, page: number): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getHistoryPaginate\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: page },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    return parseHistory(res.stack[0].value);\n  };\n\n  getGameHeight = async (arenaNo: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getGameHeight\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const res = await Network.read(this.network, [script]);\n    // @ts-ignore\n    return res.stack[0].value;\n  };\n\n  getBetAmount = async (\n    arenaNo: string,\n    gameNo: string,\n    championTokenId: string,\n    address: string\n  ): Promise<any> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getBetsOnAccount\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"String\", value: championTokenId },\n        { type: \"Address\", value: address },\n      ],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"isClaimed\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"Address\", value: address },\n      ],\n    };\n    const res = await Network.read(this.network, [script, script1]);\n    return {\n      // @ts-ignore\n      betAmount: parseFloat(res.stack[0].value),\n      // @ts-ignore\n      isClaimed: res.stack[1].value,\n    };\n  };\n\n  getBetOnPlayer = async (\n    arenaNo: string,\n    gameNo: string,\n    tokenId: string,\n    address: string\n  ): Promise<{\n    totalBets: string;\n    userBets: string;\n  }> => {\n    const scripts: any = [];\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getBetsOnPlayer\",\n      args: [\n        { type: \"Integer\", value: arenaNo },\n        { type: \"Integer\", value: gameNo },\n        { type: \"String\", value: tokenId },\n      ],\n    };\n    scripts.push(script);\n\n    if (address) {\n      const script1 = {\n        scriptHash: this.contractHash,\n        operation: \"getBetsOnAccount\",\n        args: [\n          { type: \"Integer\", value: arenaNo },\n          { type: \"Integer\", value: gameNo },\n          { type: \"String\", value: tokenId },\n          { type: \"Address\", value: address },\n        ],\n      };\n      scripts.push(script1);\n    }\n    const res = await Network.read(this.network, scripts);\n    return {\n      totalBets: res.stack[0].value as string,\n      userBets: res.stack[1] ? (res.stack[1].value as string) : \"\",\n    };\n  };\n\n  getCurrentPrize = async (\n    arenaNo: string\n  ): Promise<{\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  }> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getCurrentPrize\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"getGameHeight\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const script2 = {\n      scriptHash: this.contractHash,\n      operation: \"getPreviousWinner\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const script3 = {\n      scriptHash: this.contractHash,\n      operation: \"getTimeElapsed\",\n      args: [{ type: \"Integer\", value: arenaNo }],\n    };\n    const res = await Network.read(this.network, [\n      script,\n      script1,\n      script2,\n      script3,\n    ]);\n    return {\n      prize: toDecimal(res.stack[0].value as string),\n      gameNo: parseFloat(res.stack[1].value as string) + 1,\n      previousChampWallet: res.stack[2].value\n        ? base64ToAddress(res.stack[2].value as string)\n        : undefined,\n      timeElapsedFromPreviousGame: res.stack[3].value\n        ? (res.stack[3].value as string)\n        : undefined,\n    };\n  };\n}\n","import React from \"react\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TOURNAMENT_TIME_PADDING } from \"../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IPlayButtonProps {\n  arenaNo: string;\n  onSubmitted: (txid: string) => void;\n  status?: {\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  };\n}\nconst PlayButton = ({ arenaNo, onSubmitted, status }: IPlayButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPlay = async () => {\n    if (connectedWallet && status) {\n      // try {\n      //   const res = await new TournamentContract(network).play(\n      //     connectedWallet,\n      //     arenaNo\n      //   );\n      //   addPendingTransaction(res);\n      //   onSubmitted(res);\n      // } catch (e: any) {\n      //   toast.error(e.message);\n      // }\n      // const timeLeft =\n      //   TOURNAMENT_TIME_PADDING -\n      //   parseFloat(status.timeElapsedFromPreviousGame);\n      // if (timeLeft <= 0) {\n      try {\n        const res = await new TournamentContract(network).play(\n          connectedWallet,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        onSubmitted(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n      // } else {\n      // }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <button className=\"button is-primary press-font\" onClick={onPlay}>\n      Start\n    </button>\n  );\n};\n\nexport default PlayButton;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TOURNAMENT_PATH } from \"../../../../../consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport PlayButton from \"../../components/PlayButton\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { ADMIN_FOR_PLAY } from \"../../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IBanner {\n  arenaNo: string;\n  pathname: string;\n  status?: {\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  };\n}\nconst Banner = ({ arenaNo, status, pathname }: IBanner) => {\n  const { connectedWallet, network } = useWallet();\n  const [playTxid, setPlayTxid] = useState(\"\");\n\n  let hasPermissionToPlay = false;\n  if (ADMIN_FOR_PLAY[network].includes(connectedWallet?.account.address)) {\n    hasPermissionToPlay = true;\n  }\n  if (\n    connectedWallet &&\n    status &&\n    connectedWallet.account.address === status.previousChampWallet\n  ) {\n    hasPermissionToPlay = true;\n  }\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"level\">\n            <div className=\"level-left\">\n              <div className=\"level-item  has-text-centered\">\n                <div>\n                  <p className=\"heading\">Round</p>\n                  <p className=\"title is-5\">#{status ? status.gameNo : \"\"}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"level-left\">\n              <div className=\"level-item\">\n                <div>\n                  <h1 className=\"title mb-3\">ARENA {arenaNo}</h1>\n                  {hasPermissionToPlay && (\n                    <div className=\"has-text-centered\">\n                      <PlayButton\n                        onSubmitted={setPlayTxid}\n                        arenaNo={arenaNo}\n                        status={status}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"level-left\">\n              <div className=\"level-item has-text-centered\">\n                <div>\n                  <p className=\"heading\">Prize</p>\n                  <p className=\"title is-5\">\n                    {status ? status.prize + \" GAS\" : \"\"}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              <li\n                className={\n                  pathname === TOURNAMENT_PATH + \"/\" + arenaNo\n                    ? \"is-active\"\n                    : \"\"\n                }\n              >\n                <Link to={TOURNAMENT_PATH + \"/\" + arenaNo}>Players</Link>\n              </li>\n              <li\n                className={\n                  pathname === TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"\n                    ? \"is-active\"\n                    : \"\"\n                }\n              >\n                <Link to={TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"}>\n                  Champions\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n\n      {playTxid && (\n        <Modal onClose={() => setPlayTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={playTxid}\n            network={network}\n            onSuccess={() => setPlayTxid(\"\")}\n            onError={() => setPlayTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\nimport { INetworkType } from \"../../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { RestAPI } from \"../../../../packages/neo/api\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaStar } from \"react-icons/fa\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  isOwner?: boolean;\n  onClick: (obj) => void;\n}\n\nconst DisplayRuneWithProperties = ({\n  width,\n  height,\n  tokenId,\n  network,\n  isOwner,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchRune() {\n      try {\n        const res = await new RestAPI(network).getRune(tokenId);\n        setToken(res);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getProperties(tokenId);\n        // setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchRune();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune is-relative\"\n      onClick={() => onClick({ ...token, tokenId })}\n    >\n      <img src={token.image} />\n      {isOwner && (\n        <FaStar\n          style={{ position: \"absolute\", top: \"2px\", left: \"3px\" }}\n          className=\"has-text-warning\"\n        />\n      )}\n    </figure>\n  );\n};\n\nexport default DisplayRuneWithProperties;\n","import React from \"react\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { balanceCheck } from \"../../../../packages/neo/utils\";\nimport { SUPPORT_TICKET_PRICE } from \"../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IBetButtonProps {\n  arenaNo: string;\n  tokenId: string;\n  setTxid: (txid: string) => void;\n}\nconst BetButton = ({ arenaNo, tokenId, setTxid }: IBetButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onBet = async () => {\n    if (connectedWallet) {\n      if (\n        balanceCheck(connectedWallet.balances, parseFloat(SUPPORT_TICKET_PRICE))\n      ) {\n        try {\n          const res = await new TournamentContract(network).bet(\n            connectedWallet,\n            tokenId,\n            arenaNo\n          );\n          addPendingTransaction(res);\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error(`You must have more than ${SUPPORT_TICKET_PRICE} GAS.`);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <button onClick={onBet} className=\"button is-primary is-fullwidth\">\n      Support {SUPPORT_TICKET_PRICE} GAS\n    </button>\n  );\n};\n\nexport default BetButton;\n","import React from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\n\ninterface ILeaveButtonProps {\n  arenaNo: string;\n  tokenId: string;\n  setTxid: (txid: string) => void;\n}\nconst LeaveButton = ({ arenaNo, tokenId, setTxid }: ILeaveButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onLeave = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).leave(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  return (\n    <button onClick={onLeave} className=\"button is-danger is-fullwidth\">\n      Leave\n    </button>\n  );\n};\n\nexport default LeaveButton;\n","import React, { useEffect, useState } from \"react\";\nimport { IRuneMeta } from \"../../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport BetButton from \"../../../../components/BetButton\";\nimport LeaveButton from \"../../../../components/LeaveButton\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toDecimal } from \"../../../../../../../packages/neo/utils\";\n\ninterface IPlayerModalProps {\n  arenaNo: string;\n  gameNo?: number;\n  player: IRuneMeta & { tokenId: string; gameOwner: string };\n  onClose: () => void;\n}\n\nconst PlayerModal = ({\n  arenaNo,\n  gameNo,\n  player,\n  onClose,\n}: IPlayerModalProps) => {\n  const [txid, setTxid] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const [status, setStatus] = useState({\n    totalBets: \"\",\n    userBets: \"\",\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    async function fetchContractStatus(_gameNo) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetOnPlayer(\n          arenaNo,\n          _gameNo,\n          player.tokenId,\n          connectedWallet ? connectedWallet.account.address : undefined\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (gameNo) {\n      fetchContractStatus(gameNo);\n    }\n  }, [gameNo, network]);\n  return (\n    <Modal onClose={onClose}>\n      <div>\n        {txid ? (\n          <AfterTransactionSubmitted\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n            txid={txid}\n            network={network}\n          />\n        ) : (\n          <div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <img src={player.image} />\n              </div>\n              <div className=\"column\">\n                <div className=\"content\">\n                  <strong>Name</strong>\n                  <br />\n                  <p>{player.name}</p>\n                  <strong>Phase</strong>\n                  <p>{player.phase}</p>\n                  <strong>Luck</strong>\n                  <p>{player.luck}</p>\n                  <strong>Owner</strong>\n                  <p>{player.gameOwner}</p>\n                  <strong>Current support amount</strong>\n                  <p>{toDecimal(status.totalBets)}</p>\n                  {connectedWallet && (\n                    <>\n                      <strong>My support amount</strong>\n                      <p>{toDecimal(status.userBets)}</p>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <BetButton\n                  setTxid={setTxid}\n                  arenaNo={arenaNo}\n                  tokenId={player.tokenId}\n                />\n              </div>\n              <div className=\"column\">\n                <button\n                  onClick={onClose}\n                  className=\"button is-light is-fullwidth\"\n                >\n                  Close\n                </button>\n              </div>\n              {connectedWallet &&\n              connectedWallet.account.address === player.gameOwner ? (\n                <div className=\"column\">\n                  <LeaveButton\n                    setTxid={setTxid}\n                    arenaNo={arenaNo}\n                    tokenId={player.tokenId}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default PlayerModal;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { NFTContract } from \"../../../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toast } from \"react-hot-toast\";\n\ninterface INFTListModalModal {\n  arenaNo: string;\n  onClose: () => void;\n}\nconst NFTListModal = ({ arenaNo, onClose }: INFTListModalModal) => {\n  const [txid, setTxid] = useState(\"\");\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n\n  const onRegister = async (tokenId: string) => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).register(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        {txid ? (\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n          />\n        ) : (\n          <div>\n            <div className=\"block\">\n              <h5 className=\"title is-5\">Select a NFT to send to the ARENA</h5>\n            </div>\n            <div>\n              {isLoading ? (\n                <div>Loading..</div>\n              ) : error ? (\n                <div>{error}</div>\n              ) : tokens.length > 0 ? (\n                <div\n                  style={{\n                    flexFlow: \"wrap\",\n                  }}\n                  className=\"is-flex\"\n                >\n                  {tokens.map((token) => {\n                    return (\n                      <figure\n                        key={token.tokenId}\n                        // style={{ width, height }}\n                        className=\"image is-64x64\"\n                        onClick={() => onRegister(token.tokenId)}\n                      >\n                        <img src={token.image} />\n                      </figure>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div>You don't have runes</div>\n              )}\n            </div>\n          </div>\n        )}\n      </>\n    </Modal>\n  );\n};\n\nexport default NFTListModal;\n","import React, { useState } from \"react\";\nimport NFTListModal from \"./NFTListModal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\n\ninterface IRegisterButtonProps {\n  arenaNo: string;\n  playerCount: number;\n}\nconst RegisterButton = ({ arenaNo, playerCount }: IRegisterButtonProps) => {\n  const [modalActive, setModalActive] = useState(false);\n  const { connectedWallet } = useWallet();\n  const onPickModal = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Connect your wallet.\");\n    }\n  };\n  return (\n    <>\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title\">Players</h1>\n          </div>\n        </div>\n\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <button\n              disabled={playerCount === parseFloat(arenaNo)}\n              className=\"button is-primary press-font\"\n              onClick={onPickModal}\n            >\n              Register ({playerCount}/{arenaNo})\n            </button>\n          </div>\n        </div>\n      </div>\n      {modalActive && connectedWallet && (\n        <NFTListModal arenaNo={arenaNo} onClose={() => setModalActive(false)} />\n      )}\n    </>\n  );\n};\n\nexport default RegisterButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport DisplayRuneWithProperties from \"../../../components/DisplayRuneWithProperties\";\nimport PlayerModal from \"./components/PlayerModal\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport RegisterButton from \"./components/ArenaRegisterButton\";\n\nconst Players = ({ arenaNo, gameNo }: { arenaNo: string; gameNo?: number }) => {\n  const [playerModalActive, setPlayerModalActive] = useState<\n    IRuneMeta & { tokenId: string; gameOwner: string }\n  >();\n\n  const onPlayerModalActive = (obj) => setPlayerModalActive(obj);\n  const [players, setPlayers] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getPlayers(arenaNo);\n        setPlayers(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network, arenaNo, gameNo]);\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          <RegisterButton playerCount={players.length} arenaNo={arenaNo} />\n          {players.length > 0 ? (\n            <div className=\"columns is-multiline is-mobile\">\n              {players.map(({ tokenId, owner }) => {\n                return (\n                  <div\n                    key={tokenId}\n                    className=\"column is-1-desktop is-3-mobile\"\n                  >\n                    <DisplayRuneWithProperties\n                      key={tokenId}\n                      width={\"100%\"}\n                      height={\"100%\"}\n                      tokenId={tokenId}\n                      network={network}\n                      isOwner={\n                        connectedWallet\n                          ? connectedWallet.account.address === owner\n                          : false\n                      }\n                      onClick={(obj: any) =>\n                        onPlayerModalActive({ ...obj, gameOwner: owner })\n                      }\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div>No players</div>\n          )}\n        </div>\n      )}\n      {playerModalActive && (\n        <PlayerModal\n          arenaNo={arenaNo}\n          gameNo={gameNo}\n          onClose={() => setPlayerModalActive(undefined)}\n          player={playerModalActive}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Players;\n","import React from \"react\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IPlayerModalProps {\n  rune: IRuneMeta;\n  onClose: () => void;\n}\nconst NFTDetailModal = ({ rune, onClose }: IPlayerModalProps) => {\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <img src={rune.image} />\n        </div>\n        <div className=\"column\">\n          <div className=\"content\">\n            <strong>Name</strong>\n            <br />\n            <p>{rune.name}</p>\n            <strong>Phase</strong>\n            <p>{rune.phase}</p>\n            <strong>Luck</strong>\n            <p>{rune.luck}</p>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NFTDetailModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { IHistoryGame } from \"../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport { calculateClaimableAmount } from \"../../../../packages/neo/contracts/ftw/tournament/helpers\";\n\ninterface IClaimButtonProps {\n  arenaNo: string;\n  history: IHistoryGame;\n  onClaimed: (txid: string) => void;\n}\nconst ClaimButton = ({ arenaNo, history, onClaimed }: IClaimButtonProps) => {\n  const [status, setStatus] = useState<any>({\n    betAmount: 0,\n    isClaimed: false,\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).claim(\n          connectedWallet,\n          arenaNo,\n          history.gameNo\n        );\n        addPendingTransaction(res);\n        onClaimed(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  useEffect(() => {\n    async function fetchBetAmount(address: string) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetAmount(\n          arenaNo,\n          history.gameNo,\n          history.champion,\n          address\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchBetAmount(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network, history]);\n  if (!connectedWallet) return <></>;\n\tif (history.betsOnChampion === \"0\") return <></>;\n  if (!status.betAmount) return <></>;\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {status.isClaimed ? (\n            <button disabled={true} className=\"button is-info is-fullwidth\">\n              Claimed\n            </button>\n          ) : (\n            <button className=\"button is-info is-fullwidth\" onClick={onClaim}>\n              Claim {calculateClaimableAmount(history, status.betAmount)} GAS\n            </button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ClaimButton;\n","import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaPlay } from \"react-icons/fa\";\nimport { NFTContract } from \"../../../../../../packages/neo/contracts\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { INetworkType } from \"../../../../../../packages/neo/network\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport ClaimButton from \"../../../components/ClaimButton\";\nimport { toDecimal } from \"../../../../../../packages/neo/utils\";\n\ninterface IDisplayRuneProps {\n  history: IHistoryGame;\n  arenaNo: string;\n  width: string;\n  height: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n  onReplay: () => void;\n  onClaimed: (txid: string) => void;\n}\n\nconst HistoryTable = ({\n  history,\n  arenaNo,\n  width,\n  height,\n  network,\n  onClick,\n  onReplay,\n  onClaimed,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(\n          history.champion\n        );\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [history]);\n  if (!token) return <></>;\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        {\" \"}\n        <figure\n          style={{ width, height }}\n          className=\"image rune\"\n          onClick={() => onClick(token)}\n        >\n          <img src={token.image} />\n        </figure>\n      </div>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          Game #{history.gameNo}\n          <br />\n          Champ: {token.name} ({token.phase} / {token.luck})\n          <br />\n          {history.champOwner && (\n            <>\n              Champ address: {history.champOwner} <br />\n            </>\n          )}\n          Total supports: {toDecimal(history.totalBets)}GAS\n          <br />\n          Rollover: {toDecimal(history.rollover)}GAS\n          <br />\n          Total supports on champ: {toDecimal(history.betsOnChampion)}GAS\n          <br />\n          Champ reward: {toDecimal(history.championPrize)}GAS\n          <br />\n          Operation reward: {toDecimal(history.fee)}GAS\n        </div>\n        <button onClick={() => onReplay()} className=\"button is-black is-small\">\n          <span className=\"icon\">\n            <FaPlay />\n          </span>\n          <span>Replay</span>\n        </button>\n      </div>\n      <div className=\"media-right\">\n        <div>\n          <ClaimButton\n            onClaimed={onClaimed}\n            arenaNo={arenaNo}\n            history={history}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryTable;\n","// Game formula was changed from game 5 except arena 4 and 2;\nexport const fight = (aPhase, aLuck, bPhase, bLuck, nonce, gameNo) => {\n  gameNo = parseFloat(gameNo);\n  aLuck = parseFloat(aLuck);\n  bLuck = parseFloat(bLuck);\n  nonce = parseFloat(nonce);\n  if (aPhase === bPhase) {\n    return compareLuck(aLuck, bLuck, nonce);\n  }\n\n  switch (aPhase) {\n    case \"Fire\":\n      switch (bPhase) {\n        case \"Metal\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Wood\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Earth\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Water\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Water\":\n      switch (bPhase) {\n        case \"Fire\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Metal\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Wood\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Earth\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Wood\":\n      switch (bPhase) {\n        case \"Earth\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Water\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Fire\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Metal\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Earth\":\n      switch (bPhase) {\n        case \"Water\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Fire\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Metal\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Wood\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Metal\":\n      switch (bPhase) {\n        case \"Wood\":\n          aLuck = aLuck + 5;\n          break;\n        case \"Earth\":\n          aLuck = aLuck + 3;\n          break;\n        case \"Water\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Fire\":\n          aLuck = aLuck - 5;\n          break;\n        case \"Dark\":\n          aLuck = aLuck - 3;\n          break;\n        case \"Light\":\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Dark\":\n      switch (bPhase) {\n        case \"Light\":\n          // Formula changed from Game#5\n          aLuck = aLuck - (gameNo > 4 ? 5 : 3);\n          break;\n        default:\n          aLuck = aLuck + 3;\n          break;\n      }\n      break;\n    case \"Light\":\n      switch (bPhase) {\n        case \"Dark\":\n          // Formula changed from Game#5\n          aLuck = aLuck + (gameNo > 4 ? 5 : 3);\n          break;\n        default:\n          aLuck = aLuck - 3;\n          break;\n      }\n      break;\n  }\n  return compareLuck(aLuck, bLuck, nonce);\n};\n\nconst compareLuck = (aLuck, bLuck, nonce) => {\n  if (aLuck > bLuck) {\n    return \"A\";\n  } else if (bLuck > aLuck) {\n    return \"B\";\n  } else {\n    // tslint:disable-next-line:no-unused-expression\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    return nonce % 2 === 0 ? \"A\" : \"B\";\n  }\n  // else\n  // {\n  // \tvar tx = (Transaction)Runtime.ScriptContainer;\n  // \treturn tx.Nonce % 2 == 0 ? \"A\" : \"B\";\n  // }\n};\n","import React from \"react\";\nimport { IPlayer } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport DisplayRuneWithProperties from \"../../../components/DisplayRuneWithProperties\";\nimport { fight } from \"../helpers\";\nimport { useWallet } from \"../../../../../../packages/provider\";\n\ninterface ITournamentTree {\n  gameNo: string;\n  champ: string;\n  nonce: string;\n  tree: IPlayer[];\n  onClick: (obj) => void;\n}\n\nfunction* chunks(arr, n) {\n  for (let i = 0; i < arr.length; i += n) {\n    yield arr.slice(i, i + n);\n  }\n}\n\nconst TournamentTree = ({\n  gameNo,\n  onClick,\n  champ,\n  tree,\n  nonce,\n}: ITournamentTree) => {\n  const { network } = useWallet();\n\n  let capacity = tree.length;\n  let stage: IPlayer[] = tree;\n  let winners: IPlayer[] = [];\n  let match: IPlayer[] = [];\n  let rounds: any[] = [];\n  while (capacity >= 2) {\n    for (let i = 0; i < capacity; i++) {\n      match.push(stage[i]);\n      if (match.length === 2) {\n        const res = fight(\n          match[0].phase,\n          match[0].luck,\n          match[1].phase,\n          match[1].luck,\n          nonce,\n          gameNo\n        );\n        if (res === \"A\") {\n          winners.push(match[0]);\n        } else {\n          winners.push(match[1]);\n        }\n        match = [];\n      }\n    }\n    // @ts-ignore\n    rounds.push([...chunks(stage, 2)]);\n    stage = winners;\n    winners = [];\n    capacity = capacity / 2;\n  }\n  rounds = rounds.reverse();\n\n  return (\n    <>\n      <div className=\"is-flex mb-5\" style={{ justifyContent: \"safe center\" }}>\n        <DisplayRuneWithProperties\n          network={network}\n          onClick={(obj) => {\n            onClick(obj);\n          }}\n          width={\"128px\"}\n          height={\"128px\"}\n          tokenId={champ}\n        />\n      </div>\n      {rounds.map((arena) => {\n        return (\n          <div className=\"is-flex mb-5\" style={{ justifyContent: \"center\" }}>\n            {arena.map((arr, i) => {\n              const winner = fight(\n                arr[0].phase,\n                arr[0].luck,\n                arr[1].phase,\n                arr[1].luck,\n                nonce,\n                gameNo\n              );\n              return (\n                <div\n                  className={`is-flex ${arena.length - 1 !== i ? \"mr-5\" : \"\"} `}\n                >\n                  <div style={{ opacity: winner === \"A\" ? \"1\" : \"0.3\" }}>\n                    <DisplayRuneWithProperties\n                      network={network}\n                      onClick={(obj) => {\n                        onClick(obj);\n                      }}\n                      width={\"32px\"}\n                      height={\"32px\"}\n                      tokenId={arr[0].tokenId}\n                    />\n                  </div>\n                  <div style={{ opacity: winner === \"B\" ? \"1\" : \"0.3\" }}>\n                    <DisplayRuneWithProperties\n                      network={network}\n                      onClick={(obj) => {\n                        onClick(obj);\n                      }}\n                      width={\"32px\"}\n                      height={\"32px\"}\n                      tokenId={arr[1].tokenId}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default TournamentTree;\n","import React from \"react\";\nimport TournamentTree from \"./TournamentTree\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\n\ninterface IReplayProps {\n  arenaNo: string;\n  gameHistory: IHistoryGame;\n  onClick: (obj) => void;\n  onClose: () => void;\n}\nconst Replay = ({ arenaNo, gameHistory, onClick, onClose }: IReplayProps) => {\n  return (\n    <div className=\"modal is-active\">\n      <div\n        className=\"modal-background\"\n        onClick={onClose}\n        style={{ backgroundColor: \"black\" }}\n      />\n      <h1\n        className=\"title has-text-white\"\n        style={{ position: \"absolute\", top: \"20px\", left: \"20px\" }}\n      >\n        ARENA {arenaNo}\n      </h1>\n      <section className=\"modal-content\" style={{ width: \"100%\" }}>\n        <TournamentTree\n          // Game formula was changed from game 5 except arena 4 and 2;\n          gameNo={parseFloat(arenaNo) < 8 ? \"5\" : gameHistory.gameNo}\n          champ={gameHistory.champion}\n          tree={gameHistory.tournamentTree}\n          nonce={gameHistory.nonce}\n          onClick={onClick}\n        />\n      </section>\n      <button\n        className=\"modal-close is-large\"\n        aria-label=\"close\"\n        onClick={onClose}\n      />\n    </div>\n  );\n};\n\nexport default Replay;\n","import React, { useEffect, useState } from \"react\";\nimport Pagination from \"bulma-pagination-react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport NFTDetailModal from \"./NFTDetailModal\";\nimport HistoryTable from \"./HistoryTable\";\nimport Replay from \"./Replay\";\nimport AfterTransactionSubmitted from \"../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IHistoryProps {\n  arenaNo: string;\n}\nconst History = ({ arenaNo }: IHistoryProps) => {\n  const [claimTxid, setClaimTxid] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [nftModalActive, setNftModalActive] = useState();\n  const [replayModalActive, setReplayModalActive] = useState();\n  const [history, setHistory] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const onNFTModalActive = (obj) => setNftModalActive(obj);\n  const onReplayModalActive = (obj) => setReplayModalActive(obj);\n\n  useEffect(() => {\n    async function fetchHistory() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).history(\n          arenaNo,\n          page\n        );\n        setHistory(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchHistory();\n  }, [connectedWallet, network, page]);\n\n  let totalPages = 0;\n  if (history) {\n    const itemsPerPage = parseFloat(arenaNo) >= 64 ? 2 : 5;\n    totalPages = Math.ceil(history.totalItems / itemsPerPage);\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <div className=\"box\">\n            <h3 className=\"title\">History</h3>\n            {history.items && history.items.length > 0 ? (\n              history.items.map((game) => {\n                return (\n                  <HistoryTable\n                    key={game.gameNo}\n                    width={\"64px\"}\n                    height={\"64px\"}\n                    history={game}\n                    arenaNo={arenaNo}\n                    network={network}\n                    onClick={(obj) => {\n                      onNFTModalActive(obj);\n                    }}\n                    onReplay={() => onReplayModalActive(game)}\n                    onClaimed={setClaimTxid}\n                  />\n                );\n              })\n            ) : (\n              <div>Game hasn't been played</div>\n            )}\n            {totalPages > 1 && (\n              <div className=\"media\">\n                <div className=\"media-content\">\n                  <Pagination\n                    pages={totalPages}\n                    currentPage={page}\n                    onChange={(_page) => {\n                      if (page !== _page) {\n                        setPage(_page);\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      {nftModalActive && (\n        <NFTDetailModal\n          rune={nftModalActive}\n          onClose={() => setNftModalActive(undefined)}\n        />\n      )}\n\n      {replayModalActive && (\n        <Replay\n          arenaNo={arenaNo}\n          gameHistory={replayModalActive}\n          onClick={(obj) => {\n            onNFTModalActive(obj);\n          }}\n          onClose={() => setReplayModalActive(undefined)}\n        />\n      )}\n\n      {claimTxid && (\n        <Modal onClose={() => setClaimTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={claimTxid}\n            network={network}\n            onSuccess={() => setClaimTxid(\"\")}\n            onError={() => setClaimTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default History;\n","import React, { useEffect, useState } from \"react\";\nimport Banner from \"./Banner\";\nimport PageLayout from \"../../../../components/PageLayout\";\nimport { ARENA_PATH } from \"../../pageRoutes\";\nimport { Route, useLocation } from \"react-router-dom\";\nimport Players from \"./Players\";\nimport History from \"./History\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../packages/neo/contracts/ftw/tournament\";\n\nconst Arena = (props) => {\n  const location = useLocation();\n  const { arenaNo } = props.match.params;\n  const [status, setStatus] = useState<{\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  }>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchBetAmount() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getCurrentPrize(\n          arenaNo\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchBetAmount();\n  }, [network, location.pathname]);\n  return (\n    <div>\n      <Banner pathname={location.pathname} status={status} arenaNo={arenaNo} />\n      {React.useMemo(() => {\n        return (\n          <PageLayout>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : (\n              <>\n                <Route\n                  exact\n                  path={ARENA_PATH}\n                  component={() => (\n                    <Players\n                      arenaNo={arenaNo}\n                      gameNo={status ? status.gameNo : undefined}\n                    />\n                  )}\n                />\n                <Route\n                  path={ARENA_PATH + \"/history\"}\n                  component={() => <History arenaNo={arenaNo} />}\n                />\n              </>\n            )}\n          </PageLayout>\n        );\n      }, [status, isLoading])}\n    </div>\n  );\n};\n\nexport default Arena;\n","import React, { useEffect } from \"react\";\nimport { ARENA_PATH } from \"./pageRoutes\";\nimport { Route } from \"react-router-dom\";\nimport ArenaMenu from \"./scenes/Home\";\nimport Arena from \"./scenes/Arena\";\nimport { TOURNAMENT_PATH } from \"../../../consts\";\n\nconst Tournament = () => {\n  useEffect(() => {\n    document.title = \"Forthewin Arena: NFT tournament on NEO\";\n  }, []);\n  return (\n    <section>\n      <Route exact={true} path={TOURNAMENT_PATH} component={ArenaMenu} />\n      <Route path={ARENA_PATH} component={Arena} />\n    </section>\n  );\n};\n\nexport default Tournament;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {SWAP_PATH, SWAP_PATH_FARM, SWAP_PATH_LIQUIDITY} from \"../../../../../consts\";\n\nconst NavSwitch = (props) => {\n  const location = useLocation();\n  return (\n    <div className=\"tabs is-toggle\">\n      <ul>\n        <li\n          className={\n            location.pathname === SWAP_PATH\n              ? \"is-active\"\n              : \"has-background-white\"\n          }\n        >\n          <Link to={SWAP_PATH}>Swap</Link>\n        </li>\n        <li\n          className={\n            location.pathname === SWAP_PATH_LIQUIDITY\n              ? \"is-active\"\n              : \"has-background-white\"\n          }\n        >\n          <Link to={SWAP_PATH_LIQUIDITY}>Liquidity</Link>\n        </li>\n        <li\n          className={\n            location.pathname === SWAP_PATH_FARM\n              ? \"is-active\"\n              : \"has-background-white\"\n          }\n        >\n          <Link to={SWAP_PATH_FARM}>Farm</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default NavSwitch;\n","import React from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown, FaQuestionCircle } from \"react-icons/all\";\nimport NumberFormat from \"react-number-format\";\n\ninterface IInputProps {\n  asset?: {\n    symbol: string;\n    logo: string;\n  };\n  val: string;\n  heading?: string;\n  isLoading?: boolean;\n  setValue: (val: string, e: any) => void;\n  onClickAsset: () => void;\n  isReadOnly?: boolean;\n  userBalance?: string;\n}\nconst Input = ({\n  asset,\n  val,\n  heading,\n  setValue,\n  onClickAsset,\n  isLoading,\n  isReadOnly,\n  userBalance,\n}: IInputProps) => {\n  return (\n    <div className=\"\">\n      <div className=\"columns\">\n        <div className=\"column is-narrow\">\n          <div style={{ width: \"150px\" }}>\n            <div\n              className=\"media\"\n              style={{ alignItems: \"center\", display: \"flex\" }}\n            >\n              <div className=\"media-left\">\n                <div\n                  onClick={onClickAsset}\n                  style={{\n                    width: \"50px\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                  className=\"image is-clickable is-flex\"\n                >\n                  {asset ? (\n                    <img src={asset.logo} />\n                  ) : (\n                    <FaQuestionCircle size={35} />\n                  )}\n                </div>\n              </div>\n              <div\n                onClick={onClickAsset}\n                className=\"media-content is-clickable\"\n              >\n                {heading && <p className=\"heading\">{heading}</p>}\n                <div style={{ alignItems: \"center\", display: \"flex\" }}>\n                  <span className=\"has-text-weight-bold\">\n                    {asset ? asset.symbol : \"Select\"}\n                  </span>\n                  <span className=\"icon\">\n                    <FaAngleDown />\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <div className={`control ${isLoading ? \"is-loading\" : \"\"}`}>\n            <NumberFormat\n              readOnly={isReadOnly}\n              // ref={this.props, inputRef}\n              // decimalScale={0}\n              inputMode=\"decimal\"\n              className=\"input\"\n              value={val}\n              onValueChange={(value, e) => {\n                if (e.source === \"event\") {\n                  setValue(value.value, e.event);\n                }\n              }}\n              thousandSeparator={true}\n              suffix={asset ? \" \" + asset.symbol : \"\"}\n              allowLeadingZeros={false}\n              // format={(val) => {} }\n            />\n            {userBalance ? (\n              <div className=\"level is-mobile\">\n                <div className=\"level-left\">\n                  <small className=\"is-size-7\">\n                    <div className=\"level-item\">Balance</div>\n                  </small>\n                </div>\n\n                <div className=\"level-right\">\n                  <div className=\"level-item\">\n                    <small className=\"is-size-7\">\n                      {userBalance} {asset && asset.symbol}\n                    </small>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport Modal from \"../../../../components/Modal\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { ASSETS } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\ninterface IAssetListModalProps {\n  tokenA?: string;\n  tokenB?: string;\n  onClose: () => void;\n  onAssetClick: (assetHash: string) => void;\n}\nconst AssetListModal = ({\n  tokenA,\n  tokenB,\n  onAssetClick,\n  onClose,\n}: IAssetListModalProps) => {\n  const { network } = useWallet();\n  const assets = ASSETS(network).filter((asset) => {\n    return asset.contractHash !== tokenA && asset.contractHash !== tokenB;\n  });\n  return (\n    <Modal onClose={onClose}>\n      <div>\n        <h5 className=\"title is-6\">Select a token</h5>\n        <nav className=\"panel\">\n          {/*<div className=\"panel-block\">*/}\n          {/*  <p className=\"control has-icons-left\">*/}\n          {/*    <input className=\"input\" type=\"text\" placeholder=\"Search\" />*/}\n          {/*    <span className=\"icon is-left\">*/}\n          {/*      <i className=\"fas fa-search\" aria-hidden=\"true\"></i>*/}\n          {/*    </span>*/}\n          {/*  </p>*/}\n          {/*</div>*/}\n\n          {assets.length > 0 ? (\n            assets.map(({ contractHash, logo, symbol }) => {\n              return (\n                <a\n                  onClick={() => onAssetClick(contractHash)}\n                  className=\"panel-block\"\n                  key={contractHash}\n                >\n                  <div className=\"panel-icon\">\n                    <img src={logo} />\n                  </div>\n                  {symbol}\n                </a>\n              );\n            })\n          ) : (\n            <div className=\"panel-block\">No available token to pick</div>\n          )}\n        </nav>\n      </div>\n    </Modal>\n  );\n};\n\nexport default AssetListModal;\n","import React, { useEffect, useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport { GAS_SCRIPT_HASH } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport {\n  FTW_SCRIPT_HASH,\n  SwapContract,\n} from \"../../../../../packages/neo/contracts\";\nimport AssetListModal from \"../../components/AssetListModal\";\nimport { toast } from \"react-hot-toast\";\nimport { getEstimate } from \"../../../../../packages/neo/contracts/ftw/swap/helpers\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExchangeAlt } from \"react-icons/all\";\nimport { toDecimal } from \"../../../../../packages/neo/utils\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\n\nconst Liquidity = (props) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [isAssetChangeModalActive, setAssetChangeModalActive] = useState<\n    \"A\" | \"B\" | \"\"\n  >(\"\");\n  const [tokenA, setTokenA] = useState<any>(FTW_SCRIPT_HASH[network]);\n  const [amountA, setAmountA] = useState(\"\");\n  const [tokenB, setTokenB] = useState<any>();\n  const [amountB, setAmountB] = useState(\"\");\n  const [reserve, setReserve] = useState<any>();\n  const [isPairLoading, setPairLoading] = useState(false);\n\n  const onAssetChange = (type: \"A\" | \"B\" | \"\") => {\n    setAssetChangeModalActive(type);\n  };\n  const onAssetClick = (assetHash) => {\n    if (isAssetChangeModalActive === \"A\") {\n      setTokenA(assetHash);\n    } else {\n      setTokenB(assetHash);\n    }\n    setAssetChangeModalActive(\"\");\n  };\n\n  const onAddLiquidity = async () => {\n    if (connectedWallet) {\n      if (tokenA && tokenB && amountA && amountB) {\n        try {\n          const res = await new SwapContract(network).provide(\n            connectedWallet,\n            tokenA,\n            amountA,\n            tokenB,\n            amountB\n          );\n        } catch (e: any) {\n          toast.error(e.description ? e.description : e.message);\n        }\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onTokenAAmountChange = (type: \"A\" | \"B\", val: string) => {\n    if (type === \"A\") {\n      if (tokenB && reserve && reserve[tokenA] !== 0 && reserve[tokenB] !== 0) {\n        const estimated = getEstimate(val, reserve[tokenA], reserve[tokenB]);\n        setAmountB(estimated.toString());\n      }\n      setAmountA(val);\n    } else {\n      if (\n        tokenA &&\n        tokenB &&\n        reserve &&\n        reserve[tokenA] !== 0 &&\n        reserve[tokenB] !== 0\n      ) {\n        const estimated = getEstimate(val, reserve[tokenB], reserve[tokenA]);\n        setAmountA(estimated.toString());\n      }\n      setAmountB(val);\n    }\n  };\n\n  const onSwitch = () => {\n    setTokenB(tokenA);\n    setTokenA(tokenB ? tokenB : \"\");\n    setAmountB(amountA);\n    setAmountA(amountB);\n  };\n\n  useEffect(() => {\n    async function fetchPair(A, B) {\n      try {\n        setPairLoading(true);\n        const res = await new SwapContract(network).getPair(\n          A,\n          B,\n          connectedWallet\n        );\n        setPairLoading(false);\n        setReserve(res);\n        console.log(res);\n        if (\n          tokenA &&\n          tokenB &&\n          amountA &&\n          !amountB &&\n          res[tokenA] !== 0 &&\n          res[tokenB] !== 0\n        ) {\n          // @ts-ignore\n          const estimated = getEstimate(amountA, res[tokenA], res[tokenB]);\n          console.log(estimated);\n          setAmountB(estimated.toString());\n        }\n        if (\n          tokenA &&\n          tokenB &&\n          amountB &&\n          !amountA &&\n          res[tokenA] !== 0 &&\n          res[tokenB] !== 0\n        ) {\n          // @ts-ignore\n          const estimated = getEstimate(amountB, res[tokenB], res[tokenA]);\n          setAmountA(estimated.toString());\n        }\n      } catch (e: any) {\n        console.log(e);\n        // setError(e.message);\n      }\n    }\n    if (tokenA && tokenB) {\n      fetchPair(tokenA, tokenB);\n    }\n  }, [tokenA, tokenB]);\n\n  // let tokenBofA = 0;\n  // let tokenAofB = 0;\n  //\n  // if (tokenA && tokenB && amountA && amountB && pairInfo) {\n  //   const reservedA = pairInfo[tokenA];\n  //   const reservedB = pairInfo[tokenB];\n  //   tokenBofA =\n  //     (parseFloat(\"100000000\") * parseFloat(reservedB)) / parseFloat(reservedA);\n  //   tokenBofA = Math.floor(tokenBofA);\n  //   tokenBofA = toDecimal(tokenBofA.toString());\n  //\n  //   tokenAofB =\n  //     (parseFloat(\"100000000\") * parseFloat(reservedA)) / parseFloat(reservedB);\n  //   tokenAofB = Math.floor(tokenAofB);\n  //   tokenAofB = toDecimal(tokenAofB.toString());\n  // }\n  const noLiquidity = reserve && reserve[tokenA] === 0 && reserve[tokenB] === 0;\n  return (\n    <>\n      {noLiquidity && (\n        <div className=\"notification is-info\">\n          <strong>Liquidity Provider Rewards</strong>\n          <br />\n          Liquidity providers earn a 0.25% fee on all trades proportional to\n          their share of the pool. Fees are added to the pool, accrue in real\n          time and can be claimed by withdrawing your liquidity.\n        </div>\n      )}\n      <div className=\"is-relative\">\n        <Input\n          heading=\"Pair A\"\n          onClickAsset={() => onAssetChange(\"A\")}\n          asset={tokenA ? ASSET_LIST[network][tokenA] : undefined}\n          val={amountA}\n          setValue={(val, e) => onTokenAAmountChange(\"A\", val)}\n          userBalance={reserve ? reserve.balances[tokenA] : undefined}\n        />\n\n        <div className=\"pt-3 pb-3\">\n          <button onClick={onSwitch} className=\"button is-white\">\n            <FaExchangeAlt />\n          </button>\n        </div>\n\n        <Input\n          heading=\"Pair B\"\n          // isReadOnly={\n          //   pairInfo &&\n          //   tokenB &&\n          //   pairInfo[tokenA] !== \"0\" &&\n          //   pairInfo[tokenB] !== \"0\"\n          // }\n          isLoading={isPairLoading}\n          onClickAsset={() => onAssetChange(\"B\")}\n          asset={tokenB ? ASSET_LIST[network][tokenB] : undefined}\n          val={amountB}\n          setValue={(val, e) => onTokenAAmountChange(\"B\", val)}\n          userBalance={reserve && tokenB ? reserve.balances[tokenB] : undefined}\n        />\n\n        {connectedWallet ? (\n          tokenA && tokenB && amountA && amountB ? (\n            <>\n              <hr />\n              {/*<div className=\"box\">*/}\n              {/*  {`${tokenBofA} ${ASSET_LIST[tokenB].symbol} per ${ASSET_LIST[tokenA].symbol}`}*/}\n              {/*  <br />*/}\n              {/*  {`${tokenAofB} ${ASSET_LIST[tokenA].symbol} per ${ASSET_LIST[tokenB].symbol}`}*/}\n              {/*</div>*/}\n              <button\n                disabled={\n                  reserve.balances[tokenA] < parseFloat(amountA) ||\n                  reserve.balances[tokenB] < parseFloat(amountB)\n                }\n                onClick={onAddLiquidity}\n                className=\"button is-fullwidth is-primary\"\n              >\n                Add Liquidity\n              </button>\n            </>\n          ) : (\n            <div />\n          )\n        ) : (\n          <>\n            <hr />\n            <button\n              onClick={openWalletModal}\n              className=\"button is-fullwidth is-primary\"\n            >\n              Connect wallet\n            </button>\n          </>\n        )}\n\n        {isAssetChangeModalActive && (\n          <AssetListModal\n            tokenA={tokenA}\n            tokenB={tokenB}\n            onAssetClick={onAssetClick}\n            onClose={() => setAssetChangeModalActive(\"\")}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Liquidity;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { GAS_SCRIPT_HASH } from \"../../../../../packages/neo/consts\";\nimport {\n  FTW_SCRIPT_HASH,\n  SwapContract,\n} from \"../../../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport { getEstimate } from \"../../../../../packages/neo/contracts/ftw/swap/helpers\";\nimport Input from \"../../components/Input\";\nimport AssetListModal from \"../../components/AssetListModal\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExchangeAlt } from \"react-icons/all\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport Modal from \"../../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../../packages/ui/AfterTransactionSubmitted\";\n\nconst Swap = () => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [isAssetChangeModalActive, setAssetChangeModalActive] = useState<\n    \"A\" | \"B\" | \"\"\n  >(\"\");\n  const [tokenA, setTokenA] = useState<any>(FTW_SCRIPT_HASH[network]);\n  const [amountA, setAmountA] = useState(\"\");\n  const [tokenB, setTokenB] = useState<any>();\n  const [amountB, setAmountB] = useState(\"\");\n  const [reserve, setReserve] = useState<any>();\n  const [isPairLoading, setPairLoading] = useState(false);\n  const [txid, setTxid] = useState(\"\");\n\n  const onAssetChange = (type: \"A\" | \"B\" | \"\") => {\n    setAssetChangeModalActive(type);\n  };\n\n  const onAssetClick = (assetHash) => {\n    if (isAssetChangeModalActive === \"A\") {\n      setTokenA(assetHash);\n      if (tokenB) {\n        loadPair(assetHash, tokenB);\n      }\n    } else {\n      setTokenB(assetHash);\n      if (tokenA) {\n        loadPair(tokenA, assetHash);\n      }\n    }\n    setAssetChangeModalActive(\"\");\n  };\n\n  const onTokenAAmountChange = async (val: string) => {\n    setAmountA(val);\n    if (tokenB) {\n      const res = await new SwapContract(network).getEstimate(\n        tokenA,\n        tokenB,\n        tokenA,\n        val\n      );\n      console.log(res);\n      setAmountB(res as any);\n    }\n  };\n\n  const onSuccess = () => {\n    setAmountA(\"0\");\n    setAmountB(\"0\");\n    setTxid(\"\");\n  };\n\n  const onSwap = async () => {\n    if (connectedWallet) {\n      if (tokenA && tokenB && amountA && amountB) {\n        try {\n          console.log(amountB);\n          const res = await new SwapContract(network).swap(\n            connectedWallet,\n            tokenA,\n            amountA,\n            tokenB,\n            amountB\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.description ? e.description : e.message);\n        }\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n  const onSwitch = () => {\n    setTokenB(tokenA);\n    setTokenA(tokenB ? tokenB : \"\");\n    setAmountB(amountA);\n    setAmountA(amountB);\n  };\n\n  const loadPair = async (A, B) => {\n    setPairLoading(true);\n    const res = await new SwapContract(network).getPair(A, B, connectedWallet);\n    setReserve(res);\n    setPairLoading(false);\n    if (amountA && res[tokenA] !== 0) {\n      // const estimated = await new SwapContract(network).getEstimate(\n      //   A,\n      //   B,\n      //   A,\n      //   amountA\n      // );\n      // console.log(estimated);\n      // @ts-ignore\n      const estimated = getEstimate(amountA, res[A], res[B]);\n      setAmountB(estimated ? estimated.toString() : \"0\");\n    }\n  };\n\n  // useEffect(() => {\n  //   async function fetchPair(A, B) {\n  //     try {\n  //       setPairLoading(true);\n  //       const res = await new SwapContract(network).getPair(\n  //         A,\n  //         B,\n  //         connectedWallet\n  //       );\n  //       setPairLoading(false);\n  //       setReserve(res);\n  //       if (amountA && res[tokenA] !== 0) {\n  //         // @ts-ignore\n  //         const estimated = getEstimate(amountA, res[A], res[B]);\n  //         setAmountB(estimated.toString());\n  //       }\n  //     } catch (e: any) {\n  //       // setError(e.message);\n  //     }\n  //   }\n  //   if (tokenA && tokenB) {\n  //     fetchPair(tokenA, tokenB);\n  //   }\n  // }, [network, tokenA, tokenB]);\n\n  // let tokenBofA = 0;\n  // let tokenAofB = 0;\n  //\n  // if (tokenA && tokenB && amountA && amountB && pairInfo) {\n  //   const reservedA = pairInfo[tokenA];\n  //   const reservedB = pairInfo[tokenB];\n  //   tokenBofA =\n  //     (parseFloat(\"100000000\") * parseFloat(reservedB)) / parseFloat(reservedA);\n  //   tokenBofA = Math.floor(tokenBofA);\n  //   tokenBofA = toDecimal(tokenBofA.toString());\n  //\n  //   tokenAofB =\n  //     (parseFloat(\"100000000\") * parseFloat(reservedA)) / parseFloat(reservedB);\n  //   tokenAofB = Math.floor(tokenAofB);\n  //   tokenAofB = toDecimal(tokenAofB.toString());\n  // }\n  const noLiquidity = reserve && reserve[tokenA] === 0 && reserve[tokenB] === 0;\n  return (\n    <div>\n      <>\n        {noLiquidity && (\n          <div className=\"notification is-danger\">\n            No liquidity with the pairs.\n          </div>\n        )}\n        <Input\n          heading=\"Swap From\"\n          onClickAsset={() => onAssetChange(\"A\")}\n          asset={tokenA ? ASSET_LIST[network][tokenA] : undefined}\n          val={amountA}\n          setValue={(val, e) => onTokenAAmountChange(val)}\n          userBalance={\n            connectedWallet && reserve ? reserve.balances[tokenA] : undefined\n          }\n        />\n        <div className=\"pt-3 pb-3\">\n          <button onClick={onSwitch} className=\"button is-white\">\n            <FaExchangeAlt />\n          </button>\n        </div>\n        <Input\n          isReadOnly={true}\n          heading=\"Swap To\"\n          isLoading={isPairLoading}\n          onClickAsset={() => onAssetChange(\"B\")}\n          asset={tokenB ? ASSET_LIST[network][tokenB] : undefined}\n          val={amountB}\n          // setValue={(val, e) => onTokenAAmountChange(\"B\", val, e)}\n          setValue={(val, e) => {\n            return false;\n          }}\n          userBalance={\n            connectedWallet && reserve ? reserve.balances[tokenB] : undefined\n          }\n        />\n\n        {connectedWallet ? (\n          tokenA && tokenB && amountA && amountB ? (\n            <>\n              {/*<div className=\"box\">*/}\n              {/*  {`${tokenBofA} ${ASSET_LIST[tokenB].symbol} per ${ASSET_LIST[tokenA].symbol}`}*/}\n              {/*  /!*<br />*!/*/}\n              {/*  /!*{`${tokenAofB} ${ASSET_LIST[tokenA].symbol} per ${ASSET_LIST[tokenB].symbol}`}*!/*/}\n              {/*</div>*/}\n              <hr />\n              <button\n                disabled={\n                  reserve.balances[tokenA] < parseFloat(amountA) ||\n                  reserve[tokenB] < parseFloat(amountB)\n                }\n                onClick={onSwap}\n                className=\"button is-fullwidth is-primary\"\n              >\n                Swap\n              </button>\n            </>\n          ) : (\n            <div />\n          )\n        ) : (\n          <>\n            <hr />\n            <button\n              onClick={openWalletModal}\n              className=\"button is-fullwidth is-primary\"\n            >\n              Connect wallet\n            </button>\n          </>\n        )}\n      </>\n\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onSuccess}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n\n      {isAssetChangeModalActive && (\n        <AssetListModal\n          tokenA={tokenA}\n          tokenB={tokenB}\n          onAssetClick={onAssetClick}\n          onClose={() => setAssetChangeModalActive(\"\")}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Swap;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../../../packages/neo/contracts\";\nimport { IConnectedWallet } from \"../../../../../../../packages/neo/wallet/interfaces\";\nimport { toast } from \"react-hot-toast\";\nimport { getUserShare } from \"../../../../../../../packages/neo/contracts/ftw/swap/helpers\";\nimport { ASSET_LIST } from \"../../../../../../../packages/neo/contracts/ftw/swap/consts\";\ninterface IFarmDetailProps {\n  tokenA: string;\n  tokenB: string;\n  amountA: string;\n  amountB: string;\n  connectedWallet: IConnectedWallet;\n}\nconst FarmDetail = ({ connectedWallet, tokenA, tokenB }: IFarmDetailProps) => {\n  const [data, setData] = useState<any>();\n  const [claimable, setClaimable] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const { network } = useWallet();\n\n  const onRemoveLiquidity = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SwapContract(network).remove(\n          connectedWallet,\n          tokenA,\n          tokenB\n        );\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SwapContract(network).claim(\n          connectedWallet,\n          tokenA,\n          tokenB\n        );\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      const res1 = await new SwapContract(network).getUserStake(\n        connectedWallet,\n        tokenA,\n        tokenB\n      );\n      const res2 = await new SwapContract(network).getClaimAble(\n        connectedWallet,\n        tokenA,\n        tokenB\n      );\n      setLoading(false);\n      setData(res1);\n      setClaimable(res2);\n    }\n    fetch();\n  }, []);\n  if (isLoading) return <div>Loading..</div>;\n  const userShare = data\n    ? getUserShare(\n        data.pair.totalShare,\n        data.stake.amountA,\n        data.pair.amountA,\n        data.pair.amountB\n      )\n    : undefined;\n  console.log(data ? \"original staking: \" + data.stake.amountA + \"/\" + data.stake.amountB : \"No staking info\");\n  return (\n    <div>\n      <h1 className=\"title is-5\">My liquidity</h1>\n      {data ? (\n        <div>\n          <div style={{ alignItems: \"center\" }} className=\"media\">\n            <div className=\"media-content is-vcentered\">\n              {ASSET_LIST[network][tokenA].symbol} /{\" \"}\n              {ASSET_LIST[network][tokenB].symbol}\n              <br />\n              <small>\n                {/*{data.stake.amountA} / {data.stake.amountB}*/}\n                {/*<br />*/}\n                {userShare ? userShare.amountA : 0} /{\" \"}\n                {userShare ? userShare.amountB : 0}\n              </small>\n            </div>\n            <div className=\"media-right\">\n              <button onClick={onRemoveLiquidity} className=\"button is-light\">\n                Remove\n              </button>\n            </div>\n          </div>\n          <hr />\n          <div style={{ alignItems: \"center\" }} className=\"media\">\n            <div className=\"media-content is-vcentered\">\n              Claimable\n              <br />\n              {ASSET_LIST[network][tokenA].symbol} /{\" \"}\n              {ASSET_LIST[network][tokenB].symbol}\n              <br />\n              <small>\n                {claimable ? claimable.amountA : 0} /{\" \"}\n                {claimable ? claimable.amountB : 0}\n              </small>\n            </div>\n            <div className=\"media-right\">\n              <button onClick={onClaim} className=\"button is-primary\">\n                Claim\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>There is no liquidity with your connected wallet</div>\n      )}\n    </div>\n  );\n};\n\nexport default FarmDetail;\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { GAS_SCRIPT_HASH } from \"../../../../../packages/neo/consts\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport { getEstimate } from \"../../../../../packages/neo/contracts/ftw/swap/helpers\";\nimport { toDecimal } from \"../../../../../packages/neo/utils\";\nimport Input from \"../../components/Input\";\nimport AssetListModal from \"../../components/AssetListModal\";\nimport Modal from \"../../../../components/Modal\";\nimport FarmDetail from \"./scenes/Detail\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\n\nconst Farm = (props) => {\n  const { network, connectedWallet } = useWallet();\n  const [list, setList] = useState<any[]>([]);\n  const [detail, setDetail] = useState();\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      try {\n        const res = await new SwapContract(network).getPairs();\n        console.log(res);\n        setLoading(false);\n        setList(res);\n      } catch (e: any) {\n        setLoading(false);\n        setError(e.message);\n      }\n    }\n    fetch();\n  }, []);\n  if (isLoading) return <div>Loading pairs..</div>;\n  return (\n    <div>\n      {list.map((item, i) => {\n        return (\n          <div\n            style={{ alignItems: \"center\" }}\n            className=\"media\"\n            key={\"pairs\" + i}\n          >\n            <div className=\"media-left\">\n              <strong>TVL</strong>\n            </div>\n            <div className=\"media-content is-vcentered\">\n              {ASSET_LIST[network][item.tokenA].symbol} /{\" \"}\n              {ASSET_LIST[network][item.tokenB].symbol}\n              <br />\n              <small>\n                {item.amountA} / {item.amountB}\n              </small>\n            </div>\n            <div className=\"media-right\">\n              <button\n                onClick={() => setDetail(item)}\n                className=\"button is-light\"\n              >\n                Detail\n              </button>\n            </div>\n          </div>\n        );\n      })}\n      {detail && connectedWallet && (\n        <Modal onClose={() => setDetail(undefined)}>\n          <div>\n            <FarmDetail connectedWallet={connectedWallet} {...detail} />\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Farm;\n","import React  from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport NavSwitch from \"./components/NavSwitch\";\nimport {\n  SWAP_PATH,\n  SWAP_PATH_FARM,\n  SWAP_PATH_LIQUIDITY,\n} from \"../../../consts\";\nimport { Route } from \"react-router-dom\";\nimport Liquidity from \"./scenes/Liquidity\";\nimport SwapBox from \"./scenes/Swap\";\nimport Farm from \"./scenes/Farm\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { MAINNET } from \"../../../packages/neo/consts\";\n\nconst Swap = (props) => {\n  const { network } = useWallet();\n  if (network === MAINNET)\n    return (\n      <PageLayout>\n        <div className=\"notification is-info\">\n          FTW Swap is not on Mainnet yet.{\" \"}\n        </div>\n      </PageLayout>\n    );\n  return (\n    <div>\n      <PageLayout>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-half\">\n            <NavSwitch />\n            <div className=\"box is-shadowless\">\n              <Route exact={true} path={SWAP_PATH} component={SwapBox} />\n              <Route path={SWAP_PATH_LIQUIDITY} component={Liquidity} />\n              <Route path={SWAP_PATH_FARM} component={Farm} />\n              {/*<NotifyError msg={error} onClose={() => setError(\"\")} />*/}\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Swap;\n","import React from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaQuestionCircle } from \"react-icons/all\";\ninterface IFusionBoxProps {\n  src: string;\n}\nconst FusionBox = ({ src }: IFusionBoxProps) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n\t      height: \"300px\"\n      }}\n      className=\"is-clickable\"\n    >\n      {src ? <img src={src} /> : <FaQuestionCircle />}\n    </div>\n  );\n};\n\nexport default FusionBox;\n","import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../components/Modal\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../packages/provider\";\n\ninterface INFTListModalModal {\n  onClick: (data: any) => void;\n  onClose: () => void;\n}\nconst RuneListModal = ({ onClick, onClose }: INFTListModalModal) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <div>\n          <div className=\"block\">\n            <h5 className=\"title is-5\">Select a Rune</h5>\n          </div>\n          <div>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : error ? (\n              <div>{error}</div>\n            ) : tokens.length > 0 ? (\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => onClick(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n            ) : (\n              <div>You don't have runes</div>\n            )}\n          </div>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default RuneListModal;\n","import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  stackItem.value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value;\n    switch (key) {\n      case \"owner\":\n        value = base64ToAddress(item.value.value);\n        break;\n      case \"attributes\":\n        value = parseProperties(item.value);\n        break;\n      default:\n        if (item.value.type === \"Integer\") {\n          value = item.value.value;\n        } else {\n          value = base64ToString(item.value.value);\n        }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","import { CONST } from \"../../../index\";\n\nexport const TTM_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"6112cdab35dbc101596ab940c9e741ada5b7c502\",\n  [CONST.TESTNET]: \"6112cdab35dbc101596ab940c9e741ada5b7c502\",\n  [CONST.MAINNET]: \"aa4fb927b3fe004e689a278d188689c9f050a8b2\",\n};\n","import { u } from \"@cityofzion/neon-core\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { parseProperties } from \"./helpers\";\nimport { TTM_SCRIPT_HASH } from \"./consts\";\nconst CRYPTONAUT_REGEX = /^C0/;\nexport class TTMNFTContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = TTM_SCRIPT_HASH[networkType];\n  }\n\n  static owner = TTM_SCRIPT_HASH;\n\n  getProperties = async (tokenId: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n\n    const res = await Network.read(this.network, [script]);\n    const properties = parseProperties(res.stack[0]);\n    return properties;\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      if (CRYPTONAUT_REGEX.test(tokenId)) {\n        const meta = await this.getProperties(tokenId);\n        // @ts-ignore\n        metaList.push({ tokenId, ...meta });\n      }\n    }\n    return metaList;\n  };\n}\nexport { TTM_SCRIPT_HASH } from \"./consts\";\n","import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport AfterTransactionSubmitted from \"../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../components/Modal\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TTMNFTContract } from \"../../../../packages/neo/contracts/ttm/nft\";\n\ninterface INFTListModalModal {\n  onClick: (data: any) => void;\n  onClose: () => void;\n}\nconst CryptonatuListModal = ({ onClick, onClose }: INFTListModalModal) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TTMNFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <div>\n          <div className=\"block\">\n            <h5 className=\"title is-5\">Select a Cryptonaut</h5>\n          </div>\n          <div>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : error ? (\n              <div>{error}</div>\n            ) : tokens.length > 0 ? (\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => onClick(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n            ) : (\n              <div>You don't have runes</div>\n            )}\n          </div>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default CryptonatuListModal;\n","import { CONST, wallet } from \"../../../index\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { parseProperties } from \"../../ttm/nft/helpers\";\nimport { u } from \"@cityofzion/neon-core\";\n\nexport const FUSE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"f88481099b58a7ddff6693098037b23476a9dcee\",\n  [CONST.TESTNET]: \"f88481099b58a7ddff6693098037b23476a9dcee\",\n  [CONST.MAINNET]: \"\",\n};\n\nexport class FusionContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FUSE_SCRIPT_HASH[networkType];\n  }\n\n  fuse = async (\n    connectedWallet: IConnectedWallet,\n    cryptonautTokenId: string,\n    runeTokenId: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"fuse\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"String\",\n          value: cryptonautTokenId,\n        },\n        {\n          type: \"String\",\n          value: runeTokenId,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      undefined,\n      undefined,\n      true\n    );\n  };\n\n  refund = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string,\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"refund\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      undefined,\n      undefined,\n      true\n    );\n  };\n\n  getProperties = async (tokenId: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n\n    const res = await Network.read(this.network, [script]);\n    return parseProperties(res.stack[0]);\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      const meta = await this.getProperties(tokenId);\n      // @ts-ignore\n      metaList.push({ tokenId, ...meta });\n    }\n    return metaList;\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { FusionContract } from \"../../../../packages/neo/contracts/ftw/fuse\";\nimport { toast } from \"react-hot-toast\";\nimport ModalCard from \"../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../packages/ui/AfterTransactionSubmitted\";\ninterface IFusedListProps {\n  onSubmitted: (txid: string) => void;\n  onReset: () => void;\n}\nconst FusedList = ({ onSubmitted, onReset }: IFusedListProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [detail, setDetail] = useState<any>();\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const [txid, setTxid] = useState(\"\");\n\n  const onRefund = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FusionContract(network).refund(\n          connectedWallet,\n          detail.tokenId\n        );\n        setDetail(false);\n        onSubmitted(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new FusionContract(network).getTokensOf(\n          connectedWallet ? connectedWallet.account.address : undefined\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n\n  return (\n    <>\n      <div>\n        <div>\n          {isLoading ? (\n            <div></div>\n          ) : error ? (\n            <div>{error}</div>\n          ) : tokens.length > 0 ? (\n            <>\n              <div className=\"block\">\n                <h5 className=\"title is-5\">Fused Cryptonaut</h5>\n              </div>\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => setDetail(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n              {detail ? (\n                <ModalCard onClose={() => setDetail(undefined)}>\n                  <>\n                    {txid ? (\n                      <AfterTransactionSubmitted\n                        network={network}\n                        txid={txid}\n                        onSuccess={() => {\n                          setDetail(undefined);\n                          setTxid(\"\");\n                        }}\n                        onError={() => setTxid(\"\")}\n                      />\n                    ) : (\n                      <div className=\"card\">\n                        <div className=\"card-image\">\n                          <figure className=\"image is-4by3\">\n                            <img src={detail.image} />\n                          </figure>\n                        </div>\n                        <div className=\"card-content\">\n                          <div className=\"media\">\n                            <div className=\"media-content\">\n                              <h1 className=\"title is-5\">Fused Cryptonaut</h1>\n                              <p className=\"subtitle is-7\">\n                                TokenId: {detail.tokenId}\n                              </p>\n                              <div className=\"field is-grouped is-grouped-multiline\">\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Element</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.element}\n                                    </span>\n                                  </div>\n                                </div>\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Phase</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.phase}\n                                    </span>\n                                  </div>\n                                </div>\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Luck</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.luck}\n                                    </span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"media-right\">\n                              <button\n                                onClick={onRefund}\n                                className=\"button is-danger\"\n                              >\n                                Un-Fuse\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </>\n                </ModalCard>\n              ) : (\n                <div></div>\n              )}\n            </>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FusedList;\n","import React, { useState } from \"react\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { MAINNET } from \"../../../packages/neo/consts\";\nimport PageLayout from \"../../components/PageLayout\";\nimport FusionBox from \"./components/FusionBox\";\nimport RuneListModal from \"./components/RuneListModal\";\nimport CryptonautListModal from \"./components/CryptonatuListModal\";\nimport { toast } from \"react-hot-toast\";\nimport { FusionContract } from \"../../../packages/neo/contracts/ftw/fuse\";\nimport FusedList from \"./components/FusedList\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\n\nconst Fusion = () => {\n  const { network, connectedWallet } = useWallet();\n  const [isTTMModalActive, setTTMModalActive] = useState(false);\n  const [isFTWModalActive, setFTWModalActive] = useState(false);\n  const [cryptonaut, setCryptonaut] = useState<any>();\n  const [rune, setRune] = useState<any>();\n  const [txid, setTxid] = useState(\"\");\n\n  const onFuse = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FusionContract(network).fuse(\n          connectedWallet,\n          cryptonaut.tokenId,\n          rune.tokenId\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  const onReset = () => {\n    setRune(undefined);\n    setCryptonaut(undefined);\n    setTxid(\"\");\n  };\n\n  if (network === MAINNET)\n    return (\n      <PageLayout>\n        <div className=\"notification is-info\">\n          Fusion is not on Mainnet yet.{\" \"}\n        </div>\n      </PageLayout>\n    );\n  return (\n    <div>\n      <PageLayout>\n        <div className=\"columns is-centered\">\n          <div className=\"column is-half\">\n            <h1 className=\"title has-text-centered\">FUSION</h1>\n            {txid ? (\n              <AfterTransactionSubmitted\n                network={network}\n                txid={txid}\n                onSuccess={onReset}\n                onError={() => setTxid(\"\")}\n              />\n            ) : (\n              <>\n                <div className=\"block\">\n                  <div className=\"columns\">\n                    <div className=\"column\">\n                      <div\n                        className=\"box\"\n                        onClick={() => setFTWModalActive(true)}\n                      >\n                        <FusionBox\n                          src={rune ? rune.image : \"logo/FTW_512_512.svg\"}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"column\">\n                      <div\n                        className=\"box\"\n                        onClick={() => setTTMModalActive(true)}\n                      >\n                        <FusionBox\n                          src={\n                            cryptonaut\n                              ? cryptonaut.image\n                              : \"assets/Cryptonaut.001.svg\"\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <button\n                    onClick={onFuse}\n                    className=\"is-primary button is-fullwidth\"\n                    disabled={!rune || !cryptonaut}\n                  >\n                    Fuse\n                  </button>\n                </div>\n                <div className=\"block\">\n                  <FusedList\n                    onSubmitted={(_txid: string) => setTxid(_txid)}\n                    onReset={onReset}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </PageLayout>\n      {isFTWModalActive && (\n        <RuneListModal\n          onClick={(data) => {\n            setRune(data);\n            setFTWModalActive(false);\n          }}\n          onClose={() => setFTWModalActive(false)}\n        />\n      )}\n      {isTTMModalActive && (\n        <CryptonautListModal\n          onClick={(data) => {\n            setCryptonaut(data);\n            setTTMModalActive(false);\n          }}\n          onClose={() => setTTMModalActive(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Fusion;\n","import React, { useEffect, useRef, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport DOTS from \"vanta/dist/vanta.halo.min\";\nimport PageLayout from \"../../components/PageLayout\";\n// import * as THREE from \"three\";\n\nconst Migration = (props) => {\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        DOTS({\n          el: myRef.current,\n          mouseControls: true,\n          touchControls: true,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          backgroundColor: 0x80822,\n          size: 2.8,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) {\n        // @ts-ignore\n        vantaEffect.destroy();\n      }\n    };\n  }, [vantaEffect]);\n  return (\n    <div>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-flex\" style={{ alignItems: \"center\" }}>\n                <div>\n                  <h1 className=\"title\">Forthewin is back</h1>\n                  <p className=\"subtitle\">\n                    Migrate your Neo-legacy FTX to the new <span>N3 FTW</span>\n                  </p>\n                  <a\n                    target=\"_blank\"\n                    href=\"https://nepmigration.com/\"\n                    className=\"button is-primary\"\n                  >\n                    Go to Migrate\n                  </a>\n                </div>\n              </div>\n              <div className=\"column is-hidden-touch\">\n                <div\n                  className=\"block\"\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    minHeight: \"300px\",\n                  }}\n                >\n                  <video style={{ width: \"400px\" }} autoPlay loop>\n                    <source src={\"/assets/migration.mp4\"} type=\"video/mp4\" />\n                  </video>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns halo\" ref={myRef}>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>Neo-legacy</h3>\n                <h6>Symbol</h6>\n                <p>FTX</p>\n                <h6>Contract hash</h6>\n                <p>0xaac66f9779ca67d819d05492805d251dab02fc7b</p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://neotracker.io/asset/aac66f9779ca67d819d05492805d251dab02fc7b\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>N3</h3>\n                <h6>Symbol</h6>\n                <p>FTW</p>\n                <h6>Contract hash</h6>\n                <p>\n                  <a\n                    target=\"_blank\"\n                    className=\"has-text-dark\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\n                  </a>\n                </p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://explorer.onegate.space/NEP17tokeninfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Migration;\n","import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ReactGa = () => {\n  const location = useLocation();\n  useEffect(() => {\n    ReactGA.pageview(location.pathname);\n  }, [location]);\n  return <div></div>;\n};\n\nexport default ReactGa;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport {\n  COLLECTION_PATH,\n  FARM_PATH,\n  FUSION_PATH,\n  GALLERY_PATH,\n  HOME_PATH,\n  MIGRATION_PATH,\n  SMITH_PATH,\n  SWAP_PATH,\n  TOURNAMENT_PATH,\n} from \"../consts\";\nimport { WalletContextProvider } from \"../packages/provider\";\nimport WalletSidebar from \"./components/WalletSidebar\";\nimport Farm from \"./pages/Farm\";\nimport { Toaster } from \"react-hot-toast\";\nimport MyCollection from \"./pages/MyCollection\";\nimport Gallery from \"./pages/Gallery\";\nimport MobileMenuSlider from \"./components/MobileMenuSlider\";\nimport Home from \"./pages/Home\";\nimport Smith from \"./pages/Smith\";\nimport Tournament from \"./pages/Tournament\";\nimport Swap from \"./pages/Swap\";\nimport Fusion from \"./pages/Fusion\";\nimport Migration from \"./pages/Migration\";\nimport ReactGa from \"./components/ReactGa\";\n\nReactGA.initialize(\"UA-114435339-1\");\n\nconst App = () => {\n  return (\n    <WalletContextProvider\n      options={{\n        useLocalStorage: true,\n        useDevWallet: process.env.NODE_ENV === \"development\",\n      }}\n    >\n      <Router>\n        <Toaster position=\"bottom-center\" />\n        <Header />\n        <Route exact path={HOME_PATH} component={Home} />\n        <Route path={GALLERY_PATH} component={Gallery} />\n        <Route path={TOURNAMENT_PATH} component={Tournament} />\n        <Route path={SMITH_PATH} component={Smith} />\n        <Route path={FARM_PATH} component={Farm} />\n        <Route path={COLLECTION_PATH} component={MyCollection} />\n        <Route path={SWAP_PATH} component={Swap} />\n        <Route path={FUSION_PATH} component={Fusion} />\n        <Route exact path={MIGRATION_PATH} component={Migration} />\n        <MobileMenuSlider />\n        <WalletSidebar />\n        <ReactGa />\n      </Router>\n    </WalletContextProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppCContextProvider } from \"./common/hooks/use-app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./styles/style.scss\";\nimport App from \"./ui\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppCContextProvider>\n      <App />\n    </AppCContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}