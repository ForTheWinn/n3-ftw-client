import { Query, GetNep17BalancesResult, GetNep17TransfersResult } from "../Query";
import { RpcDispatcher, RpcDispatcherMixin } from "./RpcDispatcher";
export declare function Nep17TrackerRpcMixin<TBase extends RpcDispatcherMixin>(base: TBase): {
    new (...args: any[]): {
        getNep17Transfers(accountIdentifier: string, startTime?: string | undefined, endTime?: string | undefined): Promise<GetNep17TransfersResult>;
        getNep17Balances(accountIdentifier: string): Promise<GetNep17BalancesResult>;
        url: string;
        execute<TResponse>(query: Query<unknown[], TResponse>, config?: import("./RpcDispatcher").RpcConfig | undefined): Promise<TResponse>;
    };
} & TBase;
declare const Nep17TrackerRpcClient_base: {
    new (...args: any[]): {
        getNep17Transfers(accountIdentifier: string, startTime?: string | undefined, endTime?: string | undefined): Promise<GetNep17TransfersResult>;
        getNep17Balances(accountIdentifier: string): Promise<GetNep17BalancesResult>;
        url: string;
        execute<TResponse>(query: Query<unknown[], TResponse>, config?: import("./RpcDispatcher").RpcConfig | undefined): Promise<TResponse>;
    };
} & typeof RpcDispatcher;
export declare class Nep17TrackerRpcClient extends Nep17TrackerRpcClient_base {
    get [Symbol.toStringTag](): string;
}
export {};
//# sourceMappingURL=Nep17TrackerRpcClient.d.ts.map