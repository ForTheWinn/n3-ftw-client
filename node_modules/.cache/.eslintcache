[{"/Users/ed/Projects/n3-ftw/client/src/index.tsx":"1","/Users/ed/Projects/n3-ftw/client/src/reportWebVitals.ts":"2","/Users/ed/Projects/n3-ftw/client/src/common/hooks/use-app.tsx":"3","/Users/ed/Projects/n3-ftw/client/src/ui/index.tsx":"4","/Users/ed/Projects/n3-ftw/client/src/common/hooks/use-responsive.ts":"5","/Users/ed/Projects/n3-ftw/client/src/ui/components/WalletSidebar.tsx":"6","/Users/ed/Projects/n3-ftw/client/src/ui/components/Header.tsx":"7","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Home.tsx":"8","/Users/ed/Projects/n3-ftw/client/src/ui/components/MobileMenuSlider.tsx":"9","/Users/ed/Projects/n3-ftw/client/src/consts/index.ts":"10","/Users/ed/Projects/n3-ftw/client/src/packages/provider/index.ts":"11","/Users/ed/Projects/n3-ftw/client/src/packages/neo/index.ts":"12","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/index.tsx":"13","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/index.tsx":"14","/Users/ed/Projects/n3-ftw/client/src/ui/components/SidebarNav.tsx":"15","/Users/ed/Projects/n3-ftw/client/src/ui/components/DisplayRandomRune.tsx":"16","/Users/ed/Projects/n3-ftw/client/src/ui/components/Logo.tsx":"17","/Users/ed/Projects/n3-ftw/client/src/consts/pageRoutes.ts":"18","/Users/ed/Projects/n3-ftw/client/src/packages/provider/wallet-provider.tsx":"19","/Users/ed/Projects/n3-ftw/client/src/ui/components/NotifyError.tsx":"20","/Users/ed/Projects/n3-ftw/client/src/ui/components/PageLayout.tsx":"21","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/Pool.tsx":"22","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ActionModal.tsx":"23","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotList.tsx":"24","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ClaimModal.tsx":"25","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/Claims.tsx":"26","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/CancelModal.tsx":"27","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/PropertiesModal.tsx":"28","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/DisplayRune.tsx":"29","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/index.tsx":"30","/Users/ed/Projects/n3-ftw/client/src/packages/ui/PendingTransaction/index.tsx":"31","/Users/ed/Projects/n3-ftw/client/src/packages/neo/wallet/index.ts":"32","/Users/ed/Projects/n3-ftw/client/src/packages/neo/network/index.ts":"33","/Users/ed/Projects/n3-ftw/client/src/packages/neo/consts/index.ts":"34","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/index.ts":"35","/Users/ed/Projects/n3-ftw/client/src/packages/neo/utils/index.ts":"36","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCountdown.tsx":"37","/Users/ed/Projects/n3-ftw/client/src/ui/components/Modal.tsx":"38","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/MyPosition.tsx":"39","/Users/ed/Projects/n3-ftw/client/src/ui/components/TransactionSubmitted.tsx":"40","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletList.tsx":"41","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletDropdown.tsx":"42","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/AssetCard.tsx":"43","/Users/ed/Projects/n3-ftw/client/src/packages/neo/wallet/dev-wallet.ts":"44","/Users/ed/Projects/n3-ftw/client/src/packages/neo/local-storage/index.ts":"45","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/helpers.ts":"46","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/index.ts":"47","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/index.ts":"48","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/helpers.ts":"49","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/consts.ts":"50","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/helpers.ts":"51","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/consts.ts":"52","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCard.tsx":"53","/Users/ed/Projects/n3-ftw/client/src/ui/components/WalletDropdown.tsx":"54","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/Runes.tsx":"55","/Users/ed/Projects/n3-ftw/client/src/ui/pages/MyCollection/index.tsx":"56","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/bank/index.ts":"57","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nep17/index.ts":"58","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/PositionModal.tsx":"59","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/About.tsx":"60","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/index.tsx":"61","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/index.ts":"62","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/consts.ts":"63","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/helpers.ts":"64","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/ActionModal.tsx":"65","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/ContractCard.tsx":"66","/Users/ed/Projects/n3-ftw/client/src/ui/components/NetworkCheck.tsx":"67","/Users/ed/Projects/n3-ftw/client/src/ui/components/NetworkSwitch.tsx":"68","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/Banner.tsx":"69","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/index.tsx":"70","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/DisplayRune.tsx":"71","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/index.ts":"72","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/consts.ts":"73","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/helpers.ts":"74","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/Stage4.tsx":"75","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/pageRoutes.ts":"76","/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/index.ts":"77","/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/rest.ts":"78","/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/consts.ts":"79","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Arena/index.tsx":"80","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Home/index.tsx":"81","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Arena/Banner.tsx":"82","/Users/ed/Projects/FTW/client/src/index.tsx":"83","/Users/ed/Projects/FTW/client/src/reportWebVitals.ts":"84","/Users/ed/Projects/FTW/client/src/common/hooks/use-app.tsx":"85","/Users/ed/Projects/FTW/client/src/ui/index.tsx":"86","/Users/ed/Projects/FTW/client/src/ui/components/Header.tsx":"87","/Users/ed/Projects/FTW/client/src/ui/components/MobileMenuSlider.tsx":"88","/Users/ed/Projects/FTW/client/src/ui/components/WalletSidebar.tsx":"89","/Users/ed/Projects/FTW/client/src/ui/pages/Home.tsx":"90","/Users/ed/Projects/FTW/client/src/consts/index.ts":"91","/Users/ed/Projects/FTW/client/src/packages/provider/index.ts":"92","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/index.tsx":"93","/Users/ed/Projects/FTW/client/src/ui/pages/MyCollection/index.tsx":"94","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/index.tsx":"95","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/index.tsx":"96","/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/index.tsx":"97","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/helpers.ts":"98","/Users/ed/Projects/FTW/client/src/ui/components/Logo.tsx":"99","/Users/ed/Projects/FTW/client/src/ui/components/WalletDropdown.tsx":"100","/Users/ed/Projects/FTW/client/src/ui/components/NetworkSwitch.tsx":"101","/Users/ed/Projects/FTW/client/src/ui/components/SidebarNav.tsx":"102","/Users/ed/Projects/FTW/client/src/ui/components/PageLayout.tsx":"103","/Users/ed/Projects/FTW/client/src/consts/pageRoutes.ts":"104","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/pageRoutes.ts":"105","/Users/ed/Projects/FTW/client/src/packages/neo/index.ts":"106","/Users/ed/Projects/FTW/client/src/packages/provider/wallet-provider.tsx":"107","/Users/ed/Projects/FTW/client/src/ui/components/NotifyError.tsx":"108","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/SnapshotList.tsx":"109","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/ActionModal.tsx":"110","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/About.tsx":"111","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/Pool.tsx":"112","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/ClaimModal.tsx":"113","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/PositionModal.tsx":"114","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/CancelModal.tsx":"115","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/Claims.tsx":"116","/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/PropertiesModal.tsx":"117","/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/Banner.tsx":"118","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/index.tsx":"119","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/consts.ts":"120","/Users/ed/Projects/FTW/client/src/packages/ui/PendingTransaction/index.tsx":"121","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/index.ts":"122","/Users/ed/Projects/FTW/client/src/packages/neo/consts/index.ts":"123","/Users/ed/Projects/FTW/client/src/packages/neo/api/index.ts":"124","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/index.ts":"125","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Home/index.tsx":"126","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/index.tsx":"127","/Users/ed/Projects/FTW/client/src/ui/components/Modal.tsx":"128","/Users/ed/Projects/FTW/client/src/ui/components/TransactionSubmitted.tsx":"129","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/SnapshotCard.tsx":"130","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/SnapshotCountdown.tsx":"131","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/WalletList.tsx":"132","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/MyPosition.tsx":"133","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/Runes.tsx":"134","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/WalletDropdown.tsx":"135","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/AssetCard.tsx":"136","/Users/ed/Projects/FTW/client/src/packages/neo/network/index.ts":"137","/Users/ed/Projects/FTW/client/src/packages/neo/api/rest.ts":"138","/Users/ed/Projects/FTW/client/src/packages/neo/wallet/index.ts":"139","/Users/ed/Projects/FTW/client/src/packages/neo/utils/index.ts":"140","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/helpers.ts":"141","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/consts.ts":"142","/Users/ed/Projects/FTW/client/src/packages/neo/local-storage/index.ts":"143","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Banner.tsx":"144","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/index.ts":"145","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/index.ts":"146","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nep17/index.ts":"147","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/bank/index.ts":"148","/Users/ed/Projects/FTW/client/src/packages/neo/api/consts.ts":"149","/Users/ed/Projects/FTW/client/src/packages/neo/wallet/dev-wallet.ts":"150","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/consts.ts":"151","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/helpers.ts":"152","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/helpers.ts":"153","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/index.tsx":"154","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/index.tsx":"155","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/Replay.tsx":"156","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/PlayerModal.tsx":"157","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/NFTListModal.tsx":"158","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/index.ts":"159","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/TournamentTree.tsx":"160","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/consts.ts":"161","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/helpers.ts":"162","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/helpers.ts":"163","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/ArenaRegisterButton.tsx":"164","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/PlayButton.tsx":"165","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/NFTDetailModal.tsx":"166","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/HistoryTable.tsx":"167","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/DisplayRuneWithProperties.tsx":"168","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/ClaimButton.tsx":"169","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/Banner.tsx":"170","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP17/index.tsx":"171","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP17/ContractCard.tsx":"172","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP17FormModal.tsx":"173","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP11FormModal.tsx":"174","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/index.tsx":"175","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/ContractCard.tsx":"176","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP11MintFormModal.tsx":"177","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/Tokens.tsx":"178","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/DisplayNFT.tsx":"179","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/LeaveButton.tsx":"180","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/BetButton.tsx":"181","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/helpers.ts":"182","/Users/ed/Projects/FTW/client/src/packages/ui/AfterTransactionSubmitted/index.tsx":"183","/Users/ed/Projects/FTW/client/src/packages/ui/AfterTransactionSubmitted/RuneLoading.tsx":"184","/Users/ed/Projects/FTW/client/src/ui/components/RandomRune.tsx":"185","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/CheckMark.tsx":"186"},{"size":624,"mtime":1633734969020,"results":"187","hashOfConfig":"188"},{"size":425,"mtime":1633497407848,"results":"189","hashOfConfig":"188"},{"size":1309,"mtime":1639724016473,"results":"190","hashOfConfig":"188"},{"size":1470,"mtime":1640622893531,"results":"191","hashOfConfig":"188"},{"size":591,"mtime":1633679011995,"results":"192","hashOfConfig":"188"},{"size":672,"mtime":1637900932333,"results":"193","hashOfConfig":"188"},{"size":4417,"mtime":1639620401842,"results":"194","hashOfConfig":"188"},{"size":4196,"mtime":1639086967652,"results":"195","hashOfConfig":"188"},{"size":489,"mtime":1639037096055,"results":"196","hashOfConfig":"188"},{"size":30,"mtime":1638893084422,"results":"197","hashOfConfig":"188"},{"size":34,"mtime":1637559785947,"results":"198","hashOfConfig":"188"},{"size":239,"mtime":1637559785941,"results":"199","hashOfConfig":"188"},{"size":4655,"mtime":1639300594240,"results":"200","hashOfConfig":"188"},{"size":3188,"mtime":1640585376262,"results":"201","hashOfConfig":"188"},{"size":927,"mtime":1639296687060,"results":"202","hashOfConfig":"188"},{"size":1581,"mtime":1639034767064,"results":"203","hashOfConfig":"188"},{"size":309,"mtime":1638868993214,"results":"204","hashOfConfig":"188"},{"size":704,"mtime":1640068867717,"results":"205","hashOfConfig":"188"},{"size":3091,"mtime":1639993271043,"results":"206","hashOfConfig":"188"},{"size":268,"mtime":1637559785958,"results":"207","hashOfConfig":"188"},{"size":230,"mtime":1637559785958,"results":"208","hashOfConfig":"188"},{"size":1465,"mtime":1639300292984,"results":"209","hashOfConfig":"188"},{"size":3082,"mtime":1637891429918,"results":"210","hashOfConfig":"188"},{"size":1693,"mtime":1639300331838,"results":"211","hashOfConfig":"188"},{"size":1220,"mtime":1637894305513,"results":"212","hashOfConfig":"188"},{"size":1944,"mtime":1639300331832,"results":"213","hashOfConfig":"188"},{"size":1287,"mtime":1638165273098,"results":"214","hashOfConfig":"188"},{"size":1592,"mtime":1640583336741,"results":"215","hashOfConfig":"188"},{"size":1131,"mtime":1639293939381,"results":"216","hashOfConfig":"188"},{"size":1405,"mtime":1639028483325,"results":"217","hashOfConfig":"188"},{"size":1118,"mtime":1639009300745,"results":"218","hashOfConfig":"188"},{"size":4241,"mtime":1640598198650,"results":"219","hashOfConfig":"188"},{"size":3323,"mtime":1638163806270,"results":"220","hashOfConfig":"188"},{"size":1382,"mtime":1640599057954,"results":"221","hashOfConfig":"188"},{"size":112,"mtime":1637946015157,"results":"222","hashOfConfig":"188"},{"size":1683,"mtime":1639619515744,"results":"223","hashOfConfig":"188"},{"size":845,"mtime":1639300797095,"results":"224","hashOfConfig":"188"},{"size":881,"mtime":1640302612275,"results":"225","hashOfConfig":"188"},{"size":1582,"mtime":1639300578733,"results":"226","hashOfConfig":"188"},{"size":558,"mtime":1637894305518,"results":"227","hashOfConfig":"188"},{"size":1085,"mtime":1639028483330,"results":"228","hashOfConfig":"188"},{"size":1857,"mtime":1637900644235,"results":"229","hashOfConfig":"188"},{"size":413,"mtime":1637567392298,"results":"230","hashOfConfig":"188"},{"size":7180,"mtime":1640586317249,"results":"231","hashOfConfig":"188"},{"size":2879,"mtime":1639296129004,"results":"232","hashOfConfig":"188"},{"size":310,"mtime":1637559785952,"results":"233","hashOfConfig":"188"},{"size":3567,"mtime":1640583104075,"results":"234","hashOfConfig":"188"},{"size":5979,"mtime":1638154121762,"results":"235","hashOfConfig":"188"},{"size":1704,"mtime":1638929139740,"results":"236","hashOfConfig":"188"},{"size":542,"mtime":1640582997164,"results":"237","hashOfConfig":"188"},{"size":646,"mtime":1637867144835,"results":"238","hashOfConfig":"188"},{"size":239,"mtime":1638155927534,"results":"239","hashOfConfig":"188"},{"size":598,"mtime":1637892170390,"results":"240","hashOfConfig":"188"},{"size":3971,"mtime":1639030825785,"results":"241","hashOfConfig":"188"},{"size":1737,"mtime":1637902640430,"results":"242","hashOfConfig":"188"},{"size":2862,"mtime":1640586517923,"results":"243","hashOfConfig":"188"},{"size":230,"mtime":1638174485672,"results":"244","hashOfConfig":"188"},{"size":270,"mtime":1638034751030,"results":"245","hashOfConfig":"188"},{"size":2300,"mtime":1639302927524,"results":"246","hashOfConfig":"188"},{"size":869,"mtime":1639300841404,"results":"247","hashOfConfig":"188"},{"size":2112,"mtime":1639295252715,"results":"248","hashOfConfig":"188"},{"size":3394,"mtime":1639027599972,"results":"249","hashOfConfig":"188"},{"size":271,"mtime":1639068073975,"results":"250","hashOfConfig":"188"},{"size":1007,"mtime":1639382295672,"results":"251","hashOfConfig":"188"},{"size":5424,"mtime":1639302956663,"results":"252","hashOfConfig":"188"},{"size":1482,"mtime":1639027829759,"results":"253","hashOfConfig":"188"},{"size":496,"mtime":1639297175982,"results":"254","hashOfConfig":"188"},{"size":1368,"mtime":1639295784864,"results":"255","hashOfConfig":"188"},{"size":3234,"mtime":1640582997168,"results":"256","hashOfConfig":"188"},{"size":420,"mtime":1640660490693,"results":"257","hashOfConfig":"188"},{"size":1147,"mtime":1640319955625,"results":"258","hashOfConfig":"188"},{"size":2730,"mtime":1640459478123,"results":"259","hashOfConfig":"188"},{"size":236,"mtime":1639993271048,"results":"260","hashOfConfig":"188"},{"size":1057,"mtime":1640155030148,"results":"261","hashOfConfig":"188"},{"size":3757,"mtime":1639727258900,"results":"262","hashOfConfig":"188"},{"size":293,"mtime":1640587449829,"results":"263","hashOfConfig":"188"},{"size":23,"mtime":1637559785922,"results":"264","hashOfConfig":"188"},{"size":684,"mtime":1640571969729,"results":"265","hashOfConfig":"188"},{"size":283,"mtime":1640574613690,"results":"266","hashOfConfig":"188"},{"size":329,"mtime":1640596903139,"results":"267","hashOfConfig":"188"},{"size":1157,"mtime":1640596879206,"results":"268","hashOfConfig":"188"},{"size":1312,"mtime":1640596403386,"results":"269","hashOfConfig":"188"},{"size":624,"mtime":1633734969020,"results":"270","hashOfConfig":"271"},{"size":425,"mtime":1633497407848,"results":"272","hashOfConfig":"271"},{"size":1309,"mtime":1639724016473,"results":"273","hashOfConfig":"271"},{"size":1458,"mtime":1641191531329,"results":"274","hashOfConfig":"271"},{"size":4436,"mtime":1641630843920,"results":"275","hashOfConfig":"271"},{"size":489,"mtime":1639037096055,"results":"276","hashOfConfig":"271"},{"size":672,"mtime":1637900932333,"results":"277","hashOfConfig":"271"},{"size":4214,"mtime":1641546669332,"results":"278","hashOfConfig":"271"},{"size":31,"mtime":1641402851228,"results":"279","hashOfConfig":"271"},{"size":35,"mtime":1640877217380,"results":"280","hashOfConfig":"271"},{"size":4655,"mtime":1639300594240,"results":"281","hashOfConfig":"271"},{"size":2862,"mtime":1640586517923,"results":"282","hashOfConfig":"271"},{"size":576,"mtime":1641289037649,"results":"283","hashOfConfig":"271"},{"size":728,"mtime":1641681194211,"results":"284","hashOfConfig":"271"},{"size":3767,"mtime":1641671285122,"results":"285","hashOfConfig":"271"},{"size":310,"mtime":1637559785952,"results":"286","hashOfConfig":"271"},{"size":291,"mtime":1641142993415,"results":"287","hashOfConfig":"271"},{"size":3971,"mtime":1639030825785,"results":"288","hashOfConfig":"271"},{"size":1702,"mtime":1641572979485,"results":"289","hashOfConfig":"271"},{"size":939,"mtime":1641572772169,"results":"290","hashOfConfig":"271"},{"size":212,"mtime":1641119287691,"results":"291","hashOfConfig":"271"},{"size":713,"mtime":1641287509644,"results":"292","hashOfConfig":"271"},{"size":109,"mtime":1640766614677,"results":"293","hashOfConfig":"271"},{"size":239,"mtime":1637559785941,"results":"294","hashOfConfig":"271"},{"size":3215,"mtime":1641630843913,"results":"295","hashOfConfig":"271"},{"size":268,"mtime":1637559785958,"results":"296","hashOfConfig":"271"},{"size":1693,"mtime":1639300331838,"results":"297","hashOfConfig":"271"},{"size":3082,"mtime":1637891429918,"results":"298","hashOfConfig":"271"},{"size":869,"mtime":1639300841404,"results":"299","hashOfConfig":"271"},{"size":1465,"mtime":1639300292984,"results":"300","hashOfConfig":"271"},{"size":1220,"mtime":1637894305513,"results":"301","hashOfConfig":"271"},{"size":2300,"mtime":1639302927524,"results":"302","hashOfConfig":"271"},{"size":1287,"mtime":1638165273098,"results":"303","hashOfConfig":"271"},{"size":1944,"mtime":1639300331832,"results":"304","hashOfConfig":"271"},{"size":1592,"mtime":1640583336741,"results":"305","hashOfConfig":"271"},{"size":3136,"mtime":1641546734439,"results":"306","hashOfConfig":"271"},{"size":1405,"mtime":1639028483325,"results":"307","hashOfConfig":"271"},{"size":543,"mtime":1640878993094,"results":"308","hashOfConfig":"271"},{"size":1197,"mtime":1641683722710,"results":"309","hashOfConfig":"271"},{"size":112,"mtime":1637946015157,"results":"310","hashOfConfig":"271"},{"size":1611,"mtime":1641659323215,"results":"311","hashOfConfig":"271"},{"size":23,"mtime":1637559785922,"results":"312","hashOfConfig":"271"},{"size":6763,"mtime":1641573859066,"results":"313","hashOfConfig":"271"},{"size":1588,"mtime":1641121142993,"results":"314","hashOfConfig":"271"},{"size":733,"mtime":1640830507552,"results":"315","hashOfConfig":"271"},{"size":878,"mtime":1640830374635,"results":"316","hashOfConfig":"271"},{"size":558,"mtime":1637894305518,"results":"317","hashOfConfig":"271"},{"size":598,"mtime":1637892170390,"results":"318","hashOfConfig":"271"},{"size":845,"mtime":1639300797095,"results":"319","hashOfConfig":"271"},{"size":1085,"mtime":1639028483330,"results":"320","hashOfConfig":"271"},{"size":1582,"mtime":1639300578733,"results":"321","hashOfConfig":"271"},{"size":1561,"mtime":1641200205831,"results":"322","hashOfConfig":"271"},{"size":1857,"mtime":1637900644235,"results":"323","hashOfConfig":"271"},{"size":413,"mtime":1637567392298,"results":"324","hashOfConfig":"271"},{"size":3649,"mtime":1641682855223,"results":"325","hashOfConfig":"271"},{"size":781,"mtime":1641146012440,"results":"326","hashOfConfig":"271"},{"size":4910,"mtime":1641680497113,"results":"327","hashOfConfig":"271"},{"size":1858,"mtime":1641115977681,"results":"328","hashOfConfig":"271"},{"size":2440,"mtime":1641200570613,"results":"329","hashOfConfig":"271"},{"size":381,"mtime":1641679824640,"results":"330","hashOfConfig":"271"},{"size":2881,"mtime":1640878993101,"results":"331","hashOfConfig":"271"},{"size":3105,"mtime":1641284831335,"results":"332","hashOfConfig":"271"},{"size":3570,"mtime":1640878993104,"results":"333","hashOfConfig":"271"},{"size":5979,"mtime":1638154121762,"results":"334","hashOfConfig":"271"},{"size":270,"mtime":1638034751030,"results":"335","hashOfConfig":"271"},{"size":230,"mtime":1638174485672,"results":"336","hashOfConfig":"271"},{"size":283,"mtime":1640574613690,"results":"337","hashOfConfig":"271"},{"size":7567,"mtime":1641681405988,"results":"338","hashOfConfig":"271"},{"size":239,"mtime":1638155927534,"results":"339","hashOfConfig":"271"},{"size":646,"mtime":1637867144835,"results":"340","hashOfConfig":"271"},{"size":1704,"mtime":1638929139740,"results":"341","hashOfConfig":"271"},{"size":2903,"mtime":1641673779720,"results":"342","hashOfConfig":"271"},{"size":5293,"mtime":1641683444323,"results":"343","hashOfConfig":"271"},{"size":1144,"mtime":1641103476588,"results":"344","hashOfConfig":"271"},{"size":2624,"mtime":1641629625534,"results":"345","hashOfConfig":"271"},{"size":3228,"mtime":1641633964986,"results":"346","hashOfConfig":"271"},{"size":6304,"mtime":1641143792955,"results":"347","hashOfConfig":"271"},{"size":3235,"mtime":1640920625664,"results":"348","hashOfConfig":"271"},{"size":543,"mtime":1641288504832,"results":"349","hashOfConfig":"271"},{"size":1883,"mtime":1641116001654,"results":"350","hashOfConfig":"271"},{"size":3462,"mtime":1640215537634,"results":"351","hashOfConfig":"271"},{"size":1364,"mtime":1641671913478,"results":"352","hashOfConfig":"271"},{"size":975,"mtime":1641683444329,"results":"353","hashOfConfig":"271"},{"size":850,"mtime":1640919542276,"results":"354","hashOfConfig":"271"},{"size":2717,"mtime":1641683463977,"results":"355","hashOfConfig":"271"},{"size":1550,"mtime":1641673888675,"results":"356","hashOfConfig":"271"},{"size":2498,"mtime":1641683444314,"results":"357","hashOfConfig":"271"},{"size":2173,"mtime":1641192303250,"results":"358","hashOfConfig":"271"},{"size":1409,"mtime":1641573243966,"results":"359","hashOfConfig":"271"},{"size":2288,"mtime":1641196502452,"results":"360","hashOfConfig":"271"},{"size":6524,"mtime":1641681194216,"results":"361","hashOfConfig":"271"},{"size":5141,"mtime":1641681194224,"results":"362","hashOfConfig":"271"},{"size":1405,"mtime":1641573147945,"results":"363","hashOfConfig":"271"},{"size":2141,"mtime":1641683854224,"results":"364","hashOfConfig":"271"},{"size":6238,"mtime":1641683854230,"results":"365","hashOfConfig":"271"},{"size":2801,"mtime":1641755742190,"results":"366","hashOfConfig":"271"},{"size":886,"mtime":1641574290432,"results":"367","hashOfConfig":"271"},{"size":1019,"mtime":1641633101357,"results":"368","hashOfConfig":"271"},{"size":1201,"mtime":1641613259090,"results":"369","hashOfConfig":"271"},{"size":365,"mtime":1641402851224,"results":"370","hashOfConfig":"271"},{"size":2883,"mtime":1641682780555,"results":"371","hashOfConfig":"271"},{"size":2194,"mtime":1641550159221,"results":"372","hashOfConfig":"271"},{"size":1581,"mtime":1639034767064,"results":"373","hashOfConfig":"271"},{"size":769,"mtime":1641611791293,"results":"374","hashOfConfig":"271"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},"1u1quzu",{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"377"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"393","usedDeprecatedRules":"377"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"377"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"377"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"377"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"377"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"377"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"377"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"377"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"444"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"377"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"377"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"377"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"377"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"377"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"377"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"377"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"377"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"377"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"377"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"377"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"377"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"377"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"444"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"444"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"444"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"444"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"377"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"377"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},"a2drxm",{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"568"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"584","usedDeprecatedRules":"568"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"568"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"568"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"568"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"568"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"568"},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"568"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"616","messages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"568"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"568"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"568"},{"filePath":"642","messages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"568"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"568"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"568"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"568"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"568"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"568"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"568"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"568"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"568"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"568"},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"711","messages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"568"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"568"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"568"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"724","usedDeprecatedRules":"568"},{"filePath":"725","messages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727","usedDeprecatedRules":"568"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"730","messages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"568"},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"568"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"740","messages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"746","messages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"568"},{"filePath":"753","messages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"568"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"568"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"568"},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"568"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"568"},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"770","usedDeprecatedRules":"568"},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"568"},{"filePath":"774","messages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776","usedDeprecatedRules":"568"},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"568"},{"filePath":"780","messages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"782","usedDeprecatedRules":"568"},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"568"},{"filePath":"790","messages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"792","messages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"794","messages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"798","usedDeprecatedRules":"568"},{"filePath":"799","messages":"800","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"801","usedDeprecatedRules":"568"},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"568"},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},"/Users/ed/Projects/n3-ftw/client/src/index.tsx",[],["806","807"],"/Users/ed/Projects/n3-ftw/client/src/reportWebVitals.ts",[],"/Users/ed/Projects/n3-ftw/client/src/common/hooks/use-app.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/common/hooks/use-responsive.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/WalletSidebar.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/Header.tsx",["808","809"],"import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaBars, FaWallet } from \"react-icons/fa\";\nimport Logo from \"./Logo\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { useWallet } from \"../../packages/provider\";\nimport { utils } from \"../../packages/neo\";\nimport { COLLECTION_PATH, MENU } from \"../../consts\";\nimport PendingTransaction from \"../../packages/ui/PendingTransaction\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport NetworkSwitch from \"./NetworkSwitch\";\n\nconst Header = () => {\n  const { toggleSidebar, toggleWalletSidebar } = useApp();\n  const { connectedWallet, network, disConnectWallet } = useWallet();\n  const [isActive, setActive] = useState(false);\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    disConnectWallet();\n  };\n  return (\n    <nav\n      className=\"navbar has-shadow is-white is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ height: \"52px\" }}\n    >\n      <div className=\"container\">\n        <div\n          className=\"navbar-brand\"\n          style={{ justifyContent: \"space-between\" }}\n        >\n          <div\n            role=\"button\"\n            className=\"navbar-burger is-center is-hidden-tablet\"\n            style={{ marginLeft: 0 }}\n            onClick={toggleSidebar}\n          >\n            <FaBars />\n          </div>\n          <Link className=\"has-text-white navbar-item is-center\" to=\"/\">\n            <Logo />\n          </Link>\n          <div\n            role=\"button\"\n            className={`navbar-burger is-center is-hidden-desktop`}\n            onClick={() => {\n              if (connectedWallet) {\n                setActive(!isActive);\n              } else {\n                toggleWalletSidebar();\n              }\n            }}\n            style={{ marginLeft: 0 }}\n          >\n            <FaWallet />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div\n            className={`navbar-menu  is-hidden-tablet ${\n              isActive && \"is-active\"\n            }`}\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item\">\n                <div className=\"media\">\n                  <div className=\"media-left\">\n                    <img src={getWalletIcon(connectedWallet.key)} />\n                  </div>\n                  <div className=\"media-content\">\n                    {utils.truncateAddress(connectedWallet.account.address)}\n                  </div>\n                </div>\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <Link\n                onClick={() => setActive(false)}\n                className=\"navbar-item has-text-dark\"\n                to={COLLECTION_PATH}\n              >\n                My NFT\n              </Link>\n              <hr className=\"dropdown-divider\" />\n              <a onClick={handleDisconnectWallet} className=\"navbar-item\">\n                Disconnect wallet\n              </a>\n            </div>\n          </div>\n        )}\n\n        <div className=\"navbar-menu ml-3\">\n          <div className=\"navbar-start\">\n            {MENU.map((route) => {\n              if (!route.network.includes(network)) return <></>;\n              return (\n                <NavLink\n                  key={route.label}\n                  activeClassName=\"is-active\"\n                  to={route.path}\n                  className=\"navbar-item\"\n                >\n                  <strong>{route.label}</strong>\n                </NavLink>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"navbar-end is-hidden-touch\">\n          <div className=\"navbar-item\">\n            <NetworkSwitch />\n          </div>\n          <PendingTransaction />\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              {connectedWallet ? (\n                <WalletDropdown connectedWallet={connectedWallet} />\n              ) : (\n                <button\n                  onClick={toggleWalletSidebar}\n                  className=\"button is-small is-black is-rounded\"\n                >\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Home.tsx",["810","811","812","813","814"],"import React, { useEffect, useRef, useState } from \"react\";\nimport PageLayout from \"../components/PageLayout\";\n// tslint:disable-next-line:no-submodule-imports\nimport DOTS from \"vanta/dist/vanta.halo.min\";\nimport DisplayRandomRune from \"../components/DisplayRandomRune\";\n// import * as THREE from \"three\";\n\nconst Home = (props) => {\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        DOTS({\n          el: myRef.current,\n          mouseControls: true,\n          touchControls: true,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          backgroundColor: 0x80822,\n          size: 2.8,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) {\n        // @ts-ignore\n        vantaEffect.destroy();\n      }\n    };\n  }, [vantaEffect]);\n  return (\n    <div>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-flex\" style={{ alignItems: \"center\" }}>\n                <div>\n                  <h1 className=\"title\">Forthewin is back</h1>\n                  <p className=\"subtitle\">\n                    Migrate your Neo-legacy FTX to the new <span>N3 FTW</span>\n                  </p>\n                  <a\n                    target=\"_blank\"\n                    href=\"https://nepmigration.com/\"\n                    className=\"button is-primary\"\n                  >\n                    Go to Migrate\n                  </a>\n                </div>\n              </div>\n              <div className=\"column is-hidden-touch\">\n                <div\n                  className=\"block\"\n                  // style={{ display: \"flex\", justifyContent: \"center\" }}\n                >\n                  <video style={{ width: \"450px\" }} autoPlay loop>\n                    <source src={\"/migration.mp4\"} type=\"video/mp4\" />\n                  </video>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns halo\" ref={myRef}>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>Neo-legacy</h3>\n                <h6>Symbol</h6>\n                <p>FTX</p>\n                <h6>Contract hash</h6>\n                <p>0xaac66f9779ca67d819d05492805d251dab02fc7b</p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://neotracker.io/asset/aac66f9779ca67d819d05492805d251dab02fc7b\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>N3</h3>\n                <h6>Symbol</h6>\n                <p>FTW</p>\n                <h6>Contract hash</h6>\n                <p>\n                  <a\n                    target=\"_blank\"\n                    className=\"has-text-dark\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\n                  </a>\n                </p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://explorer.onegate.space/NEP17tokeninfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ed/Projects/n3-ftw/client/src/ui/components/MobileMenuSlider.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/consts/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/provider/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/index.tsx",["815","816","817","818","819"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport ActionModal from \"./ActionModal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport toast from \"react-hot-toast\";\nimport SnapshotList from \"./SnapshotList\";\nimport NotifyError from \"../../components/NotifyError\";\nimport Pool from \"./Pool\";\nimport CancelModal from \"./CancelModal\";\nimport ClaimModal from \"./ClaimModal\";\nimport Claims from \"./Claims\";\nimport PositionModal from \"./PositionModal\";\nimport About from \"./About\";\nimport { TESTNET } from \"../../../packages/neo/consts\";\n\nconst Farm = () => {\n  // let location = useLocation();\n  const production = [TESTNET];\n  const [route, setRoute] = useState(\"POOL\");\n  const [modalActive, setModalActive] = useState(false);\n  const [cancelModalActive, setCancelModalActive] = useState(false);\n  const [claimModalActive, setClaimModalActive] = useState(false);\n  const [positionModalActive, setPositionModalActive] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [contractStatus, setContractStatus] = useState<IFarmContractStatus>();\n  const onActive = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onCancelModalActive = () => setCancelModalActive(true);\n  const onClaimModalActive = () => setClaimModalActive(true);\n  const onPositionChange = () => setPositionModalActive(true);\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new FarmContract(network).getStatus(connectedWallet);\n        setContractStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, route]);\n  if (!production.includes(network))\n    return (\n      <PageLayout>This smart contract is not support in {network}.</PageLayout>\n    );\n  return (\n    <PageLayout>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-half\">\n          <div className=\"box \">\n            <div className=\"tabs is-toggle\">\n              <ul>\n                <li className={route === \"POOL\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"POOL\")}>Pool</a>\n                </li>\n                {connectedWallet && contractStatus && contractStatus.deposit && (\n                  <li className={route === \"CLAIMS\" ? \"is-active\" : \"\"}>\n                    <a onClick={() => setRoute(\"CLAIMS\")}>Claims</a>\n                  </li>\n                )}\n                <li className={route === \"SNAPSHOTS\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"SNAPSHOTS\")}>Snapshots</a>\n                </li>\n                <li className={route === \"ABOUT\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"ABOUT\")}>About</a>\n                </li>\n              </ul>\n            </div>\n            <NotifyError msg={error} onClose={() => setError(\"\")} />\n            {route === \"POOL\" && (\n              <Pool\n                contractStatus={contractStatus}\n                onPositionChange={onPositionChange}\n                onDeposit={onActive}\n                onCancel={onCancelModalActive}\n                onClaim={onClaimModalActive}\n              />\n            )}\n            {route === \"SNAPSHOTS\" && (\n              <SnapshotList contractStatus={contractStatus} />\n            )}\n            {route === \"CLAIMS\" && (\n              <Claims\n                onClaim={onClaimModalActive}\n                contractStatus={contractStatus}\n              />\n            )}\n            {route === \"ABOUT\" && <About contractStatus={contractStatus} />}\n          </div>\n        </div>\n      </div>\n      {contractStatus && modalActive && (\n        <ActionModal\n          range={contractStatus.range}\n          onClose={() => setModalActive(false)}\n        />\n      )}\n      {contractStatus && contractStatus.deposit && positionModalActive && (\n        <PositionModal\n          currentPosition={contractStatus.deposit.position}\n          range={contractStatus.range}\n          onClose={() => setPositionModalActive(false)}\n        />\n      )}\n      {cancelModalActive && (\n        <CancelModal onClose={() => setCancelModalActive(false)} />\n      )}\n      {claimModalActive && (\n        <ClaimModal onClose={() => setClaimModalActive(false)} />\n      )}\n    </PageLayout>\n  );\n};\n\nexport default Farm;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/index.tsx",["820"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport PropertiesModal from \"./PropertiesModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport Banner from \"./Banner\";\nimport { RestAPI } from \"../../../packages/neo/api\";\nimport { RUNE_PHASE_FILTER } from \"../../../packages/neo/contracts/ftw/nft/consts\";\n\nconst Gallery = () => {\n  const [filter, setFilter] = useState<string>(RUNE_PHASE_FILTER[0]);\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n  const onFilterChange = (val: string) => setFilter(val);\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).mint(connectedWallet);\n        addPendingTransaction(res);\n      } catch (e: any) {\n      \tconsole.log(e)\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const items = await new RestAPI(network).getRunes(filter);\n        // const res = await new NFTContract(network).getTokens();\n        setTokens(items);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network, filter]);\n  return (\n    <section id=\"Rune\">\n      <Banner\n        network={network}\n        filter={filter}\n        onFilterChange={onFilterChange}\n        onMint={onMint}\n      />\n      {isLoading ? (\n        <PageLayout>\n          <div>Loading..</div>\n        </PageLayout>\n      ) : error ? (\n        <PageLayout>\n          <div>{error}</div>\n        </PageLayout>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"wrap\",\n          }}\n        >\n          {tokens.map((token) => (\n            <figure\n              style={{ width: \"10%\" }}\n              key={token.tokenId}\n              className=\"image rune\"\n              onClick={() => onPropertiesModalActive(token.tokenId.toString())}\n            >\n              <img src={token.image} />\n              {/*<small*/}\n              {/*  className=\"has-text-white\"*/}\n              {/*  style={{ position: \"absolute\", top: 0 }}*/}\n              {/*>*/}\n              {/*  #{token.tokenId}*/}\n              {/*</small>*/}\n              {/*<span className=\"has-text-white\">{token.phase}</span>*/}\n            </figure>\n          ))}\n        </div>\n      )}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default Gallery;\n","/Users/ed/Projects/n3-ftw/client/src/ui/components/SidebarNav.tsx",["821","822"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { GALLERY_PATH, MENU, SMITH_PATH } from \"../../consts\";\nimport { useWallet } from \"../../packages/provider\";\n\nconst SidebarNav = (props) => {\n  const { network } = useWallet();\n  const { toggleSidebar } = useApp();\n  return (\n    <aside className=\"menu p-5\">\n      <p className=\"menu-label\">Menu</p>\n      <ul className=\"menu-list\">\n        {MENU.map((route) => {\n          if (!route.network.includes(network)) return <></>;\n          return (\n            <li key={route.label}>\n              <NavLink\n                onClick={toggleSidebar}\n                activeClassName={\"is-active\"}\n                to={route.path}\n              >\n                {route.label}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </aside>\n  );\n};\n\nexport default SidebarNav;\n","/Users/ed/Projects/n3-ftw/client/src/ui/components/DisplayRandomRune.tsx",["823","824"],"import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\n\ninterface IDisplayRandomRuneProps {\n  width: string;\n  height: string;\n  isActive?: boolean;\n}\nconst DisplayRandomRune = ({\n  width,\n  height,\n  isActive,\n}: IDisplayRandomRuneProps) => {\n  const [colors, setColors] = useState(getColors());\n  const bg = \"rgb(\" + colors[0] + \",\" + colors[6] + \",\" + colors[12] + \")\";\n  const dot1 = \"rgb(\" + colors[1] + \",\" + colors[7] + \",\" + colors[13] + \")\";\n  const dot2 = \"rgb(\" + colors[2] + \",\" + colors[8] + \",\" + colors[14] + \")\";\n  const dot3 = \"rgb(\" + colors[3] + \",\" + colors[9] + \",\" + colors[15] + \")\";\n  const dot4 = \"rgb(\" + colors[4] + \",\" + colors[10] + \",\" + colors[16] + \")\";\n  const body = \"rgb(\" + colors[5] + \",\" + colors[11] + \",\" + colors[17] + \")\";\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    if (isActive) {\n      const interval = setInterval(() => {\n        setColors(getColors());\n      }, 2000);\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  return (\n    <img style={{ width, height }} src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default DisplayRandomRune;\n","/Users/ed/Projects/n3-ftw/client/src/ui/components/Logo.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/consts/pageRoutes.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/provider/wallet-provider.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/NotifyError.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/PageLayout.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/Pool.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ActionModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotList.tsx",["825"],"import React, { useState } from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\nimport SnapshotCard from \"./SnapshotCard\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCreateSnapshot = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).createSnapshot(\n          connectedWallet\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  if (!contractStatus) return <div></div>;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">Snapshots</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <SnapshotCountdown\n              timeLeft={parseFloat(contractStatus.timeLeft)}\n              onCreateSnapshot={onCreateSnapshot}\n            />\n          </div>\n        </div>\n      </div>\n\n      {contractStatus.snapshots.items.map((item) => (\n        <SnapshotCard key={item.no} item={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ClaimModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/Claims.tsx",["826"],"import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\n\ninterface IClaimsProps {\n  contractStatus?: IFarmContractStatus;\n  onClaim: () => void;\n}\nconst Claims = ({ contractStatus, onClaim }: IClaimsProps) => {\n  if (!contractStatus) return <div></div>;\n  if (!contractStatus.claims) return <div></div>;\n  if (!contractStatus.deposit) return <div></div>;\n  const lastClaimNo = contractStatus.deposit.lastClaimNo\n    ? parseFloat(contractStatus.deposit.lastClaimNo)\n    : 0;\n  const isClaimable =\n    parseFloat(contractStatus.snapshots.totalItems) > lastClaimNo;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">My Claims</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            {isClaimable && (\n              <button\n                onClick={onClaim}\n                className=\"button is-primary is-fullwidth\"\n              >\n                Claim Reward\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      {contractStatus.claims.items.length > 0 ? (\n        contractStatus.claims.items.map((item) => {\n          return (\n            <div key={item.createdAt} className=\"media\">\n              <div className=\"media-left\">#{item.no}</div>\n              <div className=\"media-content\">\n                Snapshots: {`${item.from} ~ ${item.end}`}\n                <br />\n                GAS: {item.GAS}\n                <br />\n                FTW: {item.FTW}\n                <br />\n                {item.createdAt}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>No claims to display</div>\n      )}\n    </div>\n  );\n};\n\nexport default Claims;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/CancelModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/PropertiesModal.tsx",["827","828"],"import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\n\ninterface IPropertiesModal {\n  tokenId: string;\n  onClose: () => void;\n}\nconst PropertiesModal = ({ tokenId, onClose }: IPropertiesModal) => {\n  const [item, setItem] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getProperties(\n          tokenId.toString()\n        );\n        setItem(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network]);\n  return (\n    <Modal onClose={onClose}>\n      {isLoading ? (\n        <div>Loading the rune data from the chain..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <h1 className=\"title is-4\">{item.name}</h1>\n\n          <p className=\"subtitle is-7\">\n            <strong>Phase:</strong> {item.phase}, <strong>Luck:</strong>{\" \"}\n            {item.luck}\n          </p>\n          <figure className=\"image is-square\">\n            <img src={item.image} />\n          </figure>\n          <p className=\"subtitle is-7 has-text-right mt-3\">{item.owner}</p>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PropertiesModal;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/DisplayRune.tsx",["829","830","831"],"import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../packages/neo/contracts/ftw/nft/interfaces\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n}\n\nconst DisplayRune = ({\n  width,\n  height,\n  tokenId,\n  network,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(tokenId);\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune\"\n      onClick={() => onClick(token)}\n    >\n      <img src={token.image} />\n    </figure>\n  );\n};\n\nexport default DisplayRune;\n",["832","833"],"/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/index.tsx",["834","835"],"import React, { useEffect } from \"react\";\nimport { utils } from \"../../neo\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport WalletList from \"./WalletList\";\nimport AssetCard from \"./AssetCard\";\nimport { useWallet } from \"../../provider\";\nimport Runes from \"./Runes\";\nimport { Network } from \"../../neo/network\";\n\nconst Wallet = (props) => {\n  const { connectedWallet } = useWallet();\n  return (\n    <>\n      <header className=\"level is-mobile p-3 is-marginless\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <WalletDropdown />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <small>\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </small>\n            </div>\n          </div>\n        )}\n      </header>\n      <hr className=\"m-0\" />\n      <section className=\"p-5\">\n        {connectedWallet ? (\n          <>\n            <div>\n              {connectedWallet &&\n                connectedWallet.balances.map((balance) => {\n                  return <AssetCard key={balance.symbol} {...balance} />;\n                })}\n            </div>\n            <Runes connectedWallet={connectedWallet} />\n          </>\n        ) : (\n          <WalletList />\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default Wallet;\n","/Users/ed/Projects/n3-ftw/client/src/packages/ui/PendingTransaction/index.tsx",["836","837"],"import React, { useEffect } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useWallet } from \"../../provider\";\nimport { Network } from \"../../neo/network\";\n\nconst PendingTransaction = () => {\n  const { network, pendingTransactions, removePendingTransaction } =\n    useWallet();\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        for (const txid of pendingTransactions) {\n          const res = await Network.getRawTx(txid, network);\n          removePendingTransaction(txid);\n        }\n      } catch (e: any) {\n        console.error(e);\n      }\n    }\n\n    if (pendingTransactions.length > 0) {\n      checkTxid();\n    }\n  }, [pendingTransactions]);\n  if (pendingTransactions.length === 0) return <></>;\n  return (\n    <div className=\"navbar-item pr-0\">\n      <div\n        style={{ pointerEvents: \"none\" }}\n        className=\"is-center button is-outlined is-rounded is-small\"\n      >\n        <ClipLoader loading={true} size={15} />\n        <span className=\"ml-2\">{`${pendingTransactions.length} Pending`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default PendingTransaction;\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/wallet/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/network/index.ts",["838"],"import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG,\n} from \"../consts\";\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport {\n  ApplicationLogJson,\n  GetRawTransactionResult,\n} from \"@cityofzion/neon-core/lib/rpc/Query\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n  private static readonly READ_LOG_FREQUENCY = 6000;\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static getRawTx = async (txid: string, network: INetworkType) => {\n    const rpcClient = Network.getRPCClient(network);\n    // Cycle\n    let rawTx: GetRawTransactionResult | undefined;\n    do {\n      try {\n      \tconsole.log(\"ping\")\n        rawTx = await rpcClient.getRawTransaction(txid, true);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!rawTx);\n\n    return rawTx;\n  };\n\n  static findNotificationFromTxId = async (\n    txId: string,\n    scriptHash: string,\n    eventName: string,\n    networkType: INetworkType\n  ) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(\n      txId,\n      networkType\n    );\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName\n    );\n  };\n\n  static getNotificationsFromTxId = async (\n    txId: string,\n    network: INetworkType\n  ) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[]\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    const res = await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    if (res.state === \"FAULT\") {\n      console.error(\"RPC read error\" + res);\n      throw new Error(res.exception ? res.exception : \"Network error\");\n    }\n    return res;\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/consts/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/utils/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCountdown.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/Modal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/MyPosition.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/TransactionSubmitted.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletList.tsx",["839"],"import React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletList = () => {\n  const { connectWallet, list, useDevWallet } = useWallet();\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          if (!useDevWallet && _wallet.key === DEV) return false;\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} alt=\"React Logo\" />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletDropdown.tsx",["840","841"],"import React, { useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown } from \"react-icons/all\";\nimport { useApp } from \"../../../common/hooks/use-app\";\nimport { useWallet } from \"../../provider\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletDropdown = () => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectedWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n  if (!connectedWallet) {\n    return (\n      <button className=\"button is-white \" onClick={() => setActive(!isActive)}>\n        <strong>Wallet</strong>\n      </button>\n    );\n  }\n  return (\n    <div className={`dropdown ${isActive && \"is-active\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-white\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu3\"\n          onClick={() => setActive(!isActive)}\n        >\n          <span className=\"icon is-small\">\n            <img src={getWalletIcon(connectedWallet.key)} />\n          </span>\n          <span>\n            <strong>Wallet</strong>\n          </span>\n          <span className=\"icon is-small\">\n            <FaAngleDown />\n            {/*<i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>*/}\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a\n            onClick={handleDisconnectWallet}\n            href=\"#\"\n            className=\"dropdown-item\"\n          >\n            Disconnect\n          </a>\n          {/*<hr className=\"dropdown-divider\"/>*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/AssetCard.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/wallet/dev-wallet.ts",["842"],"import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\n// tslint:disable-next-line:no-submodule-imports\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpcClient = Network.getRPCClient(network);\n    const res = await rpcClient.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      let amount;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n        amount = u.BigInteger.fromNumber(item.amount).toDecimal(8).toString();\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n        amount = item.amount;\n      }\n      balances.push({\n        contract: item.assethash,\n        amount,\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    network: INetworkType,\n    invokeScript: sc.ContractCallJson\n  ) {\n    const rpcClient = Network.getRPCClient(network);\n    const version: any = await rpcClient.getVersion();\n    const txObj = await DevWallet.build(\n      rpcClient,\n      invokeScript,\n      DevWallet.account.address\n    );\n    txObj.sign(DevWallet.account, version.protocol.network);\n    const txid = await rpcClient.sendRawTransaction(txObj);\n    // tslint:disable-next-line:no-console\n    console.log(\n      JSON.stringify(\n        {\n          RPC: rpc,\n          Transaction: txObj,\n          Network: version,\n          \"Network Fee\": txObj.networkFee.toDecimal(8).toString(),\n          \"System Fee\": txObj.systemFee.toDecimal(8).toString(),\n        },\n        null,\n        4\n      )\n    );\n    return {\n      txid,\n      nodeUrl: rpcClient.url,\n    };\n  }\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson,\n    senderAddress: string,\n    cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n    // @ts-ignore\n    invokeScript.args = invokeScript.args.map((param: any) =>\n      convertContractCallParam(param)\n    );\n    const script = sc.createScript({ ...invokeScript });\n\n    const signers = [\n      {\n        account: wallet.getScriptHashFromAddress(senderAddress),\n        scopes: tx.WitnessScope.Global,\n      },\n    ];\n    if (cosignerAddress) {\n      signers.push({\n        account: wallet.getScriptHashFromAddress(cosignerAddress),\n        scopes: tx.WitnessScope.Global,\n      });\n    }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/local-storage/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/helpers.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/helpers.ts",["843"],"import { IFarmDepositRecord } from \"./interfaces\";\nimport { base64ToDate, base64ToFixed8, base64ToString } from \"../../../utils\";\n\nexport const parseDeposit = (\n  stackItem: any\n): IFarmDepositRecord | undefined => {\n  // TODO check if there no deposit\n  // if (!stackItem.value) return undefined;\n  return {\n    position: stackItem[0].value,\n    amount: stackItem[1].value,\n    lastClaimNo: stackItem[2].value,\n    createdAt: stackItem[3].value,\n  };\n};\n\nexport const parseClaimPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseClaim(stackItem[3].value),\n  };\n};\n\nexport const parseClaim = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      from: item.value[1].value,\n      end: item.value[2].value,\n      GAS: base64ToFixed8(item.value[3].value),\n      FTW: base64ToFixed8(item.value[4].value),\n      createdAt: base64ToDate(item.value[5].value),\n    };\n  });\n};\n\nexport const parseSnapshotPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSnapshotItem(stackItem[3].value),\n  };\n};\n\nconst parseSnapshotItem = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      totalPositionPool: item.value[1].value, // NEO amount\n      totalNeo: item.value[2].value, // NEO amount\n      totalGas: base64ToFixed8(item.value[3].value),\n      range: base64ToFixed8(item.value[4].value),\n      winPosition: item.value[5].value,\n      createdAt: base64ToDate(item.value[6].value),\n    };\n  });\n};\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/helpers.ts",["844"],"import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCard.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/WalletDropdown.tsx",["845","846","847"],"import React, { useEffect, useState } from \"react\";\nimport { utils } from \"../../packages/neo\";\nimport { IConnectedWallet } from \"../../packages/neo/wallet/interfaces\";\nimport { useWallet } from \"../../packages/provider\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport { COLLECTION_PATH } from \"../../consts\";\nimport { NavLink } from \"react-router-dom\";\nimport { NEO_LINE, O3 } from \"../../packages/neo/consts\";\nimport neo3Dapi from \"neo3-dapi\";\ninterface IWalletDropdownProps {\n  connectedWallet: IConnectedWallet;\n}\nconst WalletDropdown = ({ connectedWallet }: IWalletDropdownProps) => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n\n  const onActive = () => setActive(!isActive);\n\n  useEffect(() => {\n    const refresh = () => {\n      connectWallet(connectedWallet.key);\n    };\n    const disconnected = () => {\n      disConnectWallet();\n    };\n\n    if (connectedWallet.key === NEO_LINE) {\n      window.addEventListener(\"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.NETWORK_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.DISCONNECTED\", disconnected);\n      return () => {\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.NETWORK_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.DISCONNECTED\",\n          disconnected\n        );\n      };\n    }\n    if (connectedWallet.key === O3) {\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.DISCONNECTED,\n        disconnected\n      );\n\n      return () => {\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.DISCONNECTED,\n          disconnected\n        );\n      };\n    }\n  }, []);\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className=\"button is-small is-black is-rounded\"\n          aria-controls=\"dropdown-wallet\"\n        >\n          <span>{utils.truncateAddress(connectedWallet.account.address)}</span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <img src={getWalletIcon(connectedWallet.key)} />\n              </div>\n              <div className=\"media-content\">\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </div>\n            </div>\n          </div>\n          <hr className=\"dropdown-divider\" />\n          <NavLink\n            className=\"dropdown-item has-text-dark\"\n            onClick={() => setActive(false)}\n            to={COLLECTION_PATH}\n          >\n            My NFT\n          </NavLink>\n          <hr className=\"dropdown-divider\" />\n          <a onClick={handleDisconnectWallet} className=\"dropdown-item\">\n            Disconnect\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/Runes.tsx",["848","849","850","851","852","853"],"import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../neo/contracts\";\nimport { IRuneMeta } from \"../../neo/contracts/ftw/nft/interfaces\";\nimport { useWallet } from \"../../provider\";\nimport toast from \"react-hot-toast\";\nimport DisplayRune from \"../../../ui/pages/Gallery/DisplayRune\";\nimport DisplayRandomRune from \"../../../ui/components/DisplayRandomRune\";\nimport { IConnectedWallet } from \"../../neo/wallet/interfaces\";\n\ninterface IRunesProps {\n  connectedWallet: IConnectedWallet;\n}\nconst Runes = ({ connectedWallet }: IRunesProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  useState<IRuneMeta>();\n  const { network } = useWallet();\n  // const onPropertiesModalActive = (obj: IRuneMeta) => {\n  //   if (connectedWallet) {\n  //     setPropertiesModalActive(obj);\n  //   } else {\n  //     toast.error(\"Please connect wallet.\");\n  //   }\n  // };\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getTokens();\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet]);\n  return (\n    <div>\n      <div\n        style={{\n          flexFlow: \"wrap\",\n          // width: \"640px\",\n          // margin: \"0 auto\"\n        }}\n        className=\"is-flex\"\n      >\n        {/*{tokens.map((tokenId) => (*/}\n        {/*  <DisplayRune*/}\n        {/*    tokenId={tokenId}*/}\n        {/*    network={network}*/}\n        {/*    onClick={() => false}*/}\n        {/*  />*/}\n        {/*))}*/}\n        {/*<DisplayRandomRune width=\"64px\" height=\"64px\" />*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Runes;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/MyCollection/index.tsx",["854"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport PropertiesModal from \"../Gallery/PropertiesModal\";\nimport { GALLERY_PATH } from \"../../../consts\";\nimport { Link } from \"react-router-dom\";\n\nconst MyCollection = () => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus(address: string) {\n      setError(\"\");\n      try {\n        const res = await new NFTContract(network).getTokensOf(address);\n        setTokens(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network]);\n  return (\n    <>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">My collection</h1>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"columns is-multiline\">\n            {tokens.length > 0 ? (\n              tokens.map((token) => (\n                <div className=\"column is-3\">\n                  <figure\n                    className=\"image\"\n                    onClick={() => onPropertiesModalActive(token.tokenId)}\n                  >\n                    <img src={token.image} />\n                  </figure>\n                </div>\n              ))\n            ) : (\n              <div className=\"column is-3\">\n                <div className=\"box\">\n                  <div className=\"block\">\n                    <p>You don't have any runes yet</p>\n                  </div>\n\n                  <Link className=\"button is-primary\" to={GALLERY_PATH}>\n                    Go Get Them\n                  </Link>\n                </div>\n                {/*<DisplayRandomRune width=\"100%\" height=\"100%\" />*/}\n              </div>\n            )}\n          </div>\n        )}\n      </PageLayout>\n      {/*<button onClick={onMint} className=\"button is-black\">Mint</button>*/}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MyCollection;\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/bank/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nep17/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/PositionModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/About.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/helpers.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/ActionModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/ContractCard.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/NetworkCheck.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/NetworkSwitch.tsx",["855","856"],"import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, TESTNET } from \"../../packages/neo/consts\";\nconst NetworkSwitch = () => {\n  const [isActive, setActive] = useState(false);\n  const { network, switchNetwork } = useWallet();\n\n  const onActive = () => setActive(!isActive);\n  const handleNetworkChange = () => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(\"Are you sure to switch network?\")) {\n      switchNetwork(network === TESTNET ? MAINNET : TESTNET);\n      setActive(false);\n    }\n  };\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className={`button is-small ${\n            network === TESTNET ? \"is-danger\" : \"is-white\"\n          }`}\n          aria-controls=\"dropdown-wallet\"\n        >\n          {network}\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <a onClick={handleNetworkChange}>\n              {network === TESTNET ? `Switch to Mainnet` : `Switch to Testnet`}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/Banner.tsx",["857","858"],"import React from \"react\";\nimport DisplayRandomRune from \"../../components/DisplayRandomRune\";\nimport {\n  RUNE_PHASE_FILTER,\n  RUNE_PRICE,\n} from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport { u } from \"@cityofzion/neon-core\";\ninterface IBannerProps {\n  network: INetworkType;\n  filter: string;\n  onMint: () => void;\n  onFilterChange: (val: string) => void;\n}\nconst Banner = ({ onMint, onFilterChange, filter, network }: IBannerProps) => {\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div>\n                <h1 className=\"title\">Forthewin Runes</h1>\n                <p className=\"subtitle\">Algorithms-generated lucky runes</p>\n\n                <div className=\"content is-small\">\n                  <p>\n                    <strong>Max supply</strong>\n                    <br />\n                    500 runes\n                  </p>\n                  <p>\n                    <strong>Attribute #1</strong>\n                    <br />\n                    Random phase (Dark, Light, Fire, Water, Wood, Earth, Metal)\n                  </p>\n                  <p>\n                    <strong>Attribute #2</strong>\n                    <br /> Luck (1 ~ 10)\n                  </p>\n                </div>\n                <div className=\"block has-text-centered-mobile is-hidden-mobile\">\n                  <button\n                    onClick={onMint}\n                    className=\"button is-primary press-font\"\n                  >\n                    Mint: {RUNE_PRICE[network]} GAS\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div\n                className=\"block\"\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <DisplayRandomRune\n                  isActive={true}\n                  width=\"230px\"\n                  height=\"230px\"\n                />\n              </div>\n              <div className=\"block has-text-centered-mobile is-hidden-tablet\">\n                <button\n                  onClick={onMint}\n                  className=\"button is-primary press-font\"\n                >\n                  Mint: {RUNE_PRICE[network]} GAS\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/*<div className=\"hero-foot\">*/}\n      {/*  <nav className=\"tabs is-boxed is-fullwidth\">*/}\n      {/*    <div className=\"container\">*/}\n      {/*      <ul>*/}\n      {/*        {RUNE_PHASE_FILTER.map((phase) => {*/}\n      {/*          return (*/}\n      {/*            <li*/}\n      {/*              key={phase}*/}\n      {/*              className={filter === phase ? \"is-active\" : \"\"}*/}\n      {/*            >*/}\n      {/*              <a onClick={() => onFilterChange(phase)}>{phase}</a>*/}\n      {/*            </li>*/}\n      {/*          );*/}\n      {/*        })}*/}\n      {/*      </ul>*/}\n      {/*    </div>*/}\n      {/*  </nav>*/}\n      {/*</div>*/}\n    </section>\n  );\n};\n\nexport default Banner;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/DisplayRune.tsx",["859","860","861"],"import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../packages/neo/contracts/ftw/nft/interfaces\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n}\n\nconst DisplayRune = ({\n  width,\n  height,\n  tokenId,\n  network,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(tokenId);\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune\"\n      onClick={() => onClick({ ...token, tokenId })}\n    >\n      <img src={token.image} />\n    </figure>\n  );\n};\n\nexport default DisplayRune;\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/helpers.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/Stage4.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/pageRoutes.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/rest.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Arena/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Home/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Arena/Banner.tsx",["862","863"],"import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\ninterface IBanner {\n\tarenaNo: string\n}\nconst Banner = ({arenaNo}: IBanner) => {\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div>\n                <h1 className=\"title\">Arena {arenaNo}</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              {/*<li*/}\n              {/*  className={*/}\n              {/*    location.pathname === PLAYERS_PATH ? \"is-active\" : \"\"*/}\n              {/*  }*/}\n              {/*>*/}\n              {/*  <Link to={PLAYERS_PATH}>Players</Link>*/}\n              {/*</li>*/}\n              {/*<li*/}\n              {/*  className={*/}\n              {/*    location.pathname === HISTORY_PATH ? \"is-active\" : \"\"*/}\n              {/*  }*/}\n              {/*>*/}\n              {/*  <Link to={HISTORY_PATH}>Champions</Link>*/}\n              {/*</li>*/}\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n","/Users/ed/Projects/FTW/client/src/index.tsx",[],["864","865"],"/Users/ed/Projects/FTW/client/src/reportWebVitals.ts",[],"/Users/ed/Projects/FTW/client/src/common/hooks/use-app.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/Header.tsx",["866","867"],"import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaBars, FaWallet } from \"react-icons/fa\";\nimport Logo from \"./Logo\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { useWallet } from \"../../packages/provider\";\nimport { utils } from \"../../packages/neo\";\nimport { COLLECTION_PATH, MENU } from \"../../consts\";\nimport PendingTransaction from \"../../packages/ui/PendingTransaction\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport NetworkSwitch from \"./NetworkSwitch\";\n\nconst Header = () => {\n  const { toggleSidebar, toggleWalletSidebar } = useApp();\n  const { connectedWallet, network, disConnectWallet } = useWallet();\n  const [isActive, setActive] = useState(false);\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    disConnectWallet();\n  };\n  return (\n    <nav\n      className=\"navbar has-shadow is-white is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ height: \"52px\" }}\n    >\n      <div className=\"container\">\n        <div\n          className=\"navbar-brand\"\n          style={{ justifyContent: \"space-between\" }}\n        >\n          <div\n            role=\"button\"\n            className=\"navbar-burger is-center is-hidden-tablet\"\n            style={{ marginLeft: 0 }}\n            onClick={toggleSidebar}\n          >\n            <FaBars />\n          </div>\n          <Link className=\"has-text-white navbar-item is-center\" to=\"/\">\n            <Logo />\n          </Link>\n          <div\n            role=\"button\"\n            className={`navbar-burger is-center is-hidden-desktop`}\n            onClick={() => {\n              if (connectedWallet) {\n                setActive(!isActive);\n              } else {\n                toggleWalletSidebar();\n              }\n            }}\n            style={{ marginLeft: 0 }}\n          >\n            <FaWallet />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div\n            className={`navbar-menu  is-hidden-tablet ${\n              isActive && \"is-active\"\n            }`}\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item\">\n                <div className=\"media\">\n                  <div className=\"media-left\">\n                    <img src={getWalletIcon(connectedWallet.key)} />\n                  </div>\n                  <div className=\"media-content\">\n                    {utils.truncateAddress(connectedWallet.account.address)}\n                  </div>\n                </div>\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <Link\n                onClick={() => setActive(false)}\n                className=\"navbar-item has-text-dark\"\n                to={COLLECTION_PATH}\n              >\n                My NFT\n              </Link>\n              <hr className=\"dropdown-divider\" />\n              <a onClick={handleDisconnectWallet} className=\"navbar-item\">\n                Disconnect wallet\n              </a>\n            </div>\n          </div>\n        )}\n\n        <div className=\"navbar-menu ml-3\">\n          <div className=\"navbar-start\">\n            {MENU.map((route, i) => {\n              if (!route.network.includes(network)) return false;\n              return (\n                <NavLink\n                  key={`header-${route.label}${i}`}\n                  activeClassName=\"is-active\"\n                  to={route.path}\n                  className=\"navbar-item\"\n                >\n                  <strong>{route.label}</strong>\n                </NavLink>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"navbar-end is-hidden-touch\">\n          <div className=\"navbar-item\">\n            <NetworkSwitch />\n          </div>\n          <PendingTransaction />\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              {connectedWallet ? (\n                <WalletDropdown connectedWallet={connectedWallet} />\n              ) : (\n                <button\n                  onClick={toggleWalletSidebar}\n                  className=\"button is-small is-black is-rounded\"\n                >\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","/Users/ed/Projects/FTW/client/src/ui/components/MobileMenuSlider.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/WalletSidebar.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Home.tsx",["868","869","870","871","872"],"import React, { useEffect, useRef, useState } from \"react\";\nimport PageLayout from \"../components/PageLayout\";\n// tslint:disable-next-line:no-submodule-imports\nimport DOTS from \"vanta/dist/vanta.halo.min\";\nimport RuneLoading from \"../../packages/ui/AfterTransactionSubmitted/RuneLoading\";\n// import * as THREE from \"three\";\n\nconst Home = (props) => {\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        DOTS({\n          el: myRef.current,\n          mouseControls: true,\n          touchControls: true,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          backgroundColor: 0x80822,\n          size: 2.8,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) {\n        // @ts-ignore\n        vantaEffect.destroy();\n      }\n    };\n  }, [vantaEffect]);\n  return (\n    <div>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-flex\" style={{ alignItems: \"center\" }}>\n                <div>\n                  <h1 className=\"title\">Forthewin is back</h1>\n                  <p className=\"subtitle\">\n                    Migrate your Neo-legacy FTX to the new <span>N3 FTW</span>\n                  </p>\n                  <a\n                    target=\"_blank\"\n                    href=\"https://nepmigration.com/\"\n                    className=\"button is-primary\"\n                  >\n                    Go to Migrate\n                  </a>\n                </div>\n              </div>\n              <div className=\"column is-hidden-touch\">\n                <div\n                  className=\"block\"\n                  // style={{ display: \"flex\", justifyContent: \"center\" }}\n                >\n                  <video style={{ width: \"450px\" }} autoPlay loop>\n                    <source src={\"/migration.mp4\"} type=\"video/mp4\" />\n                  </video>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns halo\" ref={myRef}>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>Neo-legacy</h3>\n                <h6>Symbol</h6>\n                <p>FTX</p>\n                <h6>Contract hash</h6>\n                <p>0xaac66f9779ca67d819d05492805d251dab02fc7b</p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://neotracker.io/asset/aac66f9779ca67d819d05492805d251dab02fc7b\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>N3</h3>\n                <h6>Symbol</h6>\n                <p>FTW</p>\n                <h6>Contract hash</h6>\n                <p>\n                  <a\n                    target=\"_blank\"\n                    className=\"has-text-dark\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\n                  </a>\n                </p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://explorer.onegate.space/NEP17tokeninfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ed/Projects/FTW/client/src/consts/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/provider/index.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/index.tsx",["873","874","875","876","877"],"/Users/ed/Projects/FTW/client/src/ui/pages/MyCollection/index.tsx",["878"],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/index.tsx",["879"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport PropertiesModal from \"./PropertiesModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport Banner from \"./Banner\";\nimport { RestAPI } from \"../../../packages/neo/api\";\nimport { RUNE_PHASE_FILTER } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../components/Modal\";\n\nconst Gallery = () => {\n  const [txid, setTxid] = useState(\"\");\n  const [filter, setFilter] = useState<string>(RUNE_PHASE_FILTER[0]);\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n  const onFilterChange = (val: string) => setFilter(val);\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).mint(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    document.title =\n      \"Forthewin Rune: Algorithms-generated lucky runes NFT on NEO\";\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const items = await new RestAPI(network).getRunes(filter);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getTokens();\n        setTokens(items);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network, filter]);\n  return (\n    <section id=\"Rune\">\n      <Banner\n        network={network}\n        filter={filter}\n        onFilterChange={onFilterChange}\n        onMint={onMint}\n      />\n      {isLoading ? (\n        <PageLayout>\n          <div>Loading..</div>\n        </PageLayout>\n      ) : error ? (\n        <PageLayout>\n          <div>{error}</div>\n        </PageLayout>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"wrap\",\n          }}\n        >\n          {tokens.map((token) => (\n            <figure\n              style={{ width: \"10%\" }}\n              key={token.tokenId}\n              className=\"image rune\"\n              onClick={() => onPropertiesModalActive(token.tokenId.toString())}\n            >\n              <img src={token.image} />\n              {/*<small*/}\n              {/*  className=\"has-text-white\"*/}\n              {/*  style={{ position: \"absolute\", top: 0 }}*/}\n              {/*>*/}\n              {/*  #{token.tokenId}*/}\n              {/*</small>*/}\n              {/*<span className=\"has-text-white\">{token.phase}</span>*/}\n            </figure>\n          ))}\n        </div>\n      )}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={() => setTxid(\"\")}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default Gallery;\n","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/ui/components/Logo.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/WalletDropdown.tsx",["880","881","882"],"/Users/ed/Projects/FTW/client/src/ui/components/NetworkSwitch.tsx",["883"],"import React, { useState } from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, PRIVATENET, TESTNET } from \"../../packages/neo/consts\";\nimport { INetworkType } from \"../../packages/neo/network\";\n\nconst NetworkSwitch = () => {\n  const [isActive, setActive] = useState(false);\n  const { network, switchNetwork } = useWallet();\n  const onActive = () => setActive(!isActive);\n  const handleNetworkChange = (val: string) => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(\"Are you sure to switch network?\")) {\n      switchNetwork(val as INetworkType);\n      setActive(false);\n    }\n  };\n  const networkList = [PRIVATENET, TESTNET, MAINNET];\n\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className={`button is-small ${\n            network === MAINNET ? \"is-white\" : \"is-danger\"\n          }`}\n          aria-controls=\"dropdown-wallet\"\n        >\n          {network}\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {networkList.map((v) => {\n            if (\n              (process.env.NODE_ENV !== \"development\" && v === PRIVATENET) ||\n              network === v\n            ) {\n              return false;\n            }\n            return (\n              <div key={`network${v}`} className=\"dropdown-item\">\n                <a onClick={() => handleNetworkChange(v)}>Switch to {v}</a>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","/Users/ed/Projects/FTW/client/src/ui/components/SidebarNav.tsx",["884","885"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { GALLERY_PATH, MENU, SMITH_PATH } from \"../../consts\";\nimport { useWallet } from \"../../packages/provider\";\n\nconst SidebarNav = (props) => {\n  const { network } = useWallet();\n  const { toggleSidebar } = useApp();\n  return (\n    <aside className=\"menu p-5\">\n      <p className=\"menu-label\">Menu</p>\n      <ul className=\"menu-list\">\n        {MENU.map((route, i) => {\n          if (!route.network.includes(network)) return false;\n          return (\n            <li key={`${route.label}${i}`}>\n              <NavLink\n                onClick={toggleSidebar}\n                activeClassName={\"is-active\"}\n                to={route.path}\n              >\n                {route.label}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </aside>\n  );\n};\n\nexport default SidebarNav;\n","/Users/ed/Projects/FTW/client/src/ui/components/PageLayout.tsx",[],"/Users/ed/Projects/FTW/client/src/consts/pageRoutes.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/pageRoutes.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/provider/wallet-provider.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/NotifyError.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/SnapshotList.tsx",["886"],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/ActionModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/About.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/Pool.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/ClaimModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/PositionModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/CancelModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/Claims.tsx",["887"],"/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/PropertiesModal.tsx",["888","889"],"/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/Banner.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/index.tsx",["890","891"],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/ui/PendingTransaction/index.tsx",["892","893"],"import React, { useEffect } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useWallet } from \"../../provider\";\nimport { Network } from \"../../neo/network\";\n\nconst PendingTransaction = () => {\n  const {\n    network,\n    pendingTransactions,\n    removePendingTransaction,\n    // increaseTotalTxSubmit,\n  } = useWallet();\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        for (const txid of pendingTransactions) {\n          const res = await Network.getRawTx(txid, network);\n          removePendingTransaction(txid);\n          // increaseTotalTxSubmit();\n        }\n      } catch (e: any) {\n        console.error(e);\n      }\n    }\n\n    if (pendingTransactions.length > 0) {\n      checkTxid();\n    }\n  }, [pendingTransactions]);\n  if (pendingTransactions.length === 0) return <></>;\n  return (\n    <div className=\"navbar-item pr-0\">\n      <div\n        style={{ pointerEvents: \"none\" }}\n        className=\"is-center button is-outlined is-rounded is-small\"\n      >\n        <ClipLoader loading={true} size={15} />\n        <span className=\"ml-2\">{`${pendingTransactions.length} Pending`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default PendingTransaction;\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/consts/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/api/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/index.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Home/index.tsx",["894"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TOURNAMENT_PATH } from \"../../../../../consts\";\nimport PageLayout from \"../../../../components/PageLayout\";\n\nconst ARENA_LIST = [\"8\", \"16\", \"32\", \"64\", \"128\"];\nconst ARENA_COLOR = {\n  \"4\": \"is-black\",\n  \"8\": \"is-black\",\n  \"16\": \"is-black\",\n  \"32\": \"is-black\",\n  \"64\": \"is-black\",\n  \"128\": \"is-black\",\n};\nconst ArenaHome = (props) => {\n  return (\n    <div\n      style={{\n        backgroundImage: 'url(\"arena-bg.jpeg\")',\n        backgroundSize: \"cover\",\n        height: \"calc(100vh - 52px)\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      <PageLayout>\n        {/*<div className=\"columns is-multiline\">*/}\n        {ARENA_LIST.map((arena) => {\n          return (\n            <div\n              key={arena}\n              // className=\"column is-4\"\n            >\n              <div\n                className=\"has-text-centered\"\n                // className={`notification has-text-centered ${ARENA_COLOR[arena]}`}\n              >\n                <Link\n                  to={TOURNAMENT_PATH + \"/\" + arena}\n                  className=\"title has-text-white\"\n                >\n                  ARENA {arena}\n                </Link>\n                {/*<Link*/}\n                {/*  to={TOURNAMENT_PATH + \"/\" + arena}*/}\n                {/*  className=\"button is-white\"*/}\n                {/*>*/}\n                {/*  Enter*/}\n                {/*</Link>*/}\n              </div>\n            </div>\n          );\n        })}\n        {/*</div>*/}\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default ArenaHome;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/Modal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/TransactionSubmitted.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/SnapshotCard.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/SnapshotCountdown.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/WalletList.tsx",["895"],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/MyPosition.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/Runes.tsx",["896","897","898"],"import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../neo/contracts\";\nimport { IRuneMeta } from \"../../neo/contracts/ftw/nft/interfaces\";\nimport { useWallet } from \"../../provider\";\nimport { IConnectedWallet } from \"../../neo/wallet/interfaces\";\n\ninterface IRunesProps {\n  connectedWallet: IConnectedWallet;\n}\nconst Runes = ({ connectedWallet }: IRunesProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  useState<IRuneMeta>();\n  const { network } = useWallet();\n  // const onPropertiesModalActive = (obj: IRuneMeta) => {\n  //   if (connectedWallet) {\n  //     setPropertiesModalActive(obj);\n  //   } else {\n  //     toast.error(\"Please connect wallet.\");\n  //   }\n  // };\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getTokens();\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet]);\n  return (\n    <div>\n      <div\n        style={{\n          flexFlow: \"wrap\",\n          // width: \"640px\",\n          // margin: \"0 auto\"\n        }}\n        className=\"is-flex\"\n      >\n        {/*{tokens.map((tokenId) => (*/}\n        {/*  <DisplayRune*/}\n        {/*    tokenId={tokenId}*/}\n        {/*    network={network}*/}\n        {/*    onClick={() => false}*/}\n        {/*  />*/}\n        {/*))}*/}\n        {/*<DisplayRandomRune width=\"64px\" height=\"64px\" />*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Runes;\n","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/WalletDropdown.tsx",["899","900"],"/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/AssetCard.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/neo/network/index.ts",["901","902"],"import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG,\n  TESTNET_CONFIG_2,\n  MAINNET_CONFIG_2,\n} from \"../consts\";\n// tslint:disable-next-line:no-submodule-imports\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport {\n  ApplicationLogJson,\n  GetRawTransactionResult,\n  // tslint:disable-next-line:no-submodule-imports\n} from \"@cityofzion/neon-core/lib/rpc/Query\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n  private static readonly READ_LOG_FREQUENCY = 6000;\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static getRawTx = async (txid: string, networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG_2;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG_2;\n        break;\n    }\n    const rpcClient = new rpc.RPCClient(config.url);\n    let rawTx: any;\n    do {\n      try {\n        rawTx = await rpcClient.getApplicationLog(txid);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!rawTx);\n\n    return rawTx;\n  };\n\n  static findNotificationFromTxId = async (\n    txId: string,\n    scriptHash: string,\n    eventName: string,\n    networkType: INetworkType\n  ) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(\n      txId,\n      networkType\n    );\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName\n    );\n  };\n\n  static getNotificationsFromTxId = async (\n    txId: string,\n    network: INetworkType\n  ) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[]\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    const res = await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    if (res.state === \"FAULT\") {\n      console.error(\"RPC read error\" + res);\n      throw new Error(res.exception ? res.exception : \"Network error\");\n    }\n    return res;\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","/Users/ed/Projects/FTW/client/src/packages/neo/api/rest.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/wallet/index.ts",["903","904","905"],"import neo3Dapi from \"neo3-dapi\";\nimport { ITransaction, IWalletType } from \"./interfaces\";\nimport { DEV, NEO_LINE, O3, WALLET_LIST } from \"../consts\";\nimport { DevWallet } from \"./dev-wallet\";\nimport { rpc, sc, tx, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { INetworkType, Network } from \"../network\";\nimport { LocalStorage } from \"../local-storage\";\nimport moment from \"moment\";\n\nexport class WalletAPI {\n  walletType: IWalletType;\n\n  constructor(walletType: IWalletType) {\n    this.walletType = walletType;\n  }\n\n  static list = WALLET_LIST;\n\n  private O3Wallet = async () => {\n    const instance = neo3Dapi;\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const network = await instance.getNetworks();\n    const balances = await instance.getBalance(\n      {\n        params: {\n          address: account.address,\n          contracts: [],\n        },\n      },\n      network.defaultNetwork\n    );\n    // TODO: Need to some sort of validation for balances in case wallet doesn't have any address?\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private NeoLine = async () => {\n    // @ts-ignore\n    const instance = new NEOLineN3.Init();\n    // @ts-ignore\n    // NEOLineN3 doesn't have getNetworks function\n    const instance2 = new NEOLine.Init();\n    const network = await instance2.getNetworks();\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance({\n      params: {\n        address: account.address,\n        contracts: [],\n      },\n    });\n    return {\n      instance,\n      provider,\n      account,\n      network,\n      balances: balances[account.address],\n    };\n  };\n\n  private Dev = async (defaultNetwork: INetworkType) => {\n    const instance = DevWallet;\n    const network = await instance.getNetworks(defaultNetwork);\n    const provider = await instance.getProvider();\n    const account = await instance.getAccount();\n    const balances = await instance.getBalance(defaultNetwork);\n    return { instance, provider, account, network, balances };\n  };\n\n  /**\n   * TODO: Remove dev wallet when 3rd party has privatenet support\n   * @param defaultNetwork\n   */\n  init = async (defaultNetwork: INetworkType): Promise<any> => {\n    let wallet;\n    try {\n      switch (this.walletType) {\n        case O3:\n          wallet = await this.O3Wallet();\n          break;\n        case NEO_LINE:\n          wallet = await this.NeoLine();\n          break;\n        case DEV:\n          wallet = await this.Dev(defaultNetwork);\n          break;\n      }\n      return {\n        key: this.walletType,\n        ...wallet,\n      };\n    } catch (e: any) {\n      throw new Error(e.description);\n    }\n  };\n\n  /* Control signing and send transaction. TODO:Need to improve type hardcoding later */\n  invoke = async (\n    currentNetwork: INetworkType,\n    senderAddress: string,\n    invokeScript: any,\n    extraSystemFee?: string\n  ): Promise<string> => {\n    const { instance, network } = await this.init(currentNetwork);\n    if (network.defaultNetwork !== currentNetwork) {\n      throw new Error(\n        \"Your wallet's network doesn't match with the app network setting.\"\n      );\n    }\n    if (extraSystemFee) {\n      invokeScript.extraSystemFee = extraSystemFee;\n    }\n\n    invokeScript.signers = [\n      {\n        account: NeonWallet.getScriptHashFromAddress(senderAddress),\n        scopes: tx.WitnessScope.CalledByEntry,\n      },\n    ];\n\n    // const rpcClient = Network.getRPCClient(currentNetwork);\n    // const transaction = await DevWallet.build(rpcClient, invokeScript);\n    // console.log(script);\n    // const invokeFunctionResponse = await rpcClient.invokeScript(\n    //   transaction.script,\n    //   transaction.signers\n    // );\n    // console.log(invokeFunctionResponse);\n    try {\n\t    const rpcClient = Network.getRPCClient(currentNetwork);\n\t    const transaction = await DevWallet.build(rpcClient, invokeScript);\n      const res = await instance.invoke(invokeScript, currentNetwork);\n      // if (this.walletType === DEV) {\n      //   res = await instance.invoke(invokeScript, currentNetwork);\n      // } else {\n      //   res = await instance.invoke(invokeScript);\n      // }\n      const submittedTx: ITransaction = {\n        network,\n        wallet: this.walletType,\n        txid: res.txid,\n        contractHash: invokeScript.scriptHash,\n        method: invokeScript.operation,\n        args: invokeScript.args,\n        createdAt: moment().format(\"MMMM Do YYYY, h:mm:ss a\"),\n      };\n      LocalStorage.addTransaction(submittedTx);\n      return res.txid;\n    } catch (e: any) {\n      // TODO: Need to improve dev wallet error handling as dapi standard.\n      if (e.description) {\n        throw new Error(e.description);\n      }\n      throw e;\n    }\n  };\n}\n","/Users/ed/Projects/FTW/client/src/packages/neo/utils/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/helpers.ts",["906"],"import {\n  base64ToAddress,\n  base64ToDate,\n  base64ToHash160,\n  base64ToString,\n} from \"../../../utils\";\nimport { u } from \"@cityofzion/neon-core\";\n\nexport const parsePaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseRecord(stackItem[3].value),\n  };\n};\n\nconst parseRecord = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractOwner: base64ToAddress(item.value[1].value),\n      contractHash: base64ToHash160(item.value[2].value), // NEO amount\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      decimals: item.value[5].value, // NEO amount\n      totalSupply: item.value[6].value, // NEO amount\n      author: base64ToString(item.value[7].value), // NEO amount\n      description: base64ToString(item.value[8].value), // NEO amount\n      createdAt: base64ToDate(item.value[9].value),\n    };\n  });\n};\n\nexport const parseNEP11RecordPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseNEP11Record(stackItem[3].value),\n  };\n};\n\nconst parseNEP11Record = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractHash: base64ToHash160(item.value[1].value), // NEO amount\n      contractOwner: base64ToAddress(item.value[2].value),\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      description: base64ToString(item.value[5].value), // NEO amount\n      author: base64ToString(item.value[6].value), // NEO amount\n      email: base64ToString(item.value[7].value), // NEO amount\n      createdAt: base64ToDate(item.value[8].value),\n    };\n  });\n};\n\nexport const parseSmithProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/local-storage/index.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Banner.tsx",["907","908","909","910"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { TOURNAMENT_PATH } from \"../../../../../consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../packages/neo/contracts/ftw/tournament\";\n\ninterface IBanner {\n  arenaNo: string;\n}\nconst Banner = ({ arenaNo }: IBanner) => {\n  const location = useLocation();\n  const [status, setStatus] = useState<{\n    prize: number;\n    gameNo: number;\n  }>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchBetAmount() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getCurrentPrize(\n          arenaNo\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchBetAmount();\n  }, [network, location.pathname]);\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"level\">\n            <div className=\"level-left\">\n              <div className=\"level-item  has-text-centered\">\n                <div>\n                  <p className=\"heading\">Round</p>\n                  <p className=\"title is-5\">#{status ? status.gameNo : \"\"}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"level-left\">\n              <div className=\"level-item\">\n                <h1 className=\"title is-marginless\">ARENA {arenaNo}</h1>\n              </div>\n            </div>\n\n            <div className=\"level-left\">\n              <div className=\"level-item has-text-centered\">\n                <div>\n                  <p className=\"heading\">Prize</p>\n                  <p className=\"title is-5\">\n                    {status ? status.prize + \" GAS\" : \"\"}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              <li\n                className={\n                  location.pathname === TOURNAMENT_PATH + \"/\" + arenaNo\n                    ? \"is-active\"\n                    : \"\"\n                }\n              >\n                <Link to={TOURNAMENT_PATH + \"/\" + arenaNo}>Players</Link>\n              </li>\n              <li\n                className={\n                  location.pathname ===\n                  TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"\n                    ? \"is-active\"\n                    : \"\"\n                }\n              >\n                <Link to={TOURNAMENT_PATH + \"/\" + arenaNo + \"/history\"}>\n                  Champions\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nep17/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/bank/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/api/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/wallet/dev-wallet.ts",["911"],"import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\n// tslint:disable-next-line:no-submodule-imports\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpcClient = Network.getRPCClient(network);\n    const res = await rpcClient.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      let amount;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n        amount = u.BigInteger.fromNumber(item.amount).toDecimal(8).toString();\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n        amount = item.amount;\n      }\n      balances.push({\n        contract: item.assethash,\n        amount,\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    },\n    network: INetworkType\n  ) {\n    const rpcClient = Network.getRPCClient(network);\n    const version: any = await rpcClient.getVersion();\n    const txObj = await DevWallet.build(rpcClient, invokeScript);\n    txObj.sign(DevWallet.account, version.protocol.network);\n    const txid = await rpcClient.sendRawTransaction(txObj);\n    // // tslint:disable-next-line:no-console\n    // console.log(\n    //   JSON.stringify(\n    //     {\n    //       RPC: rpc,\n    //       Transaction: txObj,\n    //       Network: version,\n    //       \"Network Fee\": txObj.networkFee.toDecimal(8).toString(),\n    //       \"System Fee\": txObj.systemFee.toDecimal(8).toString(),\n    //     },\n    //     null,\n    //     4\n    //   )\n    // );\n    return {\n      txid,\n      nodeUrl: rpcClient.url,\n    };\n  }\n\n  static createScript = (invokeScript: sc.ContractCallJson) => {\n    return sc.createScript({\n      scriptHash: invokeScript.scriptHash,\n      operation: invokeScript.operation,\n      args: invokeScript.args\n        ? invokeScript.args.map((param: any) => convertContractCallParam(param))\n        : [],\n    });\n  };\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    }\n    // cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n\n    const script = this.createScript(invokeScript);\n\n    // if (cosignerAddress) {\n    //   signers.push({\n    //     account: wallet.getScriptHashFromAddress(cosignerAddress),\n    //     scopes: tx.WitnessScope.Global,\n    //   });\n    // }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers: invokeScript.signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    if (invokeScript.extraSystemFee) {\n      const fee = u.BigInteger.fromDecimal(\n        invokeScript.extraSystemFee,\n        8\n      ).toString();\n      transaction.systemFee = systemFee.add(parseFloat(fee));\n    }\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/helpers.ts",["912"],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/helpers.ts",["913"],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/index.tsx",["914"],"import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport DisplayRuneWithProperties from \"../../../components/DisplayRuneWithProperties\";\nimport PlayerModal from \"./components/PlayerModal\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport RegisterButton from \"./components/ArenaRegisterButton\";\n\nconst Players = ({ arenaNo }: { arenaNo: string }) => {\n  const [playerModalActive, setPlayerModalActive] = useState<\n    IRuneMeta & { tokenId: string; gameOwner: string }\n  >();\n\n  const onPlayerModalActive = (obj) => setPlayerModalActive(obj);\n  const [players, setPlayers] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getPlayers(arenaNo);\n        setPlayers(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          <RegisterButton playerCount={players.length} arenaNo={arenaNo} />\n          {players.length > 0 ? (\n            <div className=\"columns is-multiline is-mobile\">\n              {players.map(({ tokenId, owner }) => {\n                return (\n                  <div\n                    key={tokenId}\n                    className=\"column is-1-desktop is-3-mobile\"\n                  >\n                    <DisplayRuneWithProperties\n                      key={tokenId}\n                      width={\"100%\"}\n                      height={\"100%\"}\n                      tokenId={tokenId}\n                      network={network}\n                      isOwner={\n                        connectedWallet\n                          ? connectedWallet.account.address === owner\n                          : false\n                      }\n                      onClick={(obj: any) =>\n                        onPlayerModalActive({ ...obj, gameOwner: owner })\n                      }\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div>No players</div>\n          )}\n        </div>\n      )}\n      {playerModalActive && (\n        <PlayerModal\n          arenaNo={arenaNo}\n          onClose={() => setPlayerModalActive(undefined)}\n          player={playerModalActive}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Players;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/index.tsx",["915"],"import React, { useEffect, useState } from \"react\";\nimport Pagination from \"bulma-pagination-react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport NFTDetailModal from \"./NFTDetailModal\";\nimport HistoryTable from \"./HistoryTable\";\nimport Replay from \"./Replay\";\nimport PlayButton from \"../../../components/PlayButton\";\nimport { ADMIN_FOR_PLAY } from \"../../../../../../packages/neo/contracts/ftw/tournament/consts\";\nimport AfterTransactionSubmitted from \"../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IHistoryProps {\n  arenaNo: string;\n}\nconst History = ({ arenaNo }: IHistoryProps) => {\n  const [playTxid, setPlayTxid] = useState(\"\");\n  const [claimTxid, setClaimTxid] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [nftModalActive, setNftModalActive] = useState();\n  const [replayModalActive, setReplayModalActive] = useState();\n  const [history, setHistory] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const onNFTModalActive = (obj) => setNftModalActive(obj);\n  const onReplayModalActive = (obj) => setReplayModalActive(obj);\n\n  useEffect(() => {\n    async function fetchHistory() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).history(\n          arenaNo,\n          page\n        );\n        setHistory(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchHistory();\n  }, [connectedWallet, network, page]);\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <div className=\"box\">\n            <div className=\"level is-mobile\">\n              <div className=\"level-left\">\n                <div className=\"level-item\">\n                  <h3 className=\"title\">History</h3>\n                </div>\n              </div>\n\n              {ADMIN_FOR_PLAY[network].length !== 0 &&\n              ADMIN_FOR_PLAY[network].includes(\n                connectedWallet?.account.address\n              ) ? (\n                <div className=\"level-right\">\n                  <div className=\"level-item\">\n                    <PlayButton onSubmitted={setPlayTxid} arenaNo={arenaNo} />\n                  </div>\n                </div>\n              ) : ADMIN_FOR_PLAY[network].length === 0 ? (\n                <div className=\"level-right\">\n                  <div className=\"level-item\">\n                    <PlayButton onSubmitted={setPlayTxid} arenaNo={arenaNo} />\n                  </div>\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </div>\n            {history.items && history.items.length > 0 ? (\n              history.items.map((game) => {\n                return (\n                  <HistoryTable\n                    key={game.gameNo}\n                    width={\"64px\"}\n                    height={\"64px\"}\n                    history={game}\n                    arenaNo={arenaNo}\n                    network={network}\n                    onClick={(obj) => {\n                      onNFTModalActive(obj);\n                    }}\n                    onReplay={() => onReplayModalActive(game)}\n                    onClaimed={setClaimTxid}\n                  />\n                );\n              })\n            ) : (\n              <div>Game hasn't been played</div>\n            )}\n            {history && history.totalPages > 1 && (\n              <div className=\"media\">\n                <div className=\"media-content\">\n                  <Pagination\n                    pages={history.totalPages}\n                    currentPage={page}\n                    onChange={(_page) => {\n                      if (page !== _page) {\n                        setPage(_page);\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      {nftModalActive && (\n        <NFTDetailModal\n          rune={nftModalActive}\n          onClose={() => setNftModalActive(undefined)}\n        />\n      )}\n\n      {replayModalActive && (\n        <Replay\n          arenaNo={arenaNo}\n          gameHistory={replayModalActive}\n          onClick={(obj) => {\n            onNFTModalActive(obj);\n          }}\n          onClose={() => setReplayModalActive(undefined)}\n        />\n      )}\n\n      {playTxid && (\n        <Modal onClose={() => setPlayTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={playTxid}\n            network={network}\n            onSuccess={() => setPlayTxid(\"\")}\n            onError={() => setPlayTxid(\"\")}\n          />\n        </Modal>\n      )}\n\n      {claimTxid && (\n        <Modal onClose={() => setClaimTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={playTxid}\n            network={network}\n            onSuccess={() => setClaimTxid(\"\")}\n            onError={() => setClaimTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default History;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/Replay.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/PlayerModal.tsx",["916"],"import React, { useState } from \"react\";\nimport { IRuneMeta } from \"../../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport BetButton from \"../../../../components/BetButton\";\nimport LeaveButton from \"../../../../components/LeaveButton\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\n\ninterface IPlayerModalProps {\n  arenaNo: string;\n  player: IRuneMeta & { tokenId: string; gameOwner: string };\n  onClose: () => void;\n}\nconst PlayerModal = ({ arenaNo, player, onClose }: IPlayerModalProps) => {\n  const [txid, setTxid] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  return (\n    <Modal onClose={onClose}>\n      <div>\n        {txid ? (\n          <AfterTransactionSubmitted\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n            txid={txid}\n            network={network}\n          />\n        ) : (\n          <div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <img src={player.image} />\n              </div>\n              <div className=\"column\">\n                <div className=\"content\">\n                  <strong>Name</strong>\n                  <br />\n                  <p>{player.name}</p>\n                  <strong>Phase</strong>\n                  <p>{player.phase}</p>\n                  <strong>Luck</strong>\n                  <p>{player.luck}</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <BetButton\n                  setTxid={setTxid}\n                  arenaNo={arenaNo}\n                  tokenId={player.tokenId}\n                />\n              </div>\n              <div className=\"column\">\n                <button\n                  onClick={onClose}\n                  className=\"button is-light is-fullwidth\"\n                >\n                  Close\n                </button>\n              </div>\n              {connectedWallet &&\n              connectedWallet.account.address === player.gameOwner ? (\n                <div className=\"column\">\n                  <LeaveButton\n                    setTxid={setTxid}\n                    arenaNo={arenaNo}\n                    tokenId={player.tokenId}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default PlayerModal;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/NFTListModal.tsx",["917"],"import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { NFTContract } from \"../../../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toast } from \"react-hot-toast\";\n\ninterface INFTListModalModal {\n  arenaNo: string;\n  onClose: () => void;\n}\nconst NFTListModal = ({ arenaNo, onClose }: INFTListModalModal) => {\n  const [txid, setTxid] = useState(\"\");\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n\n  const onRegister = async (tokenId: string) => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).register(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        {txid ? (\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n          />\n        ) : (\n          <div>\n            <div className=\"block\">\n              <h5 className=\"title is-5\">Select a NFT to send to the ARENA</h5>\n            </div>\n            <div>\n              {isLoading ? (\n                <div>Loading..</div>\n              ) : error ? (\n                <div>{error}</div>\n              ) : tokens.length > 0 ? (\n                <div\n                  style={{\n                    flexFlow: \"wrap\",\n                  }}\n                  className=\"is-flex\"\n                >\n                  {tokens.map((token) => {\n                    return (\n                      <figure\n                        key={token.tokenId}\n                        // style={{ width, height }}\n                        className=\"image is-64x64\"\n                        onClick={() => onRegister(token.tokenId)}\n                      >\n                        <img src={token.image} />\n                      </figure>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div>You don't have runes</div>\n              )}\n            </div>\n          </div>\n        )}\n      </>\n    </Modal>\n  );\n};\n\nexport default NFTListModal;\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/index.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/TournamentTree.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/ArenaRegisterButton.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/PlayButton.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/NFTDetailModal.tsx",["918"],"import React from \"react\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IPlayerModalProps {\n  rune: IRuneMeta;\n  onClose: () => void;\n}\nconst NFTDetailModal = ({ rune, onClose }: IPlayerModalProps) => {\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <img src={rune.image} />\n        </div>\n        <div className=\"column\">\n          <div className=\"content\">\n            <strong>Name</strong>\n            <br />\n            <p>{rune.name}</p>\n            <strong>Phase</strong>\n            <p>{rune.phase}</p>\n            <strong>Luck</strong>\n            <p>{rune.luck}</p>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NFTDetailModal;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/HistoryTable.tsx",["919","920","921"],"import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaPlay } from \"react-icons/fa\";\nimport { NFTContract } from \"../../../../../../packages/neo/contracts\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { INetworkType } from \"../../../../../../packages/neo/network\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport ClaimButton from \"../../../components/ClaimButton\";\nimport { u } from \"@cityofzion/neon-core\";\nimport { toDecimal } from \"../../../../../../packages/neo/utils\";\n\ninterface IDisplayRuneProps {\n  history: IHistoryGame;\n  arenaNo: string;\n  width: string;\n  height: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n  onReplay: () => void;\n  onClaimed: (txid: string) => void;\n}\n\nconst HistoryTable = ({\n  history,\n  arenaNo,\n  width,\n  height,\n  network,\n  onClick,\n  onReplay,\n  onClaimed,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(\n          history.champion\n        );\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [history]);\n  if (!token) return <></>;\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        {\" \"}\n        <figure\n          style={{ width, height }}\n          className=\"image rune\"\n          onClick={() => onClick(token)}\n        >\n          <img src={token.image} />\n        </figure>\n      </div>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          Game #{history.gameNo}\n          <br />\n          Champ: {token.name} ({token.phase} / {token.luck})\n          <br />\n          Total bets: {toDecimal(history.totalBets)}\n          <br />\n          Rollover: {toDecimal(history.rollover)}\n          <br />\n          Total bets on champ: {toDecimal(history.betsOnChampion)}\n          <br />\n          Fee: {toDecimal(history.fee)}\n          <br />\n          Champ prize: {toDecimal(history.championPrize)}\n        </div>\n        <button onClick={() => onReplay()} className=\"button is-black is-small\">\n          <span className=\"icon\">\n            <FaPlay />\n          </span>\n          <span>Replay</span>\n        </button>\n      </div>\n      <div className=\"media-right\">\n        <div>\n          <ClaimButton\n            onClaimed={onClaimed}\n            arenaNo={arenaNo}\n            history={history}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryTable;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/DisplayRuneWithProperties.tsx",["922","923","924"],"import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { INetworkType } from \"../../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { RestAPI } from \"../../../../packages/neo/api\";\nimport { FaStar } from \"react-icons/fa\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  isOwner?: boolean;\n  onClick: (obj) => void;\n}\n\nconst DisplayRuneWithProperties = ({\n  width,\n  height,\n  tokenId,\n  network,\n  isOwner,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchRune() {\n      try {\n        const res = await new RestAPI(network).getRune(tokenId);\n        setToken(res);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getProperties(tokenId);\n        // setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchRune();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune is-relative\"\n      onClick={() => onClick({ ...token, tokenId })}\n    >\n      <img src={token.image} />\n      {isOwner && (\n        <FaStar\n          style={{ position: \"absolute\", top: \"2px\", left: \"3px\" }}\n          className=\"has-text-warning\"\n        />\n      )}\n    </figure>\n  );\n};\n\nexport default DisplayRuneWithProperties;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/ClaimButton.tsx",["925"],"import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { IHistoryGame } from \"../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport { calculateClaimableAmount } from \"../../../../packages/neo/contracts/ftw/tournament/helpers\";\n\ninterface IClaimButtonProps {\n  arenaNo: string;\n  history: IHistoryGame;\n  onClaimed: (txid: string) => void;\n}\nconst ClaimButton = ({ arenaNo, history, onClaimed }: IClaimButtonProps) => {\n  const [status, setStatus] = useState<any>({\n    betAmount: 0,\n    isClaimed: false,\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).claim(\n          connectedWallet,\n          arenaNo,\n          history.gameNo\n        );\n        addPendingTransaction(res);\n        onClaimed(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  useEffect(() => {\n    async function fetchBetAmount(address: string) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetAmount(\n          arenaNo,\n          history.gameNo,\n          history.champion,\n          address\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchBetAmount(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network]);\n  if (!connectedWallet) return <></>;\n  if (!status.betAmount) return <></>;\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {status.isClaimed ? (\n            <button disabled={true} className=\"button is-info is-fullwidth\">\n              Claimed\n            </button>\n          ) : (\n            <button className=\"button is-info is-fullwidth\" onClick={onClaim}>\n              Claim {calculateClaimableAmount(history, status.betAmount)} GAS\n            </button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ClaimButton;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/Banner.tsx",["926"],"import React, { useState } from \"react\";\nimport { SMITH_PATH, TOURNAMENT_PATH } from \"../../../consts\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport NEP17FormModal from \"./NEP17FormModal\";\nimport NEP11FormModal from \"./NEP11FormModal\";\n\nconst Banner = () => {\n  const location = useLocation();\n  const [isNep11FormModalActive, setNep11FormModalActive] = useState(false);\n  const [isNep17FormModalActive, setNep17FormModalActive] = useState(false);\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">Forthewin Smith</h1>\n          <p className=\"subtitle\">\n            Create your own NEP11 and NEP17 smart contracts without any codes\n          </p>\n          <div className=\"buttons\">\n            <button\n              onClick={() => setNep11FormModalActive(true)}\n              className=\"button is-primary press-font\"\n            >\n              Deploy NEP11\n            </button>\n            <button\n              onClick={() => setNep17FormModalActive(true)}\n              className=\"button is-primary press-font\"\n            >\n              Deploy NEP17\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              <li\n                className={location.pathname === SMITH_PATH ? \"is-active\" : \"\"}\n              >\n                <Link to={SMITH_PATH}>NEP11 (NFT)</Link>\n              </li>\n              <li\n                className={\n                  location.pathname === SMITH_PATH + \"/nep17\" ? \"is-active\" : \"\"\n                }\n              >\n                <Link to={SMITH_PATH + \"/nep17\"}>NEP17 (Token)</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n      {isNep11FormModalActive && (\n        <NEP11FormModal onClose={() => setNep11FormModalActive(false)} />\n      )}\n      {isNep17FormModalActive && (\n        <NEP17FormModal onClose={() => setNep17FormModalActive(false)} />\n      )}\n    </section>\n  );\n};\n\nexport default Banner;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP17/index.tsx",["927"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\n\nconst NEP17Smith = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [status, setStatus] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getStatus();\n        setStatus(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {status && status.records.items.length > 0 ? (\n            status.records.items.map((item, i) => (\n              <ContractCard key={\"contact17\" + i} data={item} />\n            ))\n          ) : (\n            <div></div>\n          )}\n        </div>\n      )}\n      {/*{isActionModalActive && (*/}\n      {/*  <ActionModal onClose={() => setActionModalActive(false)} />*/}\n      {/*)}*/}\n    </>\n  );\n};\n\nexport default NEP17Smith;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP17/ContractCard.tsx",["928"],"import React from \"react\";\nimport { ISmithRecord } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { FaExternalLinkAlt } from \"react-icons/all\";\n\ninterface IContractCardProps {\n  data: ISmithRecord;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network } = useWallet();\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">\n          #{data.no} {data.name}\n        </h5>\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/contractinfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n        </div>\n        <div className=\"field is-grouped is-grouped-multiline\">\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Symbol</span>\n              <span className=\"tag is-info\">{data.symbol}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Decimals</span>\n              <span className=\"tag is-info\">{data.decimals}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Total supply</span>\n              <span className=\"tag is-info\">{data.totalSupply}</span>\n            </div>\n          </div>\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Author</span>\n              <span className=\"tag is-info\">{data.author}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContractCard;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP17FormModal.tsx",["929","930"],"import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport NumberFormat from \"react-number-format\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\n\nconst NEP17FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    decimals: \"8\",\n    totalSupply: \"\",\n    author: \"\",\n    description: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        try {\n          const res = await new SmithContract(network).createNEP17(\n            connectedWallet,\n            values.name,\n            values.symbol,\n            values.decimals,\n            values.totalSupply,\n            values.author,\n            values.description\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Create NEP17 Contract</h1>\n\n          <div className=\"field is-grouped is-grouped-multiline\">\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Deploy fee</span>\n                <span className=\"tag is-primary\">10 GAS</span>\n              </div>\n            </div>\n\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">System fee</span>\n                <span className=\"tag is-primary\">\n                  {DEPLOY_FEE[network]} GAS\n                </span>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">Token Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Symbol</label>\n                <div className=\"control\">\n                  <input\n                    value={values.symbol}\n                    onChange={(e) =>\n                      handleValueChange(\"symbol\", e.target.value)\n                    }\n                    className=\"input\"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Decimals</label>\n                <div className=\"control\">\n                  <NumberFormat\n                    decimalScale={0}\n                    inputMode=\"decimal\"\n                    className=\"input\"\n                    value={values.decimals}\n                    onValueChange={(value) => {\n                      handleValueChange(\"decimals\", value.value);\n                    }}\n                    max={18}\n                    allowNegative={false}\n                    allowLeadingZeros={false}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Total supply</label>\n            <div className=\"control\">\n              <NumberFormat\n                allowNegative={false}\n                decimalScale={0}\n                inputMode=\"decimal\"\n                className=\"input\"\n                value={values.totalSupply}\n                onValueChange={(value) => {\n                  handleValueChange(\"totalSupply\", value.value);\n                }}\n                allowLeadingZeros={false}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.decimals ||\n              parseFloat(values.decimals) > 18 ||\n              parseFloat(values.totalSupply) < 1 ||\n              !values.author ||\n              !values.description ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP17FormModal;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP11FormModal.tsx",["931"],"import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst NEP11FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    author: \"\",\n    description: \"\",\n    email: \"\",\n  });\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        try {\n          const res = await new SmithContract(network).createNEP11(\n            connectedWallet,\n            values.name,\n            values.symbol,\n            values.author,\n            values.description,\n            values.email\n          );\n          setTxid(res);\n        } catch (e: any) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Create NEP11 Contract</h1>\n          <div className=\"field is-grouped is-grouped-multiline\">\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Deploy fee</span>\n                <span className=\"tag is-primary\">10 GAS</span>\n              </div>\n            </div>\n\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">System fee</span>\n                <span className=\"tag is-primary\">\n                  {DEPLOY_FEE[network]} GAS\n                </span>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">NFT Contract Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Symbol</label>\n            <div className=\"control\">\n              <input\n                value={values.symbol}\n                onChange={(e) => handleValueChange(\"symbol\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control\">\n              <input\n                value={values.email}\n                onChange={(e) => handleValueChange(\"email\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.author ||\n              !values.description ||\n              !values.email ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP11FormModal;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/index.tsx",["932"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\nimport { ISmithNEP11RecordPaginate } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\n\nconst NEP11Smith = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState<ISmithNEP11RecordPaginate>();\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getNEP11Records();\n        setData(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {data && data.items.length > 0 ? (\n            data.items.map((item, i) => (\n              <ContractCard key={\"contract\" + i} data={item} />\n            ))\n          ) : (\n            <div>No contracts to display</div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NEP11Smith;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/ContractCard.tsx",["933"],"import React, { useState } from \"react\";\nimport { ISmithNEP11Record } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport NEP11MintFormModal from \"../../NEP11MintFormModal\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport Tokens from \"./Tokens\";\n\ninterface IContractCardProps {\n  data: ISmithNEP11Record;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network, connectedWallet } = useWallet();\n  const [isMintModalActive, setMintModalActive] = useState(\"\");\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">\n          #{data.no} {data.name}\n        </h5>\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/NFTtokeninfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n          <br />\n          <Tokens contractHash={data.contractHash} />\n        </div>\n      </div>\n      {connectedWallet &&\n        connectedWallet.account.address === data.contractOwner && (\n          <div className=\"media-right\">\n            <div className=\"block\">\n              <button\n                onClick={() => setMintModalActive(data.contractHash)}\n                className=\"button is-primary press-font\"\n              >\n                Mint\n              </button>\n            </div>\n          </div>\n        )}\n\n      {isMintModalActive && (\n        <NEP11MintFormModal\n          contractHash={isMintModalActive}\n          onClose={() => setMintModalActive(\"\")}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ContractCard;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP11MintFormModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/Tokens.tsx",["934","935"],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/DisplayNFT.tsx",["936","937"],"import React, { useEffect, useState } from \"react\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\n\ninterface IDisplayRuneProps {\n  contractHash: string;\n  tokenId: string;\n  network: INetworkType;\n}\n\nconst DisplayRune = ({ contractHash, tokenId, network }: IDisplayRuneProps) => {\n  const [token, setToken] = useState<any>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new SmithContract(network).getProperties(\n          contractHash,\n          tokenId\n        );\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return <img width=\"100%\" height=\"100%\" src={token.image} />;\n};\n\nexport default DisplayRune;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/LeaveButton.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/BetButton.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/packages/ui/AfterTransactionSubmitted/index.tsx",["938","939"],"import React, { useEffect, useState } from \"react\";\nimport { INetworkType, Network } from \"../../neo/network\";\nimport RuneLoading from \"./RuneLoading\";\nimport CheckMark from \"../../../ui/pages/Tournament/scenes/Arena/Players/components/CheckMark\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExclamationCircle } from \"react-icons/all\";\nimport { TESTNET } from \"../../neo/consts\";\n\ninterface IAfterTransactionSubmittedProps {\n  txid: string;\n  network: INetworkType;\n  onSuccess: () => void;\n  onError: () => void;\n}\nconst AfterTransactionSubmitted = ({\n  txid,\n  network,\n  onSuccess,\n  onError,\n}: IAfterTransactionSubmittedProps) => {\n  const [isDone, setDone] = useState(false);\n  const [hasError, setError] = useState(\"\");\n\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        const res = await Network.getRawTx(txid, network);\n        if (res) {\n          setDone(true);\n        }\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    checkTxid();\n  }, [txid]);\n\n  return (\n    <div>\n      <div\n        style={{\n          width: \"200px\",\n          height: \"200px\",\n          margin: \"auto\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        className=\"\"\n      >\n        {hasError ? (\n          <FaExclamationCircle size={90} className=\"has-text-danger\" />\n        ) : isDone ? (\n          <CheckMark />\n        ) : (\n          <RuneLoading />\n        )}\n      </div>\n      <div className=\"has-background  has-text-centered mt-5\">\n        {hasError ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Error occurred</h1>\n            <p className=\"subtitle is-7\">{hasError}</p>\n            <button onClick={onError} className=\"button is-black\">\n              Close\n            </button>\n          </div>\n        ) : isDone ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Submitted</h1>\n            <p className=\"subtitle is-7\">Your transaction accepted</p>\n            <div className=\"block\">\n              <a\n                target=\"_blank\"\n                href={`https://${\n                  network === TESTNET && \"testnet.\"\n                }explorer.onegate.space/transactionInfo/${txid}`}\n              >\n                View txid on explorer\n              </a>\n            </div>\n            <div className=\"block\">\n              <button onClick={onSuccess} className=\"button is-black\">\n                Close\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <h1 className=\"title is-5\">Submitting..</h1>\n            <p className=\"subtitle is-7\">\n              Please wait until your transaction accepted\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AfterTransactionSubmitted;\n","/Users/ed/Projects/FTW/client/src/packages/ui/AfterTransactionSubmitted/RuneLoading.tsx",["940","941","942"],"import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\nconst RuneLoading = () => {\n\tconst [colors, setColors] = useState(getColors());\n  const [bg, setBg] = useState(\"black\");\n  const [dot1, setDot1] = useState(\"black\");\n  const [dot2, setDot2] = useState(\"black\");\n  const [dot3, setDot3] = useState(\"black\");\n  const [dot4, setDot4] = useState(\"black\");\n  const [body, setBody] = useState(\"black\");\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setBody(\"white\");\n    }, 1000);\n    timer = setTimeout(() => {\n      setDot1(\"white\");\n    }, 2000);\n    timer = setTimeout(() => {\n      setDot2(\"white\");\n    }, 3000);\n    timer = setTimeout(() => {\n      setDot3(\"white\");\n    }, 4000);\n    timer = setTimeout(() => {\n      setDot4(\"white\");\n    }, 5000);\n    timer = setTimeout(() => {\n      setBg(\"rgb(\" + colors[0] + \",\" + colors[1] + \",\" + colors[2] + \")\");\n    }, 6000);\n    timer = setTimeout(() => {\n      setBody(\"rgb(\" + colors[3] + \",\" + colors[4] + \",\" + colors[5] + \")\");\n    }, 7000);\n    timer = setTimeout(() => {\n      setDot1(\"rgb(\" + colors[6] + \",\" + colors[7] + \",\" + colors[8] + \")\");\n    }, 8000);\n    timer = setTimeout(() => {\n      setDot2(\"rgb(\" + colors[9] + \",\" + colors[10] + \",\" + colors[11] + \")\");\n    }, 9000);\n    timer = setTimeout(() => {\n      setDot3(\"rgb(\" + colors[12] + \",\" + colors[13] + \",\" + colors[14] + \")\");\n    }, 10000);\n    timer = setTimeout(() => {\n      setDot4(\"rgb(\" + colors[15] + \",\" + colors[16] + \",\" + colors[17] + \")\");\n    }, 11000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <img width=\"100%\" height=\"100%\" src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default RuneLoading;\n","/Users/ed/Projects/FTW/client/src/ui/components/RandomRune.tsx",["943","944"],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/CheckMark.tsx",[],{"ruleId":"945","replacedBy":"946"},{"ruleId":"947","replacedBy":"948"},{"ruleId":"949","severity":1,"message":"950","line":71,"column":21,"nodeType":"951","endLine":71,"endColumn":69},{"ruleId":"952","severity":1,"message":"953","line":87,"column":15,"nodeType":"951","endLine":87,"endColumn":75},{"ruleId":"954","severity":1,"message":"955","line":5,"column":8,"nodeType":"956","messageId":"957","endLine":5,"endColumn":25},{"ruleId":"958","severity":1,"message":"959","line":45,"column":19,"nodeType":"951","messageId":"960","endLine":49,"endColumn":20,"fix":"961"},{"ruleId":"958","severity":1,"message":"959","line":82,"column":19,"nodeType":"951","messageId":"960","endLine":86,"endColumn":20,"fix":"962"},{"ruleId":"958","severity":1,"message":"959","line":101,"column":19,"nodeType":"951","messageId":"960","endLine":105,"endColumn":20,"fix":"963"},{"ruleId":"958","severity":1,"message":"959","line":113,"column":19,"nodeType":"951","messageId":"960","endLine":117,"endColumn":20,"fix":"964"},{"ruleId":"965","severity":1,"message":"966","line":50,"column":6,"nodeType":"967","endLine":50,"endColumn":30,"suggestions":"968"},{"ruleId":"952","severity":1,"message":"953","line":63,"column":19,"nodeType":"951","endLine":63,"endColumn":55},{"ruleId":"952","severity":1,"message":"953","line":67,"column":21,"nodeType":"951","endLine":67,"endColumn":59},{"ruleId":"952","severity":1,"message":"953","line":71,"column":19,"nodeType":"951","endLine":71,"endColumn":60},{"ruleId":"952","severity":1,"message":"953","line":74,"column":19,"nodeType":"951","endLine":74,"endColumn":56},{"ruleId":"949","severity":1,"message":"950","line":82,"column":15,"nodeType":"951","endLine":82,"endColumn":40},{"ruleId":"954","severity":1,"message":"969","line":4,"column":10,"nodeType":"956","messageId":"957","endLine":4,"endColumn":22},{"ruleId":"954","severity":1,"message":"970","line":4,"column":30,"nodeType":"956","messageId":"957","endLine":4,"endColumn":40},{"ruleId":"965","severity":1,"message":"971","line":30,"column":6,"nodeType":"967","endLine":30,"endColumn":8,"suggestions":"972"},{"ruleId":"949","severity":1,"message":"950","line":33,"column":5,"nodeType":"951","endLine":33,"endColumn":77},{"ruleId":"954","severity":1,"message":"973","line":14,"column":10,"nodeType":"956","messageId":"957","endLine":14,"endColumn":14},{"ruleId":"954","severity":1,"message":"974","line":3,"column":8,"nodeType":"956","messageId":"957","endLine":3,"endColumn":25},{"ruleId":"965","severity":1,"message":"975","line":31,"column":6,"nodeType":"967","endLine":31,"endColumn":15,"suggestions":"976"},{"ruleId":"949","severity":1,"message":"950","line":47,"column":13,"nodeType":"951","endLine":47,"endColumn":37},{"ruleId":"954","severity":1,"message":"977","line":3,"column":10,"nodeType":"956","messageId":"957","endLine":3,"endColumn":19},{"ruleId":"965","severity":1,"message":"966","line":33,"column":6,"nodeType":"967","endLine":33,"endColumn":15,"suggestions":"978"},{"ruleId":"949","severity":1,"message":"950","line":41,"column":7,"nodeType":"951","endLine":41,"endColumn":32},{"ruleId":"945","replacedBy":"979"},{"ruleId":"947","replacedBy":"980"},{"ruleId":"954","severity":1,"message":"981","line":1,"column":17,"nodeType":"956","messageId":"957","endLine":1,"endColumn":26},{"ruleId":"954","severity":1,"message":"982","line":8,"column":10,"nodeType":"956","messageId":"957","endLine":8,"endColumn":17},{"ruleId":"954","severity":1,"message":"983","line":13,"column":17,"nodeType":"956","messageId":"957","endLine":13,"endColumn":20},{"ruleId":"965","severity":1,"message":"984","line":24,"column":6,"nodeType":"967","endLine":24,"endColumn":27,"suggestions":"985"},{"ruleId":"986","severity":1,"message":"987","line":102,"column":26,"nodeType":"988","messageId":"989","endLine":102,"endColumn":28},{"ruleId":"952","severity":1,"message":"953","line":18,"column":13,"nodeType":"951","endLine":22,"endColumn":14},{"ruleId":"949","severity":1,"message":"950","line":34,"column":13,"nodeType":"951","endLine":34,"endColumn":61},{"ruleId":"952","severity":1,"message":"990","line":47,"column":11,"nodeType":"951","endLine":51,"endColumn":12},{"ruleId":"986","severity":1,"message":"987","line":220,"column":28,"nodeType":"988","messageId":"989","endLine":220,"endColumn":30},{"ruleId":"954","severity":1,"message":"991","line":2,"column":40,"nodeType":"956","messageId":"957","endLine":2,"endColumn":54},{"ruleId":"986","severity":1,"message":"987","line":8,"column":33,"nodeType":"988","messageId":"989","endLine":8,"endColumn":35},{"ruleId":"965","severity":1,"message":"992","line":84,"column":6,"nodeType":"967","endLine":84,"endColumn":8,"suggestions":"993"},{"ruleId":"949","severity":1,"message":"950","line":101,"column":17,"nodeType":"951","endLine":101,"endColumn":65},{"ruleId":"952","severity":1,"message":"953","line":117,"column":11,"nodeType":"951","endLine":117,"endColumn":73},{"ruleId":"954","severity":1,"message":"994","line":5,"column":8,"nodeType":"956","messageId":"957","endLine":5,"endColumn":13},{"ruleId":"954","severity":1,"message":"995","line":6,"column":8,"nodeType":"956","messageId":"957","endLine":6,"endColumn":19},{"ruleId":"954","severity":1,"message":"955","line":7,"column":8,"nodeType":"956","messageId":"957","endLine":7,"endColumn":25},{"ruleId":"954","severity":1,"message":"996","line":14,"column":10,"nodeType":"956","messageId":"957","endLine":14,"endColumn":16},{"ruleId":"954","severity":1,"message":"997","line":15,"column":10,"nodeType":"956","messageId":"957","endLine":15,"endColumn":15},{"ruleId":"965","severity":1,"message":"966","line":35,"column":6,"nodeType":"967","endLine":35,"endColumn":23,"suggestions":"998"},{"ruleId":"949","severity":1,"message":"950","line":57,"column":21,"nodeType":"951","endLine":57,"endColumn":46},{"ruleId":"954","severity":1,"message":"981","line":1,"column":17,"nodeType":"956","messageId":"957","endLine":1,"endColumn":26},{"ruleId":"952","severity":1,"message":"953","line":32,"column":13,"nodeType":"951","endLine":32,"endColumn":46},{"ruleId":"954","severity":1,"message":"999","line":4,"column":3,"nodeType":"956","messageId":"957","endLine":4,"endColumn":20},{"ruleId":"954","severity":1,"message":"1000","line":8,"column":10,"nodeType":"956","messageId":"957","endLine":8,"endColumn":11},{"ruleId":"954","severity":1,"message":"977","line":3,"column":10,"nodeType":"956","messageId":"957","endLine":3,"endColumn":19},{"ruleId":"965","severity":1,"message":"966","line":33,"column":6,"nodeType":"967","endLine":33,"endColumn":15,"suggestions":"1001"},{"ruleId":"949","severity":1,"message":"950","line":41,"column":7,"nodeType":"951","endLine":41,"endColumn":32},{"ruleId":"954","severity":1,"message":"1002","line":2,"column":10,"nodeType":"956","messageId":"957","endLine":2,"endColumn":14},{"ruleId":"954","severity":1,"message":"1003","line":2,"column":16,"nodeType":"956","messageId":"957","endLine":2,"endColumn":27},{"ruleId":"945","replacedBy":"1004"},{"ruleId":"947","replacedBy":"1005"},{"ruleId":"949","severity":1,"message":"950","line":71,"column":21,"nodeType":"951","endLine":71,"endColumn":69},{"ruleId":"952","severity":1,"message":"953","line":87,"column":15,"nodeType":"951","endLine":87,"endColumn":75},{"ruleId":"954","severity":1,"message":"1006","line":5,"column":8,"nodeType":"956","messageId":"957","endLine":5,"endColumn":19},{"ruleId":"958","severity":1,"message":"959","line":45,"column":19,"nodeType":"951","messageId":"960","endLine":49,"endColumn":20,"fix":"1007"},{"ruleId":"958","severity":1,"message":"959","line":82,"column":19,"nodeType":"951","messageId":"960","endLine":86,"endColumn":20,"fix":"1008"},{"ruleId":"958","severity":1,"message":"959","line":101,"column":19,"nodeType":"951","messageId":"960","endLine":105,"endColumn":20,"fix":"1009"},{"ruleId":"958","severity":1,"message":"959","line":113,"column":19,"nodeType":"951","messageId":"960","endLine":117,"endColumn":20,"fix":"1010"},{"ruleId":"965","severity":1,"message":"966","line":50,"column":6,"nodeType":"967","endLine":50,"endColumn":30,"suggestions":"1011"},{"ruleId":"952","severity":1,"message":"953","line":63,"column":19,"nodeType":"951","endLine":63,"endColumn":55},{"ruleId":"952","severity":1,"message":"953","line":67,"column":21,"nodeType":"951","endLine":67,"endColumn":59},{"ruleId":"952","severity":1,"message":"953","line":71,"column":19,"nodeType":"951","endLine":71,"endColumn":60},{"ruleId":"952","severity":1,"message":"953","line":74,"column":19,"nodeType":"951","endLine":74,"endColumn":56},{"ruleId":"949","severity":1,"message":"950","line":57,"column":21,"nodeType":"951","endLine":57,"endColumn":46},{"ruleId":"949","severity":1,"message":"950","line":88,"column":15,"nodeType":"951","endLine":88,"endColumn":40},{"ruleId":"965","severity":1,"message":"992","line":84,"column":6,"nodeType":"967","endLine":84,"endColumn":8,"suggestions":"1012"},{"ruleId":"949","severity":1,"message":"950","line":101,"column":17,"nodeType":"951","endLine":101,"endColumn":65},{"ruleId":"952","severity":1,"message":"953","line":117,"column":11,"nodeType":"951","endLine":117,"endColumn":73},{"ruleId":"952","severity":1,"message":"953","line":43,"column":17,"nodeType":"951","endLine":43,"endColumn":59},{"ruleId":"954","severity":1,"message":"969","line":4,"column":10,"nodeType":"956","messageId":"957","endLine":4,"endColumn":22},{"ruleId":"954","severity":1,"message":"970","line":4,"column":30,"nodeType":"956","messageId":"957","endLine":4,"endColumn":40},{"ruleId":"954","severity":1,"message":"973","line":14,"column":10,"nodeType":"956","messageId":"957","endLine":14,"endColumn":14},{"ruleId":"954","severity":1,"message":"974","line":3,"column":8,"nodeType":"956","messageId":"957","endLine":3,"endColumn":25},{"ruleId":"965","severity":1,"message":"975","line":31,"column":6,"nodeType":"967","endLine":31,"endColumn":15,"suggestions":"1013"},{"ruleId":"949","severity":1,"message":"950","line":47,"column":13,"nodeType":"951","endLine":47,"endColumn":37},{"ruleId":"954","severity":1,"message":"981","line":1,"column":17,"nodeType":"956","messageId":"957","endLine":1,"endColumn":26},{"ruleId":"954","severity":1,"message":"982","line":8,"column":10,"nodeType":"956","messageId":"957","endLine":8,"endColumn":17},{"ruleId":"954","severity":1,"message":"983","line":17,"column":17,"nodeType":"956","messageId":"957","endLine":17,"endColumn":20},{"ruleId":"965","severity":1,"message":"984","line":29,"column":6,"nodeType":"967","endLine":29,"endColumn":27,"suggestions":"1014"},{"ruleId":"954","severity":1,"message":"1015","line":7,"column":7,"nodeType":"956","messageId":"957","endLine":7,"endColumn":18},{"ruleId":"952","severity":1,"message":"953","line":18,"column":13,"nodeType":"951","endLine":22,"endColumn":14},{"ruleId":"954","severity":1,"message":"996","line":11,"column":10,"nodeType":"956","messageId":"957","endLine":11,"endColumn":16},{"ruleId":"954","severity":1,"message":"997","line":12,"column":10,"nodeType":"956","messageId":"957","endLine":12,"endColumn":15},{"ruleId":"965","severity":1,"message":"966","line":32,"column":6,"nodeType":"967","endLine":32,"endColumn":23,"suggestions":"1016"},{"ruleId":"949","severity":1,"message":"950","line":34,"column":13,"nodeType":"951","endLine":34,"endColumn":61},{"ruleId":"952","severity":1,"message":"990","line":47,"column":11,"nodeType":"951","endLine":51,"endColumn":12},{"ruleId":"954","severity":1,"message":"1017","line":16,"column":3,"nodeType":"956","messageId":"957","endLine":16,"endColumn":26},{"ruleId":"986","severity":1,"message":"987","line":116,"column":26,"nodeType":"988","messageId":"989","endLine":116,"endColumn":28},{"ruleId":"954","severity":1,"message":"1018","line":5,"column":10,"nodeType":"956","messageId":"957","endLine":5,"endColumn":13},{"ruleId":"954","severity":1,"message":"1019","line":5,"column":15,"nodeType":"956","messageId":"957","endLine":5,"endColumn":17},{"ruleId":"954","severity":1,"message":"1020","line":137,"column":12,"nodeType":"956","messageId":"957","endLine":137,"endColumn":23},{"ruleId":"986","severity":1,"message":"987","line":63,"column":33,"nodeType":"988","messageId":"989","endLine":63,"endColumn":35},{"ruleId":"954","severity":1,"message":"1021","line":16,"column":10,"nodeType":"956","messageId":"957","endLine":16,"endColumn":19},{"ruleId":"954","severity":1,"message":"997","line":17,"column":10,"nodeType":"956","messageId":"957","endLine":17,"endColumn":15},{"ruleId":"954","severity":1,"message":"1022","line":18,"column":11,"nodeType":"956","messageId":"957","endLine":18,"endColumn":26},{"ruleId":"965","severity":1,"message":"1023","line":35,"column":6,"nodeType":"967","endLine":35,"endColumn":34,"suggestions":"1024"},{"ruleId":"986","severity":1,"message":"987","line":229,"column":28,"nodeType":"988","messageId":"989","endLine":229,"endColumn":30},{"ruleId":"986","severity":1,"message":"987","line":8,"column":33,"nodeType":"988","messageId":"989","endLine":8,"endColumn":35},{"ruleId":"954","severity":1,"message":"991","line":2,"column":40,"nodeType":"956","messageId":"957","endLine":2,"endColumn":54},{"ruleId":"965","severity":1,"message":"1023","line":34,"column":6,"nodeType":"967","endLine":34,"endColumn":32,"suggestions":"1025"},{"ruleId":"965","severity":1,"message":"1023","line":46,"column":6,"nodeType":"967","endLine":46,"endColumn":38,"suggestions":"1026"},{"ruleId":"949","severity":1,"message":"950","line":31,"column":17,"nodeType":"951","endLine":31,"endColumn":43},{"ruleId":"949","severity":1,"message":"950","line":92,"column":25,"nodeType":"951","endLine":92,"endColumn":50},{"ruleId":"949","severity":1,"message":"950","line":14,"column":11,"nodeType":"951","endLine":14,"endColumn":35},{"ruleId":"954","severity":1,"message":"1000","line":9,"column":10,"nodeType":"956","messageId":"957","endLine":9,"endColumn":11},{"ruleId":"965","severity":1,"message":"966","line":46,"column":6,"nodeType":"967","endLine":46,"endColumn":15,"suggestions":"1027"},{"ruleId":"949","severity":1,"message":"950","line":57,"column":11,"nodeType":"951","endLine":57,"endColumn":36},{"ruleId":"954","severity":1,"message":"1028","line":2,"column":10,"nodeType":"956","messageId":"957","endLine":2,"endColumn":21},{"ruleId":"965","severity":1,"message":"966","line":39,"column":6,"nodeType":"967","endLine":39,"endColumn":15,"suggestions":"1029"},{"ruleId":"949","severity":1,"message":"950","line":47,"column":7,"nodeType":"951","endLine":47,"endColumn":32},{"ruleId":"965","severity":1,"message":"1030","line":59,"column":6,"nodeType":"967","endLine":59,"endColumn":32,"suggestions":"1031"},{"ruleId":"954","severity":1,"message":"1032","line":2,"column":22,"nodeType":"956","messageId":"957","endLine":2,"endColumn":37},{"ruleId":"954","severity":1,"message":"1033","line":1,"column":28,"nodeType":"956","messageId":"957","endLine":1,"endColumn":34},{"ruleId":"958","severity":1,"message":"959","line":22,"column":11,"nodeType":"951","messageId":"960","endLine":29,"endColumn":12,"fix":"1034"},{"ruleId":"954","severity":1,"message":"1035","line":5,"column":8,"nodeType":"956","messageId":"957","endLine":5,"endColumn":28},{"ruleId":"954","severity":1,"message":"1036","line":17,"column":37,"nodeType":"956","messageId":"957","endLine":17,"endColumn":52},{"ruleId":"954","severity":1,"message":"1036","line":14,"column":37,"nodeType":"956","messageId":"957","endLine":14,"endColumn":52},{"ruleId":"954","severity":1,"message":"1033","line":1,"column":28,"nodeType":"956","messageId":"957","endLine":1,"endColumn":34},{"ruleId":"958","severity":1,"message":"959","line":26,"column":11,"nodeType":"951","messageId":"960","endLine":33,"endColumn":12,"fix":"1037"},{"ruleId":"954","severity":1,"message":"1038","line":9,"column":10,"nodeType":"956","messageId":"957","endLine":9,"endColumn":16},{"ruleId":"958","severity":1,"message":"959","line":66,"column":17,"nodeType":"951","messageId":"960","endLine":74,"endColumn":18,"fix":"1039"},{"ruleId":"965","severity":1,"message":"1040","line":26,"column":6,"nodeType":"967","endLine":26,"endColumn":15,"suggestions":"1041"},{"ruleId":"949","severity":1,"message":"950","line":28,"column":10,"nodeType":"951","endLine":28,"endColumn":62},{"ruleId":"965","severity":1,"message":"966","line":36,"column":6,"nodeType":"967","endLine":36,"endColumn":12,"suggestions":"1042"},{"ruleId":"958","severity":1,"message":"959","line":73,"column":15,"nodeType":"951","messageId":"960","endLine":78,"endColumn":16,"fix":"1043"},{"ruleId":"954","severity":1,"message":"1044","line":5,"column":17,"nodeType":"956","messageId":"957","endLine":5,"endColumn":26},{"ruleId":"965","severity":1,"message":"1045","line":51,"column":6,"nodeType":"967","endLine":51,"endColumn":8,"suggestions":"1046"},{"ruleId":"949","severity":1,"message":"950","line":54,"column":5,"nodeType":"951","endLine":54,"endColumn":78},{"ruleId":"965","severity":1,"message":"971","line":30,"column":6,"nodeType":"967","endLine":30,"endColumn":8,"suggestions":"1047"},{"ruleId":"949","severity":1,"message":"950","line":33,"column":5,"nodeType":"951","endLine":33,"endColumn":77},"no-native-reassign",["1048"],"no-negated-in-lhs",["1049"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","@typescript-eslint/no-unused-vars","'DisplayRandomRune' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1050","text":"1051"},{"range":"1052","text":"1051"},{"range":"1053","text":"1051"},{"range":"1054","text":"1051"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'network'. Either include it or remove the dependency array.","ArrayExpression",["1055"],"'GALLERY_PATH' is defined but never used.","'SMITH_PATH' is defined but never used.","React Hook useEffect has a missing dependency: 'isActive'. Either include it or remove the dependency array.",["1056"],"'txid' is assigned a value but never used.","'SnapshotCountdown' is defined but never used.","React Hook useEffect has a missing dependency: 'tokenId'. Either include it or remove the dependency array.",["1057"],"'useWallet' is defined but never used.",["1058"],["1048"],["1049"],"'useEffect' is defined but never used.","'Network' is defined but never used.","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'network' and 'removePendingTransaction'. Either include them or remove the dependency array.",["1059"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'base64ToString' is defined but never used.","React Hook useEffect has missing dependencies: 'connectWallet', 'connectedWallet.key', and 'disConnectWallet'. Either include them or remove the dependency array.",["1060"],"'toast' is defined but never used.","'DisplayRune' is defined but never used.","'tokens' is assigned a value but never used.","'error' is assigned a value but never used.",["1061"],"'RUNE_PHASE_FILTER' is defined but never used.","'u' is defined but never used.",["1062"],"'Link' is defined but never used.","'useLocation' is defined but never used.",["1048"],["1049"],"'RuneLoading' is defined but never used.",{"range":"1063","text":"1051"},{"range":"1064","text":"1051"},{"range":"1065","text":"1051"},{"range":"1066","text":"1051"},["1067"],["1068"],["1069"],["1070"],"'ARENA_COLOR' is assigned a value but never used.",["1071"],"'GetRawTransactionResult' is defined but never used.","'rpc' is defined but never used.","'sc' is defined but never used.","'transaction' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'connectedWallet' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'arenaNo'. Either include it or remove the dependency array.",["1072"],["1073"],["1074"],["1075"],"'NFTContract' is defined but never used.",["1076"],"React Hook useEffect has missing dependencies: 'arenaNo', 'history.champion', and 'history.gameNo'. Either include them or remove the dependency array.",["1077"],"'TOURNAMENT_PATH' is defined but never used.","'useRef' is defined but never used.",{"range":"1078","text":"1051"},"'TransactionSubmitted' is defined but never used.","'openWalletModal' is assigned a value but never used.",{"range":"1079","text":"1051"},"'wallet' is defined but never used.",{"range":"1080","text":"1051"},"React Hook useEffect has missing dependencies: 'contractHash' and 'network'. Either include them or remove the dependency array.",["1081"],["1082"],{"range":"1083","text":"1051"},"'setColors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'colors'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBg' needs the current value of 'colors'.",["1084"],["1085"],"no-global-assign","no-unsafe-negation",[1534,1534]," rel=\"noreferrer\"",[2862,2862],[3501,3501],[3973,3973],{"desc":"1086","fix":"1087"},{"desc":"1088","fix":"1089"},{"desc":"1090","fix":"1091"},{"desc":"1090","fix":"1092"},{"desc":"1093","fix":"1094"},{"desc":"1095","fix":"1096"},{"desc":"1097","fix":"1098"},{"desc":"1090","fix":"1099"},[1552,1552],[2880,2880],[3519,3519],[3991,3991],{"desc":"1086","fix":"1100"},{"desc":"1095","fix":"1101"},{"desc":"1090","fix":"1102"},{"desc":"1093","fix":"1103"},{"desc":"1097","fix":"1104"},{"desc":"1105","fix":"1106"},{"desc":"1107","fix":"1108"},{"desc":"1109","fix":"1110"},{"desc":"1111","fix":"1112"},{"desc":"1090","fix":"1113"},{"desc":"1114","fix":"1115"},[982,982],[1226,1226],[2461,2461],{"desc":"1116","fix":"1117"},{"desc":"1118","fix":"1119"},[2294,2294],{"desc":"1120","fix":"1121"},{"desc":"1088","fix":"1122"},"Update the dependencies array to be: [connectedWallet, network, route]",{"range":"1123","text":"1124"},"Update the dependencies array to be: [isActive]",{"range":"1125","text":"1126"},"Update the dependencies array to be: [network, tokenId]",{"range":"1127","text":"1128"},{"range":"1129","text":"1128"},"Update the dependencies array to be: [network, pendingTransactions, removePendingTransaction]",{"range":"1130","text":"1131"},"Update the dependencies array to be: [connectWallet, connectedWallet.key, disConnectWallet]",{"range":"1132","text":"1133"},"Update the dependencies array to be: [connectedWallet, network]",{"range":"1134","text":"1135"},{"range":"1136","text":"1128"},{"range":"1137","text":"1124"},{"range":"1138","text":"1133"},{"range":"1139","text":"1128"},{"range":"1140","text":"1131"},{"range":"1141","text":"1135"},"Update the dependencies array to be: [network, location.pathname, arenaNo]",{"range":"1142","text":"1143"},"Update the dependencies array to be: [arenaNo, connectedWallet, network]",{"range":"1144","text":"1145"},"Update the dependencies array to be: [arenaNo, connectedWallet, network, page]",{"range":"1146","text":"1147"},"Update the dependencies array to be: [history, network]",{"range":"1148","text":"1149"},{"range":"1150","text":"1128"},"Update the dependencies array to be: [arenaNo, connectedWallet, history.champion, history.gameNo, network]",{"range":"1151","text":"1152"},"Update the dependencies array to be: [contractHash, network, tokenId]",{"range":"1153","text":"1154"},"Update the dependencies array to be: [network, txid]",{"range":"1155","text":"1156"},"Update the dependencies array to be: [colors]",{"range":"1157","text":"1158"},{"range":"1159","text":"1126"},[1983,2007],"[connectedWallet, network, route]",[1444,1446],"[isActive]",[923,932],"[network, tokenId]",[881,890],[664,685],"[network, pendingTransactions, removePendingTransaction]",[2595,2597],"[connectWallet, connectedWallet.key, disConnectWallet]",[1197,1214],"[connectedWallet, network]",[881,890],[1983,2007],[2595,2597],[923,932],[743,764],[1021,1038],[1049,1077],"[network, location.pathname, arenaNo]",[1314,1340],"[arenaNo, connectedWallet, network]",[1749,1781],"[arenaNo, connectedWallet, network, page]",[1361,1370],"[history, network]",[1095,1104],[1827,1853],"[arenaNo, connectedWallet, history.champion, history.gameNo, network]",[751,760],"[contractHash, network, tokenId]",[1012,1018],"[network, txid]",[2062,2064],"[colors]",[1444,1446]]