[{"/Users/ed/Projects/FTW/client/src/index.tsx":"1","/Users/ed/Projects/FTW/client/src/reportWebVitals.ts":"2","/Users/ed/Projects/FTW/client/src/common/hooks/use-app.tsx":"3","/Users/ed/Projects/FTW/client/src/ui/index.tsx":"4","/Users/ed/Projects/FTW/client/src/ui/components/Header.tsx":"5","/Users/ed/Projects/FTW/client/src/ui/components/MobileMenuSlider.tsx":"6","/Users/ed/Projects/FTW/client/src/ui/components/WalletSidebar.tsx":"7","/Users/ed/Projects/FTW/client/src/ui/pages/Home.tsx":"8","/Users/ed/Projects/FTW/client/src/consts/index.ts":"9","/Users/ed/Projects/FTW/client/src/packages/provider/index.ts":"10","/Users/ed/Projects/FTW/client/src/ui/pages/MyCollection/index.tsx":"11","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/index.tsx":"12","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/index.tsx":"13","/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/index.tsx":"14","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/helpers.ts":"15","/Users/ed/Projects/FTW/client/src/ui/components/Logo.tsx":"16","/Users/ed/Projects/FTW/client/src/ui/components/WalletDropdown.tsx":"17","/Users/ed/Projects/FTW/client/src/ui/components/NetworkSwitch.tsx":"18","/Users/ed/Projects/FTW/client/src/ui/components/SidebarNav.tsx":"19","/Users/ed/Projects/FTW/client/src/ui/components/PageLayout.tsx":"20","/Users/ed/Projects/FTW/client/src/consts/pageRoutes.ts":"21","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/pageRoutes.ts":"22","/Users/ed/Projects/FTW/client/src/packages/neo/index.ts":"23","/Users/ed/Projects/FTW/client/src/packages/provider/wallet-provider.tsx":"24","/Users/ed/Projects/FTW/client/src/ui/components/NotifyError.tsx":"25","/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/PropertiesModal.tsx":"26","/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/Banner.tsx":"27","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/index.tsx":"28","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/consts.ts":"29","/Users/ed/Projects/FTW/client/src/packages/ui/PendingTransaction/index.tsx":"30","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/index.ts":"31","/Users/ed/Projects/FTW/client/src/packages/neo/consts/index.ts":"32","/Users/ed/Projects/FTW/client/src/packages/neo/api/index.ts":"33","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/index.ts":"34","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Home/index.tsx":"35","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/index.tsx":"36","/Users/ed/Projects/FTW/client/src/ui/components/Modal.tsx":"37","/Users/ed/Projects/FTW/client/src/ui/components/TransactionSubmitted.tsx":"38","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/WalletList.tsx":"39","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/Runes.tsx":"40","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/WalletDropdown.tsx":"41","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/AssetCard.tsx":"42","/Users/ed/Projects/FTW/client/src/packages/neo/network/index.ts":"43","/Users/ed/Projects/FTW/client/src/packages/neo/api/rest.ts":"44","/Users/ed/Projects/FTW/client/src/packages/neo/wallet/index.ts":"45","/Users/ed/Projects/FTW/client/src/packages/neo/utils/index.ts":"46","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/helpers.ts":"47","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/consts.ts":"48","/Users/ed/Projects/FTW/client/src/packages/neo/local-storage/index.ts":"49","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Banner.tsx":"50","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/index.ts":"51","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/index.ts":"52","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/bank/index.ts":"53","/Users/ed/Projects/FTW/client/src/packages/neo/api/consts.ts":"54","/Users/ed/Projects/FTW/client/src/packages/neo/wallet/dev-wallet.ts":"55","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/consts.ts":"56","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/helpers.ts":"57","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/helpers.ts":"58","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/index.tsx":"59","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/index.tsx":"60","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/Replay.tsx":"61","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/PlayerModal.tsx":"62","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/NFTListModal.tsx":"63","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/index.ts":"64","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/TournamentTree.tsx":"65","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/consts.ts":"66","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/helpers.ts":"67","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/helpers.ts":"68","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/ArenaRegisterButton.tsx":"69","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/PlayButton.tsx":"70","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/NFTDetailModal.tsx":"71","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/HistoryTable.tsx":"72","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/DisplayRuneWithProperties.tsx":"73","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/ClaimButton.tsx":"74","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/Banner.tsx":"75","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP17/index.tsx":"76","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP17/ContractCard.tsx":"77","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP17FormModal.tsx":"78","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP11FormModal.tsx":"79","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/index.tsx":"80","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/ContractCard.tsx":"81","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/Tokens.tsx":"82","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/DisplayNFT.tsx":"83","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/LeaveButton.tsx":"84","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/BetButton.tsx":"85","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/helpers.ts":"86","/Users/ed/Projects/FTW/client/src/packages/ui/AfterTransactionSubmitted/index.tsx":"87","/Users/ed/Projects/FTW/client/src/packages/ui/AfterTransactionSubmitted/RuneLoading.tsx":"88","/Users/ed/Projects/FTW/client/src/ui/components/RandomRune.tsx":"89","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/CheckMark.tsx":"90","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/index.tsx":"91","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/NavSwitch/index.tsx":"92","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/Input/index.tsx":"93","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Swap/index.tsx":"94","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/swap/index.ts":"95","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/swap/consts.ts":"96","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/AssetListModal/index.tsx":"97","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/swap/helpers.ts":"98","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Farm/index.tsx":"99","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Farm/scenes/Detail/index.tsx":"100","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/index.tsx":"101","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/FusionBox.tsx":"102","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/RuneListModal.tsx":"103","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/CryptonatuListModal.tsx":"104","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ttm/nft/index.ts":"105","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ttm/nft/helpers.ts":"106","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ttm/nft/consts.ts":"107","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/fuse/index.ts":"108","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/FusedList.tsx":"109","/Users/ed/Projects/FTW/client/src/ui/pages/Migration/index.tsx":"110","/Users/ed/Projects/FTW/client/src/ui/components/ReactGa.tsx":"111","/Users/ed/Projects/FTW/client/src/ui/components/BgContainer.tsx":"112","/Users/ed/Projects/FTW/client/src/ui/components/NetworkSwitch2.tsx":"113","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/PairSelect/index.tsx":"114","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Farm/scenes/CreatePool/index.tsx":"115","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/PoolCard/index.tsx":"116","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Pools/index.tsx":"117","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/AddLiquidity/index.tsx":"118","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/RemoveLiquidity/index.tsx":"119","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/RemoveLiquidity/LPTokenList.tsx":"120","/Users/ed/Projects/FTW/client/src/ui/components/HeaderBetween.tsx":"121","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/History/index.tsx":"122","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/components/Header.tsx":"123","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Providers/index.tsx":"124","/Users/ed/Projects/FTW/client/src/ui/components/TruncatedAddress.tsx":"125","/Users/ed/Projects/FTW/client/src/ui/components/SocialLinkGroup.tsx":"126","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/index.tsx":"127","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/ActionModal.tsx":"128","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/Pool.tsx":"129","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/CancelModal.tsx":"130","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/Claims.tsx":"131","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/PositionModal.tsx":"132","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/ClaimModal.tsx":"133","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/SnapshotList.tsx":"134","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/About.tsx":"135","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/SnapshotCountdown.tsx":"136","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/SnapshotCard.tsx":"137","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/MyPosition.tsx":"138","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/index.tsx":"139","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/staking/index.ts":"140","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/staking/consts.ts":"141","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/components/StakingPairCard.tsx":"142","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/Stake/index.tsx":"143","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/Main/index.tsx":"144","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/Stake/LPTokenCard.tsx":"145","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/MyPositions/index.tsx":"146","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/MyPositions/PositionCard.tsx":"147","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/ClaimRewards/index.tsx":"148","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/staking/helpers.ts":"149","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/ClaimRewards/ClaimModal.tsx":"150","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Pools/PoolHeader.tsx":"151","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/PairIcons/index.tsx":"152","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nep17/consts.ts":"153","/Users/ed/Projects/FTW/client/src/common/hooks/use-onchain-data.ts":"154","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/RemoveLiquidity/LPTokenItem.tsx":"155","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/PageView/NEP17InfoPage.tsx":"156","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/PageView/NEP11InfoPage.tsx":"157","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/AddLiquidity/TimeLockInput.tsx":"158","/Users/ed/Projects/FTW/client/src/ui/components/ErrorNotificationWithRefresh.tsx":"159","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/AddLiquidity/LPRewardInfo.tsx":"160","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Swap/NoLPInfo.tsx":"161","/Users/ed/Projects/FTW/client/src/ui/components/ConnectWalletButton.tsx":"162","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Swap/SwapInputs.tsx":"163","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/AddLiquidity/LPInputs.tsx":"164","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/Stake/LPTokenList.tsx":"165","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/MyPositions/PositionList.tsx":"166","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/PageView/NEP17UpdateFormModal.tsx":"167","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/PageView/NEP11MintFormModal.tsx":"168"},{"size":624,"mtime":1633734969020,"results":"169","hashOfConfig":"170"},{"size":425,"mtime":1633497407848,"results":"171","hashOfConfig":"170"},{"size":1309,"mtime":1639724016473,"results":"172","hashOfConfig":"170"},{"size":2084,"mtime":1651823190715,"results":"173","hashOfConfig":"170"},{"size":6250,"mtime":1651474144713,"results":"174","hashOfConfig":"170"},{"size":489,"mtime":1639037096055,"results":"175","hashOfConfig":"170"},{"size":672,"mtime":1637900932333,"results":"176","hashOfConfig":"170"},{"size":4458,"mtime":1650430080702,"results":"177","hashOfConfig":"170"},{"size":31,"mtime":1641402851228,"results":"178","hashOfConfig":"170"},{"size":35,"mtime":1640877217380,"results":"179","hashOfConfig":"170"},{"size":2862,"mtime":1640586517923,"results":"180","hashOfConfig":"170"},{"size":3631,"mtime":1647248289505,"results":"181","hashOfConfig":"170"},{"size":1232,"mtime":1652334861307,"results":"182","hashOfConfig":"170"},{"size":3798,"mtime":1646720765895,"results":"183","hashOfConfig":"170"},{"size":406,"mtime":1644083513220,"results":"184","hashOfConfig":"170"},{"size":295,"mtime":1644083513207,"results":"185","hashOfConfig":"170"},{"size":3971,"mtime":1639030825785,"results":"186","hashOfConfig":"170"},{"size":1702,"mtime":1641572979485,"results":"187","hashOfConfig":"170"},{"size":2598,"mtime":1651473448004,"results":"188","hashOfConfig":"170"},{"size":212,"mtime":1641119287691,"results":"189","hashOfConfig":"170"},{"size":2059,"mtime":1652334567969,"results":"190","hashOfConfig":"170"},{"size":109,"mtime":1640766614677,"results":"191","hashOfConfig":"170"},{"size":239,"mtime":1637559785941,"results":"192","hashOfConfig":"170"},{"size":3505,"mtime":1650845504304,"results":"193","hashOfConfig":"170"},{"size":268,"mtime":1637559785958,"results":"194","hashOfConfig":"170"},{"size":1592,"mtime":1640583336741,"results":"195","hashOfConfig":"170"},{"size":2280,"mtime":1645834715326,"results":"196","hashOfConfig":"170"},{"size":1479,"mtime":1645073333778,"results":"197","hashOfConfig":"170"},{"size":543,"mtime":1640878993094,"results":"198","hashOfConfig":"170"},{"size":1197,"mtime":1641683722710,"results":"199","hashOfConfig":"170"},{"size":147,"mtime":1652280897338,"results":"200","hashOfConfig":"170"},{"size":1750,"mtime":1645175755859,"results":"201","hashOfConfig":"170"},{"size":24,"mtime":1642540313198,"results":"202","hashOfConfig":"170"},{"size":9515,"mtime":1652650587404,"results":"203","hashOfConfig":"170"},{"size":1461,"mtime":1644706984800,"results":"204","hashOfConfig":"170"},{"size":2185,"mtime":1647248972260,"results":"205","hashOfConfig":"170"},{"size":878,"mtime":1640830374635,"results":"206","hashOfConfig":"170"},{"size":558,"mtime":1637894305518,"results":"207","hashOfConfig":"170"},{"size":1068,"mtime":1644827511084,"results":"208","hashOfConfig":"170"},{"size":1561,"mtime":1641200205831,"results":"209","hashOfConfig":"170"},{"size":1857,"mtime":1637900644235,"results":"210","hashOfConfig":"170"},{"size":413,"mtime":1637567392298,"results":"211","hashOfConfig":"170"},{"size":4685,"mtime":1652283292302,"results":"212","hashOfConfig":"170"},{"size":799,"mtime":1642541576341,"results":"213","hashOfConfig":"170"},{"size":6931,"mtime":1652652961623,"results":"214","hashOfConfig":"170"},{"size":3974,"mtime":1652573497361,"results":"215","hashOfConfig":"170"},{"size":3718,"mtime":1652339835956,"results":"216","hashOfConfig":"170"},{"size":381,"mtime":1652652893952,"results":"217","hashOfConfig":"170"},{"size":3210,"mtime":1645433770695,"results":"218","hashOfConfig":"170"},{"size":2854,"mtime":1647248921666,"results":"219","hashOfConfig":"170"},{"size":4025,"mtime":1652280897366,"results":"220","hashOfConfig":"170"},{"size":6566,"mtime":1652652961631,"results":"221","hashOfConfig":"170"},{"size":230,"mtime":1638174485672,"results":"222","hashOfConfig":"170"},{"size":283,"mtime":1640574613690,"results":"223","hashOfConfig":"170"},{"size":7547,"mtime":1642436663486,"results":"224","hashOfConfig":"170"},{"size":239,"mtime":1638155927534,"results":"225","hashOfConfig":"170"},{"size":646,"mtime":1637867144835,"results":"226","hashOfConfig":"170"},{"size":1660,"mtime":1652569687766,"results":"227","hashOfConfig":"170"},{"size":3268,"mtime":1647249179401,"results":"228","hashOfConfig":"170"},{"size":3949,"mtime":1647249034772,"results":"229","hashOfConfig":"170"},{"size":1286,"mtime":1644659442499,"results":"230","hashOfConfig":"170"},{"size":4003,"mtime":1642436663495,"results":"231","hashOfConfig":"170"},{"size":3228,"mtime":1641889737598,"results":"232","hashOfConfig":"170"},{"size":8827,"mtime":1645175937880,"results":"233","hashOfConfig":"170"},{"size":3314,"mtime":1642558056817,"results":"234","hashOfConfig":"170"},{"size":635,"mtime":1642557674863,"results":"235","hashOfConfig":"170"},{"size":1933,"mtime":1642550800991,"results":"236","hashOfConfig":"170"},{"size":3683,"mtime":1644659442494,"results":"237","hashOfConfig":"170"},{"size":1016,"mtime":1647249179397,"results":"238","hashOfConfig":"170"},{"size":1696,"mtime":1642573616518,"results":"239","hashOfConfig":"170"},{"size":850,"mtime":1640919542276,"results":"240","hashOfConfig":"170"},{"size":2789,"mtime":1652282765026,"results":"241","hashOfConfig":"170"},{"size":1533,"mtime":1641858165709,"results":"242","hashOfConfig":"170"},{"size":2558,"mtime":1642556514381,"results":"243","hashOfConfig":"170"},{"size":3149,"mtime":1650429239316,"results":"244","hashOfConfig":"170"},{"size":1605,"mtime":1652651201877,"results":"245","hashOfConfig":"170"},{"size":3290,"mtime":1652334593953,"results":"246","hashOfConfig":"170"},{"size":6225,"mtime":1652570743947,"results":"247","hashOfConfig":"170"},{"size":4930,"mtime":1650427654768,"results":"248","hashOfConfig":"170"},{"size":1600,"mtime":1652304759222,"results":"249","hashOfConfig":"170"},{"size":1817,"mtime":1652580557426,"results":"250","hashOfConfig":"170"},{"size":2590,"mtime":1652340191348,"results":"251","hashOfConfig":"170"},{"size":752,"mtime":1652342671048,"results":"252","hashOfConfig":"170"},{"size":1019,"mtime":1641633101357,"results":"253","hashOfConfig":"170"},{"size":1418,"mtime":1642438293530,"results":"254","hashOfConfig":"170"},{"size":365,"mtime":1641402851224,"results":"255","hashOfConfig":"170"},{"size":2887,"mtime":1641972810626,"results":"256","hashOfConfig":"170"},{"size":2194,"mtime":1641550159221,"results":"257","hashOfConfig":"170"},{"size":1581,"mtime":1639034767064,"results":"258","hashOfConfig":"170"},{"size":769,"mtime":1641611791293,"results":"259","hashOfConfig":"170"},{"size":1686,"mtime":1651729195602,"results":"260","hashOfConfig":"170"},{"size":1135,"mtime":1646183928079,"results":"261","hashOfConfig":"170"},{"size":4101,"mtime":1652492126209,"results":"262","hashOfConfig":"170"},{"size":7206,"mtime":1652577028046,"results":"263","hashOfConfig":"170"},{"size":12028,"mtime":1652577028041,"results":"264","hashOfConfig":"170"},{"size":4762,"mtime":1652280897331,"results":"265","hashOfConfig":"170"},{"size":3869,"mtime":1652346494535,"results":"266","hashOfConfig":"170"},{"size":1925,"mtime":1652652961634,"results":"267","hashOfConfig":"170"},{"size":552,"mtime":1646183819246,"results":"268","hashOfConfig":"170"},{"size":5010,"mtime":1650176784782,"results":"269","hashOfConfig":"170"},{"size":4225,"mtime":1644738500449,"results":"270","hashOfConfig":"170"},{"size":517,"mtime":1644343179054,"results":"271","hashOfConfig":"170"},{"size":2173,"mtime":1644307398683,"results":"272","hashOfConfig":"170"},{"size":2491,"mtime":1644309500352,"results":"273","hashOfConfig":"170"},{"size":1802,"mtime":1652280897373,"results":"274","hashOfConfig":"170"},{"size":753,"mtime":1651437114702,"results":"275","hashOfConfig":"170"},{"size":269,"mtime":1644304188959,"results":"276","hashOfConfig":"170"},{"size":3903,"mtime":1652280938164,"results":"277","hashOfConfig":"170"},{"size":6070,"mtime":1644727301841,"results":"278","hashOfConfig":"170"},{"size":4247,"mtime":1644794870847,"results":"279","hashOfConfig":"170"},{"size":310,"mtime":1644739931489,"results":"280","hashOfConfig":"170"},{"size":486,"mtime":1644769630775,"results":"281","hashOfConfig":"170"},{"size":1110,"mtime":1645134574645,"results":"282","hashOfConfig":"170"},{"size":599,"mtime":1645638601048,"results":"283","hashOfConfig":"170"},{"size":3363,"mtime":1651735994644,"results":"284","hashOfConfig":"170"},{"size":3315,"mtime":1652575897565,"results":"285","hashOfConfig":"170"},{"size":867,"mtime":1652577028036,"results":"286","hashOfConfig":"170"},{"size":6819,"mtime":1652558137779,"results":"287","hashOfConfig":"170"},{"size":1992,"mtime":1652454614330,"results":"288","hashOfConfig":"170"},{"size":1351,"mtime":1652331309157,"results":"289","hashOfConfig":"170"},{"size":959,"mtime":1652401666137,"results":"290","hashOfConfig":"170"},{"size":3174,"mtime":1652558137773,"results":"291","hashOfConfig":"170"},{"size":1426,"mtime":1650427685678,"results":"292","hashOfConfig":"170"},{"size":2033,"mtime":1652310016172,"results":"293","hashOfConfig":"170"},{"size":446,"mtime":1650728428353,"results":"294","hashOfConfig":"170"},{"size":870,"mtime":1650739782405,"results":"295","hashOfConfig":"170"},{"size":4655,"mtime":1639300594240,"results":"296","hashOfConfig":"170"},{"size":3082,"mtime":1637891429918,"results":"297","hashOfConfig":"170"},{"size":1465,"mtime":1639300292984,"results":"298","hashOfConfig":"170"},{"size":1287,"mtime":1638165273098,"results":"299","hashOfConfig":"170"},{"size":1944,"mtime":1639300331832,"results":"300","hashOfConfig":"170"},{"size":2300,"mtime":1639302927524,"results":"301","hashOfConfig":"170"},{"size":1220,"mtime":1637894305513,"results":"302","hashOfConfig":"170"},{"size":1693,"mtime":1639300331838,"results":"303","hashOfConfig":"170"},{"size":869,"mtime":1639300841404,"results":"304","hashOfConfig":"170"},{"size":845,"mtime":1639300797095,"results":"305","hashOfConfig":"170"},{"size":598,"mtime":1637892170390,"results":"306","hashOfConfig":"170"},{"size":1582,"mtime":1639300578733,"results":"307","hashOfConfig":"170"},{"size":1233,"mtime":1652577274136,"results":"308","hashOfConfig":"170"},{"size":6513,"mtime":1652652446940,"results":"309","hashOfConfig":"170"},{"size":272,"mtime":1651726451797,"results":"310","hashOfConfig":"170"},{"size":1045,"mtime":1651726531374,"results":"311","hashOfConfig":"170"},{"size":2512,"mtime":1652578615327,"results":"312","hashOfConfig":"170"},{"size":1952,"mtime":1652577750351,"results":"313","hashOfConfig":"170"},{"size":692,"mtime":1652578458733,"results":"314","hashOfConfig":"170"},{"size":1952,"mtime":1652579131170,"results":"315","hashOfConfig":"170"},{"size":572,"mtime":1651647316133,"results":"316","hashOfConfig":"170"},{"size":3374,"mtime":1652579245829,"results":"317","hashOfConfig":"170"},{"size":774,"mtime":1652570884454,"results":"318","hashOfConfig":"170"},{"size":2445,"mtime":1651738563600,"results":"319","hashOfConfig":"170"},{"size":1114,"mtime":1651711869138,"results":"320","hashOfConfig":"170"},{"size":685,"mtime":1651847763198,"results":"321","hashOfConfig":"170"},{"size":1069,"mtime":1652280897343,"results":"322","hashOfConfig":"170"},{"size":672,"mtime":1652651201886,"results":"323","hashOfConfig":"170"},{"size":885,"mtime":1652652961621,"results":"324","hashOfConfig":"170"},{"size":5419,"mtime":1652651201890,"results":"325","hashOfConfig":"170"},{"size":4517,"mtime":1652580557431,"results":"326","hashOfConfig":"170"},{"size":1240,"mtime":1652383123609,"results":"327","hashOfConfig":"170"},{"size":586,"mtime":1652577554460,"results":"328","hashOfConfig":"170"},{"size":524,"mtime":1652383419685,"results":"329","hashOfConfig":"170"},{"size":700,"mtime":1652425781742,"results":"330","hashOfConfig":"170"},{"size":483,"mtime":1652454614323,"results":"331","hashOfConfig":"170"},{"size":3287,"mtime":1652577028032,"results":"332","hashOfConfig":"170"},{"size":2488,"mtime":1652557487477,"results":"333","hashOfConfig":"170"},{"size":1659,"mtime":1652578615331,"results":"334","hashOfConfig":"170"},{"size":1472,"mtime":1652578870781,"results":"335","hashOfConfig":"170"},{"size":1564,"mtime":1652580557413,"results":"336","hashOfConfig":"170"},{"size":4945,"mtime":1652652961626,"results":"337","hashOfConfig":"170"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},"a2drxm",{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"349","usedDeprecatedRules":"340"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"340"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"340"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"340"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"340"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"340"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"340"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"384","usedDeprecatedRules":"340"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"340"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"340"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"410"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"340"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"340"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"435"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"340"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"340"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"340"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"340"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"340"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"340"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"340"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"340"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"340"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"340"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"340"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"340"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"542","usedDeprecatedRules":"340"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"340"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"549"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"340"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"340"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"340"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"340"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"340"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"340"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"340"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"599","usedDeprecatedRules":"340"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"340"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"340"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"634","usedDeprecatedRules":"340"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"340"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"642","messages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"340"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"340"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"656","messages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"682","messages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"340"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"340"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"711","messages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ed/Projects/FTW/client/src/index.tsx",[],["723","724"],"/Users/ed/Projects/FTW/client/src/reportWebVitals.ts",[],"/Users/ed/Projects/FTW/client/src/common/hooks/use-app.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/Header.tsx",["725","726","727","728","729","730","731","732"],"import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaBars, FaFile, FaGithub, FaWallet } from \"react-icons/fa\";\nimport Logo from \"./Logo\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { useWallet } from \"../../packages/provider\";\nimport { utils } from \"../../packages/neo\";\nimport { MENU } from \"../../consts\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport NetworkSwitch from \"./NetworkSwitch\";\nimport NetworkSwitch2 from \"./NetworkSwitch2\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaMedium, FaTwitter, GrDocumentText } from \"react-icons/all\";\nimport { MAINNET, TESTNET } from \"../../packages/neo/consts\";\nimport toast from \"react-hot-toast\";\nimport SocialLinkGroup from \"./SocialLinkGroup\";\n\nconst Header = () => {\n  const { toggleSidebar, toggleWalletSidebar } = useApp();\n  const { connectedWallet, network, disConnectWallet, switchNetwork } =\n    useWallet();\n  const [isActive, setActive] = useState(false);\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    disConnectWallet();\n  };\n\n  const handleSwitchNetwork = () => {\n    const targetNetwork = network === TESTNET ? MAINNET : TESTNET;\n    switchNetwork(targetNetwork);\n    setActive(false);\n    toast.success(`Network switched. You are on ${targetNetwork}`);\n  };\n\n  return (\n    <nav\n      className=\"navbar has-shadow is-white is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ height: \"52px\" }}\n    >\n      <div className=\"container\">\n        <div\n          className=\"navbar-brand\"\n          style={{ justifyContent: \"space-between\" }}\n        >\n          <div\n            role=\"button\"\n            className=\"navbar-burger is-center is-hidden-tablet\"\n            style={{ marginLeft: 0 }}\n            onClick={toggleSidebar}\n          >\n            <FaBars />\n          </div>\n          <Link className=\"has-text-white navbar-item is-center\" to=\"/\">\n            <Logo />\n          </Link>\n          <div\n            role=\"button\"\n            className={`navbar-burger is-center is-hidden-desktop`}\n            onClick={() => {\n              if (connectedWallet) {\n                setActive(!isActive);\n              } else {\n                toggleWalletSidebar();\n              }\n            }}\n            style={{ marginLeft: 0 }}\n          >\n            <FaWallet />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div\n            className={`navbar-menu  is-hidden-tablet ${\n              isActive && \"is-active\"\n            }`}\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item\">\n                <div className=\"media\" style={{ alignItems: \"center\" }}>\n                  <div className=\"media-left\">\n                    <img\n                      width=\"32px\"\n                      src={getWalletIcon(connectedWallet.key)}\n                    />\n                  </div>\n                  <div className=\"media-content\">\n                    {utils.truncateAddress(connectedWallet.account.address)}\n                  </div>\n                </div>\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <div className=\"navbar-item\">\n                <NetworkSwitch2 />\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <a onClick={handleDisconnectWallet} className=\"navbar-item\">\n                Disconnect wallet\n              </a>\n            </div>\n          </div>\n        )}\n\n        <div className=\"navbar-menu ml-3\">\n          <div className=\"navbar-start\">\n            {MENU.map((route, i) => {\n              if (!route.network.includes(network)) return false;\n              if (route.category) {\n                return (\n                  <div\n                    key={`header-${route.label}${i}`}\n                    className=\"navbar-item has-dropdown is-hoverable\"\n                  >\n                    <div className=\"navbar-link\">{route.label}</div>\n                    <div className=\"navbar-dropdown is-boxed\">\n                      {route.category.map((item, index) => {\n                        return (\n                          <NavLink\n                            key={`category-${item.label}-${item.label}${index}`}\n                            activeClassName=\"is-active\"\n                            to={item.path}\n                            className=\"navbar-item\"\n                          >\n                            {item.label}\n                          </NavLink>\n                        );\n                      })}\n                    </div>\n                  </div>\n                );\n              } else {\n                return (\n                  <NavLink\n                    key={`header-${route.label}${i}`}\n                    activeClassName=\"is-active\"\n                    to={route.path}\n                    className=\"navbar-item\"\n                  >\n                    {route.label}\n                  </NavLink>\n                );\n              }\n            })}\n          </div>\n        </div>\n        <div className=\"navbar-end is-hidden-touch\">\n          <a\n            target={\"_blank\"}\n            className=\"navbar-item\"\n            href={\"http://docs.forthewin.network/\"}\n          >\n            <GrDocumentText />\n            <span className=\"ml-1\">Docs</span>\n          </a>\n          <div className=\"navbar-item\">\n            <SocialLinkGroup />\n          </div>\n\n          <div className=\"navbar-item\">\n            <NetworkSwitch />\n          </div>\n          {/*<PendingTransaction />*/}\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              {connectedWallet ? (\n                <WalletDropdown connectedWallet={connectedWallet} />\n              ) : (\n                <button\n                  onClick={toggleWalletSidebar}\n                  className=\"button is-small is-black is-rounded\"\n                >\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","/Users/ed/Projects/FTW/client/src/ui/components/MobileMenuSlider.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/WalletSidebar.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Home.tsx",["733"],"import React from \"react\";\nimport PageLayout from \"../components/PageLayout\";\nimport BgContainer from \"../components/BgContainer\";\nimport {GALLERY_PATH, SMITH_PATH, SWAP_PATH, TOURNAMENT_PATH} from \"../../consts\";\nimport { ARENA_PATH } from \"./Tournament/pageRoutes\";\nimport { Link } from \"react-router-dom\";\nimport { useWallet } from \"../../packages/provider\";\nimport { TESTNET } from \"../../packages/neo/consts\";\nimport toast from \"react-hot-toast\";\n\nconst CARDS = [\n\t{\n\t\ttitle: \"FTW Smith\",\n\t\ttype: \"Utility\",\n\t\tdesc: \"FTW Smith helps users to create and deploy fungible/Non-fungible token smart contracts without any codes.\",\n\t\timg: \"assets/smith.png\",\n\t\tlink: SMITH_PATH,\n\t},\n  {\n    title: \"FTW Rune\",\n    type: \"NFT\",\n    desc: \"FTW Rune is an algorithmically generated NFT created and stored onchain.\",\n    img: \"assets/runes.png\",\n    link: GALLERY_PATH,\n  },\n  {\n    title: \"FTW Arena\",\n    type: \"GameFi\",\n    desc: \" FTW Runes against each other with the victor earning a GAS prize.\",\n    img: \"assets/arena-bg.jpeg\",\n    link: TOURNAMENT_PATH,\n  },\n  {\n    title: \"FTW Swap\",\n    type: \"DeFi\",\n    desc: \"Coming soon. Try on our Testnet.\",\n    img: \"assets/swap.png\",\n    link: SWAP_PATH,\n  },\n  // {\n  //   title: \"FTW Lab\",\n  //   type: \"Testnet\",\n  //   desc: \"Preview FTW future apps.\",\n  //   img: \"assets/testnet.png\",\n  //   link: SMITH_PATH,\n  // },\n];\n\nconst Home = () => {\n  const { network, switchNetwork } = useWallet();\n  const onSwitchNetwork = () => {\n    if (network !== TESTNET) {\n      // eslint-disable-next-line no-restricted-globals\n      if (confirm(\"Are you sure to switch network?\")) {\n        switchNetwork(TESTNET);\n        toast.success(\"Network switched\");\n      }\n    }\n  };\n  return (\n    <div>\n      <section className=\"hero is-black\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">Forthewin Network</h1>\n            <p className=\"subtitle\">\n              Building some cool decentralized stuff on NEO blockchain.{\" \"}\n            </p>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns is-multiline\">\n          {CARDS.map((card) => {\n            return (\n              <div key={card.title} className=\"column is-3\">\n                <div className=\"card\">\n                  <div className=\"card-image is-clickable\">\n                    <Link to={card.link}>\n                      <figure className=\"image\">\n                        <BgContainer src={card.img} height=\"300px\" />\n                      </figure>\n                    </Link>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"media\">\n                      <div className=\"media-content\">\n                        <p className=\"title is-4\">\n                          <Link className={\"has-text-dark\"} to={card.link}>\n                            {card.title}\n                          </Link>\n                        </p>\n                        <span className=\"tag is-primary\">{card.type}</span>\n                      </div>\n                    </div>\n                    <div className=\"content\" style={{ minHeight: \"100px\" }}>\n                      {card.desc}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          <div className=\"column is-3\">\n            <div className=\"card\">\n              <div\n                className=\"card-image is-clickable\"\n                onClick={onSwitchNetwork}\n              >\n                <figure className=\"image\">\n                  <BgContainer src={\"assets/lab.png\"} height=\"300px\" />\n                </figure>\n              </div>\n              <div className=\"card-content\">\n                <div className=\"media\">\n                  <div className=\"media-content\">\n                    <p\n                      onClick={onSwitchNetwork}\n                      className=\"title is-4 is-clickable\"\n                    >\n                      FTW Lab\n                    </p>\n                    <span className=\"tag is-primary\">Testnet</span>\n                  </div>\n                </div>\n                <div className=\"content\" style={{ minHeight: \"100px\" }}>\n                  Preview FTW future apps.\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ed/Projects/FTW/client/src/consts/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/provider/index.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/MyCollection/index.tsx",["734"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport PropertiesModal from \"../Gallery/PropertiesModal\";\nimport { GALLERY_PATH } from \"../../../consts\";\nimport { Link } from \"react-router-dom\";\n\nconst MyCollection = () => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus(address: string) {\n      setError(\"\");\n      try {\n        const res = await new NFTContract(network).getTokensOf(address);\n        setTokens(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network]);\n  return (\n    <>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">My collection</h1>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"columns is-multiline\">\n            {tokens.length > 0 ? (\n              tokens.map((token) => (\n                <div className=\"column is-3\">\n                  <figure\n                    className=\"image\"\n                    onClick={() => onPropertiesModalActive(token.tokenId)}\n                  >\n                    <img src={token.image} />\n                  </figure>\n                </div>\n              ))\n            ) : (\n              <div className=\"column is-3\">\n                <div className=\"box\">\n                  <div className=\"block\">\n                    <p>You don't have any runes yet</p>\n                  </div>\n\n                  <Link className=\"button is-primary\" to={GALLERY_PATH}>\n                    Go Get Them\n                  </Link>\n                </div>\n                {/*<DisplayRandomRune width=\"100%\" height=\"100%\" />*/}\n              </div>\n            )}\n          </div>\n        )}\n      </PageLayout>\n      {/*<button onClick={onMint} className=\"button is-black\">Mint</button>*/}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MyCollection;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/index.tsx",["735"],"import React, { useEffect } from \"react\";\nimport { ARENA_PATH } from \"./pageRoutes\";\nimport { Link, NavLink, Route, useLocation } from \"react-router-dom\";\nimport Arena from \"./scenes/Arena\";\nimport { TOURNAMENT_PATH } from \"../../../consts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { MAINNET } from \"../../../packages/neo/consts\";\nimport PageLayout from \"../../components/PageLayout\";\n\nconst Tournament = () => {\n  const location = useLocation();\n  useEffect(() => {\n    document.title = \"Forthewin Arena: NFT tournament on NEO\";\n  }, []);\n  const { network } = useWallet();\n  let ARENA_LIST = [\"4\", \"8\", \"16\", \"32\", \"64\", \"128\", \"256\"];\n  if (network === MAINNET) {\n    ARENA_LIST = [\"8\", \"16\", \"32\", \"64\", \"128\"];\n  }\n  return (\n    <section>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div>\n              <h1 className=\"title\">Arenas</h1>\n              <div className=\"content is-small\">\n                <p>\n                  <strong>Smart contract</strong>\n                  <br />\n                  <a\n                    className=\"has-text-dark is-size-7\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x0eb288c413b5d5ec4aa0df5aea34d9538b28dd29\"\n                  >\n                    0x0eb288c413b5d5ec4aa0df5aea34d9538b28dd29\n                  </a>\n                </p>\n                <p>\n                  <strong>Press</strong>\n                  <br />\n                  <a\n                    // className=\"has-text-dark is-size-7\"\n                    href=\"https://neonewstoday.com/nft/ftw-arena-tickets-now-on-sale/\"\n                  >\n                    Article 1, &nbsp;\n                  </a>\n                  <a\n                    // className=\"has-text-dark is-size-7\"\n                    href=\"https://neonewstoday.com/gaming/forthewin-opens-the-arena-allowing-runes-to-battle-for-gas-prizes/\"\n                  >\n                    2\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"hero-foot\">\n          <nav className=\"tabs is-boxed\">\n            <div className=\"container\">\n              <ul>\n                {ARENA_LIST.map((arena) => {\n                  return (\n                    <li\n                      key={arena}\n                      className={\n                        location.pathname === TOURNAMENT_PATH + \"/\" + arena ||\n                        (location.pathname === TOURNAMENT_PATH &&\n                          arena === ARENA_LIST[0])\n                          ? \"is-active\"\n                          : \"\"\n                      }\n                    >\n                      <NavLink\n                        activeClassName=\"is-active\"\n                        to={TOURNAMENT_PATH + \"/\" + arena}\n                      >\n                        ARENA {arena}\n                      </NavLink>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </nav>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"box\">\n          <Route\n            exact={true}\n            path={TOURNAMENT_PATH}\n            component={(route) => (\n              <Arena defaultArena={ARENA_LIST[0]} {...route} />\n            )}\n          />\n          <Route\n            path={ARENA_PATH}\n            component={(route) => (\n              <Arena defaultArena={ARENA_LIST[0]} {...route} />\n            )}\n          />\n        </div>\n      </PageLayout>\n    </section>\n  );\n};\n\nexport default Tournament;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/index.tsx",["736"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport PropertiesModal from \"./PropertiesModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport Banner from \"./Banner\";\nimport { RestAPI } from \"../../../packages/neo/api\";\nimport { RUNE_PHASE_FILTER } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../components/Modal\";\n\nconst Gallery = () => {\n  const [txid, setTxid] = useState(\"\");\n  const [filter, setFilter] = useState<string>(RUNE_PHASE_FILTER[0]);\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n  const onFilterChange = (val: string) => setFilter(val);\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).mint(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    document.title =\n      \"Forthewin Rune: Algorithms-generated lucky runes NFT on NEO\";\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const items = await new RestAPI(network).getRunes(filter);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getTokens();\n        setTokens(items);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network, filter]);\n  return (\n    <section id=\"Rune\">\n      <Banner\n        network={network}\n        filter={filter}\n        onFilterChange={onFilterChange}\n        onMint={onMint}\n      />\n      {isLoading ? (\n        <PageLayout>\n          <div>Loading..</div>\n        </PageLayout>\n      ) : error ? (\n        <PageLayout>\n          <div>{error}</div>\n        </PageLayout>\n      ) : (\n        <div\n          className=\"container\"\n          style={{\n            display: \"flex\",\n            flexFlow: \"wrap\",\n          }}\n        >\n          {tokens.map((token) => (\n            <figure\n              style={{ width: \"5%\" }}\n              key={token.tokenId}\n              className=\"image rune\"\n              onClick={() => onPropertiesModalActive(token.tokenId.toString())}\n            >\n              <img src={token.image} />\n              {/*<small*/}\n              {/*  className=\"has-text-white\"*/}\n              {/*  style={{ position: \"absolute\", top: 0 }}*/}\n              {/*>*/}\n              {/*  #{token.tokenId}*/}\n              {/*</small>*/}\n              {/*<span className=\"has-text-white\">{token.phase}</span>*/}\n            </figure>\n          ))}\n        </div>\n      )}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={() => setTxid(\"\")}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default Gallery;\n","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/ui/components/Logo.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/WalletDropdown.tsx",["737","738","739"],"import React, { useEffect, useState } from \"react\";\nimport { utils } from \"../../packages/neo\";\nimport { IConnectedWallet } from \"../../packages/neo/wallet/interfaces\";\nimport { useWallet } from \"../../packages/provider\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport { COLLECTION_PATH } from \"../../consts\";\nimport { NavLink } from \"react-router-dom\";\nimport { NEO_LINE, O3 } from \"../../packages/neo/consts\";\nimport neo3Dapi from \"neo3-dapi\";\ninterface IWalletDropdownProps {\n  connectedWallet: IConnectedWallet;\n}\nconst WalletDropdown = ({ connectedWallet }: IWalletDropdownProps) => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n\n  const onActive = () => setActive(!isActive);\n\n  useEffect(() => {\n    const refresh = () => {\n      connectWallet(connectedWallet.key);\n    };\n    const disconnected = () => {\n      disConnectWallet();\n    };\n\n    if (connectedWallet.key === NEO_LINE) {\n      window.addEventListener(\"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.NETWORK_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.DISCONNECTED\", disconnected);\n      return () => {\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.NETWORK_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.DISCONNECTED\",\n          disconnected\n        );\n      };\n    }\n    if (connectedWallet.key === O3) {\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.DISCONNECTED,\n        disconnected\n      );\n\n      return () => {\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.DISCONNECTED,\n          disconnected\n        );\n      };\n    }\n  }, []);\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className=\"button is-small is-black is-rounded\"\n          aria-controls=\"dropdown-wallet\"\n        >\n          <span>{utils.truncateAddress(connectedWallet.account.address)}</span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <img src={getWalletIcon(connectedWallet.key)} />\n              </div>\n              <div className=\"media-content\">\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </div>\n            </div>\n          </div>\n          <hr className=\"dropdown-divider\" />\n          <NavLink\n            className=\"dropdown-item has-text-dark\"\n            onClick={() => setActive(false)}\n            to={COLLECTION_PATH}\n          >\n            My NFT\n          </NavLink>\n          <hr className=\"dropdown-divider\" />\n          <a onClick={handleDisconnectWallet} className=\"dropdown-item\">\n            Disconnect\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","/Users/ed/Projects/FTW/client/src/ui/components/NetworkSwitch.tsx",["740"],"import React, { useState } from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, PRIVATENET, TESTNET } from \"../../packages/neo/consts\";\nimport { INetworkType } from \"../../packages/neo/network\";\n\nconst NetworkSwitch = () => {\n  const [isActive, setActive] = useState(false);\n  const { network, switchNetwork } = useWallet();\n  const onActive = () => setActive(!isActive);\n  const handleNetworkChange = (val: string) => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(\"Are you sure to switch network?\")) {\n      switchNetwork(val as INetworkType);\n      setActive(false);\n    }\n  };\n  const networkList = [PRIVATENET, TESTNET, MAINNET];\n\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className={`button is-small ${\n            network === MAINNET ? \"is-white\" : \"is-danger\"\n          }`}\n          aria-controls=\"dropdown-wallet\"\n        >\n          {network}\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {networkList.map((v) => {\n            if (\n              (process.env.NODE_ENV !== \"development\" && v === PRIVATENET) ||\n              network === v\n            ) {\n              return false;\n            }\n            return (\n              <div key={`network${v}`} className=\"dropdown-item\">\n                <a onClick={() => handleNetworkChange(v)}>Switch to {v}</a>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","/Users/ed/Projects/FTW/client/src/ui/components/SidebarNav.tsx",["741","742","743","744"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { MENU } from \"../../consts\";\nimport { useWallet } from \"../../packages/provider\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaMedium, FaTwitter } from \"react-icons/all\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaGithub } from \"react-icons/fa\";\nimport SocialLinkGroup from \"./SocialLinkGroup\";\n\nconst SidebarNav = (props) => {\n  const { network } = useWallet();\n  const { toggleSidebar } = useApp();\n  return (\n    <>\n      <aside className=\"menu p-5\">\n        <p className=\"menu-label\">Menu</p>\n        <ul className=\"menu-list\">\n          {MENU.map((route, i) => {\n            if (!route.network.includes(network)) return false;\n            return (\n              <li key={`${route.label}${i}`}>\n                {route.category ? (\n                  <>\n                    <div\n                      onClick={toggleSidebar}\n                      // activeClassName={\"is-active\"}\n                      // to={route.path}\n                    >\n                      {route.label}\n                    </div>\n                    <ul>\n                      {route.category.map((item) => {\n                        return (\n                          <li key={item.label}>\n                            <NavLink\n                              key={`category-${item.label}`}\n                              activeClassName={\"is-active\"}\n                              to={item.path}\n                            >\n                              {item.label}\n                            </NavLink>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </>\n                ) : (\n                  <NavLink\n                    onClick={toggleSidebar}\n                    activeClassName={\"is-active\"}\n                    to={route.path}\n                  >\n                    {route.label}\n                  </NavLink>\n                )}\n              </li>\n            );\n          })}\n          <li>\n            {\" \"}\n            <a\n              target={\"_blank\"}\n              className=\"navbar-item\"\n              href={\"http://docs.forthewin.network/\"}\n            >\n\t            Documentation\n            </a>\n          </li>\n        </ul>\n      </aside>\n      <div className=\"p-5\" style={{ position: \"absolute\", bottom: \"40px\" }}>\n        <div className=\"buttons\">\n          <SocialLinkGroup />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SidebarNav;\n","/Users/ed/Projects/FTW/client/src/ui/components/PageLayout.tsx",[],"/Users/ed/Projects/FTW/client/src/consts/pageRoutes.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/pageRoutes.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/provider/wallet-provider.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/NotifyError.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/PropertiesModal.tsx",["745","746"],"import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\n\ninterface IPropertiesModal {\n  tokenId: string;\n  onClose: () => void;\n}\nconst PropertiesModal = ({ tokenId, onClose }: IPropertiesModal) => {\n  const [item, setItem] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getProperties(\n          tokenId.toString()\n        );\n        setItem(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network]);\n  return (\n    <Modal onClose={onClose}>\n      {isLoading ? (\n        <div>Loading the rune data from the chain..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <h1 className=\"title is-4\">{item.name}</h1>\n\n          <p className=\"subtitle is-7\">\n            <strong>Phase:</strong> {item.phase}, <strong>Luck:</strong>{\" \"}\n            {item.luck}\n          </p>\n          <figure className=\"image is-square\">\n            <img src={item.image} />\n          </figure>\n          <p className=\"subtitle is-7 has-text-right mt-3\">{item.owner}</p>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PropertiesModal;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/Banner.tsx",["747","748"],"import React from \"react\";\nimport { RUNE_PRICE } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport DisplayRandomRune from \"../../components/RandomRune\";\ninterface IBannerProps {\n  network: INetworkType;\n  filter: string;\n  onMint: () => void;\n  onFilterChange: (val: string) => void;\n}\nconst Banner = ({ onMint, network }: IBannerProps) => {\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div>\n            <h1 className=\"title\">FTW Runes</h1>\n            <p className=\"subtitle\">Algorithms-generated, stored onchain NFT</p>\n            <div className=\"content is-small\">\n              <p>\n                <strong>Smart contract</strong>\n                <br />\n                <a\n                  className=\"has-text-dark is-size-7\"\n                  href=\"https://explorer.onegate.space/contractinfo/0xbebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\"\n                >\n                  0xbebd4eb7c09ca5b59004aa8b58c9bfc81270e5d6\n                </a>\n              </p>\n              <p>\n                <strong>Max supply</strong>\n                <br />\n                500 runes (Sold out)\n              </p>\n              <p>\n                <strong>Attribute #1</strong>\n                <br />\n                Dark, Light, Fire, Water, Wood, Earth, Metal\n              </p>\n              <p>\n                <strong>Attribute #2</strong>\n                <br /> Luck (1 ~ 10)\n              </p>\n              <p>\n                <strong>Press</strong>\n                <br />\n                <a\n                  // className=\"has-text-dark is-size-7\"\n                  href=\"https://neonewstoday.com/general/forthewin-network-launches-token-generator-and-ftw-rune-with-image-stored-onchain\"\n                >\n                  Article 1, &nbsp;\n                </a>\n                <a\n                  // className=\"has-text-dark is-size-7\"\n                  href=\"https://neonewstoday.com/nft/ftw-arena-tickets-now-on-sale/\"\n                >\n                  Article 2\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/index.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/ui/PendingTransaction/index.tsx",["749","750"],"import React, { useEffect } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useWallet } from \"../../provider\";\nimport { Network } from \"../../neo/network\";\n\nconst PendingTransaction = () => {\n  const {\n    network,\n    pendingTransactions,\n    removePendingTransaction,\n    // increaseTotalTxSubmit,\n  } = useWallet();\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        for (const txid of pendingTransactions) {\n          const res = await Network.getRawTx(txid, network);\n          removePendingTransaction(txid);\n          // increaseTotalTxSubmit();\n        }\n      } catch (e: any) {\n        console.error(e);\n      }\n    }\n\n    if (pendingTransactions.length > 0) {\n      checkTxid();\n    }\n  }, [pendingTransactions]);\n  if (pendingTransactions.length === 0) return <></>;\n  return (\n    <div className=\"navbar-item pr-0\">\n      <div\n        style={{ pointerEvents: \"none\" }}\n        className=\"is-center button is-outlined is-rounded is-small\"\n      >\n        <ClipLoader loading={true} size={15} />\n        <span className=\"ml-2\">{`${pendingTransactions.length} Pending`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default PendingTransaction;\n",["751","752"],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/consts/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/api/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/index.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Home/index.tsx",[],["753","754"],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/index.tsx",["755","756","757","758"],"import React, { useEffect, useState } from \"react\";\nimport Banner from \"./Banner\";\nimport PageLayout from \"../../../../components/PageLayout\";\nimport { ARENA_PATH } from \"../../pageRoutes\";\nimport { Route, useLocation } from \"react-router-dom\";\nimport Players from \"./Players\";\nimport History from \"./History\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../packages/neo/contracts/ftw/tournament\";\n\nconst Arena = (props) => {\n  const location = useLocation();\n  let { arenaNo } = props.match.params;\n  arenaNo = arenaNo ? arenaNo : props.defaultArena;\n  const [status, setStatus] = useState<{\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  }>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchBetAmount() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getCurrentPrize(\n          arenaNo\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchBetAmount();\n  }, [network, location.pathname]);\n  return (\n    <div>\n      <Banner pathname={location.pathname} status={status} arenaNo={arenaNo} />\n      {React.useMemo(() => {\n        return (\n          <>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : (\n              <>\n                <Route\n                  exact\n                  path={ARENA_PATH}\n                  component={() => (\n                    <Players\n                      arenaNo={arenaNo}\n                      gameNo={status ? status.gameNo : undefined}\n                    />\n                  )}\n                />\n                <Route\n                  path={ARENA_PATH + \"/history\"}\n                  component={() => <History arenaNo={arenaNo} />}\n                />\n              </>\n            )}\n          </>\n        );\n      }, [status, isLoading])}\n    </div>\n  );\n};\n\nexport default Arena;\n","/Users/ed/Projects/FTW/client/src/ui/components/Modal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/TransactionSubmitted.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/WalletList.tsx",["759","760"],"import React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletList = () => {\n  const { connectWallet, list, useDevWallet } = useWallet();\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          if (!useDevWallet && _wallet.key === DEV) return false;\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/Runes.tsx",["761","762","763"],"import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../neo/contracts\";\nimport { IRuneMeta } from \"../../neo/contracts/ftw/nft/interfaces\";\nimport { useWallet } from \"../../provider\";\nimport { IConnectedWallet } from \"../../neo/wallet/interfaces\";\n\ninterface IRunesProps {\n  connectedWallet: IConnectedWallet;\n}\nconst Runes = ({ connectedWallet }: IRunesProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  useState<IRuneMeta>();\n  const { network } = useWallet();\n  // const onPropertiesModalActive = (obj: IRuneMeta) => {\n  //   if (connectedWallet) {\n  //     setPropertiesModalActive(obj);\n  //   } else {\n  //     toast.error(\"Please connect wallet.\");\n  //   }\n  // };\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getTokens();\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet]);\n  return (\n    <div>\n      <div\n        style={{\n          flexFlow: \"wrap\",\n          // width: \"640px\",\n          // margin: \"0 auto\"\n        }}\n        className=\"is-flex\"\n      >\n        {/*{tokens.map((tokenId) => (*/}\n        {/*  <DisplayRune*/}\n        {/*    tokenId={tokenId}*/}\n        {/*    network={network}*/}\n        {/*    onClick={() => false}*/}\n        {/*  />*/}\n        {/*))}*/}\n        {/*<DisplayRandomRune width=\"64px\" height=\"64px\" />*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Runes;\n",["764","765"],"/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/WalletDropdown.tsx",["766","767"],"import React, { useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown } from \"react-icons/all\";\nimport { useApp } from \"../../../common/hooks/use-app\";\nimport { useWallet } from \"../../provider\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletDropdown = () => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectedWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n  if (!connectedWallet) {\n    return (\n      <button className=\"button is-white \" onClick={() => setActive(!isActive)}>\n        <strong>Wallet</strong>\n      </button>\n    );\n  }\n  return (\n    <div className={`dropdown ${isActive && \"is-active\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-white\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu3\"\n          onClick={() => setActive(!isActive)}\n        >\n          <span className=\"icon is-small\">\n            <img src={getWalletIcon(connectedWallet.key)} />\n          </span>\n          <span>\n            <strong>Wallet</strong>\n          </span>\n          <span className=\"icon is-small\">\n            <FaAngleDown />\n            {/*<i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>*/}\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a\n            onClick={handleDisconnectWallet}\n            href=\"#\"\n            className=\"dropdown-item\"\n          >\n            Disconnect\n          </a>\n          {/*<hr className=\"dropdown-divider\"/>*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/AssetCard.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/neo/network/index.ts",["768","769"],"/Users/ed/Projects/FTW/client/src/packages/neo/api/rest.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/wallet/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/utils/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/helpers.ts",["770"],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/local-storage/index.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Banner.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/bank/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/api/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/wallet/dev-wallet.ts",["771"],"import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\n// tslint:disable-next-line:no-submodule-imports\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpcClient = Network.getRPCClient(network);\n    const res = await rpcClient.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      let amount;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n        amount = u.BigInteger.fromNumber(item.amount).toDecimal(8).toString();\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n        amount = item.amount;\n      }\n      balances.push({\n        contract: item.assethash,\n        amount,\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    },\n    network: INetworkType\n  ) {\n    const rpcClient = Network.getRPCClient(network);\n    const version: any = await rpcClient.getVersion();\n    const txObj = await DevWallet.build(rpcClient, invokeScript);\n    txObj.sign(DevWallet.account, version.protocol.network);\n    const txid = await rpcClient.sendRawTransaction(txObj);\n    // // tslint:disable-next-line:no-console\n    //   JSON.stringify(\n    //     {\n    //       RPC: rpc,\n    //       Transaction: txObj,\n    //       Network: version,\n    //       \"Network Fee\": txObj.networkFee.toDecimal(8).toString(),\n    //       \"System Fee\": txObj.systemFee.toDecimal(8).toString(),\n    //     },\n    //     null,\n    //     4\n    //   )\n    // );\n    return {\n      txid,\n      nodeUrl: rpcClient.url,\n    };\n  }\n\n  static createScript = (invokeScript: sc.ContractCallJson) => {\n    return sc.createScript({\n      scriptHash: invokeScript.scriptHash,\n      operation: invokeScript.operation,\n      args: invokeScript.args\n        ? invokeScript.args.map((param: any) => convertContractCallParam(param))\n        : [],\n    });\n  };\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    }\n    // cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n\n    const script = this.createScript(invokeScript);\n\n    // if (cosignerAddress) {\n    //   signers.push({\n    //     account: wallet.getScriptHashFromAddress(cosignerAddress),\n    //     scopes: tx.WitnessScope.Global,\n    //   });\n    // }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers: invokeScript.signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    if (invokeScript.extraSystemFee) {\n      const fee = u.BigInteger.fromDecimal(\n        invokeScript.extraSystemFee,\n        8\n      ).toString();\n      transaction.systemFee = systemFee.add(parseFloat(fee));\n    }\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/helpers.ts",["772"],"import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/index.tsx",["773"],"import React, { useEffect, useState } from \"react\";\nimport Pagination from \"bulma-pagination-react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport NFTDetailModal from \"./NFTDetailModal\";\nimport HistoryTable from \"./HistoryTable\";\nimport Replay from \"./Replay\";\nimport AfterTransactionSubmitted from \"../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IHistoryProps {\n  arenaNo: string;\n}\nconst History = ({ arenaNo }: IHistoryProps) => {\n  const [claimTxid, setClaimTxid] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [nftModalActive, setNftModalActive] = useState();\n  const [replayModalActive, setReplayModalActive] = useState();\n  const [history, setHistory] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const onNFTModalActive = (obj) => setNftModalActive(obj);\n  const onReplayModalActive = (obj) => setReplayModalActive(obj);\n\n  useEffect(() => {\n    async function fetchHistory() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).history(\n          arenaNo,\n          page\n        );\n        setHistory(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchHistory();\n  }, [connectedWallet, network, page]);\n\n  let totalPages = 0;\n  if (history) {\n    const itemsPerPage = parseFloat(arenaNo) >= 64 ? 2 : 5;\n    totalPages = Math.ceil(history.totalItems / itemsPerPage);\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <div className=\"\">\n            {history.items && history.items.length > 0 ? (\n              history.items.map((game) => {\n                return (\n                  <HistoryTable\n                    key={game.gameNo}\n                    width={\"64px\"}\n                    height={\"64px\"}\n                    history={game}\n                    arenaNo={arenaNo}\n                    network={network}\n                    onClick={(obj) => {\n                      onNFTModalActive(obj);\n                    }}\n                    onReplay={() => onReplayModalActive(game)}\n                    onClaimed={setClaimTxid}\n                  />\n                );\n              })\n            ) : (\n              <div>Game hasn't been played</div>\n            )}\n            {totalPages > 1 && (\n              <div className=\"media\">\n                <div className=\"media-content\">\n                  <Pagination\n                    pages={totalPages}\n                    currentPage={page}\n                    onChange={(_page) => {\n                      if (page !== _page) {\n                        setPage(_page);\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      {nftModalActive && (\n        <NFTDetailModal\n          rune={nftModalActive}\n          onClose={() => setNftModalActive(undefined)}\n        />\n      )}\n\n      {replayModalActive && (\n        <Replay\n          arenaNo={arenaNo}\n          gameHistory={replayModalActive}\n          onClick={(obj) => {\n            onNFTModalActive(obj);\n          }}\n          onClose={() => setReplayModalActive(undefined)}\n        />\n      )}\n\n      {claimTxid && (\n        <Modal onClose={() => setClaimTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={claimTxid}\n            network={network}\n            onSuccess={() => setClaimTxid(\"\")}\n            onError={() => setClaimTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default History;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/Replay.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/PlayerModal.tsx",["774","775","776","777"],"import React, { useEffect, useState } from \"react\";\nimport { IRuneMeta } from \"../../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport BetButton from \"../../../../components/BetButton\";\nimport LeaveButton from \"../../../../components/LeaveButton\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toDecimal } from \"../../../../../../../packages/neo/utils\";\n\ninterface IPlayerModalProps {\n  arenaNo: string;\n  gameNo?: number;\n  player: IRuneMeta & { tokenId: string; gameOwner: string };\n  onClose: () => void;\n}\n\nconst PlayerModal = ({\n  arenaNo,\n  gameNo,\n  player,\n  onClose,\n}: IPlayerModalProps) => {\n  const [txid, setTxid] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const [status, setStatus] = useState({\n    totalBets: \"\",\n    userBets: \"\",\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    async function fetchContractStatus(_gameNo) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetOnPlayer(\n          arenaNo,\n          _gameNo,\n          player.tokenId,\n          connectedWallet ? connectedWallet.account.address : undefined\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (gameNo) {\n      fetchContractStatus(gameNo);\n    }\n  }, [gameNo, network]);\n  return (\n    <Modal onClose={onClose}>\n      <div>\n        {txid ? (\n          <AfterTransactionSubmitted\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n            txid={txid}\n            network={network}\n          />\n        ) : (\n          <div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <img src={player.image} />\n              </div>\n              <div className=\"column\">\n                <div className=\"content\">\n                  <strong>Name</strong>\n                  <br />\n                  <p>{player.name}</p>\n                  <strong>Phase</strong>\n                  <p>{player.phase}</p>\n                  <strong>Luck</strong>\n                  <p>{player.luck}</p>\n                  <strong>Owner</strong>\n                  <p>{player.gameOwner}</p>\n                  <strong>Current support amount</strong>\n                  <p>{toDecimal(status.totalBets)}</p>\n                  {connectedWallet && (\n                    <>\n                      <strong>My support amount</strong>\n                      <p>{toDecimal(status.userBets)}</p>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <BetButton\n                  setTxid={setTxid}\n                  arenaNo={arenaNo}\n                  tokenId={player.tokenId}\n                />\n              </div>\n              <div className=\"column\">\n                <button\n                  onClick={onClose}\n                  className=\"button is-light is-fullwidth\"\n                >\n                  Close\n                </button>\n              </div>\n              {connectedWallet &&\n              connectedWallet.account.address === player.gameOwner ? (\n                <div className=\"column\">\n                  <LeaveButton\n                    setTxid={setTxid}\n                    arenaNo={arenaNo}\n                    tokenId={player.tokenId}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default PlayerModal;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/NFTListModal.tsx",["778"],"import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { NFTContract } from \"../../../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toast } from \"react-hot-toast\";\n\ninterface INFTListModalModal {\n  arenaNo: string;\n  onClose: () => void;\n}\nconst NFTListModal = ({ arenaNo, onClose }: INFTListModalModal) => {\n  const [txid, setTxid] = useState(\"\");\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n\n  const onRegister = async (tokenId: string) => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).register(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        {txid ? (\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n          />\n        ) : (\n          <div>\n            <div className=\"block\">\n              <h5 className=\"title is-5\">Select a NFT to send to the ARENA</h5>\n            </div>\n            <div>\n              {isLoading ? (\n                <div>Loading..</div>\n              ) : error ? (\n                <div>{error}</div>\n              ) : tokens.length > 0 ? (\n                <div\n                  style={{\n                    flexFlow: \"wrap\",\n                  }}\n                  className=\"is-flex\"\n                >\n                  {tokens.map((token) => {\n                    return (\n                      <figure\n                        key={token.tokenId}\n                        // style={{ width, height }}\n                        className=\"image is-64x64\"\n                        onClick={() => onRegister(token.tokenId)}\n                      >\n                        <img src={token.image} />\n                      </figure>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div>You don't have runes</div>\n              )}\n            </div>\n          </div>\n        )}\n      </>\n    </Modal>\n  );\n};\n\nexport default NFTListModal;\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/index.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/TournamentTree.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/ArenaRegisterButton.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/PlayButton.tsx",["779"],"import React from \"react\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TOURNAMENT_TIME_PADDING } from \"../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IPlayButtonProps {\n  arenaNo: string;\n  onSubmitted: (txid: string) => void;\n  status?: {\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  };\n}\nconst PlayButton = ({ arenaNo, onSubmitted, status }: IPlayButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPlay = async () => {\n    if (connectedWallet && status) {\n      // try {\n      //   const res = await new TournamentContract(network).play(\n      //     connectedWallet,\n      //     arenaNo\n      //   );\n      //   addPendingTransaction(res);\n      //   onSubmitted(res);\n      // } catch (e: any) {\n      //   toast.error(e.message);\n      // }\n      // const timeLeft =\n      //   TOURNAMENT_TIME_PADDING -\n      //   parseFloat(status.timeElapsedFromPreviousGame);\n      // if (timeLeft <= 0) {\n      try {\n        const res = await new TournamentContract(network).play(\n          connectedWallet,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        onSubmitted(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n      // } else {\n      // }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <button className=\"button is-primary press-font\" onClick={onPlay}>\n      Start\n    </button>\n  );\n};\n\nexport default PlayButton;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/NFTDetailModal.tsx",["780"],"import React from \"react\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IPlayerModalProps {\n  rune: IRuneMeta;\n  onClose: () => void;\n}\nconst NFTDetailModal = ({ rune, onClose }: IPlayerModalProps) => {\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <img src={rune.image} />\n        </div>\n        <div className=\"column\">\n          <div className=\"content\">\n            <strong>Name</strong>\n            <br />\n            <p>{rune.name}</p>\n            <strong>Phase</strong>\n            <p>{rune.phase}</p>\n            <strong>Luck</strong>\n            <p>{rune.luck}</p>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NFTDetailModal;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/HistoryTable.tsx",["781","782"],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/DisplayRuneWithProperties.tsx",["783","784"],"import React, { useEffect, useState } from \"react\";\nimport { INetworkType } from \"../../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { RestAPI } from \"../../../../packages/neo/api\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaStar } from \"react-icons/fa\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  isOwner?: boolean;\n  onClick: (obj) => void;\n}\n\nconst DisplayRuneWithProperties = ({\n  width,\n  height,\n  tokenId,\n  network,\n  isOwner,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchRune() {\n      try {\n        const res = await new RestAPI(network).getRune(tokenId);\n        setToken(res);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getProperties(tokenId);\n        // setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchRune();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune is-relative\"\n      onClick={() => onClick({ ...token, tokenId })}\n    >\n      <img src={token.image} />\n      {isOwner && (\n        <FaStar\n          style={{ position: \"absolute\", top: \"2px\", left: \"3px\" }}\n          className=\"has-text-warning\"\n        />\n      )}\n    </figure>\n  );\n};\n\nexport default DisplayRuneWithProperties;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/ClaimButton.tsx",["785"],"import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { IHistoryGame } from \"../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport { calculateClaimableAmount } from \"../../../../packages/neo/contracts/ftw/tournament/helpers\";\n\ninterface IClaimButtonProps {\n  arenaNo: string;\n  history: IHistoryGame;\n  onClaimed: (txid: string) => void;\n}\nconst ClaimButton = ({ arenaNo, history, onClaimed }: IClaimButtonProps) => {\n  const [status, setStatus] = useState<any>({\n    betAmount: 0,\n    isClaimed: false,\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).claim(\n          connectedWallet,\n          arenaNo,\n          history.gameNo\n        );\n        addPendingTransaction(res);\n        onClaimed(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  useEffect(() => {\n    async function fetchBetAmount(address: string) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetAmount(\n          arenaNo,\n          history.gameNo,\n          history.champion,\n          address\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchBetAmount(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network, history]);\n  if (!connectedWallet) return <></>;\n\tif (history.betsOnChampion === \"0\") return <></>;\n  if (!status.betAmount) return <></>;\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {status.isClaimed ? (\n            <button disabled={true} className=\"button is-info is-fullwidth\">\n              Claimed\n            </button>\n          ) : (\n            <button className=\"button is-info is-fullwidth\" onClick={onClaim}>\n              Claim {calculateClaimableAmount(history, status.betAmount)} GAS\n            </button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ClaimButton;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/Banner.tsx",["786","787","788"],"import React, { useState } from \"react\";\nimport { SMITH_PATH, SMITH_PATH_NEP11, TOURNAMENT_PATH } from \"../../../consts\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport NEP17FormModal from \"./NEP17FormModal\";\nimport NEP11FormModal from \"./NEP11FormModal\";\nimport {\n  BiCoinStack,\n  BsLightbulb,\n  FaCoins,\n  HiOutlinePhotograph,\n} from \"react-icons/all\";\n\nconst Banner = () => {\n  const location = useLocation();\n  const [isNep11FormModalActive, setNep11FormModalActive] = useState(false);\n  const [isNep17FormModalActive, setNep17FormModalActive] = useState(false);\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">Smith</h1>\n          <p className=\"subtitle\">\n            Create your token smart contracts without codes\n          </p>\n          <br />\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box content has-background-info has-text-white\">\n                <h5 className=\"has-text-light\">Token</h5>\n                <p>\n                  Neo blockchain's token smart contract. Like ERC20 Shiba Inu.\n                </p>\n                <button\n                  onClick={() => setNep17FormModalActive(true)}\n                  className=\"button is-light\"\n                >\n                  Create Token Contract\n                </button>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box content has-background-info  has-text-white\">\n                <h5 className=\"has-text-white\">NFT</h5>\n                <p>\n                  Neo blockchain's NFT smart contract. Like ERC721 Cryptopunk\n                  NFT.\n                </p>\n                <button\n                  onClick={() => setNep11FormModalActive(true)}\n                  className=\"button  is-light\"\n                >\n                  Create NFT Contract\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              <li\n                className={location.pathname === SMITH_PATH ? \"is-active\" : \"\"}\n              >\n                <Link to={SMITH_PATH}>\n                  <FaCoins />\n                  &nbsp; Token Showcase\n                </Link>\n              </li>\n              <li\n                className={\n                  location.pathname === SMITH_PATH_NEP11 ? \"is-active\" : \"\"\n                }\n              >\n                <Link to={SMITH_PATH_NEP11}>\n                  <BsLightbulb />\n                  &nbsp; NFT Showcase\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n      {isNep11FormModalActive && (\n        <NEP11FormModal onClose={() => setNep11FormModalActive(false)} />\n      )}\n      {isNep17FormModalActive && (\n        <NEP17FormModal onClose={() => setNep17FormModalActive(false)} />\n      )}\n    </section>\n  );\n};\n\nexport default Banner;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP17/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP17/ContractCard.tsx",["789","790"],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP17FormModal.tsx",["791","792"],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP11FormModal.tsx",["793"],"import React, { useEffect, useRef, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport { balanceCheck } from \"../../../packages/neo/utils\";\nimport SmithModalHeader from \"./components/Header\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst NEP11FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    author: \"\",\n    description: \"\",\n    email: \"\",\n  });\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        if (balanceCheck(connectedWallet.balances, 20)) {\n          try {\n            const res = await new SmithContract(network).createNEP11(\n              connectedWallet,\n              values.name,\n              values.symbol,\n              values.author,\n              values.description,\n              values.email\n            );\n            setTxid(res);\n          } catch (e: any) {\n            toast.error(e.message);\n          }\n        } else {\n          toast.error(\"You must have more than 20 GAS.\");\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  const firstInput = useRef(null);\n\n  useEffect(() => {\n    // @ts-ignore\n    firstInput.current.focus();\n  }, []);\n\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <SmithModalHeader title={\"NFT Smart Contract\"} />\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">NFT Contract Name</label>\n            <div className=\"control\">\n              <input\n                ref={firstInput}\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">NFT Symbol</label>\n            <div className=\"control\">\n              <input\n                value={values.symbol}\n                onChange={(e) => handleValueChange(\"symbol\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control\">\n              <input\n                value={values.email}\n                onChange={(e) => handleValueChange(\"email\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.author ||\n              !values.description ||\n              !values.email ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP11FormModal;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/ContractCard.tsx",["794","795","796","797","798"],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/Tokens.tsx",["799","800","801"],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/DisplayNFT.tsx",["802"],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/LeaveButton.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/BetButton.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/packages/ui/AfterTransactionSubmitted/index.tsx",["803","804"],"import React, { useEffect, useState } from \"react\";\nimport { INetworkType, Network } from \"../../neo/network\";\nimport RuneLoading from \"./RuneLoading\";\nimport CheckMark from \"../../../ui/pages/Tournament/scenes/Arena/Players/components/CheckMark\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExclamationCircle } from \"react-icons/all\";\nimport { TESTNET } from \"../../neo/consts\";\n\ninterface IAfterTransactionSubmittedProps {\n  txid: string;\n  network: INetworkType;\n  onSuccess: () => void;\n  onError: () => void;\n}\nconst AfterTransactionSubmitted = ({\n  txid,\n  network,\n  onSuccess,\n  onError,\n}: IAfterTransactionSubmittedProps) => {\n  const [isDone, setDone] = useState(false);\n  const [hasError, setError] = useState(\"\");\n\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        const res = await Network.getRawTx(txid, network);\n        if (res) {\n          setDone(true);\n        }\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    checkTxid();\n  }, [txid]);\n\n  return (\n    <div>\n      <div\n        style={{\n          width: \"200px\",\n          height: \"200px\",\n          margin: \"auto\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        className=\"\"\n      >\n        {hasError ? (\n          <FaExclamationCircle size={90} className=\"has-text-danger\" />\n        ) : isDone ? (\n          <CheckMark />\n        ) : (\n          <RuneLoading />\n        )}\n      </div>\n      <div className=\"has-background  has-text-centered mt-5\">\n        {hasError ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Error occurred</h1>\n            <p className=\"subtitle is-7\">{hasError}</p>\n            <button onClick={onError} className=\"button is-black\">\n              Close\n            </button>\n          </div>\n        ) : isDone ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Submitted</h1>\n            <p className=\"subtitle is-7\">Your transaction accepted</p>\n            <div className=\"block\">\n              <a\n                target=\"_blank\"\n                href={`https://${\n                  network === TESTNET ? \"testnet.\" : \"\"\n                }explorer.onegate.space/transactionInfo/${txid}`}\n              >\n                View txid on explorer\n              </a>\n            </div>\n            <div className=\"block\">\n              <button onClick={onSuccess} className=\"button is-black\">\n                Close\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <h1 className=\"title is-5\">Submitting..</h1>\n            <p className=\"subtitle is-7\">\n              Please wait until your transaction accepted\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AfterTransactionSubmitted;\n","/Users/ed/Projects/FTW/client/src/packages/ui/AfterTransactionSubmitted/RuneLoading.tsx",["805","806","807"],"import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\nconst RuneLoading = () => {\n\tconst [colors, setColors] = useState(getColors());\n  const [bg, setBg] = useState(\"black\");\n  const [dot1, setDot1] = useState(\"black\");\n  const [dot2, setDot2] = useState(\"black\");\n  const [dot3, setDot3] = useState(\"black\");\n  const [dot4, setDot4] = useState(\"black\");\n  const [body, setBody] = useState(\"black\");\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setBody(\"white\");\n    }, 1000);\n    timer = setTimeout(() => {\n      setDot1(\"white\");\n    }, 2000);\n    timer = setTimeout(() => {\n      setDot2(\"white\");\n    }, 3000);\n    timer = setTimeout(() => {\n      setDot3(\"white\");\n    }, 4000);\n    timer = setTimeout(() => {\n      setDot4(\"white\");\n    }, 5000);\n    timer = setTimeout(() => {\n      setBg(\"rgb(\" + colors[0] + \",\" + colors[1] + \",\" + colors[2] + \")\");\n    }, 6000);\n    timer = setTimeout(() => {\n      setBody(\"rgb(\" + colors[3] + \",\" + colors[4] + \",\" + colors[5] + \")\");\n    }, 7000);\n    timer = setTimeout(() => {\n      setDot1(\"rgb(\" + colors[6] + \",\" + colors[7] + \",\" + colors[8] + \")\");\n    }, 8000);\n    timer = setTimeout(() => {\n      setDot2(\"rgb(\" + colors[9] + \",\" + colors[10] + \",\" + colors[11] + \")\");\n    }, 9000);\n    timer = setTimeout(() => {\n      setDot3(\"rgb(\" + colors[12] + \",\" + colors[13] + \",\" + colors[14] + \")\");\n    }, 10000);\n    timer = setTimeout(() => {\n      setDot4(\"rgb(\" + colors[15] + \",\" + colors[16] + \",\" + colors[17] + \")\");\n    }, 11000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <img width=\"100%\" height=\"100%\" src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default RuneLoading;\n","/Users/ed/Projects/FTW/client/src/ui/components/RandomRune.tsx",["808","809"],"import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\n\ninterface IDisplayRandomRuneProps {\n  width: string;\n  height: string;\n  isActive?: boolean;\n}\nconst DisplayRandomRune = ({\n  width,\n  height,\n  isActive,\n}: IDisplayRandomRuneProps) => {\n  const [colors, setColors] = useState(getColors());\n  const bg = \"rgb(\" + colors[0] + \",\" + colors[6] + \",\" + colors[12] + \")\";\n  const dot1 = \"rgb(\" + colors[1] + \",\" + colors[7] + \",\" + colors[13] + \")\";\n  const dot2 = \"rgb(\" + colors[2] + \",\" + colors[8] + \",\" + colors[14] + \")\";\n  const dot3 = \"rgb(\" + colors[3] + \",\" + colors[9] + \",\" + colors[15] + \")\";\n  const dot4 = \"rgb(\" + colors[4] + \",\" + colors[10] + \",\" + colors[16] + \")\";\n  const body = \"rgb(\" + colors[5] + \",\" + colors[11] + \",\" + colors[17] + \")\";\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    if (isActive) {\n      const interval = setInterval(() => {\n        setColors(getColors());\n      }, 2000);\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  return (\n    <img style={{ width, height }} src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default DisplayRandomRune;\n",["810","811"],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/CheckMark.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/NavSwitch/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/Input/index.tsx",["812","813","814"],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Swap/index.tsx",["815","816","817","818"],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/swap/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/swap/consts.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/AssetListModal/index.tsx",["819","820","821"],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/swap/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Farm/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Farm/scenes/Detail/index.tsx",["822","823","824","825","826","827"],"import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../../../packages/neo/contracts\";\nimport { IConnectedWallet } from \"../../../../../../../packages/neo/wallet/interfaces\";\nimport { toast } from \"react-hot-toast\";\nimport { getUserShare } from \"../../../../../../../packages/neo/contracts/ftw/swap/helpers\";\nimport { ASSET_LIST } from \"../../../../../../../packages/neo/contracts/ftw/swap/consts\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\ninterface IFarmDetailProps {\n  tokenA: string;\n  tokenB: string;\n  amountA: string;\n  amountB: string;\n  connectedWallet: IConnectedWallet;\n}\nconst FarmDetail = ({ connectedWallet, tokenA, tokenB }: IFarmDetailProps) => {\n  const [data, setData] = useState<any>();\n  const [claimable, setClaimable] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const { network } = useWallet();\n  const [txid, setTxid] = useState(\"\");\n  const [reloadCnt, setReloadCnt] = useState(0);\n\n  const onRemoveLiquidity = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SwapContract(network).remove(\n          connectedWallet,\n          tokenA\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SwapContract(network).claim(\n          connectedWallet,\n          tokenA,\n          tokenB\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onActionSuccess = () => {\n    setReloadCnt(reloadCnt + 1);\n    setTxid(\"\");\n  };\n  //\n  // useEffect(() => {\n  //   async function fetch() {\n  //     setLoading(true);\n  //     const res1 = await new SwapContract(network).getUserStake(\n  //       connectedWallet,\n  //       tokenA,\n  //       tokenB\n  //     );\n  //     const res2 = await new SwapContract(network).getClaimAble(\n  //       connectedWallet,\n  //       tokenA,\n  //       tokenB\n  //     );\n  //     setLoading(false);\n  //     setData(res1);\n  //     setClaimable(res2);\n  //   }\n  //   fetch();\n  // }, [reloadCnt]);\n\n  if (isLoading) return <div>Loading..</div>;\n\n  const userShare = data\n    ? getUserShare(\n        data.pair.totalShare,\n        data.stake.amountA,\n        data.pair.amountA,\n        data.pair.amountB\n      )\n    : undefined;\n  console.log(\n    data\n      ? \"original staking: \" + data.stake.amountA + \"/\" + data.stake.amountB\n      : \"No staking info\"\n  );\n  return (\n    <div>\n      {txid ? (\n        <AfterTransactionSubmitted\n          txid={txid}\n          network={network}\n          onSuccess={onActionSuccess}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title is-5\">My liquidity</h1>\n          {data ? (\n            <div>\n              <div style={{ alignItems: \"center\" }} className=\"media\">\n                <div className=\"media-content is-vcentered\">\n                  {ASSET_LIST[network][tokenA].symbol} /{\" \"}\n                  {ASSET_LIST[network][tokenB].symbol}\n                  <br />\n                  <small>\n                    {/*{data.stake.amountA} / {data.stake.amountB}*/}\n                    {/*<br />*/}\n                    {userShare ? userShare.amountA : 0} /{\" \"}\n                    {userShare ? userShare.amountB : 0}\n                  </small>\n                </div>\n                <div className=\"media-right\">\n                  <button\n                    onClick={onRemoveLiquidity}\n                    className=\"button is-light\"\n                  >\n                    Remove\n                  </button>\n                </div>\n              </div>\n              <hr />\n              <div style={{ alignItems: \"center\" }} className=\"media\">\n                <div className=\"media-content is-vcentered\">\n                  Claimable\n                  <br />\n                  {ASSET_LIST[network][tokenA].symbol} /{\" \"}\n                  {ASSET_LIST[network][tokenB].symbol}\n                  <br />\n                  <small>\n                    {claimable ? claimable.amountA : 0} /{\" \"}\n                    {claimable ? claimable.amountB : 0}\n                  </small>\n                </div>\n                <div className=\"media-right\">\n                  <button onClick={onClaim} className=\"button is-primary\">\n                    Claim\n                  </button>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div>There is no liquidity with your connected wallet</div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FarmDetail;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/FusionBox.tsx",["828"],"import React from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaQuestionCircle } from \"react-icons/all\";\ninterface IFusionBoxProps {\n  src: string;\n}\nconst FusionBox = ({ src }: IFusionBoxProps) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n\t      height: \"300px\"\n      }}\n      className=\"is-clickable\"\n    >\n      {src ? <img src={src} /> : <FaQuestionCircle />}\n    </div>\n  );\n};\n\nexport default FusionBox;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/RuneListModal.tsx",["829"],"import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../components/Modal\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../packages/provider\";\n\ninterface INFTListModalModal {\n  onClick: (data: any) => void;\n  onClose: () => void;\n}\nconst RuneListModal = ({ onClick, onClose }: INFTListModalModal) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <div>\n          <div className=\"block\">\n            <h5 className=\"title is-5\">Select a Rune</h5>\n          </div>\n          <div>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : error ? (\n              <div>{error}</div>\n            ) : tokens.length > 0 ? (\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => onClick(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n            ) : (\n              <div>You don't have runes</div>\n            )}\n          </div>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default RuneListModal;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/CryptonatuListModal.tsx",["830","831","832","833","834"],"import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport AfterTransactionSubmitted from \"../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../components/Modal\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TTMNFTContract } from \"../../../../packages/neo/contracts/ttm/nft\";\n\ninterface INFTListModalModal {\n  onClick: (data: any) => void;\n  onClose: () => void;\n}\nconst CryptonatuListModal = ({ onClick, onClose }: INFTListModalModal) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TTMNFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <div>\n          <div className=\"block\">\n            <h5 className=\"title is-5\">Select a Cryptonaut</h5>\n          </div>\n          <div>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : error ? (\n              <div>{error}</div>\n            ) : tokens.length > 0 ? (\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => onClick(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n            ) : (\n              <div>You don't have runes</div>\n            )}\n          </div>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default CryptonatuListModal;\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ttm/nft/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ttm/nft/helpers.ts",["835"],"import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  stackItem.value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value;\n    switch (key) {\n      case \"owner\":\n        value = base64ToAddress(item.value.value);\n        break;\n      case \"attributes\":\n        value = parseProperties(item.value);\n        break;\n      default:\n        if (item.value.type === \"Integer\" || item.value.type === \"Boolean\") {\n          value = item.value.value;\n        } else {\n          value = base64ToString(item.value.value);\n        }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ttm/nft/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/fuse/index.ts",["836"],"import { CONST, wallet } from \"../../../index\";\nimport { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { parseProperties } from \"../../ttm/nft/helpers\";\nimport { tx, u, wallet as NeonWallet } from \"@cityofzion/neon-core\";\nimport { DEFAULT_WITNESS_SCOPE, GAS_SCRIPT_HASH } from \"../../../consts\";\nimport { RUNE_SCRIPT_HASH } from \"../nft\";\nimport { TTM_SCRIPT_HASH } from \"../../ttm/nft\";\n\nexport const FUSE_SCRIPT_HASH = {\n  [CONST.PRIVATENET]: \"f88481099b58a7ddff6693098037b23476a9dcee\",\n  [CONST.TESTNET]: \"f88481099b58a7ddff6693098037b23476a9dcee\",\n  [CONST.MAINNET]: \"\",\n};\n\nexport class FusionContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = FUSE_SCRIPT_HASH[networkType];\n  }\n\n  fuse = async (\n    connectedWallet: IConnectedWallet,\n    cryptonautTokenId: string,\n    runeTokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"fuse\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: cryptonautTokenId,\n        },\n        {\n          type: \"String\",\n          value: runeTokenId,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [\n            this.contractHash,\n            RUNE_SCRIPT_HASH[this.network],\n            TTM_SCRIPT_HASH[this.network],\n            GAS_SCRIPT_HASH,\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  refund = async (\n    connectedWallet: IConnectedWallet,\n    tokenId: string\n  ): Promise<string> => {\n    const senderHash = NeonWallet.getScriptHashFromAddress(\n      connectedWallet.account.address\n    );\n    const invokeScript = {\n      operation: \"refund\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Hash160\",\n          value: senderHash,\n        },\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n      signers: [\n        {\n          account: senderHash,\n          scopes: tx.WitnessScope.CustomContracts,\n          allowedContracts: [\n            this.contractHash,\n            RUNE_SCRIPT_HASH[this.network],\n            TTM_SCRIPT_HASH[this.network],\n            GAS_SCRIPT_HASH,\n          ],\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      invokeScript,\n      undefined,\n      undefined\n    );\n  };\n\n  getProperties = async (tokenId: string): Promise<object> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"properties\",\n      args: [\n        {\n          type: \"String\",\n          value: tokenId,\n        },\n      ],\n    };\n\n    const res = await Network.read(this.network, [script]);\n    return parseProperties(res.stack[0]);\n  };\n\n  getTokensOf = async (ownerAddress: string): Promise<object[]> => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"tokensOf\",\n      args: [\n        {\n          type: \"Address\",\n          value: ownerAddress,\n        },\n      ],\n    };\n    const res = await Network.read(this.network, [script]);\n    const metaList: object[] = [];\n    // @ts-ignore\n    for await (const item of res.stack[0].iterator) {\n      const tokenId = u.HexString.fromBase64(item.value as string).toAscii();\n      const meta = await this.getProperties(tokenId);\n      // @ts-ignore\n      metaList.push({ tokenId, ...meta });\n    }\n    return metaList;\n  };\n}\n","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/FusedList.tsx",["837","838"],"import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { FusionContract } from \"../../../../packages/neo/contracts/ftw/fuse\";\nimport { toast } from \"react-hot-toast\";\nimport ModalCard from \"../../../components/Modal\";\nimport AfterTransactionSubmitted from \"../../../../packages/ui/AfterTransactionSubmitted\";\ninterface IFusedListProps {\n  onSubmitted: (txid: string) => void;\n  onReset: () => void;\n}\nconst FusedList = ({ onSubmitted, onReset }: IFusedListProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [detail, setDetail] = useState<any>();\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const [txid, setTxid] = useState(\"\");\n\n  const onRefund = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FusionContract(network).refund(\n          connectedWallet,\n          detail.tokenId\n        );\n        setDetail(false);\n        onSubmitted(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new FusionContract(network).getTokensOf(\n          connectedWallet ? connectedWallet.account.address : undefined\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n\n  return (\n    <>\n      <div>\n        <div>\n          {isLoading ? (\n            <div></div>\n          ) : error ? (\n            <div>{error}</div>\n          ) : tokens.length > 0 ? (\n            <>\n              <div className=\"block\">\n                <h5 className=\"title is-5\">Fused Cryptonaut</h5>\n              </div>\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => setDetail(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n              {detail ? (\n                <ModalCard onClose={() => setDetail(undefined)}>\n                  <>\n                    {txid ? (\n                      <AfterTransactionSubmitted\n                        network={network}\n                        txid={txid}\n                        onSuccess={() => {\n                          setDetail(undefined);\n                          setTxid(\"\");\n                        }}\n                        onError={() => setTxid(\"\")}\n                      />\n                    ) : (\n                      <div className=\"card\">\n                        <div className=\"card-image\">\n                          <figure className=\"image is-4by3\">\n                            <img src={detail.image} />\n                          </figure>\n                        </div>\n                        <div className=\"card-content\">\n                          <div className=\"media\">\n                            <div className=\"media-content\">\n                              <h1 className=\"title is-5\">Fused Cryptonaut</h1>\n                              <p className=\"subtitle is-7\">\n                                TokenId: {detail.tokenId}\n                              </p>\n                              <div className=\"field is-grouped is-grouped-multiline\">\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Element</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.element}\n                                    </span>\n                                  </div>\n                                </div>\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Phase</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.phase}\n                                    </span>\n                                  </div>\n                                </div>\n                                <div className=\"control\">\n                                  <div className=\"tags has-addons\">\n                                    <span className=\"tag is-dark\">Luck</span>\n                                    <span className=\"tag is-info\">\n                                      {detail.luck}\n                                    </span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"media-right\">\n                              <button\n                                onClick={onRefund}\n                                className=\"button is-danger\"\n                              >\n                                Un-Fuse\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </>\n                </ModalCard>\n              ) : (\n                <div></div>\n              )}\n            </>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FusedList;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Migration/index.tsx",["839","840","841","842"],"import React, { useEffect, useRef, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport DOTS from \"vanta/dist/vanta.halo.min\";\nimport PageLayout from \"../../components/PageLayout\";\n// import * as THREE from \"three\";\n\nconst Migration = (props) => {\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        DOTS({\n          el: myRef.current,\n          mouseControls: true,\n          touchControls: true,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          backgroundColor: 0x80822,\n          size: 2.8,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) {\n        // @ts-ignore\n        vantaEffect.destroy();\n      }\n    };\n  }, [vantaEffect]);\n  return (\n    <div>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-flex\" style={{ alignItems: \"center\" }}>\n                <div>\n                  <h1 className=\"title\">Forthewin is back</h1>\n                  <p className=\"subtitle\">\n                    Migrate your Neo-legacy FTX to the new <span>N3 FTW</span>\n                  </p>\n                  <a\n                    target=\"_blank\"\n                    href=\"https://nepmigration.com/\"\n                    className=\"button is-primary\"\n                  >\n                    Go to Migrate\n                  </a>\n                </div>\n              </div>\n              <div className=\"column is-hidden-touch\">\n                <div\n                  className=\"block\"\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    minHeight: \"300px\",\n                  }}\n                >\n                  <video style={{ width: \"400px\" }} autoPlay loop>\n                    <source src={\"/assets/migration.mp4\"} type=\"video/mp4\" />\n                  </video>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns halo\" ref={myRef}>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>Neo-legacy</h3>\n                <h6>Symbol</h6>\n                <p>FTX</p>\n                <h6>Contract hash</h6>\n                <p>0xaac66f9779ca67d819d05492805d251dab02fc7b</p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://neotracker.io/asset/aac66f9779ca67d819d05492805d251dab02fc7b\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>N3</h3>\n                <h6>Symbol</h6>\n                <p>FTW</p>\n                <h6>Contract hash</h6>\n                <p>\n                  <a\n                    target=\"_blank\"\n                    className=\"has-text-dark\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\n                  </a>\n                </p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://explorer.onegate.space/NEP17tokeninfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Migration;\n","/Users/ed/Projects/FTW/client/src/ui/components/ReactGa.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/BgContainer.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/NetworkSwitch2.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/PairSelect/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Farm/scenes/CreatePool/index.tsx",["843","844","845"],"import React, { useState } from \"react\";\nimport { wallet } from \"@cityofzion/neon-core\";\nimport { toast } from \"react-hot-toast\";\nimport {\n  FTW_SCRIPT_HASH,\n  NUDES_SCRIPT_HASH,\n  SwapContract,\n} from \"../../../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { useHistory } from \"react-router-dom\";\nimport { SWAP_PATH_LIQUIDITY_ADD } from \"../../../../../../../consts\";\nimport { SWAP_FEE } from \"../../../../../../../packages/neo/contracts/ftw/swap/consts\";\n\nconst CreatePool = (props) => {\n  const { network } = useWallet();\n  const history = useHistory();\n  const [tokenA, setTokenA] = useState<string | undefined>();\n  const [tokenB, setTokenB] = useState<string | undefined>();\n  const [isLoading, setLoading] = useState(false);\n  const [errors, setErrors] = useState<string[]>([]);\n  const handleSubmit = async () => {\n    setErrors([]);\n    setLoading(true);\n    const _errors: string[] = [];\n\n    if (\n      !wallet.isScriptHash(tokenA as string) ||\n      !wallet.isScriptHash(tokenB as string)\n    ) {\n      _errors.push(\"Check contract hashes\");\n    }\n\n    if (tokenA === tokenB) {\n      _errors.push(\"Token A and Token B cannot be the same.\");\n    }\n\n    if (_errors.length === 0) {\n      const res = await new SwapContract(network).getContractHashes(\n        // @ts-ignore\n        tokenA,\n        tokenB\n      );\n\n      if (res.tokenA.decimals !== \"8\" || res.tokenB.decimals !== \"8\") {\n        _errors.push(\"We only can support tokens with 8 decimals.\");\n      }\n\n      if (res.reserve.amountA === 0 || res.reserve.amountB !== 0) {\n        _errors.push(\"There is existing pool.\");\n      }\n    }\n\n    if (_errors.length === 0) {\n      history.push(\n        `${SWAP_PATH_LIQUIDITY_ADD}?tokenA=${tokenA}&tokenB=${tokenB}`\n      );\n    } else {\n      setLoading(false);\n      setErrors(_errors);\n    }\n  };\n  return (\n    <div>\n      <h1 className=\"title\">Create a new swap pool</h1>\n      {errors.length > 0 ? (\n        <div className=\"notification is-danger content\">\n          <strong>Please check following messages</strong>\n          <br />\n          <ul>\n            {errors.map((err) => (\n              <li key={err}>{err}</li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div className=\"notification is-info\">\n          <strong>Liquidity Provider Rewards</strong>\n          <br />\n          Liquidity providers earn a {SWAP_FEE}% fee on all trades proportional\n          to their share of the pool. Fees are added to the pool, accrue in real\n          time and can be claimed by withdrawing your liquidity.\n        </div>\n      )}\n\n      <hr />\n      <div className=\"field\">\n        <label className=\"label\">Token A</label>\n        <input\n          value={tokenA}\n          onChange={(e: any) => setTokenA(e.target.value)}\n          className=\"input\"\n        />\n      </div>\n      <div className=\"field\">\n        <label className=\"label\">Token B</label>\n        <input\n          value={tokenB}\n          onChange={(e: any) => setTokenB(e.target.value)}\n          className=\"input\"\n        />\n      </div>\n      <hr />\n      <button\n        onClick={handleSubmit}\n        disabled={!tokenA || !tokenB}\n        className={`button is-primary ${isLoading ? \"is-loading\" : \"\"}`}\n      >\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default CreatePool;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/PoolCard/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Pools/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/AddLiquidity/index.tsx",["846","847"],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/RemoveLiquidity/index.tsx",["848","849"],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/RemoveLiquidity/LPTokenList.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/HeaderBetween.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/History/index.tsx",["850","851"],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/components/Header.tsx",["852"],"import React from \"react\";\n\ninterface SmithModalHeader {\n  title: string;\n}\nconst SmithModalHeader = (props: SmithModalHeader) => {\n  return (\n    <div>\n      <div className=\"level is-mobile mb-3\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-3\">{props.title}</h1>\n          </div>\n        </div>\n        <div className=\"level-right is-hidden-touch\">\n          <div className=\"level-item\">\n            <div className=\"field is-grouped is-grouped-multiline\">\n              <div className=\"control\">\n                <div className=\"tags has-addons\">\n                  <span className=\"tag is-dark\">Deploy fee</span>\n                  <span className=\"tag is-info\">10 GAS</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"field is-grouped is-grouped-multiline is-hidden-desktop\">\n        <div className=\"control\">\n          <div className=\"tags has-addons\">\n            <span className=\"tag is-dark\">Deploy fee</span>\n            <span className=\"tag is-info\">10 GAS</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"content is-small\">\n        <li>\n          We recommend to mint on Testnet first before you mint on Mainnet.\n        </li>\n        <li>Do not use EMOJI or Unicode.</li>\n      </div>\n    </div>\n  );\n};\n\nexport default SmithModalHeader;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Providers/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/TruncatedAddress.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/SocialLinkGroup.tsx",["853","854","855","856"],"import React from \"react\";\nimport { FaDiscord, FaMedium, FaTwitter, FaGithub } from \"react-icons/all\";\n\nconst SocialLinkGroup = () => {\n  return (\n    <>\n      <a\n        target=\"_blank\"\n        href=\"https://twitter.com/N3_FTW_NETWORK\"\n        className=\"button is-white is-small\"\n      >\n        <FaTwitter />\n      </a>\n      <a\n        target=\"_blank\"\n        href=\"https://github.com/ForTheWinn\"\n        className=\"button is-white is-small\"\n      >\n        <FaGithub />\n      </a>\n      <a\n        target=\"_blank\"\n        href=\"https://discord.gg/A83mtQqsfP\"\n        className=\"button is-white is-small\"\n      >\n        <FaDiscord />\n      </a>\n      <a\n        target=\"_blank\"\n        href=\"https://medium.com/@Forthewin_network\"\n        className=\"button is-white is-small\"\n      >\n        <FaMedium />\n      </a>\n    </>\n  );\n};\n\nexport default SocialLinkGroup;\n","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/index.tsx",["857","858","859","860","861"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport ActionModal from \"./ActionModal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport toast from \"react-hot-toast\";\nimport SnapshotList from \"./SnapshotList\";\nimport NotifyError from \"../../components/NotifyError\";\nimport Pool from \"./Pool\";\nimport CancelModal from \"./CancelModal\";\nimport ClaimModal from \"./ClaimModal\";\nimport Claims from \"./Claims\";\nimport PositionModal from \"./PositionModal\";\nimport About from \"./About\";\nimport { TESTNET } from \"../../../packages/neo/consts\";\n\nconst Farm = () => {\n  // let location = useLocation();\n  const production = [TESTNET];\n  const [route, setRoute] = useState(\"POOL\");\n  const [modalActive, setModalActive] = useState(false);\n  const [cancelModalActive, setCancelModalActive] = useState(false);\n  const [claimModalActive, setClaimModalActive] = useState(false);\n  const [positionModalActive, setPositionModalActive] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [contractStatus, setContractStatus] = useState<IFarmContractStatus>();\n  const onActive = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onCancelModalActive = () => setCancelModalActive(true);\n  const onClaimModalActive = () => setClaimModalActive(true);\n  const onPositionChange = () => setPositionModalActive(true);\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new FarmContract(network).getStatus(connectedWallet);\n        setContractStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, route]);\n  if (!production.includes(network))\n    return (\n      <PageLayout>This smart contract is not support in {network}.</PageLayout>\n    );\n  return (\n    <PageLayout>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-half\">\n          <div className=\"box \">\n            <div className=\"tabs is-toggle\">\n              <ul>\n                <li className={route === \"POOL\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"POOL\")}>Pool</a>\n                </li>\n                {connectedWallet && contractStatus && contractStatus.deposit && (\n                  <li className={route === \"CLAIMS\" ? \"is-active\" : \"\"}>\n                    <a onClick={() => setRoute(\"CLAIMS\")}>Claims</a>\n                  </li>\n                )}\n                <li className={route === \"SNAPSHOTS\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"SNAPSHOTS\")}>Snapshots</a>\n                </li>\n                <li className={route === \"ABOUT\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"ABOUT\")}>About</a>\n                </li>\n              </ul>\n            </div>\n            <NotifyError msg={error} onClose={() => setError(\"\")} />\n            {route === \"POOL\" && (\n              <Pool\n                contractStatus={contractStatus}\n                onPositionChange={onPositionChange}\n                onDeposit={onActive}\n                onCancel={onCancelModalActive}\n                onClaim={onClaimModalActive}\n              />\n            )}\n            {route === \"SNAPSHOTS\" && (\n              <SnapshotList contractStatus={contractStatus} />\n            )}\n            {route === \"CLAIMS\" && (\n              <Claims\n                onClaim={onClaimModalActive}\n                contractStatus={contractStatus}\n              />\n            )}\n            {route === \"ABOUT\" && <About contractStatus={contractStatus} />}\n          </div>\n        </div>\n      </div>\n      {contractStatus && modalActive && (\n        <ActionModal\n          range={contractStatus.range}\n          onClose={() => setModalActive(false)}\n        />\n      )}\n      {contractStatus && contractStatus.deposit && positionModalActive && (\n        <PositionModal\n          currentPosition={contractStatus.deposit.position}\n          range={contractStatus.range}\n          onClose={() => setPositionModalActive(false)}\n        />\n      )}\n      {cancelModalActive && (\n        <CancelModal onClose={() => setCancelModalActive(false)} />\n      )}\n      {claimModalActive && (\n        <ClaimModal onClose={() => setClaimModalActive(false)} />\n      )}\n    </PageLayout>\n  );\n};\n\nexport default Farm;\n","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/ActionModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/Pool.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/CancelModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/Claims.tsx",["862"],"import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\n\ninterface IClaimsProps {\n  contractStatus?: IFarmContractStatus;\n  onClaim: () => void;\n}\nconst Claims = ({ contractStatus, onClaim }: IClaimsProps) => {\n  if (!contractStatus) return <div></div>;\n  if (!contractStatus.claims) return <div></div>;\n  if (!contractStatus.deposit) return <div></div>;\n  const lastClaimNo = contractStatus.deposit.lastClaimNo\n    ? parseFloat(contractStatus.deposit.lastClaimNo)\n    : 0;\n  const isClaimable =\n    parseFloat(contractStatus.snapshots.totalItems) > lastClaimNo;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">My Claims</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            {isClaimable && (\n              <button\n                onClick={onClaim}\n                className=\"button is-primary is-fullwidth\"\n              >\n                Claim Reward\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      {contractStatus.claims.items.length > 0 ? (\n        contractStatus.claims.items.map((item) => {\n          return (\n            <div key={item.createdAt} className=\"media\">\n              <div className=\"media-left\">#{item.no}</div>\n              <div className=\"media-content\">\n                Snapshots: {`${item.from} ~ ${item.end}`}\n                <br />\n                GAS: {item.GAS}\n                <br />\n                FTW: {item.FTW}\n                <br />\n                {item.createdAt}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>No claims to display</div>\n      )}\n    </div>\n  );\n};\n\nexport default Claims;\n","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/PositionModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/ClaimModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/SnapshotList.tsx",["863"],"import React, { useState } from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\nimport SnapshotCard from \"./SnapshotCard\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCreateSnapshot = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).createSnapshot(\n          connectedWallet\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  if (!contractStatus) return <div></div>;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">Snapshots</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <SnapshotCountdown\n              timeLeft={parseFloat(contractStatus.timeLeft)}\n              onCreateSnapshot={onCreateSnapshot}\n            />\n          </div>\n        </div>\n      </div>\n\n      {contractStatus.snapshots.items.map((item) => (\n        <SnapshotCard key={item.no} item={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/About.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/SnapshotCountdown.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/SnapshotCard.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/GASFi/MyPosition.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/index.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/staking/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/staking/consts.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/components/StakingPairCard.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/Stake/index.tsx",["864"],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/Main/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/Stake/LPTokenCard.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/MyPositions/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/MyPositions/PositionCard.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/ClaimRewards/index.tsx",["865","866"],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/staking/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/ClaimRewards/ClaimModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Pools/PoolHeader.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/PairIcons/index.tsx",["867"],"import React from \"react\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\n\ninterface IPairIconsProps {\n  network: string;\n  token: string;\n  tokenSymbol: string;\n}\nconst PairIcons = ({ network, token, tokenSymbol }: IPairIconsProps) => {\n  const tokenALogo = ASSET_LIST[network][token]\n    ? ASSET_LIST[network][token].logo\n    : \"/symbols/unknown.png\";\n\n  return (\n    <div\n      id=\"PairIcons\"\n      className=\"is-centered\"\n      style={{ display: \"flex\", alignItems: \"center\" }}\n    >\n      <div className=\"circular--portrait mr-2\">\n        <img src={tokenALogo} />\n      </div>\n      {tokenSymbol}\n    </div>\n  );\n};\n\nexport default PairIcons;\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nep17/consts.ts",[],"/Users/ed/Projects/FTW/client/src/common/hooks/use-onchain-data.ts",["868","869"],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/RemoveLiquidity/LPTokenItem.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/PageView/NEP17InfoPage.tsx",["870","871"],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/PageView/NEP11InfoPage.tsx",["872","873"],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/AddLiquidity/TimeLockInput.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/ErrorNotificationWithRefresh.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/AddLiquidity/LPRewardInfo.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Swap/NoLPInfo.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/ConnectWalletButton.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Swap/SwapInputs.tsx",["874"],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/AddLiquidity/LPInputs.tsx",["875","876","877"],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/Stake/LPTokenList.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/scenes/MyPositions/PositionList.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/PageView/NEP17UpdateFormModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/PageView/NEP11MintFormModal.tsx",[],{"ruleId":"878","replacedBy":"879"},{"ruleId":"880","replacedBy":"881"},{"ruleId":"882","severity":1,"message":"883","line":4,"column":18,"nodeType":"884","messageId":"885","endLine":4,"endColumn":24},{"ruleId":"882","severity":1,"message":"886","line":4,"column":26,"nodeType":"884","messageId":"885","endLine":4,"endColumn":34},{"ruleId":"882","severity":1,"message":"887","line":15,"column":10,"nodeType":"884","messageId":"885","endLine":15,"endColumn":18},{"ruleId":"882","severity":1,"message":"888","line":15,"column":20,"nodeType":"884","messageId":"885","endLine":15,"endColumn":29},{"ruleId":"882","severity":1,"message":"889","line":30,"column":9,"nodeType":"884","messageId":"885","endLine":30,"endColumn":28},{"ruleId":"890","severity":1,"message":"891","line":85,"column":21,"nodeType":"892","endLine":88,"endColumn":23},{"ruleId":"893","severity":1,"message":"894","line":100,"column":15,"nodeType":"892","endLine":100,"endColumn":75},{"ruleId":"895","severity":1,"message":"896","line":150,"column":11,"nodeType":"892","messageId":"897","endLine":154,"endColumn":12,"fix":"898"},{"ruleId":"882","severity":1,"message":"899","line":5,"column":10,"nodeType":"884","messageId":"885","endLine":5,"endColumn":20},{"ruleId":"890","severity":1,"message":"891","line":57,"column":21,"nodeType":"892","endLine":57,"endColumn":46},{"ruleId":"882","severity":1,"message":"900","line":3,"column":10,"nodeType":"884","messageId":"885","endLine":3,"endColumn":14},{"ruleId":"890","severity":1,"message":"891","line":89,"column":15,"nodeType":"892","endLine":89,"endColumn":40},{"ruleId":"901","severity":1,"message":"902","line":84,"column":6,"nodeType":"903","endLine":84,"endColumn":8,"suggestions":"904"},{"ruleId":"890","severity":1,"message":"891","line":101,"column":17,"nodeType":"892","endLine":101,"endColumn":65},{"ruleId":"893","severity":1,"message":"894","line":117,"column":11,"nodeType":"892","endLine":117,"endColumn":73},{"ruleId":"893","severity":1,"message":"894","line":43,"column":17,"nodeType":"892","endLine":43,"endColumn":59},{"ruleId":"882","severity":1,"message":"887","line":7,"column":10,"nodeType":"884","messageId":"885","endLine":7,"endColumn":18},{"ruleId":"882","severity":1,"message":"888","line":7,"column":20,"nodeType":"884","messageId":"885","endLine":7,"endColumn":29},{"ruleId":"882","severity":1,"message":"886","line":9,"column":10,"nodeType":"884","messageId":"885","endLine":9,"endColumn":18},{"ruleId":"895","severity":1,"message":"896","line":63,"column":13,"nodeType":"892","messageId":"897","endLine":67,"endColumn":14,"fix":"905"},{"ruleId":"901","severity":1,"message":"906","line":31,"column":6,"nodeType":"903","endLine":31,"endColumn":15,"suggestions":"907"},{"ruleId":"890","severity":1,"message":"891","line":47,"column":13,"nodeType":"892","endLine":47,"endColumn":37},{"ruleId":"882","severity":1,"message":"908","line":2,"column":10,"nodeType":"884","messageId":"885","endLine":2,"endColumn":20},{"ruleId":"882","severity":1,"message":"909","line":4,"column":8,"nodeType":"884","messageId":"885","endLine":4,"endColumn":25},{"ruleId":"882","severity":1,"message":"910","line":17,"column":17,"nodeType":"884","messageId":"885","endLine":17,"endColumn":20},{"ruleId":"901","severity":1,"message":"911","line":29,"column":6,"nodeType":"903","endLine":29,"endColumn":27,"suggestions":"912"},{"ruleId":"878","replacedBy":"913"},{"ruleId":"880","replacedBy":"914"},{"ruleId":"878","replacedBy":"915"},{"ruleId":"880","replacedBy":"916"},{"ruleId":"882","severity":1,"message":"917","line":3,"column":8,"nodeType":"884","messageId":"885","endLine":3,"endColumn":18},{"ruleId":"882","severity":1,"message":"918","line":22,"column":10,"nodeType":"884","messageId":"885","endLine":22,"endColumn":15},{"ruleId":"901","severity":1,"message":"919","line":40,"column":6,"nodeType":"903","endLine":40,"endColumn":34,"suggestions":"920"},{"ruleId":"901","severity":1,"message":"921","line":69,"column":10,"nodeType":"903","endLine":69,"endColumn":29,"suggestions":"922"},{"ruleId":"893","severity":1,"message":"894","line":18,"column":13,"nodeType":"892","endLine":22,"endColumn":14},{"ruleId":"890","severity":1,"message":"891","line":24,"column":17,"nodeType":"892","endLine":24,"endColumn":57},{"ruleId":"882","severity":1,"message":"923","line":11,"column":10,"nodeType":"884","messageId":"885","endLine":11,"endColumn":16},{"ruleId":"882","severity":1,"message":"918","line":12,"column":10,"nodeType":"884","messageId":"885","endLine":12,"endColumn":15},{"ruleId":"901","severity":1,"message":"924","line":32,"column":6,"nodeType":"903","endLine":32,"endColumn":23,"suggestions":"925"},{"ruleId":"878","replacedBy":"926"},{"ruleId":"880","replacedBy":"927"},{"ruleId":"890","severity":1,"message":"891","line":34,"column":13,"nodeType":"892","endLine":34,"endColumn":61},{"ruleId":"893","severity":1,"message":"928","line":47,"column":11,"nodeType":"892","endLine":51,"endColumn":12},{"ruleId":"929","severity":1,"message":"930","line":112,"column":26,"nodeType":"931","messageId":"932","endLine":112,"endColumn":28},{"ruleId":"929","severity":1,"message":"930","line":137,"column":26,"nodeType":"931","messageId":"932","endLine":137,"endColumn":28},{"ruleId":"929","severity":1,"message":"930","line":74,"column":33,"nodeType":"931","messageId":"932","endLine":74,"endColumn":35},{"ruleId":"929","severity":1,"message":"930","line":228,"column":28,"nodeType":"931","messageId":"932","endLine":228,"endColumn":30},{"ruleId":"929","severity":1,"message":"930","line":8,"column":33,"nodeType":"931","messageId":"932","endLine":8,"endColumn":35},{"ruleId":"901","severity":1,"message":"919","line":43,"column":6,"nodeType":"903","endLine":43,"endColumn":38,"suggestions":"933"},{"ruleId":"882","severity":1,"message":"934","line":30,"column":10,"nodeType":"884","messageId":"885","endLine":30,"endColumn":19},{"ruleId":"882","severity":1,"message":"918","line":31,"column":10,"nodeType":"884","messageId":"885","endLine":31,"endColumn":15},{"ruleId":"901","severity":1,"message":"935","line":53,"column":6,"nodeType":"903","endLine":53,"endColumn":23,"suggestions":"936"},{"ruleId":"890","severity":1,"message":"891","line":68,"column":17,"nodeType":"892","endLine":68,"endColumn":43},{"ruleId":"890","severity":1,"message":"891","line":92,"column":25,"nodeType":"892","endLine":92,"endColumn":50},{"ruleId":"882","severity":1,"message":"937","line":5,"column":10,"nodeType":"884","messageId":"885","endLine":5,"endColumn":33},{"ruleId":"890","severity":1,"message":"891","line":14,"column":11,"nodeType":"892","endLine":14,"endColumn":35},{"ruleId":"901","severity":1,"message":"924","line":43,"column":6,"nodeType":"903","endLine":43,"endColumn":15,"suggestions":"938"},{"ruleId":"890","severity":1,"message":"891","line":54,"column":11,"nodeType":"892","endLine":54,"endColumn":36},{"ruleId":"901","severity":1,"message":"924","line":39,"column":6,"nodeType":"903","endLine":39,"endColumn":15,"suggestions":"939"},{"ruleId":"890","severity":1,"message":"891","line":47,"column":7,"nodeType":"892","endLine":47,"endColumn":32},{"ruleId":"901","severity":1,"message":"919","line":59,"column":6,"nodeType":"903","endLine":59,"endColumn":41,"suggestions":"940"},{"ruleId":"882","severity":1,"message":"941","line":2,"column":40,"nodeType":"884","messageId":"885","endLine":2,"endColumn":55},{"ruleId":"882","severity":1,"message":"942","line":7,"column":3,"nodeType":"884","messageId":"885","endLine":7,"endColumn":14},{"ruleId":"882","severity":1,"message":"943","line":10,"column":3,"nodeType":"884","messageId":"885","endLine":10,"endColumn":22},{"ruleId":"890","severity":1,"message":"891","line":26,"column":19,"nodeType":"892","endLine":26,"endColumn":37},{"ruleId":"895","severity":1,"message":"896","line":43,"column":11,"nodeType":"892","messageId":"897","endLine":50,"endColumn":12,"fix":"944"},{"ruleId":"882","severity":1,"message":"945","line":7,"column":10,"nodeType":"884","messageId":"885","endLine":7,"endColumn":20},{"ruleId":"882","severity":1,"message":"946","line":17,"column":37,"nodeType":"884","messageId":"885","endLine":17,"endColumn":52},{"ruleId":"882","severity":1,"message":"945","line":6,"column":10,"nodeType":"884","messageId":"885","endLine":6,"endColumn":20},{"ruleId":"882","severity":1,"message":"947","line":5,"column":8,"nodeType":"884","messageId":"885","endLine":5,"endColumn":26},{"ruleId":"882","severity":1,"message":"948","line":15,"column":20,"nodeType":"884","messageId":"885","endLine":15,"endColumn":35},{"ruleId":"882","severity":1,"message":"949","line":16,"column":10,"nodeType":"884","messageId":"885","endLine":16,"endColumn":27},{"ruleId":"882","severity":1,"message":"950","line":16,"column":29,"nodeType":"884","messageId":"885","endLine":16,"endColumn":47},{"ruleId":"895","severity":1,"message":"896","line":27,"column":11,"nodeType":"892","messageId":"897","endLine":34,"endColumn":12,"fix":"951"},{"ruleId":"882","severity":1,"message":"952","line":1,"column":17,"nodeType":"884","messageId":"885","endLine":1,"endColumn":26},{"ruleId":"882","severity":1,"message":"953","line":1,"column":28,"nodeType":"884","messageId":"885","endLine":1,"endColumn":36},{"ruleId":"895","severity":1,"message":"896","line":52,"column":21,"nodeType":"892","messageId":"897","endLine":60,"endColumn":22,"fix":"954"},{"ruleId":"890","severity":1,"message":"891","line":19,"column":10,"nodeType":"892","endLine":19,"endColumn":61},{"ruleId":"901","severity":1,"message":"924","line":36,"column":6,"nodeType":"903","endLine":36,"endColumn":12,"suggestions":"955"},{"ruleId":"895","severity":1,"message":"896","line":73,"column":15,"nodeType":"892","messageId":"897","endLine":78,"endColumn":16,"fix":"956"},{"ruleId":"882","severity":1,"message":"957","line":5,"column":17,"nodeType":"884","messageId":"885","endLine":5,"endColumn":26},{"ruleId":"901","severity":1,"message":"958","line":51,"column":6,"nodeType":"903","endLine":51,"endColumn":8,"suggestions":"959"},{"ruleId":"890","severity":1,"message":"891","line":54,"column":5,"nodeType":"892","endLine":54,"endColumn":78},{"ruleId":"901","severity":1,"message":"960","line":30,"column":6,"nodeType":"903","endLine":30,"endColumn":8,"suggestions":"961"},{"ruleId":"890","severity":1,"message":"891","line":33,"column":5,"nodeType":"892","endLine":33,"endColumn":77},{"ruleId":"878","replacedBy":"962"},{"ruleId":"880","replacedBy":"963"},{"ruleId":"882","severity":1,"message":"952","line":1,"column":17,"nodeType":"884","messageId":"885","endLine":1,"endColumn":26},{"ruleId":"882","severity":1,"message":"953","line":1,"column":28,"nodeType":"884","messageId":"885","endLine":1,"endColumn":36},{"ruleId":"890","severity":1,"message":"891","line":55,"column":27,"nodeType":"892","endLine":55,"endColumn":45},{"ruleId":"882","severity":1,"message":"964","line":5,"column":8,"nodeType":"884","messageId":"885","endLine":5,"endColumn":13},{"ruleId":"882","severity":1,"message":"965","line":7,"column":10,"nodeType":"884","messageId":"885","endLine":7,"endColumn":23},{"ruleId":"882","severity":1,"message":"966","line":16,"column":10,"nodeType":"884","messageId":"885","endLine":16,"endColumn":16},{"ruleId":"901","severity":1,"message":"967","line":132,"column":6,"nodeType":"903","endLine":132,"endColumn":41,"suggestions":"968"},{"ruleId":"893","severity":1,"message":"894","line":100,"column":19,"nodeType":"892","endLine":104,"endColumn":20},{"ruleId":"890","severity":1,"message":"891","line":106,"column":23,"nodeType":"892","endLine":106,"endColumn":41},{"ruleId":"893","severity":1,"message":"894","line":115,"column":13,"nodeType":"892","endLine":119,"endColumn":14},{"ruleId":"882","severity":1,"message":"952","line":1,"column":17,"nodeType":"884","messageId":"885","endLine":1,"endColumn":26},{"ruleId":"882","severity":1,"message":"969","line":17,"column":16,"nodeType":"884","messageId":"885","endLine":17,"endColumn":23},{"ruleId":"882","severity":1,"message":"970","line":18,"column":21,"nodeType":"884","messageId":"885","endLine":18,"endColumn":33},{"ruleId":"882","severity":1,"message":"971","line":19,"column":21,"nodeType":"884","messageId":"885","endLine":19,"endColumn":31},{"ruleId":"882","severity":1,"message":"918","line":20,"column":10,"nodeType":"884","messageId":"885","endLine":20,"endColumn":15},{"ruleId":"882","severity":1,"message":"972","line":20,"column":17,"nodeType":"884","messageId":"885","endLine":20,"endColumn":25},{"ruleId":"890","severity":1,"message":"891","line":18,"column":14,"nodeType":"892","endLine":18,"endColumn":31},{"ruleId":"890","severity":1,"message":"891","line":62,"column":23,"nodeType":"892","endLine":62,"endColumn":48},{"ruleId":"882","severity":1,"message":"973","line":2,"column":10,"nodeType":"884","messageId":"885","endLine":2,"endColumn":15},{"ruleId":"882","severity":1,"message":"974","line":3,"column":10,"nodeType":"884","messageId":"885","endLine":3,"endColumn":28},{"ruleId":"882","severity":1,"message":"975","line":4,"column":8,"nodeType":"884","messageId":"885","endLine":4,"endColumn":33},{"ruleId":"882","severity":1,"message":"976","line":6,"column":10,"nodeType":"884","messageId":"885","endLine":6,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":67,"column":23,"nodeType":"892","endLine":67,"endColumn":48},{"ruleId":"929","severity":1,"message":"930","line":6,"column":30,"nodeType":"931","messageId":"932","endLine":6,"endColumn":32},{"ruleId":"882","severity":1,"message":"977","line":6,"column":10,"nodeType":"884","messageId":"885","endLine":6,"endColumn":31},{"ruleId":"890","severity":1,"message":"891","line":83,"column":23,"nodeType":"892","endLine":83,"endColumn":48},{"ruleId":"890","severity":1,"message":"891","line":105,"column":29,"nodeType":"892","endLine":105,"endColumn":55},{"ruleId":"895","severity":1,"message":"896","line":44,"column":19,"nodeType":"892","messageId":"897","endLine":48,"endColumn":20,"fix":"978"},{"ruleId":"895","severity":1,"message":"896","line":85,"column":19,"nodeType":"892","messageId":"897","endLine":89,"endColumn":20,"fix":"979"},{"ruleId":"895","severity":1,"message":"896","line":104,"column":19,"nodeType":"892","messageId":"897","endLine":108,"endColumn":20,"fix":"980"},{"ruleId":"895","severity":1,"message":"896","line":116,"column":19,"nodeType":"892","messageId":"897","endLine":120,"endColumn":20,"fix":"981"},{"ruleId":"882","severity":1,"message":"973","line":3,"column":10,"nodeType":"884","messageId":"885","endLine":3,"endColumn":15},{"ruleId":"882","severity":1,"message":"982","line":5,"column":3,"nodeType":"884","messageId":"885","endLine":5,"endColumn":18},{"ruleId":"882","severity":1,"message":"983","line":6,"column":3,"nodeType":"884","messageId":"885","endLine":6,"endColumn":20},{"ruleId":"882","severity":1,"message":"984","line":23,"column":9,"nodeType":"884","messageId":"885","endLine":23,"endColumn":22},{"ruleId":"901","severity":1,"message":"967","line":139,"column":6,"nodeType":"903","endLine":139,"endColumn":48,"suggestions":"985"},{"ruleId":"882","severity":1,"message":"952","line":1,"column":17,"nodeType":"884","messageId":"885","endLine":1,"endColumn":26},{"ruleId":"882","severity":1,"message":"966","line":10,"column":10,"nodeType":"884","messageId":"885","endLine":10,"endColumn":16},{"ruleId":"882","severity":1,"message":"986","line":17,"column":33,"nodeType":"884","messageId":"885","endLine":17,"endColumn":40},{"ruleId":"882","severity":1,"message":"987","line":17,"column":42,"nodeType":"884","messageId":"885","endLine":17,"endColumn":49},{"ruleId":"988","severity":1,"message":"989","line":6,"column":7,"nodeType":"884","messageId":"990","endLine":6,"endColumn":23},{"ruleId":"895","severity":1,"message":"896","line":7,"column":7,"nodeType":"892","messageId":"897","endLine":11,"endColumn":8,"fix":"991"},{"ruleId":"895","severity":1,"message":"896","line":14,"column":7,"nodeType":"892","messageId":"897","endLine":18,"endColumn":8,"fix":"992"},{"ruleId":"895","severity":1,"message":"896","line":21,"column":7,"nodeType":"892","messageId":"897","endLine":25,"endColumn":8,"fix":"993"},{"ruleId":"895","severity":1,"message":"896","line":28,"column":7,"nodeType":"892","messageId":"897","endLine":32,"endColumn":8,"fix":"994"},{"ruleId":"901","severity":1,"message":"924","line":50,"column":6,"nodeType":"903","endLine":50,"endColumn":30,"suggestions":"995"},{"ruleId":"893","severity":1,"message":"894","line":63,"column":19,"nodeType":"892","endLine":63,"endColumn":55},{"ruleId":"893","severity":1,"message":"894","line":67,"column":21,"nodeType":"892","endLine":67,"endColumn":59},{"ruleId":"893","severity":1,"message":"894","line":71,"column":19,"nodeType":"892","endLine":71,"endColumn":60},{"ruleId":"893","severity":1,"message":"894","line":74,"column":19,"nodeType":"892","endLine":74,"endColumn":56},{"ruleId":"882","severity":1,"message":"996","line":3,"column":8,"nodeType":"884","messageId":"885","endLine":3,"endColumn":25},{"ruleId":"882","severity":1,"message":"997","line":14,"column":10,"nodeType":"884","messageId":"885","endLine":14,"endColumn":14},{"ruleId":"882","severity":1,"message":"952","line":1,"column":17,"nodeType":"884","messageId":"885","endLine":1,"endColumn":26},{"ruleId":"882","severity":1,"message":"998","line":5,"column":19,"nodeType":"884","messageId":"885","endLine":5,"endColumn":25},{"ruleId":"882","severity":1,"message":"934","line":18,"column":10,"nodeType":"884","messageId":"885","endLine":18,"endColumn":19},{"ruleId":"890","severity":1,"message":"891","line":21,"column":9,"nodeType":"892","endLine":21,"endColumn":33},{"ruleId":"901","severity":1,"message":"999","line":27,"column":6,"nodeType":"884","endLine":27,"endColumn":10},{"ruleId":"901","severity":1,"message":"1000","line":27,"column":6,"nodeType":"884","endLine":27,"endColumn":10,"suggestions":"1001"},{"ruleId":"890","severity":1,"message":"891","line":73,"column":15,"nodeType":"892","endLine":73,"endColumn":75},{"ruleId":"895","severity":1,"message":"896","line":85,"column":15,"nodeType":"892","messageId":"897","endLine":92,"endColumn":16,"fix":"1002"},{"ruleId":"882","severity":1,"message":"952","line":1,"column":17,"nodeType":"884","messageId":"885","endLine":1,"endColumn":26},{"ruleId":"895","severity":1,"message":"896","line":77,"column":13,"nodeType":"892","messageId":"897","endLine":84,"endColumn":14,"fix":"1003"},{"ruleId":"901","severity":1,"message":"1004","line":75,"column":6,"nodeType":"903","endLine":75,"endColumn":18,"suggestions":"1005"},{"ruleId":"882","severity":1,"message":"952","line":1,"column":17,"nodeType":"884","messageId":"885","endLine":1,"endColumn":26},{"ruleId":"882","severity":1,"message":"953","line":1,"column":28,"nodeType":"884","messageId":"885","endLine":1,"endColumn":36},{"ruleId":"882","severity":1,"message":"1006","line":26,"column":11,"nodeType":"884","messageId":"885","endLine":26,"endColumn":22},"no-native-reassign",["1007"],"no-negated-in-lhs",["1008"],"@typescript-eslint/no-unused-vars","'FaFile' is defined but never used.","Identifier","unusedVar","'FaGithub' is defined but never used.","'FaMedium' is defined but never used.","'FaTwitter' is defined but never used.","'handleSwitchNetwork' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1009","text":"1010"},"'ARENA_PATH' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'connectWallet', 'connectedWallet.key', and 'disConnectWallet'. Either include them or remove the dependency array.","ArrayExpression",["1011"],{"range":"1012","text":"1010"},"React Hook useEffect has a missing dependency: 'tokenId'. Either include it or remove the dependency array.",["1013"],"'RUNE_PRICE' is defined but never used.","'DisplayRandomRune' is defined but never used.","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'network' and 'removePendingTransaction'. Either include them or remove the dependency array.",["1014"],["1007"],["1008"],["1007"],["1008"],"'PageLayout' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'arenaNo'. Either include it or remove the dependency array.",["1015"],"React Hook React.useMemo has a missing dependency: 'arenaNo'. Either include it or remove the dependency array.",["1016"],"'tokens' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'network'. Either include it or remove the dependency array.",["1017"],["1007"],["1008"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["1018"],"'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'arenaNo', 'connectedWallet', and 'player.tokenId'. Either include them or remove the dependency array.",["1019"],"'TOURNAMENT_TIME_PADDING' is defined but never used.",["1020"],["1021"],["1022"],"'TOURNAMENT_PATH' is defined but never used.","'BiCoinStack' is defined but never used.","'HiOutlinePhotograph' is defined but never used.",{"range":"1023","text":"1010"},"'DEPLOY_FEE' is defined but never used.","'openWalletModal' is assigned a value but never used.","'NEP11MintFormModal' is defined but never used.","'connectedWallet' is assigned a value but never used.","'isMintModalActive' is assigned a value but never used.","'setMintModalActive' is assigned a value but never used.",{"range":"1024","text":"1010"},"'useEffect' is defined but never used.","'useState' is defined but never used.",{"range":"1025","text":"1010"},["1026"],{"range":"1027","text":"1010"},"'setColors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'colors'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBg' needs the current value of 'colors'.",["1028"],"React Hook useEffect has a missing dependency: 'isActive'. Either include it or remove the dependency array.",["1029"],["1007"],["1008"],"'Input' is defined but never used.","'FaExchangeAlt' is defined but never used.","'useApp' is defined but never used.","React Hook useEffect has a missing dependency: 'getReserve'. Either include it or remove the dependency array.",["1030"],"'setData' is assigned a value but never used.","'setClaimable' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","'toast' is defined but never used.","'TournamentContract' is defined but never used.","'AfterTransactionSubmitted' is defined but never used.","'NFTContract' is defined but never used.","'DEFAULT_WITNESS_SCOPE' is defined but never used.",{"range":"1031","text":"1010"},{"range":"1032","text":"1010"},{"range":"1033","text":"1010"},{"range":"1034","text":"1010"},"'FTW_SCRIPT_HASH' is defined but never used.","'NUDES_SCRIPT_HASH' is defined but never used.","'isNewPoolMode' is assigned a value but never used.",["1035"],"'symbolA' is assigned a value but never used.","'symbolB' is assigned a value but never used.","@typescript-eslint/no-redeclare","'SmithModalHeader' is already defined.","redeclared",{"range":"1036","text":"1010"},{"range":"1037","text":"1010"},{"range":"1038","text":"1010"},{"range":"1039","text":"1010"},["1040"],"'SnapshotCountdown' is defined but never used.","'txid' is assigned a value but never used.","'FaStar' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'fn'. Either include it or remove the dependency array. If 'fn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1041"],{"range":"1042","text":"1010"},{"range":"1043","text":"1010"},"React Hook useEffect has missing dependencies: 'network', 'setAmountA', 'setAmountB', 'tokenA', and 'tokenB'. Either include them or remove the dependency array. If 'setAmountB' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1044"],"'ISearchTerm' is defined but never used.","no-global-assign","no-unsafe-negation",[5387,5387]," rel=\"noreferrer\"",{"desc":"1045","fix":"1046"},[2281,2281],{"desc":"1047","fix":"1048"},{"desc":"1049","fix":"1050"},{"desc":"1051","fix":"1052"},{"desc":"1053","fix":"1054"},{"desc":"1055","fix":"1056"},{"desc":"1057","fix":"1058"},{"desc":"1059","fix":"1060"},{"desc":"1061","fix":"1062"},{"desc":"1047","fix":"1063"},{"desc":"1064","fix":"1065"},[1713,1713],[1291,1291],[2177,2177],{"desc":"1066","fix":"1067"},[2298,2298],{"desc":"1068","fix":"1069"},{"desc":"1070","fix":"1071"},{"desc":"1072","fix":"1073"},[1477,1477],[2908,2908],[3547,3547],[4019,4019],{"desc":"1074","fix":"1075"},[281,281],[445,445],[608,608],[780,780],{"desc":"1076","fix":"1077"},{"desc":"1078","fix":"1079"},[3138,3138],[2890,2890],{"desc":"1080","fix":"1081"},"Update the dependencies array to be: [connectWallet, connectedWallet.key, disConnectWallet]",{"range":"1082","text":"1083"},"Update the dependencies array to be: [network, tokenId]",{"range":"1084","text":"1085"},"Update the dependencies array to be: [network, pendingTransactions, removePendingTransaction]",{"range":"1086","text":"1087"},"Update the dependencies array to be: [network, location.pathname, arenaNo]",{"range":"1088","text":"1089"},"Update the dependencies array to be: [isLoading, arenaNo, status]",{"range":"1090","text":"1091"},"Update the dependencies array to be: [connectedWallet, network]",{"range":"1092","text":"1093"},"Update the dependencies array to be: [arenaNo, connectedWallet, network, page]",{"range":"1094","text":"1095"},"Update the dependencies array to be: [arenaNo, connectedWallet, gameNo, network, player.tokenId]",{"range":"1096","text":"1097"},"Update the dependencies array to be: [history, network]",{"range":"1098","text":"1099"},{"range":"1100","text":"1085"},"Update the dependencies array to be: [connectedWallet, network, history, arenaNo]",{"range":"1101","text":"1102"},"Update the dependencies array to be: [network, txid]",{"range":"1103","text":"1104"},"Update the dependencies array to be: [colors]",{"range":"1105","text":"1106"},"Update the dependencies array to be: [isActive]",{"range":"1107","text":"1108"},"Update the dependencies array to be: [getReserve, location, refresh, tokenA, tokenB]",{"range":"1109","text":"1110"},"Update the dependencies array to be: [connectedWallet, getReserve, refresh, tokenA, tokenB]",{"range":"1111","text":"1112"},"Update the dependencies array to be: [connectedWallet, network, route]",{"range":"1113","text":"1114"},"Update the dependencies array to be: [fn]",{"range":"1115","text":"1116"},"Update the dependencies array to be: [network, searchTerm, setAmountA, setAmountB, tokenA, tokenB]",{"range":"1117","text":"1118"},[2595,2597],"[connectWallet, connectedWallet.key, disConnectWallet]",[923,932],"[network, tokenId]",[743,764],"[network, pendingTransactions, removePendingTransaction]",[1291,1319],"[network, location.pathname, arenaNo]",[2121,2140],"[isLoading, arenaNo, status]",[1021,1038],"[connectedWallet, network]",[1547,1579],"[arenaNo, connectedWallet, network, page]",[1719,1736],"[arenaNo, connectedWallet, gameNo, network, player.tokenId]",[1260,1269],"[history, network]",[1078,1087],[1827,1862],"[connectedWallet, network, history, arenaNo]",[1012,1018],"[network, txid]",[2062,2064],"[colors]",[1444,1446],"[isActive]",[4181,4216],"[getReserve, location, refresh, tokenA, tokenB]",[4184,4226],"[connectedWallet, getReserve, refresh, tokenA, tokenB]",[1983,2007],"[connectedWallet, network, route]",[626,630],"[fn]",[2087,2099],"[network, searchTerm, setAmountA, setAmountB, tokenA, tokenB]"]