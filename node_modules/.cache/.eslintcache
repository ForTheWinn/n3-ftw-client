[{"/Users/ed/Projects/n3-ftw/client/src/index.tsx":"1","/Users/ed/Projects/n3-ftw/client/src/reportWebVitals.ts":"2","/Users/ed/Projects/n3-ftw/client/src/common/hooks/use-app.tsx":"3","/Users/ed/Projects/n3-ftw/client/src/ui/index.tsx":"4","/Users/ed/Projects/n3-ftw/client/src/common/hooks/use-responsive.ts":"5","/Users/ed/Projects/n3-ftw/client/src/ui/components/WalletSidebar.tsx":"6","/Users/ed/Projects/n3-ftw/client/src/ui/components/Header.tsx":"7","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Home.tsx":"8","/Users/ed/Projects/n3-ftw/client/src/ui/components/MobileMenuSlider.tsx":"9","/Users/ed/Projects/n3-ftw/client/src/consts/index.ts":"10","/Users/ed/Projects/n3-ftw/client/src/packages/provider/index.ts":"11","/Users/ed/Projects/n3-ftw/client/src/packages/neo/index.ts":"12","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/index.tsx":"13","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/index.tsx":"14","/Users/ed/Projects/n3-ftw/client/src/ui/components/SidebarNav.tsx":"15","/Users/ed/Projects/n3-ftw/client/src/ui/components/DisplayRandomRune.tsx":"16","/Users/ed/Projects/n3-ftw/client/src/ui/components/Logo.tsx":"17","/Users/ed/Projects/n3-ftw/client/src/consts/pageRoutes.ts":"18","/Users/ed/Projects/n3-ftw/client/src/packages/provider/wallet-provider.tsx":"19","/Users/ed/Projects/n3-ftw/client/src/ui/components/NotifyError.tsx":"20","/Users/ed/Projects/n3-ftw/client/src/ui/components/PageLayout.tsx":"21","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/Pool.tsx":"22","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ActionModal.tsx":"23","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotList.tsx":"24","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ClaimModal.tsx":"25","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/Claims.tsx":"26","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/CancelModal.tsx":"27","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/PropertiesModal.tsx":"28","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/DisplayRune.tsx":"29","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/index.tsx":"30","/Users/ed/Projects/n3-ftw/client/src/packages/ui/PendingTransaction/index.tsx":"31","/Users/ed/Projects/n3-ftw/client/src/packages/neo/wallet/index.ts":"32","/Users/ed/Projects/n3-ftw/client/src/packages/neo/network/index.ts":"33","/Users/ed/Projects/n3-ftw/client/src/packages/neo/consts/index.ts":"34","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/index.ts":"35","/Users/ed/Projects/n3-ftw/client/src/packages/neo/utils/index.ts":"36","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCountdown.tsx":"37","/Users/ed/Projects/n3-ftw/client/src/ui/components/Modal.tsx":"38","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/MyPosition.tsx":"39","/Users/ed/Projects/n3-ftw/client/src/ui/components/TransactionSubmitted.tsx":"40","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletList.tsx":"41","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletDropdown.tsx":"42","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/AssetCard.tsx":"43","/Users/ed/Projects/n3-ftw/client/src/packages/neo/wallet/dev-wallet.ts":"44","/Users/ed/Projects/n3-ftw/client/src/packages/neo/local-storage/index.ts":"45","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/helpers.ts":"46","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/index.ts":"47","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/index.ts":"48","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/helpers.ts":"49","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/consts.ts":"50","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/helpers.ts":"51","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/consts.ts":"52","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCard.tsx":"53","/Users/ed/Projects/n3-ftw/client/src/ui/components/WalletDropdown.tsx":"54","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/Runes.tsx":"55","/Users/ed/Projects/n3-ftw/client/src/ui/pages/MyCollection/index.tsx":"56","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/bank/index.ts":"57","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nep17/index.ts":"58","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/PositionModal.tsx":"59","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/About.tsx":"60","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/index.tsx":"61","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/index.ts":"62","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/consts.ts":"63","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/helpers.ts":"64","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/ActionModal.tsx":"65","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/ContractCard.tsx":"66","/Users/ed/Projects/n3-ftw/client/src/ui/components/NetworkCheck.tsx":"67","/Users/ed/Projects/n3-ftw/client/src/ui/components/NetworkSwitch.tsx":"68","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/Banner.tsx":"69","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/index.tsx":"70","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/DisplayRune.tsx":"71","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/index.ts":"72","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/consts.ts":"73","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/helpers.ts":"74","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/Stage4.tsx":"75","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/pageRoutes.ts":"76","/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/index.ts":"77","/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/rest.ts":"78","/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/consts.ts":"79","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Arena/index.tsx":"80","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Home/index.tsx":"81","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Arena/Banner.tsx":"82","/Users/ed/Projects/FTW/client/src/index.tsx":"83","/Users/ed/Projects/FTW/client/src/reportWebVitals.ts":"84","/Users/ed/Projects/FTW/client/src/common/hooks/use-app.tsx":"85","/Users/ed/Projects/FTW/client/src/ui/index.tsx":"86","/Users/ed/Projects/FTW/client/src/ui/components/Header.tsx":"87","/Users/ed/Projects/FTW/client/src/ui/components/MobileMenuSlider.tsx":"88","/Users/ed/Projects/FTW/client/src/ui/components/WalletSidebar.tsx":"89","/Users/ed/Projects/FTW/client/src/ui/pages/Home.tsx":"90","/Users/ed/Projects/FTW/client/src/consts/index.ts":"91","/Users/ed/Projects/FTW/client/src/packages/provider/index.ts":"92","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/index.tsx":"93","/Users/ed/Projects/FTW/client/src/ui/pages/MyCollection/index.tsx":"94","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/index.tsx":"95","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/index.tsx":"96","/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/index.tsx":"97","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/helpers.ts":"98","/Users/ed/Projects/FTW/client/src/ui/components/Logo.tsx":"99","/Users/ed/Projects/FTW/client/src/ui/components/WalletDropdown.tsx":"100","/Users/ed/Projects/FTW/client/src/ui/components/NetworkSwitch.tsx":"101","/Users/ed/Projects/FTW/client/src/ui/components/SidebarNav.tsx":"102","/Users/ed/Projects/FTW/client/src/ui/components/PageLayout.tsx":"103","/Users/ed/Projects/FTW/client/src/consts/pageRoutes.ts":"104","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/pageRoutes.ts":"105","/Users/ed/Projects/FTW/client/src/packages/neo/index.ts":"106","/Users/ed/Projects/FTW/client/src/packages/provider/wallet-provider.tsx":"107","/Users/ed/Projects/FTW/client/src/ui/components/NotifyError.tsx":"108","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/SnapshotList.tsx":"109","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/ActionModal.tsx":"110","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/About.tsx":"111","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/Pool.tsx":"112","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/ClaimModal.tsx":"113","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/PositionModal.tsx":"114","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/CancelModal.tsx":"115","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/Claims.tsx":"116","/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/PropertiesModal.tsx":"117","/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/Banner.tsx":"118","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/index.tsx":"119","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/consts.ts":"120","/Users/ed/Projects/FTW/client/src/packages/ui/PendingTransaction/index.tsx":"121","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/index.ts":"122","/Users/ed/Projects/FTW/client/src/packages/neo/consts/index.ts":"123","/Users/ed/Projects/FTW/client/src/packages/neo/api/index.ts":"124","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/index.ts":"125","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Home/index.tsx":"126","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/index.tsx":"127","/Users/ed/Projects/FTW/client/src/ui/components/Modal.tsx":"128","/Users/ed/Projects/FTW/client/src/ui/components/TransactionSubmitted.tsx":"129","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/SnapshotCard.tsx":"130","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/SnapshotCountdown.tsx":"131","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/WalletList.tsx":"132","/Users/ed/Projects/FTW/client/src/ui/pages/Farm/MyPosition.tsx":"133","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/Runes.tsx":"134","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/WalletDropdown.tsx":"135","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/AssetCard.tsx":"136","/Users/ed/Projects/FTW/client/src/packages/neo/network/index.ts":"137","/Users/ed/Projects/FTW/client/src/packages/neo/api/rest.ts":"138","/Users/ed/Projects/FTW/client/src/packages/neo/wallet/index.ts":"139","/Users/ed/Projects/FTW/client/src/packages/neo/utils/index.ts":"140","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/helpers.ts":"141","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/consts.ts":"142","/Users/ed/Projects/FTW/client/src/packages/neo/local-storage/index.ts":"143","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Banner.tsx":"144","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/index.ts":"145","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/index.ts":"146","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nep17/index.ts":"147","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/bank/index.ts":"148","/Users/ed/Projects/FTW/client/src/packages/neo/api/consts.ts":"149","/Users/ed/Projects/FTW/client/src/packages/neo/wallet/dev-wallet.ts":"150","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/consts.ts":"151","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/helpers.ts":"152","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/helpers.ts":"153","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/index.tsx":"154","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/index.tsx":"155","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/Replay.tsx":"156","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/PlayerModal.tsx":"157","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/NFTListModal.tsx":"158","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/index.ts":"159","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/TournamentTree.tsx":"160","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/consts.ts":"161","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/helpers.ts":"162","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/helpers.ts":"163","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/ArenaRegisterButton.tsx":"164","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/PlayButton.tsx":"165","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/NFTDetailModal.tsx":"166","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/HistoryTable.tsx":"167","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/DisplayRuneWithProperties.tsx":"168","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/ClaimButton.tsx":"169","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/Banner.tsx":"170","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP17/index.tsx":"171","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP17/ContractCard.tsx":"172","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP17FormModal.tsx":"173","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP11FormModal.tsx":"174","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/index.tsx":"175","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/ContractCard.tsx":"176","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP11MintFormModal.tsx":"177","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/Tokens.tsx":"178","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/DisplayNFT.tsx":"179","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/LeaveButton.tsx":"180","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/BetButton.tsx":"181","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/helpers.ts":"182","/Users/ed/Projects/FTW/client/src/packages/ui/AfterTransactionSubmitted/index.tsx":"183","/Users/ed/Projects/FTW/client/src/packages/ui/AfterTransactionSubmitted/RuneLoading.tsx":"184","/Users/ed/Projects/FTW/client/src/ui/components/RandomRune.tsx":"185","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/CheckMark.tsx":"186","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/index.tsx":"187","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/NavSwitch/index.tsx":"188","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/Input/index.tsx":"189","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Swap/index.tsx":"190","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Liquidity/index.tsx":"191","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/swap/index.ts":"192","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/swap/consts.ts":"193","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/AssetListModal/index.tsx":"194","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/swap/helpers.ts":"195","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Farm/index.tsx":"196","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Farm/scenes/Detail/index.tsx":"197","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/index.tsx":"198","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/FusionBox.tsx":"199","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/RuneListModal.tsx":"200","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/CryptonatuListModal.tsx":"201","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ttm/nft/index.ts":"202","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ttm/nft/helpers.ts":"203","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ttm/nft/consts.ts":"204","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/fuse/index.ts":"205","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/FusedList.tsx":"206","/Users/ed/Projects/FTW/client/src/ui/pages/Migration/index.tsx":"207","/Users/ed/Projects/FTW/client/src/ui/components/ReactGa.tsx":"208","/Users/ed/Projects/FTW/client/src/ui/components/BgContainer.tsx":"209"},{"size":624,"mtime":1633734969020,"results":"210","hashOfConfig":"211"},{"size":425,"mtime":1633497407848,"results":"212","hashOfConfig":"211"},{"size":1309,"mtime":1639724016473,"results":"213","hashOfConfig":"211"},{"size":1470,"mtime":1640622893531,"results":"214","hashOfConfig":"211"},{"size":591,"mtime":1633679011995,"results":"215","hashOfConfig":"211"},{"size":672,"mtime":1637900932333,"results":"216","hashOfConfig":"211"},{"size":4417,"mtime":1639620401842,"results":"217","hashOfConfig":"211"},{"size":4196,"mtime":1639086967652,"results":"218","hashOfConfig":"211"},{"size":489,"mtime":1639037096055,"results":"219","hashOfConfig":"211"},{"size":30,"mtime":1638893084422,"results":"220","hashOfConfig":"211"},{"size":34,"mtime":1637559785947,"results":"221","hashOfConfig":"211"},{"size":239,"mtime":1637559785941,"results":"222","hashOfConfig":"211"},{"size":4655,"mtime":1639300594240,"results":"223","hashOfConfig":"211"},{"size":3188,"mtime":1640585376262,"results":"224","hashOfConfig":"211"},{"size":927,"mtime":1639296687060,"results":"225","hashOfConfig":"211"},{"size":1581,"mtime":1639034767064,"results":"226","hashOfConfig":"211"},{"size":309,"mtime":1638868993214,"results":"227","hashOfConfig":"211"},{"size":704,"mtime":1640068867717,"results":"228","hashOfConfig":"211"},{"size":3091,"mtime":1639993271043,"results":"229","hashOfConfig":"211"},{"size":268,"mtime":1637559785958,"results":"230","hashOfConfig":"211"},{"size":230,"mtime":1637559785958,"results":"231","hashOfConfig":"211"},{"size":1465,"mtime":1639300292984,"results":"232","hashOfConfig":"211"},{"size":3082,"mtime":1637891429918,"results":"233","hashOfConfig":"211"},{"size":1693,"mtime":1639300331838,"results":"234","hashOfConfig":"211"},{"size":1220,"mtime":1637894305513,"results":"235","hashOfConfig":"211"},{"size":1944,"mtime":1639300331832,"results":"236","hashOfConfig":"211"},{"size":1287,"mtime":1638165273098,"results":"237","hashOfConfig":"211"},{"size":1592,"mtime":1640583336741,"results":"238","hashOfConfig":"211"},{"size":1131,"mtime":1639293939381,"results":"239","hashOfConfig":"211"},{"size":1405,"mtime":1639028483325,"results":"240","hashOfConfig":"211"},{"size":1118,"mtime":1639009300745,"results":"241","hashOfConfig":"211"},{"size":4241,"mtime":1640598198650,"results":"242","hashOfConfig":"211"},{"size":3323,"mtime":1638163806270,"results":"243","hashOfConfig":"211"},{"size":1382,"mtime":1640599057954,"results":"244","hashOfConfig":"211"},{"size":112,"mtime":1637946015157,"results":"245","hashOfConfig":"211"},{"size":1683,"mtime":1639619515744,"results":"246","hashOfConfig":"211"},{"size":845,"mtime":1639300797095,"results":"247","hashOfConfig":"211"},{"size":881,"mtime":1640302612275,"results":"248","hashOfConfig":"211"},{"size":1582,"mtime":1639300578733,"results":"249","hashOfConfig":"211"},{"size":558,"mtime":1637894305518,"results":"250","hashOfConfig":"211"},{"size":1085,"mtime":1639028483330,"results":"251","hashOfConfig":"211"},{"size":1857,"mtime":1637900644235,"results":"252","hashOfConfig":"211"},{"size":413,"mtime":1637567392298,"results":"253","hashOfConfig":"211"},{"size":7180,"mtime":1640586317249,"results":"254","hashOfConfig":"211"},{"size":2879,"mtime":1639296129004,"results":"255","hashOfConfig":"211"},{"size":310,"mtime":1637559785952,"results":"256","hashOfConfig":"211"},{"size":3567,"mtime":1640583104075,"results":"257","hashOfConfig":"211"},{"size":5979,"mtime":1638154121762,"results":"258","hashOfConfig":"211"},{"size":1704,"mtime":1638929139740,"results":"259","hashOfConfig":"211"},{"size":542,"mtime":1640582997164,"results":"260","hashOfConfig":"211"},{"size":646,"mtime":1637867144835,"results":"261","hashOfConfig":"211"},{"size":239,"mtime":1638155927534,"results":"262","hashOfConfig":"211"},{"size":598,"mtime":1637892170390,"results":"263","hashOfConfig":"211"},{"size":3971,"mtime":1639030825785,"results":"264","hashOfConfig":"211"},{"size":1737,"mtime":1637902640430,"results":"265","hashOfConfig":"211"},{"size":2862,"mtime":1640586517923,"results":"266","hashOfConfig":"211"},{"size":230,"mtime":1638174485672,"results":"267","hashOfConfig":"211"},{"size":270,"mtime":1638034751030,"results":"268","hashOfConfig":"211"},{"size":2300,"mtime":1639302927524,"results":"269","hashOfConfig":"211"},{"size":869,"mtime":1639300841404,"results":"270","hashOfConfig":"211"},{"size":2112,"mtime":1639295252715,"results":"271","hashOfConfig":"211"},{"size":3394,"mtime":1639027599972,"results":"272","hashOfConfig":"211"},{"size":271,"mtime":1639068073975,"results":"273","hashOfConfig":"211"},{"size":1007,"mtime":1639382295672,"results":"274","hashOfConfig":"211"},{"size":5424,"mtime":1639302956663,"results":"275","hashOfConfig":"211"},{"size":1482,"mtime":1639027829759,"results":"276","hashOfConfig":"211"},{"size":496,"mtime":1639297175982,"results":"277","hashOfConfig":"211"},{"size":1368,"mtime":1639295784864,"results":"278","hashOfConfig":"211"},{"size":3234,"mtime":1640582997168,"results":"279","hashOfConfig":"211"},{"size":420,"mtime":1640660490693,"results":"280","hashOfConfig":"211"},{"size":1147,"mtime":1640319955625,"results":"281","hashOfConfig":"211"},{"size":2730,"mtime":1640459478123,"results":"282","hashOfConfig":"211"},{"size":236,"mtime":1639993271048,"results":"283","hashOfConfig":"211"},{"size":1057,"mtime":1640155030148,"results":"284","hashOfConfig":"211"},{"size":3757,"mtime":1639727258900,"results":"285","hashOfConfig":"211"},{"size":293,"mtime":1640587449829,"results":"286","hashOfConfig":"211"},{"size":23,"mtime":1637559785922,"results":"287","hashOfConfig":"211"},{"size":684,"mtime":1640571969729,"results":"288","hashOfConfig":"211"},{"size":283,"mtime":1640574613690,"results":"289","hashOfConfig":"211"},{"size":329,"mtime":1640596903139,"results":"290","hashOfConfig":"211"},{"size":1157,"mtime":1640596879206,"results":"291","hashOfConfig":"211"},{"size":1312,"mtime":1640596403386,"results":"292","hashOfConfig":"211"},{"size":624,"mtime":1633734969020,"results":"293","hashOfConfig":"294"},{"size":425,"mtime":1633497407848,"results":"295","hashOfConfig":"294"},{"size":1309,"mtime":1639724016473,"results":"296","hashOfConfig":"294"},{"size":1927,"mtime":1644741126778,"results":"297","hashOfConfig":"294"},{"size":5172,"mtime":1644798011458,"results":"298","hashOfConfig":"294"},{"size":489,"mtime":1639037096055,"results":"299","hashOfConfig":"294"},{"size":672,"mtime":1637900932333,"results":"300","hashOfConfig":"294"},{"size":4464,"mtime":1644797906948,"results":"301","hashOfConfig":"294"},{"size":31,"mtime":1641402851228,"results":"302","hashOfConfig":"294"},{"size":35,"mtime":1640877217380,"results":"303","hashOfConfig":"294"},{"size":4655,"mtime":1639300594240,"results":"304","hashOfConfig":"294"},{"size":2862,"mtime":1640586517923,"results":"305","hashOfConfig":"294"},{"size":576,"mtime":1641289037649,"results":"306","hashOfConfig":"294"},{"size":728,"mtime":1641681194211,"results":"307","hashOfConfig":"294"},{"size":3767,"mtime":1641671285122,"results":"308","hashOfConfig":"294"},{"size":406,"mtime":1644083513220,"results":"309","hashOfConfig":"294"},{"size":295,"mtime":1644083513207,"results":"310","hashOfConfig":"294"},{"size":3971,"mtime":1639030825785,"results":"311","hashOfConfig":"294"},{"size":1702,"mtime":1641572979485,"results":"312","hashOfConfig":"294"},{"size":1396,"mtime":1642578045849,"results":"313","hashOfConfig":"294"},{"size":212,"mtime":1641119287691,"results":"314","hashOfConfig":"294"},{"size":1206,"mtime":1644738592262,"results":"315","hashOfConfig":"294"},{"size":109,"mtime":1640766614677,"results":"316","hashOfConfig":"294"},{"size":239,"mtime":1637559785941,"results":"317","hashOfConfig":"294"},{"size":3215,"mtime":1641630843913,"results":"318","hashOfConfig":"294"},{"size":268,"mtime":1637559785958,"results":"319","hashOfConfig":"294"},{"size":1693,"mtime":1639300331838,"results":"320","hashOfConfig":"294"},{"size":3082,"mtime":1637891429918,"results":"321","hashOfConfig":"294"},{"size":869,"mtime":1639300841404,"results":"322","hashOfConfig":"294"},{"size":1465,"mtime":1639300292984,"results":"323","hashOfConfig":"294"},{"size":1220,"mtime":1637894305513,"results":"324","hashOfConfig":"294"},{"size":2300,"mtime":1639302927524,"results":"325","hashOfConfig":"294"},{"size":1287,"mtime":1638165273098,"results":"326","hashOfConfig":"294"},{"size":1944,"mtime":1639300331832,"results":"327","hashOfConfig":"294"},{"size":1592,"mtime":1640583336741,"results":"328","hashOfConfig":"294"},{"size":3136,"mtime":1641546734439,"results":"329","hashOfConfig":"294"},{"size":1260,"mtime":1642398028196,"results":"330","hashOfConfig":"294"},{"size":543,"mtime":1640878993094,"results":"331","hashOfConfig":"294"},{"size":1197,"mtime":1641683722710,"results":"332","hashOfConfig":"294"},{"size":140,"mtime":1642742541849,"results":"333","hashOfConfig":"294"},{"size":1607,"mtime":1642398043847,"results":"334","hashOfConfig":"294"},{"size":24,"mtime":1642540313198,"results":"335","hashOfConfig":"294"},{"size":6763,"mtime":1641573859066,"results":"336","hashOfConfig":"294"},{"size":1461,"mtime":1644706984800,"results":"337","hashOfConfig":"294"},{"size":2155,"mtime":1642557674851,"results":"338","hashOfConfig":"294"},{"size":878,"mtime":1640830374635,"results":"339","hashOfConfig":"294"},{"size":558,"mtime":1637894305518,"results":"340","hashOfConfig":"294"},{"size":598,"mtime":1637892170390,"results":"341","hashOfConfig":"294"},{"size":845,"mtime":1639300797095,"results":"342","hashOfConfig":"294"},{"size":1085,"mtime":1639028483330,"results":"343","hashOfConfig":"294"},{"size":1582,"mtime":1639300578733,"results":"344","hashOfConfig":"294"},{"size":1561,"mtime":1641200205831,"results":"345","hashOfConfig":"294"},{"size":1857,"mtime":1637900644235,"results":"346","hashOfConfig":"294"},{"size":413,"mtime":1637567392298,"results":"347","hashOfConfig":"294"},{"size":3698,"mtime":1644088469035,"results":"348","hashOfConfig":"294"},{"size":799,"mtime":1642541576341,"results":"349","hashOfConfig":"294"},{"size":5560,"mtime":1642747519683,"results":"350","hashOfConfig":"294"},{"size":2310,"mtime":1644084879807,"results":"351","hashOfConfig":"294"},{"size":2440,"mtime":1641200570613,"results":"352","hashOfConfig":"294"},{"size":381,"mtime":1641679824640,"results":"353","hashOfConfig":"294"},{"size":2881,"mtime":1640878993101,"results":"354","hashOfConfig":"294"},{"size":3810,"mtime":1642607648230,"results":"355","hashOfConfig":"294"},{"size":3570,"mtime":1640878993104,"results":"356","hashOfConfig":"294"},{"size":5979,"mtime":1638154121762,"results":"357","hashOfConfig":"294"},{"size":462,"mtime":1644084620672,"results":"358","hashOfConfig":"294"},{"size":230,"mtime":1638174485672,"results":"359","hashOfConfig":"294"},{"size":283,"mtime":1640574613690,"results":"360","hashOfConfig":"294"},{"size":7547,"mtime":1642436663486,"results":"361","hashOfConfig":"294"},{"size":239,"mtime":1638155927534,"results":"362","hashOfConfig":"294"},{"size":646,"mtime":1637867144835,"results":"363","hashOfConfig":"294"},{"size":1704,"mtime":1638929139740,"results":"364","hashOfConfig":"294"},{"size":2971,"mtime":1642142058484,"results":"365","hashOfConfig":"294"},{"size":3999,"mtime":1642436644885,"results":"366","hashOfConfig":"294"},{"size":1286,"mtime":1644659442499,"results":"367","hashOfConfig":"294"},{"size":4003,"mtime":1642436663495,"results":"368","hashOfConfig":"294"},{"size":3228,"mtime":1641889737598,"results":"369","hashOfConfig":"294"},{"size":8218,"mtime":1642607838396,"results":"370","hashOfConfig":"294"},{"size":3314,"mtime":1642558056817,"results":"371","hashOfConfig":"294"},{"size":635,"mtime":1642557674863,"results":"372","hashOfConfig":"294"},{"size":1933,"mtime":1642550800991,"results":"373","hashOfConfig":"294"},{"size":3683,"mtime":1644659442494,"results":"374","hashOfConfig":"294"},{"size":1364,"mtime":1641671913478,"results":"375","hashOfConfig":"294"},{"size":1696,"mtime":1642573616518,"results":"376","hashOfConfig":"294"},{"size":850,"mtime":1640919542276,"results":"377","hashOfConfig":"294"},{"size":2847,"mtime":1642550669406,"results":"378","hashOfConfig":"294"},{"size":1533,"mtime":1641858165709,"results":"379","hashOfConfig":"294"},{"size":2558,"mtime":1642556514381,"results":"380","hashOfConfig":"294"},{"size":2173,"mtime":1641192303250,"results":"381","hashOfConfig":"294"},{"size":1409,"mtime":1641573243966,"results":"382","hashOfConfig":"294"},{"size":2288,"mtime":1641196502452,"results":"383","hashOfConfig":"294"},{"size":6748,"mtime":1641916519868,"results":"384","hashOfConfig":"294"},{"size":5420,"mtime":1641916598763,"results":"385","hashOfConfig":"294"},{"size":1405,"mtime":1641573147945,"results":"386","hashOfConfig":"294"},{"size":2141,"mtime":1641683854224,"results":"387","hashOfConfig":"294"},{"size":6238,"mtime":1641683854230,"results":"388","hashOfConfig":"294"},{"size":2801,"mtime":1641755742190,"results":"389","hashOfConfig":"294"},{"size":886,"mtime":1641574290432,"results":"390","hashOfConfig":"294"},{"size":1019,"mtime":1641633101357,"results":"391","hashOfConfig":"294"},{"size":1418,"mtime":1642438293530,"results":"392","hashOfConfig":"294"},{"size":365,"mtime":1641402851224,"results":"393","hashOfConfig":"294"},{"size":2887,"mtime":1641972810626,"results":"394","hashOfConfig":"294"},{"size":2194,"mtime":1641550159221,"results":"395","hashOfConfig":"294"},{"size":1581,"mtime":1639034767064,"results":"396","hashOfConfig":"294"},{"size":769,"mtime":1641611791293,"results":"397","hashOfConfig":"294"},{"size":1347,"mtime":1643837388181,"results":"398","hashOfConfig":"294"},{"size":1057,"mtime":1643475987391,"results":"399","hashOfConfig":"294"},{"size":3449,"mtime":1644224709579,"results":"400","hashOfConfig":"294"},{"size":7683,"mtime":1644718088423,"results":"401","hashOfConfig":"294"},{"size":7568,"mtime":1644137967941,"results":"402","hashOfConfig":"294"},{"size":8089,"mtime":1644224513981,"results":"403","hashOfConfig":"294"},{"size":2057,"mtime":1644106961317,"results":"404","hashOfConfig":"294"},{"size":1861,"mtime":1644089176520,"results":"405","hashOfConfig":"294"},{"size":1598,"mtime":1644224513991,"results":"406","hashOfConfig":"294"},{"size":2530,"mtime":1644089050006,"results":"407","hashOfConfig":"294"},{"size":4146,"mtime":1644224300119,"results":"408","hashOfConfig":"294"},{"size":4225,"mtime":1644738500449,"results":"409","hashOfConfig":"294"},{"size":517,"mtime":1644343179054,"results":"410","hashOfConfig":"294"},{"size":2173,"mtime":1644307398683,"results":"411","hashOfConfig":"294"},{"size":2491,"mtime":1644309500352,"results":"412","hashOfConfig":"294"},{"size":1634,"mtime":1644726733716,"results":"413","hashOfConfig":"294"},{"size":720,"mtime":1644339380466,"results":"414","hashOfConfig":"294"},{"size":269,"mtime":1644304188959,"results":"415","hashOfConfig":"294"},{"size":3008,"mtime":1644339733128,"results":"416","hashOfConfig":"294"},{"size":6070,"mtime":1644727301841,"results":"417","hashOfConfig":"294"},{"size":4247,"mtime":1644794870847,"results":"418","hashOfConfig":"294"},{"size":310,"mtime":1644739931489,"results":"419","hashOfConfig":"294"},{"size":486,"mtime":1644769630775,"results":"420","hashOfConfig":"294"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},"1u1quzu",{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"423"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"439","usedDeprecatedRules":"423"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"423"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"423"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"423"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"423"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"423"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"423"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"423"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"490"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"423"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"423"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"423"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"423"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"423"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"423"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"423"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"423"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"423"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"423"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"423"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"423"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"423"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"490"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"490"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"490"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"490"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"423"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},"a2drxm",{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"614"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"614"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"614"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"614"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"614"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"614"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"614"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"614"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693","usedDeprecatedRules":"694"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"707","usedDeprecatedRules":"614"},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"614"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"723"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"614"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"614"},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"737","messages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"614"},{"filePath":"740","messages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"746","messages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"614"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"614"},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"614"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"614"},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"614"},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"614"},{"filePath":"778","messages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"780","messages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"782","messages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"784","messages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"786","messages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"788","messages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"790","messages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"614"},{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"614"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798","usedDeprecatedRules":"614"},{"filePath":"799","messages":"800","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"801","usedDeprecatedRules":"614"},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804","usedDeprecatedRules":"614"},{"filePath":"805","messages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"807","usedDeprecatedRules":"614"},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"810","usedDeprecatedRules":"614"},{"filePath":"811","messages":"812","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"813","usedDeprecatedRules":"614"},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"614"},{"filePath":"817","messages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"819","messages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"614"},{"filePath":"822","messages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"824","usedDeprecatedRules":"614"},{"filePath":"825","messages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"827","messages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"829","usedDeprecatedRules":"614"},{"filePath":"830","messages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"832","usedDeprecatedRules":"614"},{"filePath":"833","messages":"834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"839","messages":"840","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"841","usedDeprecatedRules":"614"},{"filePath":"842","messages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"844","usedDeprecatedRules":"614"},{"filePath":"845","messages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"614"},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"849","messages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"851","messages":"852","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"853","messages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"614"},{"filePath":"856","messages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"860","usedDeprecatedRules":"614"},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863","usedDeprecatedRules":"614"},{"filePath":"864","messages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"866","messages":"867","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"868","usedDeprecatedRules":"614"},{"filePath":"869","messages":"870","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"871","messages":"872","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"873","usedDeprecatedRules":"614"},{"filePath":"874","messages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"876","usedDeprecatedRules":"614"},{"filePath":"877","messages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"879","messages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"881","usedDeprecatedRules":"614"},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884","usedDeprecatedRules":"614"},{"filePath":"885","messages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"614"},{"filePath":"888","messages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"890","messages":"891","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"892","usedDeprecatedRules":"614"},{"filePath":"893","messages":"894","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"895","messages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"614"},{"filePath":"897","messages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"899","messages":"900","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"901","messages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"903","messages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ed/Projects/n3-ftw/client/src/index.tsx",[],["905","906"],"/Users/ed/Projects/n3-ftw/client/src/reportWebVitals.ts",[],"/Users/ed/Projects/n3-ftw/client/src/common/hooks/use-app.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/common/hooks/use-responsive.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/WalletSidebar.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/Header.tsx",["907","908"],"import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaBars, FaWallet } from \"react-icons/fa\";\nimport Logo from \"./Logo\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { useWallet } from \"../../packages/provider\";\nimport { utils } from \"../../packages/neo\";\nimport { COLLECTION_PATH, MENU } from \"../../consts\";\nimport PendingTransaction from \"../../packages/ui/PendingTransaction\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport NetworkSwitch from \"./NetworkSwitch\";\n\nconst Header = () => {\n  const { toggleSidebar, toggleWalletSidebar } = useApp();\n  const { connectedWallet, network, disConnectWallet } = useWallet();\n  const [isActive, setActive] = useState(false);\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    disConnectWallet();\n  };\n  return (\n    <nav\n      className=\"navbar has-shadow is-white is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ height: \"52px\" }}\n    >\n      <div className=\"container\">\n        <div\n          className=\"navbar-brand\"\n          style={{ justifyContent: \"space-between\" }}\n        >\n          <div\n            role=\"button\"\n            className=\"navbar-burger is-center is-hidden-tablet\"\n            style={{ marginLeft: 0 }}\n            onClick={toggleSidebar}\n          >\n            <FaBars />\n          </div>\n          <Link className=\"has-text-white navbar-item is-center\" to=\"/\">\n            <Logo />\n          </Link>\n          <div\n            role=\"button\"\n            className={`navbar-burger is-center is-hidden-desktop`}\n            onClick={() => {\n              if (connectedWallet) {\n                setActive(!isActive);\n              } else {\n                toggleWalletSidebar();\n              }\n            }}\n            style={{ marginLeft: 0 }}\n          >\n            <FaWallet />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div\n            className={`navbar-menu  is-hidden-tablet ${\n              isActive && \"is-active\"\n            }`}\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item\">\n                <div className=\"media\">\n                  <div className=\"media-left\">\n                    <img src={getWalletIcon(connectedWallet.key)} />\n                  </div>\n                  <div className=\"media-content\">\n                    {utils.truncateAddress(connectedWallet.account.address)}\n                  </div>\n                </div>\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <Link\n                onClick={() => setActive(false)}\n                className=\"navbar-item has-text-dark\"\n                to={COLLECTION_PATH}\n              >\n                My NFT\n              </Link>\n              <hr className=\"dropdown-divider\" />\n              <a onClick={handleDisconnectWallet} className=\"navbar-item\">\n                Disconnect wallet\n              </a>\n            </div>\n          </div>\n        )}\n\n        <div className=\"navbar-menu ml-3\">\n          <div className=\"navbar-start\">\n            {MENU.map((route) => {\n              if (!route.network.includes(network)) return <></>;\n              return (\n                <NavLink\n                  key={route.label}\n                  activeClassName=\"is-active\"\n                  to={route.path}\n                  className=\"navbar-item\"\n                >\n                  <strong>{route.label}</strong>\n                </NavLink>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"navbar-end is-hidden-touch\">\n          <div className=\"navbar-item\">\n            <NetworkSwitch />\n          </div>\n          <PendingTransaction />\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              {connectedWallet ? (\n                <WalletDropdown connectedWallet={connectedWallet} />\n              ) : (\n                <button\n                  onClick={toggleWalletSidebar}\n                  className=\"button is-small is-black is-rounded\"\n                >\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Home.tsx",["909","910","911","912","913"],"import React, { useEffect, useRef, useState } from \"react\";\nimport PageLayout from \"../components/PageLayout\";\n// tslint:disable-next-line:no-submodule-imports\nimport DOTS from \"vanta/dist/vanta.halo.min\";\nimport DisplayRandomRune from \"../components/DisplayRandomRune\";\n// import * as THREE from \"three\";\n\nconst Home = (props) => {\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        DOTS({\n          el: myRef.current,\n          mouseControls: true,\n          touchControls: true,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          backgroundColor: 0x80822,\n          size: 2.8,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) {\n        // @ts-ignore\n        vantaEffect.destroy();\n      }\n    };\n  }, [vantaEffect]);\n  return (\n    <div>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-flex\" style={{ alignItems: \"center\" }}>\n                <div>\n                  <h1 className=\"title\">Forthewin is back</h1>\n                  <p className=\"subtitle\">\n                    Migrate your Neo-legacy FTX to the new <span>N3 FTW</span>\n                  </p>\n                  <a\n                    target=\"_blank\"\n                    href=\"https://nepmigration.com/\"\n                    className=\"button is-primary\"\n                  >\n                    Go to Migrate\n                  </a>\n                </div>\n              </div>\n              <div className=\"column is-hidden-touch\">\n                <div\n                  className=\"block\"\n                  // style={{ display: \"flex\", justifyContent: \"center\" }}\n                >\n                  <video style={{ width: \"450px\" }} autoPlay loop>\n                    <source src={\"/migration.mp4\"} type=\"video/mp4\" />\n                  </video>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns halo\" ref={myRef}>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>Neo-legacy</h3>\n                <h6>Symbol</h6>\n                <p>FTX</p>\n                <h6>Contract hash</h6>\n                <p>0xaac66f9779ca67d819d05492805d251dab02fc7b</p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://neotracker.io/asset/aac66f9779ca67d819d05492805d251dab02fc7b\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>N3</h3>\n                <h6>Symbol</h6>\n                <p>FTW</p>\n                <h6>Contract hash</h6>\n                <p>\n                  <a\n                    target=\"_blank\"\n                    className=\"has-text-dark\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\n                  </a>\n                </p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://explorer.onegate.space/NEP17tokeninfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ed/Projects/n3-ftw/client/src/ui/components/MobileMenuSlider.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/consts/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/provider/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/index.tsx",["914","915","916","917","918"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport ActionModal from \"./ActionModal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport toast from \"react-hot-toast\";\nimport SnapshotList from \"./SnapshotList\";\nimport NotifyError from \"../../components/NotifyError\";\nimport Pool from \"./Pool\";\nimport CancelModal from \"./CancelModal\";\nimport ClaimModal from \"./ClaimModal\";\nimport Claims from \"./Claims\";\nimport PositionModal from \"./PositionModal\";\nimport About from \"./About\";\nimport { TESTNET } from \"../../../packages/neo/consts\";\n\nconst Farm = () => {\n  // let location = useLocation();\n  const production = [TESTNET];\n  const [route, setRoute] = useState(\"POOL\");\n  const [modalActive, setModalActive] = useState(false);\n  const [cancelModalActive, setCancelModalActive] = useState(false);\n  const [claimModalActive, setClaimModalActive] = useState(false);\n  const [positionModalActive, setPositionModalActive] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [contractStatus, setContractStatus] = useState<IFarmContractStatus>();\n  const onActive = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onCancelModalActive = () => setCancelModalActive(true);\n  const onClaimModalActive = () => setClaimModalActive(true);\n  const onPositionChange = () => setPositionModalActive(true);\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new FarmContract(network).getStatus(connectedWallet);\n        setContractStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, route]);\n  if (!production.includes(network))\n    return (\n      <PageLayout>This smart contract is not support in {network}.</PageLayout>\n    );\n  return (\n    <PageLayout>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-half\">\n          <div className=\"box \">\n            <div className=\"tabs is-toggle\">\n              <ul>\n                <li className={route === \"POOL\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"POOL\")}>Pool</a>\n                </li>\n                {connectedWallet && contractStatus && contractStatus.deposit && (\n                  <li className={route === \"CLAIMS\" ? \"is-active\" : \"\"}>\n                    <a onClick={() => setRoute(\"CLAIMS\")}>Claims</a>\n                  </li>\n                )}\n                <li className={route === \"SNAPSHOTS\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"SNAPSHOTS\")}>Snapshots</a>\n                </li>\n                <li className={route === \"ABOUT\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"ABOUT\")}>About</a>\n                </li>\n              </ul>\n            </div>\n            <NotifyError msg={error} onClose={() => setError(\"\")} />\n            {route === \"POOL\" && (\n              <Pool\n                contractStatus={contractStatus}\n                onPositionChange={onPositionChange}\n                onDeposit={onActive}\n                onCancel={onCancelModalActive}\n                onClaim={onClaimModalActive}\n              />\n            )}\n            {route === \"SNAPSHOTS\" && (\n              <SnapshotList contractStatus={contractStatus} />\n            )}\n            {route === \"CLAIMS\" && (\n              <Claims\n                onClaim={onClaimModalActive}\n                contractStatus={contractStatus}\n              />\n            )}\n            {route === \"ABOUT\" && <About contractStatus={contractStatus} />}\n          </div>\n        </div>\n      </div>\n      {contractStatus && modalActive && (\n        <ActionModal\n          range={contractStatus.range}\n          onClose={() => setModalActive(false)}\n        />\n      )}\n      {contractStatus && contractStatus.deposit && positionModalActive && (\n        <PositionModal\n          currentPosition={contractStatus.deposit.position}\n          range={contractStatus.range}\n          onClose={() => setPositionModalActive(false)}\n        />\n      )}\n      {cancelModalActive && (\n        <CancelModal onClose={() => setCancelModalActive(false)} />\n      )}\n      {claimModalActive && (\n        <ClaimModal onClose={() => setClaimModalActive(false)} />\n      )}\n    </PageLayout>\n  );\n};\n\nexport default Farm;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/index.tsx",["919"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport PropertiesModal from \"./PropertiesModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport Banner from \"./Banner\";\nimport { RestAPI } from \"../../../packages/neo/api\";\nimport { RUNE_PHASE_FILTER } from \"../../../packages/neo/contracts/ftw/nft/consts\";\n\nconst Gallery = () => {\n  const [filter, setFilter] = useState<string>(RUNE_PHASE_FILTER[0]);\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n  const onFilterChange = (val: string) => setFilter(val);\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).mint(connectedWallet);\n        addPendingTransaction(res);\n      } catch (e: any) {\n      \tconsole.log(e)\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const items = await new RestAPI(network).getRunes(filter);\n        // const res = await new NFTContract(network).getTokens();\n        setTokens(items);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network, filter]);\n  return (\n    <section id=\"Rune\">\n      <Banner\n        network={network}\n        filter={filter}\n        onFilterChange={onFilterChange}\n        onMint={onMint}\n      />\n      {isLoading ? (\n        <PageLayout>\n          <div>Loading..</div>\n        </PageLayout>\n      ) : error ? (\n        <PageLayout>\n          <div>{error}</div>\n        </PageLayout>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"wrap\",\n          }}\n        >\n          {tokens.map((token) => (\n            <figure\n              style={{ width: \"10%\" }}\n              key={token.tokenId}\n              className=\"image rune\"\n              onClick={() => onPropertiesModalActive(token.tokenId.toString())}\n            >\n              <img src={token.image} />\n              {/*<small*/}\n              {/*  className=\"has-text-white\"*/}\n              {/*  style={{ position: \"absolute\", top: 0 }}*/}\n              {/*>*/}\n              {/*  #{token.tokenId}*/}\n              {/*</small>*/}\n              {/*<span className=\"has-text-white\">{token.phase}</span>*/}\n            </figure>\n          ))}\n        </div>\n      )}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default Gallery;\n","/Users/ed/Projects/n3-ftw/client/src/ui/components/SidebarNav.tsx",["920","921"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { GALLERY_PATH, MENU, SMITH_PATH } from \"../../consts\";\nimport { useWallet } from \"../../packages/provider\";\n\nconst SidebarNav = (props) => {\n  const { network } = useWallet();\n  const { toggleSidebar } = useApp();\n  return (\n    <aside className=\"menu p-5\">\n      <p className=\"menu-label\">Menu</p>\n      <ul className=\"menu-list\">\n        {MENU.map((route) => {\n          if (!route.network.includes(network)) return <></>;\n          return (\n            <li key={route.label}>\n              <NavLink\n                onClick={toggleSidebar}\n                activeClassName={\"is-active\"}\n                to={route.path}\n              >\n                {route.label}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </aside>\n  );\n};\n\nexport default SidebarNav;\n","/Users/ed/Projects/n3-ftw/client/src/ui/components/DisplayRandomRune.tsx",["922","923"],"import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\n\ninterface IDisplayRandomRuneProps {\n  width: string;\n  height: string;\n  isActive?: boolean;\n}\nconst DisplayRandomRune = ({\n  width,\n  height,\n  isActive,\n}: IDisplayRandomRuneProps) => {\n  const [colors, setColors] = useState(getColors());\n  const bg = \"rgb(\" + colors[0] + \",\" + colors[6] + \",\" + colors[12] + \")\";\n  const dot1 = \"rgb(\" + colors[1] + \",\" + colors[7] + \",\" + colors[13] + \")\";\n  const dot2 = \"rgb(\" + colors[2] + \",\" + colors[8] + \",\" + colors[14] + \")\";\n  const dot3 = \"rgb(\" + colors[3] + \",\" + colors[9] + \",\" + colors[15] + \")\";\n  const dot4 = \"rgb(\" + colors[4] + \",\" + colors[10] + \",\" + colors[16] + \")\";\n  const body = \"rgb(\" + colors[5] + \",\" + colors[11] + \",\" + colors[17] + \")\";\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    if (isActive) {\n      const interval = setInterval(() => {\n        setColors(getColors());\n      }, 2000);\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  return (\n    <img style={{ width, height }} src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default DisplayRandomRune;\n","/Users/ed/Projects/n3-ftw/client/src/ui/components/Logo.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/consts/pageRoutes.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/provider/wallet-provider.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/NotifyError.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/PageLayout.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/Pool.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ActionModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotList.tsx",["924"],"import React, { useState } from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\nimport SnapshotCard from \"./SnapshotCard\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCreateSnapshot = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).createSnapshot(\n          connectedWallet\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  if (!contractStatus) return <div></div>;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">Snapshots</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <SnapshotCountdown\n              timeLeft={parseFloat(contractStatus.timeLeft)}\n              onCreateSnapshot={onCreateSnapshot}\n            />\n          </div>\n        </div>\n      </div>\n\n      {contractStatus.snapshots.items.map((item) => (\n        <SnapshotCard key={item.no} item={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ClaimModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/Claims.tsx",["925"],"import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\n\ninterface IClaimsProps {\n  contractStatus?: IFarmContractStatus;\n  onClaim: () => void;\n}\nconst Claims = ({ contractStatus, onClaim }: IClaimsProps) => {\n  if (!contractStatus) return <div></div>;\n  if (!contractStatus.claims) return <div></div>;\n  if (!contractStatus.deposit) return <div></div>;\n  const lastClaimNo = contractStatus.deposit.lastClaimNo\n    ? parseFloat(contractStatus.deposit.lastClaimNo)\n    : 0;\n  const isClaimable =\n    parseFloat(contractStatus.snapshots.totalItems) > lastClaimNo;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">My Claims</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            {isClaimable && (\n              <button\n                onClick={onClaim}\n                className=\"button is-primary is-fullwidth\"\n              >\n                Claim Reward\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      {contractStatus.claims.items.length > 0 ? (\n        contractStatus.claims.items.map((item) => {\n          return (\n            <div key={item.createdAt} className=\"media\">\n              <div className=\"media-left\">#{item.no}</div>\n              <div className=\"media-content\">\n                Snapshots: {`${item.from} ~ ${item.end}`}\n                <br />\n                GAS: {item.GAS}\n                <br />\n                FTW: {item.FTW}\n                <br />\n                {item.createdAt}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>No claims to display</div>\n      )}\n    </div>\n  );\n};\n\nexport default Claims;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/CancelModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/PropertiesModal.tsx",["926","927"],"import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\n\ninterface IPropertiesModal {\n  tokenId: string;\n  onClose: () => void;\n}\nconst PropertiesModal = ({ tokenId, onClose }: IPropertiesModal) => {\n  const [item, setItem] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getProperties(\n          tokenId.toString()\n        );\n        setItem(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network]);\n  return (\n    <Modal onClose={onClose}>\n      {isLoading ? (\n        <div>Loading the rune data from the chain..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <h1 className=\"title is-4\">{item.name}</h1>\n\n          <p className=\"subtitle is-7\">\n            <strong>Phase:</strong> {item.phase}, <strong>Luck:</strong>{\" \"}\n            {item.luck}\n          </p>\n          <figure className=\"image is-square\">\n            <img src={item.image} />\n          </figure>\n          <p className=\"subtitle is-7 has-text-right mt-3\">{item.owner}</p>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PropertiesModal;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/DisplayRune.tsx",["928","929","930"],"import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../packages/neo/contracts/ftw/nft/interfaces\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n}\n\nconst DisplayRune = ({\n  width,\n  height,\n  tokenId,\n  network,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(tokenId);\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune\"\n      onClick={() => onClick(token)}\n    >\n      <img src={token.image} />\n    </figure>\n  );\n};\n\nexport default DisplayRune;\n",["931","932"],"/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/index.tsx",["933","934"],"import React, { useEffect } from \"react\";\nimport { utils } from \"../../neo\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport WalletList from \"./WalletList\";\nimport AssetCard from \"./AssetCard\";\nimport { useWallet } from \"../../provider\";\nimport Runes from \"./Runes\";\nimport { Network } from \"../../neo/network\";\n\nconst Wallet = (props) => {\n  const { connectedWallet } = useWallet();\n  return (\n    <>\n      <header className=\"level is-mobile p-3 is-marginless\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <WalletDropdown />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <small>\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </small>\n            </div>\n          </div>\n        )}\n      </header>\n      <hr className=\"m-0\" />\n      <section className=\"p-5\">\n        {connectedWallet ? (\n          <>\n            <div>\n              {connectedWallet &&\n                connectedWallet.balances.map((balance) => {\n                  return <AssetCard key={balance.symbol} {...balance} />;\n                })}\n            </div>\n            <Runes connectedWallet={connectedWallet} />\n          </>\n        ) : (\n          <WalletList />\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default Wallet;\n","/Users/ed/Projects/n3-ftw/client/src/packages/ui/PendingTransaction/index.tsx",["935","936"],"import React, { useEffect } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useWallet } from \"../../provider\";\nimport { Network } from \"../../neo/network\";\n\nconst PendingTransaction = () => {\n  const { network, pendingTransactions, removePendingTransaction } =\n    useWallet();\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        for (const txid of pendingTransactions) {\n          const res = await Network.getRawTx(txid, network);\n          removePendingTransaction(txid);\n        }\n      } catch (e: any) {\n        console.error(e);\n      }\n    }\n\n    if (pendingTransactions.length > 0) {\n      checkTxid();\n    }\n  }, [pendingTransactions]);\n  if (pendingTransactions.length === 0) return <></>;\n  return (\n    <div className=\"navbar-item pr-0\">\n      <div\n        style={{ pointerEvents: \"none\" }}\n        className=\"is-center button is-outlined is-rounded is-small\"\n      >\n        <ClipLoader loading={true} size={15} />\n        <span className=\"ml-2\">{`${pendingTransactions.length} Pending`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default PendingTransaction;\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/wallet/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/network/index.ts",["937"],"import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG,\n} from \"../consts\";\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport {\n  ApplicationLogJson,\n  GetRawTransactionResult,\n} from \"@cityofzion/neon-core/lib/rpc/Query\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n  private static readonly READ_LOG_FREQUENCY = 6000;\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static getRawTx = async (txid: string, network: INetworkType) => {\n    const rpcClient = Network.getRPCClient(network);\n    // Cycle\n    let rawTx: GetRawTransactionResult | undefined;\n    do {\n      try {\n      \tconsole.log(\"ping\")\n        rawTx = await rpcClient.getRawTransaction(txid, true);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!rawTx);\n\n    return rawTx;\n  };\n\n  static findNotificationFromTxId = async (\n    txId: string,\n    scriptHash: string,\n    eventName: string,\n    networkType: INetworkType\n  ) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(\n      txId,\n      networkType\n    );\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName\n    );\n  };\n\n  static getNotificationsFromTxId = async (\n    txId: string,\n    network: INetworkType\n  ) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[]\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    const res = await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    if (res.state === \"FAULT\") {\n      console.error(\"RPC read error\" + res);\n      throw new Error(res.exception ? res.exception : \"Network error\");\n    }\n    return res;\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/consts/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/utils/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCountdown.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/Modal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/MyPosition.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/TransactionSubmitted.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletList.tsx",["938"],"import React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletList = () => {\n  const { connectWallet, list, useDevWallet } = useWallet();\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          if (!useDevWallet && _wallet.key === DEV) return false;\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} alt=\"React Logo\" />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletDropdown.tsx",["939","940"],"import React, { useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown } from \"react-icons/all\";\nimport { useApp } from \"../../../common/hooks/use-app\";\nimport { useWallet } from \"../../provider\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletDropdown = () => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectedWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n  if (!connectedWallet) {\n    return (\n      <button className=\"button is-white \" onClick={() => setActive(!isActive)}>\n        <strong>Wallet</strong>\n      </button>\n    );\n  }\n  return (\n    <div className={`dropdown ${isActive && \"is-active\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-white\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu3\"\n          onClick={() => setActive(!isActive)}\n        >\n          <span className=\"icon is-small\">\n            <img src={getWalletIcon(connectedWallet.key)} />\n          </span>\n          <span>\n            <strong>Wallet</strong>\n          </span>\n          <span className=\"icon is-small\">\n            <FaAngleDown />\n            {/*<i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>*/}\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a\n            onClick={handleDisconnectWallet}\n            href=\"#\"\n            className=\"dropdown-item\"\n          >\n            Disconnect\n          </a>\n          {/*<hr className=\"dropdown-divider\"/>*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/AssetCard.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/wallet/dev-wallet.ts",["941"],"import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\n// tslint:disable-next-line:no-submodule-imports\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpcClient = Network.getRPCClient(network);\n    const res = await rpcClient.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      let amount;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n        amount = u.BigInteger.fromNumber(item.amount).toDecimal(8).toString();\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n        amount = item.amount;\n      }\n      balances.push({\n        contract: item.assethash,\n        amount,\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    network: INetworkType,\n    invokeScript: sc.ContractCallJson\n  ) {\n    const rpcClient = Network.getRPCClient(network);\n    const version: any = await rpcClient.getVersion();\n    const txObj = await DevWallet.build(\n      rpcClient,\n      invokeScript,\n      DevWallet.account.address\n    );\n    txObj.sign(DevWallet.account, version.protocol.network);\n    const txid = await rpcClient.sendRawTransaction(txObj);\n    // tslint:disable-next-line:no-console\n    console.log(\n      JSON.stringify(\n        {\n          RPC: rpc,\n          Transaction: txObj,\n          Network: version,\n          \"Network Fee\": txObj.networkFee.toDecimal(8).toString(),\n          \"System Fee\": txObj.systemFee.toDecimal(8).toString(),\n        },\n        null,\n        4\n      )\n    );\n    return {\n      txid,\n      nodeUrl: rpcClient.url,\n    };\n  }\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson,\n    senderAddress: string,\n    cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n    // @ts-ignore\n    invokeScript.args = invokeScript.args.map((param: any) =>\n      convertContractCallParam(param)\n    );\n    const script = sc.createScript({ ...invokeScript });\n\n    const signers = [\n      {\n        account: wallet.getScriptHashFromAddress(senderAddress),\n        scopes: tx.WitnessScope.Global,\n      },\n    ];\n    if (cosignerAddress) {\n      signers.push({\n        account: wallet.getScriptHashFromAddress(cosignerAddress),\n        scopes: tx.WitnessScope.Global,\n      });\n    }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/local-storage/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/helpers.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/helpers.ts",["942"],"import { IFarmDepositRecord } from \"./interfaces\";\nimport { base64ToDate, base64ToFixed8, base64ToString } from \"../../../utils\";\n\nexport const parseDeposit = (\n  stackItem: any\n): IFarmDepositRecord | undefined => {\n  // TODO check if there no deposit\n  // if (!stackItem.value) return undefined;\n  return {\n    position: stackItem[0].value,\n    amount: stackItem[1].value,\n    lastClaimNo: stackItem[2].value,\n    createdAt: stackItem[3].value,\n  };\n};\n\nexport const parseClaimPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseClaim(stackItem[3].value),\n  };\n};\n\nexport const parseClaim = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      from: item.value[1].value,\n      end: item.value[2].value,\n      GAS: base64ToFixed8(item.value[3].value),\n      FTW: base64ToFixed8(item.value[4].value),\n      createdAt: base64ToDate(item.value[5].value),\n    };\n  });\n};\n\nexport const parseSnapshotPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSnapshotItem(stackItem[3].value),\n  };\n};\n\nconst parseSnapshotItem = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      totalPositionPool: item.value[1].value, // NEO amount\n      totalNeo: item.value[2].value, // NEO amount\n      totalGas: base64ToFixed8(item.value[3].value),\n      range: base64ToFixed8(item.value[4].value),\n      winPosition: item.value[5].value,\n      createdAt: base64ToDate(item.value[6].value),\n    };\n  });\n};\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/helpers.ts",["943"],"import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCard.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/WalletDropdown.tsx",["944","945","946"],"import React, { useEffect, useState } from \"react\";\nimport { utils } from \"../../packages/neo\";\nimport { IConnectedWallet } from \"../../packages/neo/wallet/interfaces\";\nimport { useWallet } from \"../../packages/provider\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport { COLLECTION_PATH } from \"../../consts\";\nimport { NavLink } from \"react-router-dom\";\nimport { NEO_LINE, O3 } from \"../../packages/neo/consts\";\nimport neo3Dapi from \"neo3-dapi\";\ninterface IWalletDropdownProps {\n  connectedWallet: IConnectedWallet;\n}\nconst WalletDropdown = ({ connectedWallet }: IWalletDropdownProps) => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n\n  const onActive = () => setActive(!isActive);\n\n  useEffect(() => {\n    const refresh = () => {\n      connectWallet(connectedWallet.key);\n    };\n    const disconnected = () => {\n      disConnectWallet();\n    };\n\n    if (connectedWallet.key === NEO_LINE) {\n      window.addEventListener(\"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.NETWORK_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.DISCONNECTED\", disconnected);\n      return () => {\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.NETWORK_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.DISCONNECTED\",\n          disconnected\n        );\n      };\n    }\n    if (connectedWallet.key === O3) {\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.DISCONNECTED,\n        disconnected\n      );\n\n      return () => {\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.DISCONNECTED,\n          disconnected\n        );\n      };\n    }\n  }, []);\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className=\"button is-small is-black is-rounded\"\n          aria-controls=\"dropdown-wallet\"\n        >\n          <span>{utils.truncateAddress(connectedWallet.account.address)}</span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <img src={getWalletIcon(connectedWallet.key)} />\n              </div>\n              <div className=\"media-content\">\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </div>\n            </div>\n          </div>\n          <hr className=\"dropdown-divider\" />\n          <NavLink\n            className=\"dropdown-item has-text-dark\"\n            onClick={() => setActive(false)}\n            to={COLLECTION_PATH}\n          >\n            My NFT\n          </NavLink>\n          <hr className=\"dropdown-divider\" />\n          <a onClick={handleDisconnectWallet} className=\"dropdown-item\">\n            Disconnect\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/Runes.tsx",["947","948","949","950","951","952"],"import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../neo/contracts\";\nimport { IRuneMeta } from \"../../neo/contracts/ftw/nft/interfaces\";\nimport { useWallet } from \"../../provider\";\nimport toast from \"react-hot-toast\";\nimport DisplayRune from \"../../../ui/pages/Gallery/DisplayRune\";\nimport DisplayRandomRune from \"../../../ui/components/DisplayRandomRune\";\nimport { IConnectedWallet } from \"../../neo/wallet/interfaces\";\n\ninterface IRunesProps {\n  connectedWallet: IConnectedWallet;\n}\nconst Runes = ({ connectedWallet }: IRunesProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  useState<IRuneMeta>();\n  const { network } = useWallet();\n  // const onPropertiesModalActive = (obj: IRuneMeta) => {\n  //   if (connectedWallet) {\n  //     setPropertiesModalActive(obj);\n  //   } else {\n  //     toast.error(\"Please connect wallet.\");\n  //   }\n  // };\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getTokens();\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet]);\n  return (\n    <div>\n      <div\n        style={{\n          flexFlow: \"wrap\",\n          // width: \"640px\",\n          // margin: \"0 auto\"\n        }}\n        className=\"is-flex\"\n      >\n        {/*{tokens.map((tokenId) => (*/}\n        {/*  <DisplayRune*/}\n        {/*    tokenId={tokenId}*/}\n        {/*    network={network}*/}\n        {/*    onClick={() => false}*/}\n        {/*  />*/}\n        {/*))}*/}\n        {/*<DisplayRandomRune width=\"64px\" height=\"64px\" />*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Runes;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/MyCollection/index.tsx",["953"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport PropertiesModal from \"../Gallery/PropertiesModal\";\nimport { GALLERY_PATH } from \"../../../consts\";\nimport { Link } from \"react-router-dom\";\n\nconst MyCollection = () => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus(address: string) {\n      setError(\"\");\n      try {\n        const res = await new NFTContract(network).getTokensOf(address);\n        setTokens(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network]);\n  return (\n    <>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">My collection</h1>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"columns is-multiline\">\n            {tokens.length > 0 ? (\n              tokens.map((token) => (\n                <div className=\"column is-3\">\n                  <figure\n                    className=\"image\"\n                    onClick={() => onPropertiesModalActive(token.tokenId)}\n                  >\n                    <img src={token.image} />\n                  </figure>\n                </div>\n              ))\n            ) : (\n              <div className=\"column is-3\">\n                <div className=\"box\">\n                  <div className=\"block\">\n                    <p>You don't have any runes yet</p>\n                  </div>\n\n                  <Link className=\"button is-primary\" to={GALLERY_PATH}>\n                    Go Get Them\n                  </Link>\n                </div>\n                {/*<DisplayRandomRune width=\"100%\" height=\"100%\" />*/}\n              </div>\n            )}\n          </div>\n        )}\n      </PageLayout>\n      {/*<button onClick={onMint} className=\"button is-black\">Mint</button>*/}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MyCollection;\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/bank/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nep17/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/PositionModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/About.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/helpers.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/ActionModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/ContractCard.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/NetworkCheck.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/NetworkSwitch.tsx",["954","955"],"import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, TESTNET } from \"../../packages/neo/consts\";\nconst NetworkSwitch = () => {\n  const [isActive, setActive] = useState(false);\n  const { network, switchNetwork } = useWallet();\n\n  const onActive = () => setActive(!isActive);\n  const handleNetworkChange = () => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(\"Are you sure to switch network?\")) {\n      switchNetwork(network === TESTNET ? MAINNET : TESTNET);\n      setActive(false);\n    }\n  };\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className={`button is-small ${\n            network === TESTNET ? \"is-danger\" : \"is-white\"\n          }`}\n          aria-controls=\"dropdown-wallet\"\n        >\n          {network}\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <a onClick={handleNetworkChange}>\n              {network === TESTNET ? `Switch to Mainnet` : `Switch to Testnet`}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/Banner.tsx",["956","957"],"import React from \"react\";\nimport DisplayRandomRune from \"../../components/DisplayRandomRune\";\nimport {\n  RUNE_PHASE_FILTER,\n  RUNE_PRICE,\n} from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport { u } from \"@cityofzion/neon-core\";\ninterface IBannerProps {\n  network: INetworkType;\n  filter: string;\n  onMint: () => void;\n  onFilterChange: (val: string) => void;\n}\nconst Banner = ({ onMint, onFilterChange, filter, network }: IBannerProps) => {\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div>\n                <h1 className=\"title\">Forthewin Runes</h1>\n                <p className=\"subtitle\">Algorithms-generated lucky runes</p>\n\n                <div className=\"content is-small\">\n                  <p>\n                    <strong>Max supply</strong>\n                    <br />\n                    500 runes\n                  </p>\n                  <p>\n                    <strong>Attribute #1</strong>\n                    <br />\n                    Random phase (Dark, Light, Fire, Water, Wood, Earth, Metal)\n                  </p>\n                  <p>\n                    <strong>Attribute #2</strong>\n                    <br /> Luck (1 ~ 10)\n                  </p>\n                </div>\n                <div className=\"block has-text-centered-mobile is-hidden-mobile\">\n                  <button\n                    onClick={onMint}\n                    className=\"button is-primary press-font\"\n                  >\n                    Mint: {RUNE_PRICE[network]} GAS\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div\n                className=\"block\"\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <DisplayRandomRune\n                  isActive={true}\n                  width=\"230px\"\n                  height=\"230px\"\n                />\n              </div>\n              <div className=\"block has-text-centered-mobile is-hidden-tablet\">\n                <button\n                  onClick={onMint}\n                  className=\"button is-primary press-font\"\n                >\n                  Mint: {RUNE_PRICE[network]} GAS\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/*<div className=\"hero-foot\">*/}\n      {/*  <nav className=\"tabs is-boxed is-fullwidth\">*/}\n      {/*    <div className=\"container\">*/}\n      {/*      <ul>*/}\n      {/*        {RUNE_PHASE_FILTER.map((phase) => {*/}\n      {/*          return (*/}\n      {/*            <li*/}\n      {/*              key={phase}*/}\n      {/*              className={filter === phase ? \"is-active\" : \"\"}*/}\n      {/*            >*/}\n      {/*              <a onClick={() => onFilterChange(phase)}>{phase}</a>*/}\n      {/*            </li>*/}\n      {/*          );*/}\n      {/*        })}*/}\n      {/*      </ul>*/}\n      {/*    </div>*/}\n      {/*  </nav>*/}\n      {/*</div>*/}\n    </section>\n  );\n};\n\nexport default Banner;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/DisplayRune.tsx",["958","959","960"],"import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../packages/neo/contracts/ftw/nft/interfaces\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n}\n\nconst DisplayRune = ({\n  width,\n  height,\n  tokenId,\n  network,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(tokenId);\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune\"\n      onClick={() => onClick({ ...token, tokenId })}\n    >\n      <img src={token.image} />\n    </figure>\n  );\n};\n\nexport default DisplayRune;\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/helpers.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/Stage4.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/pageRoutes.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/rest.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Arena/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Home/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Arena/Banner.tsx",["961","962"],"import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\ninterface IBanner {\n\tarenaNo: string\n}\nconst Banner = ({arenaNo}: IBanner) => {\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div>\n                <h1 className=\"title\">Arena {arenaNo}</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              {/*<li*/}\n              {/*  className={*/}\n              {/*    location.pathname === PLAYERS_PATH ? \"is-active\" : \"\"*/}\n              {/*  }*/}\n              {/*>*/}\n              {/*  <Link to={PLAYERS_PATH}>Players</Link>*/}\n              {/*</li>*/}\n              {/*<li*/}\n              {/*  className={*/}\n              {/*    location.pathname === HISTORY_PATH ? \"is-active\" : \"\"*/}\n              {/*  }*/}\n              {/*>*/}\n              {/*  <Link to={HISTORY_PATH}>Champions</Link>*/}\n              {/*</li>*/}\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n","/Users/ed/Projects/FTW/client/src/index.tsx",[],["963","964"],"/Users/ed/Projects/FTW/client/src/reportWebVitals.ts",[],"/Users/ed/Projects/FTW/client/src/common/hooks/use-app.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/Header.tsx",["965","966","967","968","969"],"/Users/ed/Projects/FTW/client/src/ui/components/MobileMenuSlider.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/WalletSidebar.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Home.tsx",["970"],"/Users/ed/Projects/FTW/client/src/consts/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/provider/index.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/index.tsx",["971","972","973","974","975"],"/Users/ed/Projects/FTW/client/src/ui/pages/MyCollection/index.tsx",["976"],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/index.tsx",["977"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport PropertiesModal from \"./PropertiesModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport Banner from \"./Banner\";\nimport { RestAPI } from \"../../../packages/neo/api\";\nimport { RUNE_PHASE_FILTER } from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../components/Modal\";\n\nconst Gallery = () => {\n  const [txid, setTxid] = useState(\"\");\n  const [filter, setFilter] = useState<string>(RUNE_PHASE_FILTER[0]);\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n  const onFilterChange = (val: string) => setFilter(val);\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).mint(connectedWallet);\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    document.title =\n      \"Forthewin Rune: Algorithms-generated lucky runes NFT on NEO\";\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const items = await new RestAPI(network).getRunes(filter);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getTokens();\n        setTokens(items);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network, filter]);\n  return (\n    <section id=\"Rune\">\n      <Banner\n        network={network}\n        filter={filter}\n        onFilterChange={onFilterChange}\n        onMint={onMint}\n      />\n      {isLoading ? (\n        <PageLayout>\n          <div>Loading..</div>\n        </PageLayout>\n      ) : error ? (\n        <PageLayout>\n          <div>{error}</div>\n        </PageLayout>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"wrap\",\n          }}\n        >\n          {tokens.map((token) => (\n            <figure\n              style={{ width: \"10%\" }}\n              key={token.tokenId}\n              className=\"image rune\"\n              onClick={() => onPropertiesModalActive(token.tokenId.toString())}\n            >\n              <img src={token.image} />\n              {/*<small*/}\n              {/*  className=\"has-text-white\"*/}\n              {/*  style={{ position: \"absolute\", top: 0 }}*/}\n              {/*>*/}\n              {/*  #{token.tokenId}*/}\n              {/*</small>*/}\n              {/*<span className=\"has-text-white\">{token.phase}</span>*/}\n            </figure>\n          ))}\n        </div>\n      )}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n      {txid && (\n        <Modal onClose={() => setTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={() => setTxid(\"\")}\n            onError={() => setTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default Gallery;\n","/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/ui/components/Logo.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/WalletDropdown.tsx",["978","979","980"],"/Users/ed/Projects/FTW/client/src/ui/components/NetworkSwitch.tsx",["981"],"import React, { useState } from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, PRIVATENET, TESTNET } from \"../../packages/neo/consts\";\nimport { INetworkType } from \"../../packages/neo/network\";\n\nconst NetworkSwitch = () => {\n  const [isActive, setActive] = useState(false);\n  const { network, switchNetwork } = useWallet();\n  const onActive = () => setActive(!isActive);\n  const handleNetworkChange = (val: string) => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(\"Are you sure to switch network?\")) {\n      switchNetwork(val as INetworkType);\n      setActive(false);\n    }\n  };\n  const networkList = [PRIVATENET, TESTNET, MAINNET];\n\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className={`button is-small ${\n            network === MAINNET ? \"is-white\" : \"is-danger\"\n          }`}\n          aria-controls=\"dropdown-wallet\"\n        >\n          {network}\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {networkList.map((v) => {\n            if (\n              (process.env.NODE_ENV !== \"development\" && v === PRIVATENET) ||\n              network === v\n            ) {\n              return false;\n            }\n            return (\n              <div key={`network${v}`} className=\"dropdown-item\">\n                <a onClick={() => handleNetworkChange(v)}>Switch to {v}</a>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","/Users/ed/Projects/FTW/client/src/ui/components/SidebarNav.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/PageLayout.tsx",[],"/Users/ed/Projects/FTW/client/src/consts/pageRoutes.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/pageRoutes.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/provider/wallet-provider.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/NotifyError.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/SnapshotList.tsx",["982"],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/ActionModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/About.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/Pool.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/ClaimModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/PositionModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/CancelModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/Claims.tsx",["983"],"/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/PropertiesModal.tsx",["984","985"],"/Users/ed/Projects/FTW/client/src/ui/pages/Gallery/Banner.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/index.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/ui/PendingTransaction/index.tsx",["986","987"],"import React, { useEffect } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useWallet } from \"../../provider\";\nimport { Network } from \"../../neo/network\";\n\nconst PendingTransaction = () => {\n  const {\n    network,\n    pendingTransactions,\n    removePendingTransaction,\n    // increaseTotalTxSubmit,\n  } = useWallet();\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        for (const txid of pendingTransactions) {\n          const res = await Network.getRawTx(txid, network);\n          removePendingTransaction(txid);\n          // increaseTotalTxSubmit();\n        }\n      } catch (e: any) {\n        console.error(e);\n      }\n    }\n\n    if (pendingTransactions.length > 0) {\n      checkTxid();\n    }\n  }, [pendingTransactions]);\n  if (pendingTransactions.length === 0) return <></>;\n  return (\n    <div className=\"navbar-item pr-0\">\n      <div\n        style={{ pointerEvents: \"none\" }}\n        className=\"is-center button is-outlined is-rounded is-small\"\n      >\n        <ClipLoader loading={true} size={15} />\n        <span className=\"ml-2\">{`${pendingTransactions.length} Pending`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default PendingTransaction;\n",["988","989"],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/consts/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/api/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/index.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Home/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/index.tsx",["990","991","992"],"import React, { useEffect, useState } from \"react\";\nimport Banner from \"./Banner\";\nimport PageLayout from \"../../../../components/PageLayout\";\nimport { ARENA_PATH } from \"../../pageRoutes\";\nimport { Route, useLocation } from \"react-router-dom\";\nimport Players from \"./Players\";\nimport History from \"./History\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../packages/neo/contracts/ftw/tournament\";\n\nconst Arena = (props) => {\n  const location = useLocation();\n  const { arenaNo } = props.match.params;\n  const [status, setStatus] = useState<{\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  }>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchBetAmount() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getCurrentPrize(\n          arenaNo\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchBetAmount();\n  }, [network, location.pathname]);\n  return (\n    <div>\n      <Banner pathname={location.pathname} status={status} arenaNo={arenaNo} />\n      {React.useMemo(() => {\n        return (\n          <PageLayout>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : (\n              <>\n                <Route\n                  exact\n                  path={ARENA_PATH}\n                  component={() => (\n                    <Players\n                      arenaNo={arenaNo}\n                      gameNo={status ? status.gameNo : undefined}\n                    />\n                  )}\n                />\n                <Route\n                  path={ARENA_PATH + \"/history\"}\n                  component={() => <History arenaNo={arenaNo} />}\n                />\n              </>\n            )}\n          </PageLayout>\n        );\n      }, [status, isLoading])}\n    </div>\n  );\n};\n\nexport default Arena;\n","/Users/ed/Projects/FTW/client/src/ui/components/Modal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/TransactionSubmitted.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/SnapshotCard.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/SnapshotCountdown.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/WalletList.tsx",["993"],"/Users/ed/Projects/FTW/client/src/ui/pages/Farm/MyPosition.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/Runes.tsx",["994","995","996"],"import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../neo/contracts\";\nimport { IRuneMeta } from \"../../neo/contracts/ftw/nft/interfaces\";\nimport { useWallet } from \"../../provider\";\nimport { IConnectedWallet } from \"../../neo/wallet/interfaces\";\n\ninterface IRunesProps {\n  connectedWallet: IConnectedWallet;\n}\nconst Runes = ({ connectedWallet }: IRunesProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  useState<IRuneMeta>();\n  const { network } = useWallet();\n  // const onPropertiesModalActive = (obj: IRuneMeta) => {\n  //   if (connectedWallet) {\n  //     setPropertiesModalActive(obj);\n  //   } else {\n  //     toast.error(\"Please connect wallet.\");\n  //   }\n  // };\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getTokens();\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet]);\n  return (\n    <div>\n      <div\n        style={{\n          flexFlow: \"wrap\",\n          // width: \"640px\",\n          // margin: \"0 auto\"\n        }}\n        className=\"is-flex\"\n      >\n        {/*{tokens.map((tokenId) => (*/}\n        {/*  <DisplayRune*/}\n        {/*    tokenId={tokenId}*/}\n        {/*    network={network}*/}\n        {/*    onClick={() => false}*/}\n        {/*  />*/}\n        {/*))}*/}\n        {/*<DisplayRandomRune width=\"64px\" height=\"64px\" />*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Runes;\n",["997","998"],"/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/WalletDropdown.tsx",["999","1000"],"/Users/ed/Projects/FTW/client/src/packages/ui/Wallet/AssetCard.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/neo/network/index.ts",["1001","1002"],"import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG,\n  TESTNET_CONFIG_2,\n  MAINNET_CONFIG_2,\n} from \"../consts\";\n// tslint:disable-next-line:no-submodule-imports\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport {\n  ApplicationLogJson,\n  GetRawTransactionResult,\n  // tslint:disable-next-line:no-submodule-imports\n} from \"@cityofzion/neon-core/lib/rpc/Query\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n  private static readonly READ_LOG_FREQUENCY = 6000;\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static getRawTx = async (txid: string, networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG_2;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG_2;\n        break;\n    }\n    const rpcClient = new rpc.RPCClient(config.url);\n    let rawTx: any;\n    do {\n      try {\n        rawTx = await rpcClient.getApplicationLog(txid);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!rawTx);\n\n    return rawTx;\n  };\n\n  static findNotificationFromTxId = async (\n    txId: string,\n    scriptHash: string,\n    eventName: string,\n    networkType: INetworkType\n  ) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(\n      txId,\n      networkType\n    );\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName\n    );\n  };\n\n  static getNotificationsFromTxId = async (\n    txId: string,\n    network: INetworkType\n  ) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[],\n    passFaultCheck?: boolean\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    const res = await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    if (!passFaultCheck && res.state === \"FAULT\") {\n      console.error(\"RPC read error\" + res);\n      throw new Error(res.exception ? res.exception : \"Network error\");\n    }\n    return res;\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","/Users/ed/Projects/FTW/client/src/packages/neo/api/rest.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/wallet/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/utils/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/helpers.ts",["1003"],"import {\n  base64ToAddress,\n  base64ToDate,\n  base64ToHash160,\n  base64ToString,\n} from \"../../../utils\";\nimport { u } from \"@cityofzion/neon-core\";\n\nexport const parsePaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseRecord(stackItem[3].value),\n  };\n};\n\nconst parseRecord = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractOwner: base64ToAddress(item.value[1].value),\n      contractHash: base64ToHash160(item.value[2].value), // NEO amount\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      decimals: item.value[5].value, // NEO amount\n      totalSupply: item.value[6].value, // NEO amount\n      author: base64ToString(item.value[7].value), // NEO amount\n      description: base64ToString(item.value[8].value), // NEO amount\n      createdAt: base64ToDate(item.value[9].value),\n    };\n  });\n};\n\nexport const parseNEP11RecordPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseNEP11Record(stackItem[3].value),\n  };\n};\n\nconst parseNEP11Record = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      contractHash: base64ToHash160(item.value[1].value), // NEO amount\n      contractOwner: base64ToAddress(item.value[2].value),\n      name: base64ToString(item.value[3].value), // NEO amount\n      symbol: base64ToString(item.value[4].value), // NEO amount\n      description: base64ToString(item.value[5].value), // NEO amount\n      author: base64ToString(item.value[6].value), // NEO amount\n      email: base64ToString(item.value[7].value), // NEO amount\n      createdAt: base64ToDate(item.value[8].value),\n    };\n  });\n};\n\nexport const parseSmithProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/smith/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/local-storage/index.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Banner.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nep17/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/bank/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/api/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/wallet/dev-wallet.ts",["1004"],"import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\n// tslint:disable-next-line:no-submodule-imports\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpcClient = Network.getRPCClient(network);\n    const res = await rpcClient.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      let amount;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n        amount = u.BigInteger.fromNumber(item.amount).toDecimal(8).toString();\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n        amount = item.amount;\n      }\n      balances.push({\n        contract: item.assethash,\n        amount,\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    },\n    network: INetworkType\n  ) {\n    const rpcClient = Network.getRPCClient(network);\n    const version: any = await rpcClient.getVersion();\n    const txObj = await DevWallet.build(rpcClient, invokeScript);\n    txObj.sign(DevWallet.account, version.protocol.network);\n    const txid = await rpcClient.sendRawTransaction(txObj);\n    // // tslint:disable-next-line:no-console\n    //   JSON.stringify(\n    //     {\n    //       RPC: rpc,\n    //       Transaction: txObj,\n    //       Network: version,\n    //       \"Network Fee\": txObj.networkFee.toDecimal(8).toString(),\n    //       \"System Fee\": txObj.systemFee.toDecimal(8).toString(),\n    //     },\n    //     null,\n    //     4\n    //   )\n    // );\n    return {\n      txid,\n      nodeUrl: rpcClient.url,\n    };\n  }\n\n  static createScript = (invokeScript: sc.ContractCallJson) => {\n    return sc.createScript({\n      scriptHash: invokeScript.scriptHash,\n      operation: invokeScript.operation,\n      args: invokeScript.args\n        ? invokeScript.args.map((param: any) => convertContractCallParam(param))\n        : [],\n    });\n  };\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson & {\n      extraSystemFee?: string;\n      signers: any[];\n    }\n    // cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n\n    const script = this.createScript(invokeScript);\n\n    // if (cosignerAddress) {\n    //   signers.push({\n    //     account: wallet.getScriptHashFromAddress(cosignerAddress),\n    //     scopes: tx.WitnessScope.Global,\n    //   });\n    // }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers: invokeScript.signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    if (invokeScript.extraSystemFee) {\n      const fee = u.BigInteger.fromDecimal(\n        invokeScript.extraSystemFee,\n        8\n      ).toString();\n      transaction.systemFee = systemFee.add(parseFloat(fee));\n    }\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/nft/helpers.ts",["1005"],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/farm/helpers.ts",["1006"],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/index.tsx",["1007"],"import React, { useEffect, useState } from \"react\";\nimport Pagination from \"bulma-pagination-react\";\nimport { useWallet } from \"../../../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../../../packages/neo/contracts/ftw/tournament\";\nimport NFTDetailModal from \"./NFTDetailModal\";\nimport HistoryTable from \"./HistoryTable\";\nimport Replay from \"./Replay\";\nimport AfterTransactionSubmitted from \"../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IHistoryProps {\n  arenaNo: string;\n}\nconst History = ({ arenaNo }: IHistoryProps) => {\n  const [claimTxid, setClaimTxid] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [nftModalActive, setNftModalActive] = useState();\n  const [replayModalActive, setReplayModalActive] = useState();\n  const [history, setHistory] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const onNFTModalActive = (obj) => setNftModalActive(obj);\n  const onReplayModalActive = (obj) => setReplayModalActive(obj);\n\n  useEffect(() => {\n    async function fetchHistory() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).history(\n          arenaNo,\n          page\n        );\n        setHistory(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchHistory();\n  }, [connectedWallet, network, page]);\n\n  let totalPages = 0;\n  if (history) {\n    const itemsPerPage = parseFloat(arenaNo) >= 64 ? 2 : 5;\n    totalPages = Math.ceil(history.totalItems / itemsPerPage);\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <div className=\"box\">\n            <h3 className=\"title\">History</h3>\n            {history.items && history.items.length > 0 ? (\n              history.items.map((game) => {\n                return (\n                  <HistoryTable\n                    key={game.gameNo}\n                    width={\"64px\"}\n                    height={\"64px\"}\n                    history={game}\n                    arenaNo={arenaNo}\n                    network={network}\n                    onClick={(obj) => {\n                      onNFTModalActive(obj);\n                    }}\n                    onReplay={() => onReplayModalActive(game)}\n                    onClaimed={setClaimTxid}\n                  />\n                );\n              })\n            ) : (\n              <div>Game hasn't been played</div>\n            )}\n            {totalPages > 1 && (\n              <div className=\"media\">\n                <div className=\"media-content\">\n                  <Pagination\n                    pages={totalPages}\n                    currentPage={page}\n                    onChange={(_page) => {\n                      if (page !== _page) {\n                        setPage(_page);\n                      }\n                    }}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      {nftModalActive && (\n        <NFTDetailModal\n          rune={nftModalActive}\n          onClose={() => setNftModalActive(undefined)}\n        />\n      )}\n\n      {replayModalActive && (\n        <Replay\n          arenaNo={arenaNo}\n          gameHistory={replayModalActive}\n          onClick={(obj) => {\n            onNFTModalActive(obj);\n          }}\n          onClose={() => setReplayModalActive(undefined)}\n        />\n      )}\n\n      {claimTxid && (\n        <Modal onClose={() => setClaimTxid(\"\")}>\n          <AfterTransactionSubmitted\n            txid={claimTxid}\n            network={network}\n            onSuccess={() => setClaimTxid(\"\")}\n            onError={() => setClaimTxid(\"\")}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default History;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/Replay.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/PlayerModal.tsx",["1008","1009","1010","1011"],"import React, { useEffect, useState } from \"react\";\nimport { IRuneMeta } from \"../../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport BetButton from \"../../../../components/BetButton\";\nimport LeaveButton from \"../../../../components/LeaveButton\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toDecimal } from \"../../../../../../../packages/neo/utils\";\n\ninterface IPlayerModalProps {\n  arenaNo: string;\n  gameNo?: number;\n  player: IRuneMeta & { tokenId: string; gameOwner: string };\n  onClose: () => void;\n}\n\nconst PlayerModal = ({\n  arenaNo,\n  gameNo,\n  player,\n  onClose,\n}: IPlayerModalProps) => {\n  const [txid, setTxid] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n  const [status, setStatus] = useState({\n    totalBets: \"\",\n    userBets: \"\",\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    async function fetchContractStatus(_gameNo) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetOnPlayer(\n          arenaNo,\n          _gameNo,\n          player.tokenId,\n          connectedWallet ? connectedWallet.account.address : undefined\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (gameNo) {\n      fetchContractStatus(gameNo);\n    }\n  }, [gameNo, network]);\n  return (\n    <Modal onClose={onClose}>\n      <div>\n        {txid ? (\n          <AfterTransactionSubmitted\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n            txid={txid}\n            network={network}\n          />\n        ) : (\n          <div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <img src={player.image} />\n              </div>\n              <div className=\"column\">\n                <div className=\"content\">\n                  <strong>Name</strong>\n                  <br />\n                  <p>{player.name}</p>\n                  <strong>Phase</strong>\n                  <p>{player.phase}</p>\n                  <strong>Luck</strong>\n                  <p>{player.luck}</p>\n                  <strong>Owner</strong>\n                  <p>{player.gameOwner}</p>\n                  <strong>Current support amount</strong>\n                  <p>{toDecimal(status.totalBets)}</p>\n                  {connectedWallet && (\n                    <>\n                      <strong>My support amount</strong>\n                      <p>{toDecimal(status.userBets)}</p>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <BetButton\n                  setTxid={setTxid}\n                  arenaNo={arenaNo}\n                  tokenId={player.tokenId}\n                />\n              </div>\n              <div className=\"column\">\n                <button\n                  onClick={onClose}\n                  className=\"button is-light is-fullwidth\"\n                >\n                  Close\n                </button>\n              </div>\n              {connectedWallet &&\n              connectedWallet.account.address === player.gameOwner ? (\n                <div className=\"column\">\n                  <LeaveButton\n                    setTxid={setTxid}\n                    arenaNo={arenaNo}\n                    tokenId={player.tokenId}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default PlayerModal;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/NFTListModal.tsx",["1012"],"import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../../../../components/Modal\";\nimport { NFTContract } from \"../../../../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport AfterTransactionSubmitted from \"../../../../../../../packages/ui/AfterTransactionSubmitted\";\nimport { TournamentContract } from \"../../../../../../../packages/neo/contracts/ftw/tournament\";\nimport { toast } from \"react-hot-toast\";\n\ninterface INFTListModalModal {\n  arenaNo: string;\n  onClose: () => void;\n}\nconst NFTListModal = ({ arenaNo, onClose }: INFTListModalModal) => {\n  const [txid, setTxid] = useState(\"\");\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n\n  const onRegister = async (tokenId: string) => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).register(\n          connectedWallet,\n          tokenId,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        {txid ? (\n          <AfterTransactionSubmitted\n            txid={txid}\n            network={network}\n            onSuccess={onClose}\n            onError={() => setTxid(\"\")}\n          />\n        ) : (\n          <div>\n            <div className=\"block\">\n              <h5 className=\"title is-5\">Select a NFT to send to the ARENA</h5>\n            </div>\n            <div>\n              {isLoading ? (\n                <div>Loading..</div>\n              ) : error ? (\n                <div>{error}</div>\n              ) : tokens.length > 0 ? (\n                <div\n                  style={{\n                    flexFlow: \"wrap\",\n                  }}\n                  className=\"is-flex\"\n                >\n                  {tokens.map((token) => {\n                    return (\n                      <figure\n                        key={token.tokenId}\n                        // style={{ width, height }}\n                        className=\"image is-64x64\"\n                        onClick={() => onRegister(token.tokenId)}\n                      >\n                        <img src={token.image} />\n                      </figure>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div>You don't have runes</div>\n              )}\n            </div>\n          </div>\n        )}\n      </>\n    </Modal>\n  );\n};\n\nexport default NFTListModal;\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/index.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/TournamentTree.tsx",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/tournament/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/ArenaRegisterButton.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/PlayButton.tsx",["1013"],"import React from \"react\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TOURNAMENT_TIME_PADDING } from \"../../../../packages/neo/contracts/ftw/tournament/consts\";\n\ninterface IPlayButtonProps {\n  arenaNo: string;\n  onSubmitted: (txid: string) => void;\n  status?: {\n    prize: number;\n    gameNo: number;\n    previousChampWallet?: string;\n    timeElapsedFromPreviousGame?: string;\n  };\n}\nconst PlayButton = ({ arenaNo, onSubmitted, status }: IPlayButtonProps) => {\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPlay = async () => {\n    if (connectedWallet && status) {\n      // try {\n      //   const res = await new TournamentContract(network).play(\n      //     connectedWallet,\n      //     arenaNo\n      //   );\n      //   addPendingTransaction(res);\n      //   onSubmitted(res);\n      // } catch (e: any) {\n      //   toast.error(e.message);\n      // }\n      // const timeLeft =\n      //   TOURNAMENT_TIME_PADDING -\n      //   parseFloat(status.timeElapsedFromPreviousGame);\n      // if (timeLeft <= 0) {\n      try {\n        const res = await new TournamentContract(network).play(\n          connectedWallet,\n          arenaNo\n        );\n        addPendingTransaction(res);\n        onSubmitted(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n      // } else {\n      // }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <button className=\"button is-primary press-font\" onClick={onPlay}>\n      Start\n    </button>\n  );\n};\n\nexport default PlayButton;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/NFTDetailModal.tsx",["1014"],"import React from \"react\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport Modal from \"../../../../../components/Modal\";\n\ninterface IPlayerModalProps {\n  rune: IRuneMeta;\n  onClose: () => void;\n}\nconst NFTDetailModal = ({ rune, onClose }: IPlayerModalProps) => {\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <img src={rune.image} />\n        </div>\n        <div className=\"column\">\n          <div className=\"content\">\n            <strong>Name</strong>\n            <br />\n            <p>{rune.name}</p>\n            <strong>Phase</strong>\n            <p>{rune.phase}</p>\n            <strong>Luck</strong>\n            <p>{rune.luck}</p>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NFTDetailModal;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/History/HistoryTable.tsx",["1015","1016"],"import React, { useEffect, useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaPlay } from \"react-icons/fa\";\nimport { NFTContract } from \"../../../../../../packages/neo/contracts\";\nimport { IRuneMeta } from \"../../../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { INetworkType } from \"../../../../../../packages/neo/network\";\nimport { IHistoryGame } from \"../../../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport ClaimButton from \"../../../components/ClaimButton\";\nimport { toDecimal } from \"../../../../../../packages/neo/utils\";\n\ninterface IDisplayRuneProps {\n  history: IHistoryGame;\n  arenaNo: string;\n  width: string;\n  height: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n  onReplay: () => void;\n  onClaimed: (txid: string) => void;\n}\n\nconst HistoryTable = ({\n  history,\n  arenaNo,\n  width,\n  height,\n  network,\n  onClick,\n  onReplay,\n  onClaimed,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(\n          history.champion\n        );\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [history]);\n  if (!token) return <></>;\n  return (\n    <div className=\"media\">\n      <div className=\"media-left\">\n        {\" \"}\n        <figure\n          style={{ width, height }}\n          className=\"image rune\"\n          onClick={() => onClick(token)}\n        >\n          <img src={token.image} />\n        </figure>\n      </div>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          Game #{history.gameNo}\n          <br />\n          Champ: {token.name} ({token.phase} / {token.luck})\n          <br />\n          {history.champOwner && (\n            <>\n              Champ address: {history.champOwner} <br />\n            </>\n          )}\n          Total supports: {toDecimal(history.totalBets)}GAS\n          <br />\n          Rollover: {toDecimal(history.rollover)}GAS\n          <br />\n          Total supports on champ: {toDecimal(history.betsOnChampion)}GAS\n          <br />\n          Champ reward: {toDecimal(history.championPrize)}GAS\n          <br />\n          Operation reward: {toDecimal(history.fee)}GAS\n        </div>\n        <button onClick={() => onReplay()} className=\"button is-black is-small\">\n          <span className=\"icon\">\n            <FaPlay />\n          </span>\n          <span>Replay</span>\n        </button>\n      </div>\n      <div className=\"media-right\">\n        <div>\n          <ClaimButton\n            onClaimed={onClaimed}\n            arenaNo={arenaNo}\n            history={history}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryTable;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/DisplayRuneWithProperties.tsx",["1017","1018"],"import React, { useEffect, useState } from \"react\";\nimport { INetworkType } from \"../../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport { RestAPI } from \"../../../../packages/neo/api\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaStar } from \"react-icons/fa\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  isOwner?: boolean;\n  onClick: (obj) => void;\n}\n\nconst DisplayRuneWithProperties = ({\n  width,\n  height,\n  tokenId,\n  network,\n  isOwner,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchRune() {\n      try {\n        const res = await new RestAPI(network).getRune(tokenId);\n        setToken(res);\n        // LEAVE TO SWITCH IN CASE DB ERROR\n        // const res = await new NFTContract(network).getProperties(tokenId);\n        // setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchRune();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune is-relative\"\n      onClick={() => onClick({ ...token, tokenId })}\n    >\n      <img src={token.image} />\n      {isOwner && (\n        <FaStar\n          style={{ position: \"absolute\", top: \"2px\", left: \"3px\" }}\n          className=\"has-text-warning\"\n        />\n      )}\n    </figure>\n  );\n};\n\nexport default DisplayRuneWithProperties;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/ClaimButton.tsx",["1019"],"import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport toast from \"react-hot-toast\";\nimport { IHistoryGame } from \"../../../../packages/neo/contracts/ftw/tournament/interfaces\";\nimport { calculateClaimableAmount } from \"../../../../packages/neo/contracts/ftw/tournament/helpers\";\n\ninterface IClaimButtonProps {\n  arenaNo: string;\n  history: IHistoryGame;\n  onClaimed: (txid: string) => void;\n}\nconst ClaimButton = ({ arenaNo, history, onClaimed }: IClaimButtonProps) => {\n  const [status, setStatus] = useState<any>({\n    betAmount: 0,\n    isClaimed: false,\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new TournamentContract(network).claim(\n          connectedWallet,\n          arenaNo,\n          history.gameNo\n        );\n        addPendingTransaction(res);\n        onClaimed(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  useEffect(() => {\n    async function fetchBetAmount(address: string) {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TournamentContract(network).getBetAmount(\n          arenaNo,\n          history.gameNo,\n          history.champion,\n          address\n        );\n        setStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchBetAmount(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network, history]);\n  if (!connectedWallet) return <></>;\n\tif (history.betsOnChampion === \"0\") return <></>;\n  if (!status.betAmount) return <></>;\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {status.isClaimed ? (\n            <button disabled={true} className=\"button is-info is-fullwidth\">\n              Claimed\n            </button>\n          ) : (\n            <button className=\"button is-info is-fullwidth\" onClick={onClaim}>\n              Claim {calculateClaimableAmount(history, status.betAmount)} GAS\n            </button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ClaimButton;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/Banner.tsx",["1020"],"import React, { useState } from \"react\";\nimport { SMITH_PATH, TOURNAMENT_PATH } from \"../../../consts\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport NEP17FormModal from \"./NEP17FormModal\";\nimport NEP11FormModal from \"./NEP11FormModal\";\n\nconst Banner = () => {\n  const location = useLocation();\n  const [isNep11FormModalActive, setNep11FormModalActive] = useState(false);\n  const [isNep17FormModalActive, setNep17FormModalActive] = useState(false);\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">Forthewin Smith</h1>\n          <p className=\"subtitle\">\n            Create your own NEP11 and NEP17 smart contracts without any codes\n          </p>\n          <div className=\"buttons\">\n            <button\n              onClick={() => setNep11FormModalActive(true)}\n              className=\"button is-primary press-font\"\n            >\n              Deploy NEP11\n            </button>\n            <button\n              onClick={() => setNep17FormModalActive(true)}\n              className=\"button is-primary press-font\"\n            >\n              Deploy NEP17\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              <li\n                className={location.pathname === SMITH_PATH ? \"is-active\" : \"\"}\n              >\n                <Link to={SMITH_PATH}>NEP11 (NFT)</Link>\n              </li>\n              <li\n                className={\n                  location.pathname === SMITH_PATH + \"/nep17\" ? \"is-active\" : \"\"\n                }\n              >\n                <Link to={SMITH_PATH + \"/nep17\"}>NEP17 (Token)</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n      {isNep11FormModalActive && (\n        <NEP11FormModal onClose={() => setNep11FormModalActive(false)} />\n      )}\n      {isNep17FormModalActive && (\n        <NEP17FormModal onClose={() => setNep17FormModalActive(false)} />\n      )}\n    </section>\n  );\n};\n\nexport default Banner;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP17/index.tsx",["1021"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\n\nconst NEP17Smith = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [status, setStatus] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getStatus();\n        setStatus(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {status && status.records.items.length > 0 ? (\n            status.records.items.map((item, i) => (\n              <ContractCard key={\"contact17\" + i} data={item} />\n            ))\n          ) : (\n            <div></div>\n          )}\n        </div>\n      )}\n      {/*{isActionModalActive && (*/}\n      {/*  <ActionModal onClose={() => setActionModalActive(false)} />*/}\n      {/*)}*/}\n    </>\n  );\n};\n\nexport default NEP17Smith;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP17/ContractCard.tsx",["1022"],"import React from \"react\";\nimport { ISmithRecord } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { FaExternalLinkAlt } from \"react-icons/all\";\n\ninterface IContractCardProps {\n  data: ISmithRecord;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network } = useWallet();\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">\n          #{data.no} {data.name}\n        </h5>\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/contractinfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n        </div>\n        <div className=\"field is-grouped is-grouped-multiline\">\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Symbol</span>\n              <span className=\"tag is-info\">{data.symbol}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Decimals</span>\n              <span className=\"tag is-info\">{data.decimals}</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Total supply</span>\n              <span className=\"tag is-info\">{data.totalSupply}</span>\n            </div>\n          </div>\n          <div className=\"control\">\n            <div className=\"tags has-addons\">\n              <span className=\"tag is-dark\">Author</span>\n              <span className=\"tag is-info\">{data.author}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContractCard;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP17FormModal.tsx",["1023"],"import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport NumberFormat from \"react-number-format\";\nimport { SmithContract } from \"../../../packages/neo/contracts/ftw/smith\";\nimport { DEPLOY_FEE } from \"../../../packages/neo/contracts/ftw/smith/consts\";\nimport { detectEmojiInString } from \"./helpers\";\nimport AfterTransactionSubmitted from \"../../../packages/ui/AfterTransactionSubmitted\";\nimport { balanceCheck } from \"../../../packages/neo/utils\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\n\nconst NEP17FormModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const [values, setValues] = useState({\n    name: \"\",\n    symbol: \"\",\n    decimals: \"8\",\n    totalSupply: \"\",\n    author: \"\",\n    description: \"\",\n  });\n  const handleValueChange = (key: string, val: string) => {\n    setValues({\n      ...values,\n      [key]: val,\n    });\n  };\n  const hasEmoji = detectEmojiInString(values) !== 0;\n  const onMint = async () => {\n    if (hasEmoji) {\n      toast.error(\n        \"Emoji is not supported yet. Please remove emojis and try again.\"\n      );\n    } else {\n      if (connectedWallet) {\n        if (balanceCheck(connectedWallet.balances, 20)) {\n          try {\n            const res = await new SmithContract(network).createNEP17(\n              connectedWallet,\n              values.name,\n              values.symbol,\n              values.decimals,\n              values.totalSupply,\n              values.author,\n              values.description\n            );\n            setTxid(res);\n          } catch (e: any) {\n            toast.error(e.message);\n          }\n        } else {\n          toast.error(\"You must have more than 20 GAS.\");\n        }\n      } else {\n        toast.error(\"Please connect wallet.\");\n      }\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <AfterTransactionSubmitted\n          network={network}\n          txid={txid}\n          onSuccess={onClose}\n          onError={() => setTxid(\"\")}\n        />\n      ) : (\n        <>\n          <h1 className=\"title\">Create NEP17 Contract</h1>\n\n          <div className=\"field is-grouped is-grouped-multiline\">\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">Deploy fee</span>\n                <span className=\"tag is-primary\">10 GAS</span>\n              </div>\n            </div>\n\n            <div className=\"control\">\n              <div className=\"tags has-addons\">\n                <span className=\"tag is-dark\">System fee</span>\n                <span className=\"tag is-primary\">\n                  {DEPLOY_FEE[network]} GAS\n                </span>\n              </div>\n            </div>\n          </div>\n          <small>NOTE: Please do not use EMOJI or Unicode.</small>\n          <hr />\n          <div className=\"field\">\n            <label className=\"label\">Token Name</label>\n            <div className=\"control\">\n              <input\n                value={values.name}\n                onChange={(e) => handleValueChange(\"name\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Symbol</label>\n                <div className=\"control\">\n                  <input\n                    value={values.symbol}\n                    onChange={(e) =>\n                      handleValueChange(\"symbol\", e.target.value)\n                    }\n                    className=\"input\"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Token Decimals</label>\n                <div className=\"control\">\n                  <NumberFormat\n                    decimalScale={0}\n                    inputMode=\"decimal\"\n                    className=\"input\"\n                    value={values.decimals}\n                    onValueChange={(value) => {\n                      handleValueChange(\"decimals\", value.value);\n                    }}\n                    max={18}\n                    allowNegative={false}\n                    allowLeadingZeros={false}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Total supply</label>\n            <div className=\"control\">\n              <NumberFormat\n                allowNegative={false}\n                decimalScale={0}\n                inputMode=\"decimal\"\n                className=\"input\"\n                value={values.totalSupply}\n                onValueChange={(value) => {\n                  handleValueChange(\"totalSupply\", value.value);\n                }}\n                allowLeadingZeros={false}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Author</label>\n            <div className=\"control\">\n              <input\n                value={values.author}\n                onChange={(e) => handleValueChange(\"author\", e.target.value)}\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Description</label>\n            <div className=\"control\">\n              <input\n                value={values.description}\n                onChange={(e) =>\n                  handleValueChange(\"description\", e.target.value)\n                }\n                className=\"input\"\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <hr />\n          {hasEmoji && (\n            <div className=\"notification is-danger\">\n              Emoji is not supported yet.\n            </div>\n          )}\n          <button\n            onClick={onMint}\n            disabled={\n              !values.name ||\n              !values.symbol ||\n              !values.decimals ||\n              parseFloat(values.decimals) > 18 ||\n              parseFloat(values.totalSupply) < 1 ||\n              !values.author ||\n              !values.description ||\n              hasEmoji\n            }\n            className=\"button is-primary\"\n          >\n            Create\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default NEP17FormModal;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP11FormModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/index.tsx",["1024"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport ContractCard from \"./ContractCard\";\nimport { ISmithNEP11RecordPaginate } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\n\nconst NEP11Smith = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState<ISmithNEP11RecordPaginate>();\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new SmithContract(network).getNEP11Records();\n        setData(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, network]);\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <div className=\"box\">\n          {data && data.items.length > 0 ? (\n            data.items.map((item, i) => (\n              <ContractCard key={\"contract\" + i} data={item} />\n            ))\n          ) : (\n            <div>No contracts to display</div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NEP11Smith;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/ContractCard.tsx",["1025"],"import React, { useState } from \"react\";\nimport { ISmithNEP11Record } from \"../../../../../packages/neo/contracts/ftw/smith/interfaces\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport NEP11MintFormModal from \"../../NEP11MintFormModal\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport Tokens from \"./Tokens\";\n\ninterface IContractCardProps {\n  data: ISmithNEP11Record;\n}\nconst ContractCard = ({ data }: IContractCardProps) => {\n  const { network, connectedWallet } = useWallet();\n  const [isMintModalActive, setMintModalActive] = useState(\"\");\n  return (\n    <div className=\"media\">\n      <div className=\"media-content\">\n        <h5 className=\"title is-5\">\n          #{data.no} {data.name}\n        </h5>\n        <div className=\"content\">\n          <strong>Contract Hash</strong>\n          <br />\n          0x{data.contractHash}{\" \"}\n          <a\n            target=\"_blank\"\n            href={`https://${\n              network === MAINNET\n                ? \"explorer.onegate.space\"\n                : \"testnet.explorer.onegate.space\"\n            }/NFTtokeninfo/0x${data.contractHash}`}\n          >\n            <FaExternalLinkAlt />\n          </a>\n          <br />\n          <strong>Contract Owner</strong>\n          <br />\n          {data.contractOwner}\n          <br />\n          <Tokens contractHash={data.contractHash} />\n        </div>\n      </div>\n      {connectedWallet &&\n        connectedWallet.account.address === data.contractOwner && (\n          <div className=\"media-right\">\n            <div className=\"block\">\n              <button\n                onClick={() => setMintModalActive(data.contractHash)}\n                className=\"button is-primary press-font\"\n              >\n                Mint\n              </button>\n            </div>\n          </div>\n        )}\n\n      {isMintModalActive && (\n        <NEP11MintFormModal\n          contractHash={isMintModalActive}\n          onClose={() => setMintModalActive(\"\")}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ContractCard;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/NEP11MintFormModal.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/Tokens.tsx",["1026","1027"],"import React, { useEffect, useState } from \"react\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport DisplayNFT from \"./DisplayNFT\";\nimport _ from \"underscore\";\nimport { MAINNET } from \"../../../../../packages/neo/consts\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExternalLinkAlt } from \"react-icons/all\";\nimport { wallet } from \"@cityofzion/neon-core\";\ninterface ITokensProps {\n  contractHash: string;\n}\nconst Tokens = ({ contractHash }: ITokensProps) => {\n  const [tokens, setTokens] = useState<number>(0);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new SmithContract(network).totalSupply(contractHash);\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [contractHash, network]);\n  return (\n    <>\n      <strong>Supply</strong>\n      <br />\n      {isLoading ? (\n        <div>Loading..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          {tokens}\n          {tokens > 0 ? (\n            <>\n              <br />\n              <strong>Showcase</strong>\n              <div className=\"columns is-multiline is-mobile\">\n                {_.range(tokens > 12 ? 12 : tokens).map((i) => {\n                  const tokenId = i + 1;\n                  return (\n                    <div\n                      key={`token${i}`}\n                      className=\"column is-1-desktop is-3-mobile\"\n                    >\n                      <DisplayNFT\n                        network={network}\n                        contractHash={contractHash}\n                        tokenId={tokenId.toString()}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              {tokens > 12 && (\n                <a\n                  className=\"button is-black\"\n                  target=\"_blank\"\n                  href={`https://${\n                    network === MAINNET\n                      ? \"explorer.onegate.space\"\n                      : \"testnet.explorer.onegate.space\"\n                  }/NFTtokeninfo/0x${contractHash}`}\n                >\n                  <span className=\"icon\">\n                    <FaExternalLinkAlt />\n                  </span>\n                  <span>Browse more</span>\n                </a>\n              )}\n            </>\n          ) : (\n            <div></div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Tokens;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Smith/scenes/NEP11/DisplayNFT.tsx",["1028","1029"],"import React, { useEffect, useState } from \"react\";\nimport { SmithContract } from \"../../../../../packages/neo/contracts/ftw/smith\";\nimport { INetworkType } from \"../../../../../packages/neo/network\";\n\ninterface IDisplayRuneProps {\n  contractHash: string;\n  tokenId: string;\n  network: INetworkType;\n}\n\nconst DisplayRune = ({ contractHash, tokenId, network }: IDisplayRuneProps) => {\n  const [token, setToken] = useState<any>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new SmithContract(network).getProperties(\n          contractHash,\n          tokenId\n        );\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return <img width=\"100%\" height=\"100%\" src={token.image} />;\n};\n\nexport default DisplayRune;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/LeaveButton.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/components/BetButton.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Smith/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/packages/ui/AfterTransactionSubmitted/index.tsx",["1030","1031"],"import React, { useEffect, useState } from \"react\";\nimport { INetworkType, Network } from \"../../neo/network\";\nimport RuneLoading from \"./RuneLoading\";\nimport CheckMark from \"../../../ui/pages/Tournament/scenes/Arena/Players/components/CheckMark\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExclamationCircle } from \"react-icons/all\";\nimport { TESTNET } from \"../../neo/consts\";\n\ninterface IAfterTransactionSubmittedProps {\n  txid: string;\n  network: INetworkType;\n  onSuccess: () => void;\n  onError: () => void;\n}\nconst AfterTransactionSubmitted = ({\n  txid,\n  network,\n  onSuccess,\n  onError,\n}: IAfterTransactionSubmittedProps) => {\n  const [isDone, setDone] = useState(false);\n  const [hasError, setError] = useState(\"\");\n\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        const res = await Network.getRawTx(txid, network);\n        if (res) {\n          setDone(true);\n        }\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    checkTxid();\n  }, [txid]);\n\n  return (\n    <div>\n      <div\n        style={{\n          width: \"200px\",\n          height: \"200px\",\n          margin: \"auto\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        className=\"\"\n      >\n        {hasError ? (\n          <FaExclamationCircle size={90} className=\"has-text-danger\" />\n        ) : isDone ? (\n          <CheckMark />\n        ) : (\n          <RuneLoading />\n        )}\n      </div>\n      <div className=\"has-background  has-text-centered mt-5\">\n        {hasError ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Error occurred</h1>\n            <p className=\"subtitle is-7\">{hasError}</p>\n            <button onClick={onError} className=\"button is-black\">\n              Close\n            </button>\n          </div>\n        ) : isDone ? (\n          <div style={{ marginTop: \"-40px\" }}>\n            <h1 className=\"title is-5\">Submitted</h1>\n            <p className=\"subtitle is-7\">Your transaction accepted</p>\n            <div className=\"block\">\n              <a\n                target=\"_blank\"\n                href={`https://${\n                  network === TESTNET ? \"testnet.\" : \"\"\n                }explorer.onegate.space/transactionInfo/${txid}`}\n              >\n                View txid on explorer\n              </a>\n            </div>\n            <div className=\"block\">\n              <button onClick={onSuccess} className=\"button is-black\">\n                Close\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <h1 className=\"title is-5\">Submitting..</h1>\n            <p className=\"subtitle is-7\">\n              Please wait until your transaction accepted\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AfterTransactionSubmitted;\n","/Users/ed/Projects/FTW/client/src/packages/ui/AfterTransactionSubmitted/RuneLoading.tsx",["1032","1033","1034"],"import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\nconst RuneLoading = () => {\n\tconst [colors, setColors] = useState(getColors());\n  const [bg, setBg] = useState(\"black\");\n  const [dot1, setDot1] = useState(\"black\");\n  const [dot2, setDot2] = useState(\"black\");\n  const [dot3, setDot3] = useState(\"black\");\n  const [dot4, setDot4] = useState(\"black\");\n  const [body, setBody] = useState(\"black\");\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setBody(\"white\");\n    }, 1000);\n    timer = setTimeout(() => {\n      setDot1(\"white\");\n    }, 2000);\n    timer = setTimeout(() => {\n      setDot2(\"white\");\n    }, 3000);\n    timer = setTimeout(() => {\n      setDot3(\"white\");\n    }, 4000);\n    timer = setTimeout(() => {\n      setDot4(\"white\");\n    }, 5000);\n    timer = setTimeout(() => {\n      setBg(\"rgb(\" + colors[0] + \",\" + colors[1] + \",\" + colors[2] + \")\");\n    }, 6000);\n    timer = setTimeout(() => {\n      setBody(\"rgb(\" + colors[3] + \",\" + colors[4] + \",\" + colors[5] + \")\");\n    }, 7000);\n    timer = setTimeout(() => {\n      setDot1(\"rgb(\" + colors[6] + \",\" + colors[7] + \",\" + colors[8] + \")\");\n    }, 8000);\n    timer = setTimeout(() => {\n      setDot2(\"rgb(\" + colors[9] + \",\" + colors[10] + \",\" + colors[11] + \")\");\n    }, 9000);\n    timer = setTimeout(() => {\n      setDot3(\"rgb(\" + colors[12] + \",\" + colors[13] + \",\" + colors[14] + \")\");\n    }, 10000);\n    timer = setTimeout(() => {\n      setDot4(\"rgb(\" + colors[15] + \",\" + colors[16] + \",\" + colors[17] + \")\");\n    }, 11000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <img width=\"100%\" height=\"100%\" src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default RuneLoading;\n","/Users/ed/Projects/FTW/client/src/ui/components/RandomRune.tsx",["1035","1036"],"/Users/ed/Projects/FTW/client/src/ui/pages/Tournament/scenes/Arena/Players/components/CheckMark.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/NavSwitch/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/Input/index.tsx",["1037"],"import React from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown, FaQuestionCircle } from \"react-icons/all\";\nimport NumberFormat from \"react-number-format\";\n\ninterface IInputProps {\n  asset?: {\n    symbol: string;\n    logo: string;\n  };\n  val: string;\n  heading?: string;\n  isLoading?: boolean;\n  setValue: (val: string, e: any) => void;\n  onClickAsset: () => void;\n  isReadOnly?: boolean;\n  userBalance?: string;\n}\nconst Input = ({\n  asset,\n  val,\n  heading,\n  setValue,\n  onClickAsset,\n  isLoading,\n  isReadOnly,\n  userBalance,\n}: IInputProps) => {\n  return (\n    <div className=\"\">\n      <div className=\"columns\">\n        <div className=\"column is-narrow\">\n          <div style={{ width: \"150px\" }}>\n            <div\n              className=\"media\"\n              style={{ alignItems: \"center\", display: \"flex\" }}\n            >\n              <div className=\"media-left\">\n                <div\n                  onClick={onClickAsset}\n                  style={{\n                    width: \"50px\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                  className=\"image is-clickable is-flex\"\n                >\n                  {asset ? (\n                    <img src={asset.logo} />\n                  ) : (\n                    <FaQuestionCircle size={35} />\n                  )}\n                </div>\n              </div>\n              <div\n                onClick={onClickAsset}\n                className=\"media-content is-clickable\"\n              >\n                {heading && <p className=\"heading\">{heading}</p>}\n                <div style={{ alignItems: \"center\", display: \"flex\" }}>\n                  <span className=\"has-text-weight-bold\">\n                    {asset ? asset.symbol : \"Select\"}\n                  </span>\n                  <span className=\"icon\">\n                    <FaAngleDown />\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <div className={`control ${isLoading ? \"is-loading\" : \"\"}`}>\n            <NumberFormat\n              readOnly={isReadOnly}\n              // ref={this.props, inputRef}\n              // decimalScale={0}\n              inputMode=\"decimal\"\n              className=\"input\"\n              value={val}\n              onValueChange={(value, e) => {\n                if (e.source === \"event\") {\n                  setValue(value.value, e.event);\n                }\n              }}\n              thousandSeparator={true}\n              suffix={asset ? \" \" + asset.symbol : \"\"}\n              allowLeadingZeros={false}\n              // format={(val) => {} }\n            />\n            {userBalance ? (\n              <div className=\"level\">\n                <div className=\"level-left\">\n                  <small className=\"is-size-7\">\n                    <div className=\"level-item\">Balance</div>\n                  </small>\n                </div>\n\n                <div className=\"level-right\">\n                  <div className=\"level-item\">\n                    <small className=\"is-size-7\">\n                      {userBalance} {asset && asset.symbol}\n                    </small>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Swap/index.tsx",["1038","1039"],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Liquidity/index.tsx",["1040","1041","1042"],"import React, { useEffect, useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport { GAS_SCRIPT_HASH } from \"../../../../../packages/neo/consts\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport AssetListModal from \"../../components/AssetListModal\";\nimport { toast } from \"react-hot-toast\";\nimport { getEstimate } from \"../../../../../packages/neo/contracts/ftw/swap/helpers\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaExchangeAlt } from \"react-icons/all\";\nimport { toDecimal } from \"../../../../../packages/neo/utils\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\n\nconst Liquidity = (props) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [isAssetChangeModalActive, setAssetChangeModalActive] = useState<\n    \"A\" | \"B\" | \"\"\n  >(\"\");\n  const [tokenA, setTokenA] = useState<any>(GAS_SCRIPT_HASH);\n  const [amountA, setAmountA] = useState(\"\");\n  const [tokenB, setTokenB] = useState<any>();\n  const [amountB, setAmountB] = useState(\"\");\n  const [reserve, setReserve] = useState<any>();\n  const [isPairLoading, setPairLoading] = useState(false);\n\n  const onAssetChange = (type: \"A\" | \"B\" | \"\") => {\n    setAssetChangeModalActive(type);\n  };\n  const onAssetClick = (assetHash) => {\n    if (isAssetChangeModalActive === \"A\") {\n      setTokenA(assetHash);\n    } else {\n      setTokenB(assetHash);\n    }\n    setAssetChangeModalActive(\"\");\n  };\n\n  const onAddLiquidity = async () => {\n    if (connectedWallet) {\n      if (tokenA && tokenB && amountA && amountB) {\n        try {\n          const res = await new SwapContract(network).provide(\n            connectedWallet,\n            tokenA,\n            amountA,\n            tokenB,\n            amountB\n          );\n        } catch (e: any) {\n          toast.error(e.description ? e.description : e.message);\n        }\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onTokenAAmountChange = (type: \"A\" | \"B\", val: string) => {\n    if (type === \"A\") {\n      if (tokenB && reserve && reserve[tokenA] !== 0 && reserve[tokenB] !== 0) {\n        const estimated = getEstimate(val, reserve[tokenA], reserve[tokenB]);\n        setAmountB(estimated.toString());\n      }\n      setAmountA(val);\n    } else {\n      if (\n        tokenA &&\n        tokenB &&\n        reserve &&\n        reserve[tokenA] !== 0 &&\n        reserve[tokenB] !== 0\n      ) {\n        const estimated = getEstimate(val, reserve[tokenB], reserve[tokenA]);\n        setAmountA(estimated.toString());\n      }\n      setAmountB(val);\n    }\n  };\n\n  const onSwitch = () => {\n    setTokenB(tokenA);\n    setTokenA(tokenB ? tokenB : \"\");\n    setAmountB(amountA);\n    setAmountA(amountB);\n  };\n\n  useEffect(() => {\n    async function fetchPair(A, B) {\n      try {\n        setPairLoading(true);\n        const res = await new SwapContract(network).getPair(\n          A,\n          B,\n          connectedWallet\n        );\n        setPairLoading(false);\n        setReserve(res);\n        console.log(res);\n        if (\n          tokenA &&\n          tokenB &&\n          amountA &&\n          !amountB &&\n          res[tokenA] !== 0 &&\n          res[tokenB] !== 0\n        ) {\n          // @ts-ignore\n\t        const estimated = getEstimate(amountA, res[tokenA], res[tokenB]);\n          console.log(estimated);\n          setAmountB(estimated.toString());\n        }\n        if (\n          tokenA &&\n          tokenB &&\n          amountB &&\n          !amountA &&\n          res[tokenA] !== 0 &&\n          res[tokenB] !== 0\n        ) {\n          // @ts-ignore\n\t        const estimated = getEstimate(amountB, res[tokenB], res[tokenA]);\n          setAmountA(estimated.toString());\n        }\n      } catch (e: any) {\n        console.log(e);\n        // setError(e.message);\n      }\n    }\n    if (tokenA && tokenB) {\n      fetchPair(tokenA, tokenB);\n    }\n  }, [tokenA, tokenB]);\n\n  // let tokenBofA = 0;\n  // let tokenAofB = 0;\n  //\n  // if (tokenA && tokenB && amountA && amountB && pairInfo) {\n  //   const reservedA = pairInfo[tokenA];\n  //   const reservedB = pairInfo[tokenB];\n  //   tokenBofA =\n  //     (parseFloat(\"100000000\") * parseFloat(reservedB)) / parseFloat(reservedA);\n  //   tokenBofA = Math.floor(tokenBofA);\n  //   tokenBofA = toDecimal(tokenBofA.toString());\n  //\n  //   tokenAofB =\n  //     (parseFloat(\"100000000\") * parseFloat(reservedA)) / parseFloat(reservedB);\n  //   tokenAofB = Math.floor(tokenAofB);\n  //   tokenAofB = toDecimal(tokenAofB.toString());\n  // }\n  const noLiquidity = reserve && reserve[tokenA] === 0 && reserve[tokenB] === 0;\n  return (\n    <>\n      {noLiquidity && (\n        <div className=\"notification is-info\">\n          <strong>Liquidity Provider Rewards</strong>\n          <br />\n          Liquidity providers earn a 0.25% fee on all trades proportional to\n          their share of the pool. Fees are added to the pool, accrue in real\n          time and can be claimed by withdrawing your liquidity.\n        </div>\n      )}\n      <div className=\"is-relative\">\n        <Input\n          heading=\"Pair A\"\n          onClickAsset={() => onAssetChange(\"A\")}\n          asset={tokenA ? ASSET_LIST[network][tokenA] : undefined}\n          val={amountA}\n          setValue={(val, e) => onTokenAAmountChange(\"A\", val)}\n          userBalance={reserve ? reserve.balances[tokenA] : undefined}\n        />\n\n        <div className=\"pt-3 pb-3\">\n          <button onClick={onSwitch} className=\"button is-white\">\n            <FaExchangeAlt />\n          </button>\n        </div>\n\n        <Input\n          heading=\"Pair B\"\n          // isReadOnly={\n          //   pairInfo &&\n          //   tokenB &&\n          //   pairInfo[tokenA] !== \"0\" &&\n          //   pairInfo[tokenB] !== \"0\"\n          // }\n          isLoading={isPairLoading}\n          onClickAsset={() => onAssetChange(\"B\")}\n          asset={tokenB ? ASSET_LIST[network][tokenB] : undefined}\n          val={amountB}\n          setValue={(val, e) => onTokenAAmountChange(\"B\", val)}\n          userBalance={reserve && tokenB ? reserve.balances[tokenB] : undefined}\n        />\n\n        {connectedWallet ? (\n          tokenA && tokenB && amountA && amountB ? (\n            <>\n              <hr />\n              {/*<div className=\"box\">*/}\n              {/*  {`${tokenBofA} ${ASSET_LIST[tokenB].symbol} per ${ASSET_LIST[tokenA].symbol}`}*/}\n              {/*  <br />*/}\n              {/*  {`${tokenAofB} ${ASSET_LIST[tokenA].symbol} per ${ASSET_LIST[tokenB].symbol}`}*/}\n              {/*</div>*/}\n              <button\n                disabled={\n                  reserve.balances[tokenA] < parseFloat(amountA) ||\n                  reserve.balances[tokenB] < parseFloat(amountB)\n                }\n                onClick={onAddLiquidity}\n                className=\"button is-fullwidth is-primary\"\n              >\n                Add Liquidity\n              </button>\n            </>\n          ) : (\n            <div />\n          )\n        ) : (\n          <>\n            <hr />\n            <button\n              onClick={openWalletModal}\n              className=\"button is-fullwidth is-primary\"\n            >\n              Connect wallet\n            </button>\n          </>\n        )}\n\n        {isAssetChangeModalActive && (\n          <AssetListModal\n            tokenA={tokenA}\n            tokenB={tokenB}\n            onAssetClick={onAssetClick}\n            onClose={() => setAssetChangeModalActive(\"\")}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Liquidity;\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/swap/index.ts",["1043"],"import { INetworkType, Network } from \"../../../network\";\nimport { IConnectedWallet } from \"../../../wallet/interfaces\";\nimport { wallet } from \"../../../index\";\nimport { SWAP_SCRIPT_HASH } from \"./consts\";\nimport { base64ToHash160, toDecimal } from \"../../../utils\";\nimport { u } from \"@cityofzion/neon-core\";\nimport { parsePair, parseUserStake } from \"./helpers\";\n\nexport class SwapContract {\n  network: INetworkType;\n  contractHash: string;\n\n  constructor(networkType: INetworkType) {\n    this.network = networkType;\n    this.contractHash = SWAP_SCRIPT_HASH[networkType];\n  }\n\n  provide = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    amountA: string,\n    tokenB: string,\n    amountB: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"addPair\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountA, 8).toString(),\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountB, 8).toString(),\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      undefined,\n      undefined,\n      true\n    );\n  };\n\n  remove = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"removeLiquidity\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      undefined,\n      undefined,\n      true\n    );\n  };\n\n  claim = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"claim\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      undefined,\n      undefined,\n      true\n    );\n  };\n\n  swap = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    amountA: string,\n    tokenB: string,\n    amountB: string\n  ): Promise<string> => {\n    const invokeScript = {\n      operation: \"swap\",\n      scriptHash: this.contractHash,\n      args: [\n        {\n          type: \"Address\",\n          value: connectedWallet.account.address,\n        },\n        {\n          type: \"Hash160\",\n          value: tokenA,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountA, 8).toString(),\n        },\n        {\n          type: \"Hash160\",\n          value: tokenB,\n        },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amountB, 8).toString(),\n        },\n      ],\n    };\n    return new wallet.WalletAPI(connectedWallet.key).invoke(\n      this.network,\n      connectedWallet.account.address,\n      invokeScript,\n      undefined,\n      undefined,\n      true\n    );\n  };\n\n  getPair = async (\n    tokenA: string,\n    tokenB: string,\n    connectedWallet?: IConnectedWallet\n  ) => {\n    const scripts: any = [];\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPair\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    scripts.push(script);\n    if (connectedWallet) {\n      const script1 = {\n        scriptHash: tokenA,\n        operation: \"balanceOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      };\n      const script2 = {\n        scriptHash: tokenB,\n        operation: \"balanceOf\",\n        args: [{ type: \"Address\", value: connectedWallet.account.address }],\n      };\n      scripts.push(script1);\n      scripts.push(script2);\n    }\n    const res = await Network.read(this.network, scripts);\n    const pair = parsePair(res.stack[0]);\n    const obj = {\n      reserve: pair,\n      [pair.tokenA]: pair.amountA,\n      [pair.tokenB]: pair.amountB,\n      balances: {\n        [tokenA]: 0,\n        [tokenB]: 0,\n      },\n    };\n    if (connectedWallet) {\n      obj.balances[tokenA] = toDecimal(res.stack[1].value as string);\n      obj.balances[tokenB] = toDecimal(res.stack[2].value as string);\n    }\n    return obj;\n  };\n\n  getPairs = async () => {\n    const scripts: any = [];\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getPairs\",\n      args: [],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      // @ts-ignore\n      return res.stack[0].iterator.map((item) => {\n        const tokenA = base64ToHash160(item.value[0].value as string);\n        const tokenB = base64ToHash160(item.value[1].value as string);\n        const amountA = item.value[2].value;\n        const amountB = item.value[3].value;\n        return {\n          tokenA,\n          tokenB,\n          amountA: toDecimal(amountA),\n          amountB: toDecimal(amountB),\n        };\n      });\n    } catch (e) {\n      // tslint:disable-next-line:no-console\n      return [];\n    }\n  };\n\n  getEstimate = async (tokenA, tokenB, swapToken, amount) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getEstimate\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n        { type: \"Hash160\", value: swapToken },\n        {\n          type: \"Integer\",\n          value: u.BigInteger.fromDecimal(amount, 8).toString(),\n        },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      // @ts-ignore\n      return toDecimal(res.stack[0].value);\n    } catch (e) {\n      return undefined;\n    }\n  };\n\n  getUserStake = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getUserStake\",\n      args: [\n        { type: \"Address\", value: connectedWallet.account.address },\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    const script1 = {\n      scriptHash: this.contractHash,\n      operation: \"getPair\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script, script1], true);\n      return {\n        stake: parseUserStake(res.stack[0]),\n        pair: parsePair(res.stack[1]),\n      };\n    } catch (e) {\n      // tslint:disable-next-line:no-console\n      return undefined;\n    }\n  };\n\n  getClaimAble = async (\n    connectedWallet: IConnectedWallet,\n    tokenA: string,\n    tokenB: string\n  ) => {\n    const script = {\n      scriptHash: this.contractHash,\n      operation: \"getClaimableFee\",\n      args: [\n        { type: \"Hash160\", value: tokenA },\n        { type: \"Hash160\", value: tokenB },\n        { type: \"Address\", value: connectedWallet.account.address },\n      ],\n    };\n    try {\n      const res = await Network.read(this.network, [script], true);\n      return parseUserStake(res.stack[0]);\n    } catch (e) {\n    \tconsole.log(e)\n      // tslint:disable-next-line:no-console\n      return undefined;\n    }\n  };\n}\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/swap/consts.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/components/AssetListModal/index.tsx",["1044","1045","1046","1047"],"import React from \"react\";\nimport Modal from \"../../../../components/Modal\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport {\n  ASSET_LIST,\n  ASSETS,\n} from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\ninterface IAssetListModalProps {\n  tokenA?: string;\n  tokenB?: string;\n  onClose: () => void;\n  onAssetClick: (assetHash: string) => void;\n}\nconst AssetListModal = ({\n  tokenA,\n  tokenB,\n  onAssetClick,\n  onClose,\n}: IAssetListModalProps) => {\n  const { connectedWallet, network } = useWallet();\n  const assets = ASSETS(network).filter((asset) => {\n    return asset.contractHash !== tokenA && asset.contractHash !== tokenB;\n  });\n  return (\n    <Modal onClose={onClose}>\n      <div>\n        <h5 className=\"title is-6\">Select a token</h5>\n        <nav className=\"panel\">\n          {/*<div className=\"panel-block\">*/}\n          {/*  <p className=\"control has-icons-left\">*/}\n          {/*    <input className=\"input\" type=\"text\" placeholder=\"Search\" />*/}\n          {/*    <span className=\"icon is-left\">*/}\n          {/*      <i className=\"fas fa-search\" aria-hidden=\"true\"></i>*/}\n          {/*    </span>*/}\n          {/*  </p>*/}\n          {/*</div>*/}\n\n          {assets.length > 0 ? (\n            assets.map(({ contractHash, logo, symbol }) => {\n              return (\n                <a\n                  onClick={() => onAssetClick(contractHash)}\n                  className=\"panel-block\"\n                  key={contractHash}\n                >\n                  <div className=\"panel-icon\">\n                    <img src={logo} />\n                  </div>\n                  {symbol}\n                </a>\n              );\n            })\n          ) : (\n            <div className=\"panel-block\">No available token to pick</div>\n          )}\n        </nav>\n      </div>\n    </Modal>\n  );\n};\n\nexport default AssetListModal;\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/swap/helpers.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Farm/index.tsx",["1048","1049","1050","1051","1052","1053","1054","1055"],"import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../packages/provider\";\nimport { GAS_SCRIPT_HASH } from \"../../../../../packages/neo/consts\";\nimport { SwapContract } from \"../../../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport { getEstimate } from \"../../../../../packages/neo/contracts/ftw/swap/helpers\";\nimport { toDecimal } from \"../../../../../packages/neo/utils\";\nimport Input from \"../../components/Input\";\nimport AssetListModal from \"../../components/AssetListModal\";\nimport Modal from \"../../../../components/Modal\";\nimport FarmDetail from \"./scenes/Detail\";\nimport { ASSET_LIST } from \"../../../../../packages/neo/contracts/ftw/swap/consts\";\n\nconst Farm = (props) => {\n  const { network, connectedWallet } = useWallet();\n  const [list, setList] = useState<any[]>([]);\n  const [detail, setDetail] = useState();\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      try {\n        const res = await new SwapContract(network).getPairs();\n        console.log(res);\n        setLoading(false);\n        setList(res);\n      } catch (e: any) {\n        setLoading(false);\n        setError(e.message);\n      }\n    }\n    fetch();\n  }, []);\n  if (isLoading) return <div>Loading pairs..</div>;\n  return (\n    <div>\n      {list.map((item, i) => {\n        return (\n          <div\n            style={{ alignItems: \"center\" }}\n            className=\"media\"\n            key={\"pairs\" + i}\n          >\n            <div className=\"media-left\">\n              <strong>TVL</strong>\n            </div>\n            <div className=\"media-content is-vcentered\">\n              {ASSET_LIST[network][item.tokenA].symbol} /{\" \"}\n              {ASSET_LIST[network][item.tokenB].symbol}\n              <br />\n              <small>\n                {item.amountA} / {item.amountB}\n              </small>\n            </div>\n            <div className=\"media-right\">\n              <button\n                onClick={() => setDetail(item)}\n                className=\"button is-light\"\n              >\n                Detail\n              </button>\n            </div>\n          </div>\n        );\n      })}\n      {detail && connectedWallet && (\n        <Modal onClose={() => setDetail(undefined)}>\n          <div>\n            <FarmDetail connectedWallet={connectedWallet} {...detail} />\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Farm;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Swap/scenes/Farm/scenes/Detail/index.tsx",["1056","1057","1058","1059","1060"],"import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../../../../../../packages/provider\";\nimport { SwapContract } from \"../../../../../../../packages/neo/contracts\";\nimport { IConnectedWallet } from \"../../../../../../../packages/neo/wallet/interfaces\";\nimport { toast } from \"react-hot-toast\";\nimport { getUserShare } from \"../../../../../../../packages/neo/contracts/ftw/swap/helpers\";\nimport { ASSET_LIST } from \"../../../../../../../packages/neo/contracts/ftw/swap/consts\";\ninterface IFarmDetailProps {\n  tokenA: string;\n  tokenB: string;\n  amountA: string;\n  amountB: string;\n  connectedWallet: IConnectedWallet;\n}\nconst FarmDetail = ({ connectedWallet, tokenA, tokenB }: IFarmDetailProps) => {\n  const [data, setData] = useState<any>();\n  const [claimable, setClaimable] = useState<any>();\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const { network } = useWallet();\n\n  const onRemoveLiquidity = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SwapContract(network).remove(\n          connectedWallet,\n          tokenA,\n          tokenB\n        );\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  const onClaim = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new SwapContract(network).claim(\n          connectedWallet,\n          tokenA,\n          tokenB\n        );\n      } catch (e: any) {\n        toast.error(e.description ? e.description : e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      const res1 = await new SwapContract(network).getUserStake(\n        connectedWallet,\n        tokenA,\n        tokenB\n      );\n      const res2 = await new SwapContract(network).getClaimAble(\n        connectedWallet,\n        tokenA,\n        tokenB\n      );\n      setLoading(false);\n      setData(res1);\n      setClaimable(res2);\n    }\n    fetch();\n  }, []);\n  if (isLoading) return <div>Loading..</div>;\n  const userShare = data\n    ? getUserShare(\n        data.pair.totalShare,\n        data.stake.amountA,\n        data.pair.amountA,\n        data.pair.amountB\n      )\n    : undefined;\n  console.log(data ? \"original staking: \" + data.stake.amountA + \"/\" + data.stake.amountB : \"No staking info\");\n  return (\n    <div>\n      <h1 className=\"title is-5\">My liquidity</h1>\n      {data ? (\n        <div>\n          <div style={{ alignItems: \"center\" }} className=\"media\">\n            <div className=\"media-content is-vcentered\">\n              {ASSET_LIST[network][tokenA].symbol} /{\" \"}\n              {ASSET_LIST[network][tokenB].symbol}\n              <br />\n              <small>\n                {/*{data.stake.amountA} / {data.stake.amountB}*/}\n                {/*<br />*/}\n                {userShare ? userShare.amountA : 0} /{\" \"}\n                {userShare ? userShare.amountB : 0}\n              </small>\n            </div>\n            <div className=\"media-right\">\n              <button onClick={onRemoveLiquidity} className=\"button is-light\">\n                Remove\n              </button>\n            </div>\n          </div>\n          <hr />\n          <div style={{ alignItems: \"center\" }} className=\"media\">\n            <div className=\"media-content is-vcentered\">\n              Claimable\n              <br />\n              {ASSET_LIST[network][tokenA].symbol} /{\" \"}\n              {ASSET_LIST[network][tokenB].symbol}\n              <br />\n              <small>\n                {claimable ? claimable.amountA : 0} /{\" \"}\n                {claimable ? claimable.amountB : 0}\n              </small>\n            </div>\n            <div className=\"media-right\">\n              <button onClick={onClaim} className=\"button is-primary\">\n                Claim\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>There is no liquidity with your connected wallet</div>\n      )}\n    </div>\n  );\n};\n\nexport default FarmDetail;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/index.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/FusionBox.tsx",["1061"],"import React from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaQuestionCircle } from \"react-icons/all\";\ninterface IFusionBoxProps {\n  src: string;\n}\nconst FusionBox = ({ src }: IFusionBoxProps) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n\t      height: \"300px\"\n      }}\n      className=\"is-clickable\"\n    >\n      {src ? <img src={src} /> : <FaQuestionCircle />}\n    </div>\n  );\n};\n\nexport default FusionBox;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/RuneListModal.tsx",["1062"],"import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../../components/Modal\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../packages/provider\";\n\ninterface INFTListModalModal {\n  onClick: (data: any) => void;\n  onClose: () => void;\n}\nconst RuneListModal = ({ onClick, onClose }: INFTListModalModal) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <div>\n          <div className=\"block\">\n            <h5 className=\"title is-5\">Select a Rune</h5>\n          </div>\n          <div>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : error ? (\n              <div>{error}</div>\n            ) : tokens.length > 0 ? (\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => onClick(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n            ) : (\n              <div>You don't have runes</div>\n            )}\n          </div>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default RuneListModal;\n","/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/CryptonatuListModal.tsx",["1063","1064","1065","1066","1067"],"import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { TournamentContract } from \"../../../../packages/neo/contracts/ftw/tournament\";\nimport AfterTransactionSubmitted from \"../../../../packages/ui/AfterTransactionSubmitted\";\nimport Modal from \"../../../components/Modal\";\nimport { NFTContract } from \"../../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../../packages/provider\";\nimport { TTMNFTContract } from \"../../../../packages/neo/contracts/ttm/nft\";\n\ninterface INFTListModalModal {\n  onClick: (data: any) => void;\n  onClose: () => void;\n}\nconst CryptonatuListModal = ({ onClick, onClose }: INFTListModalModal) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { connectedWallet, network } = useWallet();\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new TTMNFTContract(network).getTokensOf(\n          connectedWallet?.account.address\n        );\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus();\n    }\n  }, [connectedWallet, network]);\n\n  return (\n    <Modal onClose={onClose}>\n      <>\n        <div>\n          <div className=\"block\">\n            <h5 className=\"title is-5\">Select a Cryptonaut</h5>\n          </div>\n          <div>\n            {isLoading ? (\n              <div>Loading..</div>\n            ) : error ? (\n              <div>{error}</div>\n            ) : tokens.length > 0 ? (\n              <div\n                style={{\n                  flexFlow: \"wrap\",\n                }}\n                className=\"is-flex\"\n              >\n                {tokens.map((token) => {\n                  return (\n                    <figure\n                      key={token.tokenId}\n                      // style={{ width, height }}\n                      className=\"image is-64x64\"\n                      onClick={() => onClick(token)}\n                    >\n                      <img src={token.image} />\n                    </figure>\n                  );\n                })}\n              </div>\n            ) : (\n              <div>You don't have runes</div>\n            )}\n          </div>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default CryptonatuListModal;\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ttm/nft/index.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ttm/nft/helpers.ts",["1068"],"import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  stackItem.value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value;\n    switch (key) {\n      case \"owner\":\n        value = base64ToAddress(item.value.value);\n        break;\n      case \"attributes\":\n        value = parseProperties(item.value);\n        break;\n      default:\n        if (item.value.type === \"Integer\") {\n          value = item.value.value;\n        } else {\n          value = base64ToString(item.value.value);\n        }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ttm/nft/consts.ts",[],"/Users/ed/Projects/FTW/client/src/packages/neo/contracts/ftw/fuse/index.ts",[],"/Users/ed/Projects/FTW/client/src/ui/pages/Fusion/components/FusedList.tsx",["1069","1070"],"/Users/ed/Projects/FTW/client/src/ui/pages/Migration/index.tsx",["1071","1072","1073","1074"],"/Users/ed/Projects/FTW/client/src/ui/components/ReactGa.tsx",[],"/Users/ed/Projects/FTW/client/src/ui/components/BgContainer.tsx",[],{"ruleId":"1075","replacedBy":"1076"},{"ruleId":"1077","replacedBy":"1078"},{"ruleId":"1079","severity":1,"message":"1080","line":71,"column":21,"nodeType":"1081","endLine":71,"endColumn":69},{"ruleId":"1082","severity":1,"message":"1083","line":87,"column":15,"nodeType":"1081","endLine":87,"endColumn":75},{"ruleId":"1084","severity":1,"message":"1085","line":5,"column":8,"nodeType":"1086","messageId":"1087","endLine":5,"endColumn":25},{"ruleId":"1088","severity":1,"message":"1089","line":45,"column":19,"nodeType":"1081","messageId":"1090","endLine":49,"endColumn":20,"fix":"1091"},{"ruleId":"1088","severity":1,"message":"1089","line":82,"column":19,"nodeType":"1081","messageId":"1090","endLine":86,"endColumn":20,"fix":"1092"},{"ruleId":"1088","severity":1,"message":"1089","line":101,"column":19,"nodeType":"1081","messageId":"1090","endLine":105,"endColumn":20,"fix":"1093"},{"ruleId":"1088","severity":1,"message":"1089","line":113,"column":19,"nodeType":"1081","messageId":"1090","endLine":117,"endColumn":20,"fix":"1094"},{"ruleId":"1095","severity":1,"message":"1096","line":50,"column":6,"nodeType":"1097","endLine":50,"endColumn":30,"suggestions":"1098"},{"ruleId":"1082","severity":1,"message":"1083","line":63,"column":19,"nodeType":"1081","endLine":63,"endColumn":55},{"ruleId":"1082","severity":1,"message":"1083","line":67,"column":21,"nodeType":"1081","endLine":67,"endColumn":59},{"ruleId":"1082","severity":1,"message":"1083","line":71,"column":19,"nodeType":"1081","endLine":71,"endColumn":60},{"ruleId":"1082","severity":1,"message":"1083","line":74,"column":19,"nodeType":"1081","endLine":74,"endColumn":56},{"ruleId":"1079","severity":1,"message":"1080","line":82,"column":15,"nodeType":"1081","endLine":82,"endColumn":40},{"ruleId":"1084","severity":1,"message":"1099","line":4,"column":10,"nodeType":"1086","messageId":"1087","endLine":4,"endColumn":22},{"ruleId":"1084","severity":1,"message":"1100","line":4,"column":30,"nodeType":"1086","messageId":"1087","endLine":4,"endColumn":40},{"ruleId":"1095","severity":1,"message":"1101","line":30,"column":6,"nodeType":"1097","endLine":30,"endColumn":8,"suggestions":"1102"},{"ruleId":"1079","severity":1,"message":"1080","line":33,"column":5,"nodeType":"1081","endLine":33,"endColumn":77},{"ruleId":"1084","severity":1,"message":"1103","line":14,"column":10,"nodeType":"1086","messageId":"1087","endLine":14,"endColumn":14},{"ruleId":"1084","severity":1,"message":"1104","line":3,"column":8,"nodeType":"1086","messageId":"1087","endLine":3,"endColumn":25},{"ruleId":"1095","severity":1,"message":"1105","line":31,"column":6,"nodeType":"1097","endLine":31,"endColumn":15,"suggestions":"1106"},{"ruleId":"1079","severity":1,"message":"1080","line":47,"column":13,"nodeType":"1081","endLine":47,"endColumn":37},{"ruleId":"1084","severity":1,"message":"1107","line":3,"column":10,"nodeType":"1086","messageId":"1087","endLine":3,"endColumn":19},{"ruleId":"1095","severity":1,"message":"1096","line":33,"column":6,"nodeType":"1097","endLine":33,"endColumn":15,"suggestions":"1108"},{"ruleId":"1079","severity":1,"message":"1080","line":41,"column":7,"nodeType":"1081","endLine":41,"endColumn":32},{"ruleId":"1075","replacedBy":"1109"},{"ruleId":"1077","replacedBy":"1110"},{"ruleId":"1084","severity":1,"message":"1111","line":1,"column":17,"nodeType":"1086","messageId":"1087","endLine":1,"endColumn":26},{"ruleId":"1084","severity":1,"message":"1112","line":8,"column":10,"nodeType":"1086","messageId":"1087","endLine":8,"endColumn":17},{"ruleId":"1084","severity":1,"message":"1113","line":13,"column":17,"nodeType":"1086","messageId":"1087","endLine":13,"endColumn":20},{"ruleId":"1095","severity":1,"message":"1114","line":24,"column":6,"nodeType":"1097","endLine":24,"endColumn":27,"suggestions":"1115"},{"ruleId":"1116","severity":1,"message":"1117","line":102,"column":26,"nodeType":"1118","messageId":"1119","endLine":102,"endColumn":28},{"ruleId":"1082","severity":1,"message":"1083","line":18,"column":13,"nodeType":"1081","endLine":22,"endColumn":14},{"ruleId":"1079","severity":1,"message":"1080","line":34,"column":13,"nodeType":"1081","endLine":34,"endColumn":61},{"ruleId":"1082","severity":1,"message":"1120","line":47,"column":11,"nodeType":"1081","endLine":51,"endColumn":12},{"ruleId":"1116","severity":1,"message":"1117","line":220,"column":28,"nodeType":"1118","messageId":"1119","endLine":220,"endColumn":30},{"ruleId":"1084","severity":1,"message":"1121","line":2,"column":40,"nodeType":"1086","messageId":"1087","endLine":2,"endColumn":54},{"ruleId":"1116","severity":1,"message":"1117","line":8,"column":33,"nodeType":"1118","messageId":"1119","endLine":8,"endColumn":35},{"ruleId":"1095","severity":1,"message":"1122","line":84,"column":6,"nodeType":"1097","endLine":84,"endColumn":8,"suggestions":"1123"},{"ruleId":"1079","severity":1,"message":"1080","line":101,"column":17,"nodeType":"1081","endLine":101,"endColumn":65},{"ruleId":"1082","severity":1,"message":"1083","line":117,"column":11,"nodeType":"1081","endLine":117,"endColumn":73},{"ruleId":"1084","severity":1,"message":"1124","line":5,"column":8,"nodeType":"1086","messageId":"1087","endLine":5,"endColumn":13},{"ruleId":"1084","severity":1,"message":"1125","line":6,"column":8,"nodeType":"1086","messageId":"1087","endLine":6,"endColumn":19},{"ruleId":"1084","severity":1,"message":"1085","line":7,"column":8,"nodeType":"1086","messageId":"1087","endLine":7,"endColumn":25},{"ruleId":"1084","severity":1,"message":"1126","line":14,"column":10,"nodeType":"1086","messageId":"1087","endLine":14,"endColumn":16},{"ruleId":"1084","severity":1,"message":"1127","line":15,"column":10,"nodeType":"1086","messageId":"1087","endLine":15,"endColumn":15},{"ruleId":"1095","severity":1,"message":"1096","line":35,"column":6,"nodeType":"1097","endLine":35,"endColumn":23,"suggestions":"1128"},{"ruleId":"1079","severity":1,"message":"1080","line":57,"column":21,"nodeType":"1081","endLine":57,"endColumn":46},{"ruleId":"1084","severity":1,"message":"1111","line":1,"column":17,"nodeType":"1086","messageId":"1087","endLine":1,"endColumn":26},{"ruleId":"1082","severity":1,"message":"1083","line":32,"column":13,"nodeType":"1081","endLine":32,"endColumn":46},{"ruleId":"1084","severity":1,"message":"1129","line":4,"column":3,"nodeType":"1086","messageId":"1087","endLine":4,"endColumn":20},{"ruleId":"1084","severity":1,"message":"1130","line":8,"column":10,"nodeType":"1086","messageId":"1087","endLine":8,"endColumn":11},{"ruleId":"1084","severity":1,"message":"1107","line":3,"column":10,"nodeType":"1086","messageId":"1087","endLine":3,"endColumn":19},{"ruleId":"1095","severity":1,"message":"1096","line":33,"column":6,"nodeType":"1097","endLine":33,"endColumn":15,"suggestions":"1131"},{"ruleId":"1079","severity":1,"message":"1080","line":41,"column":7,"nodeType":"1081","endLine":41,"endColumn":32},{"ruleId":"1084","severity":1,"message":"1132","line":2,"column":10,"nodeType":"1086","messageId":"1087","endLine":2,"endColumn":14},{"ruleId":"1084","severity":1,"message":"1133","line":2,"column":16,"nodeType":"1086","messageId":"1087","endLine":2,"endColumn":27},{"ruleId":"1075","replacedBy":"1134"},{"ruleId":"1077","replacedBy":"1135"},{"ruleId":"1079","severity":1,"message":"1080","line":72,"column":21,"nodeType":"1081","endLine":72,"endColumn":69},{"ruleId":"1082","severity":1,"message":"1083","line":88,"column":15,"nodeType":"1081","endLine":88,"endColumn":75},{"ruleId":"1088","severity":1,"message":"1089","line":114,"column":13,"nodeType":"1081","messageId":"1090","endLine":118,"endColumn":14,"fix":"1136"},{"ruleId":"1088","severity":1,"message":"1089","line":121,"column":13,"nodeType":"1081","messageId":"1090","endLine":125,"endColumn":14,"fix":"1137"},{"ruleId":"1088","severity":1,"message":"1089","line":128,"column":13,"nodeType":"1081","messageId":"1090","endLine":132,"endColumn":14,"fix":"1138"},{"ruleId":"1084","severity":1,"message":"1139","line":8,"column":10,"nodeType":"1086","messageId":"1087","endLine":8,"endColumn":17},{"ruleId":"1095","severity":1,"message":"1096","line":50,"column":6,"nodeType":"1097","endLine":50,"endColumn":30,"suggestions":"1140"},{"ruleId":"1082","severity":1,"message":"1083","line":63,"column":19,"nodeType":"1081","endLine":63,"endColumn":55},{"ruleId":"1082","severity":1,"message":"1083","line":67,"column":21,"nodeType":"1081","endLine":67,"endColumn":59},{"ruleId":"1082","severity":1,"message":"1083","line":71,"column":19,"nodeType":"1081","endLine":71,"endColumn":60},{"ruleId":"1082","severity":1,"message":"1083","line":74,"column":19,"nodeType":"1081","endLine":74,"endColumn":56},{"ruleId":"1079","severity":1,"message":"1080","line":57,"column":21,"nodeType":"1081","endLine":57,"endColumn":46},{"ruleId":"1079","severity":1,"message":"1080","line":88,"column":15,"nodeType":"1081","endLine":88,"endColumn":40},{"ruleId":"1095","severity":1,"message":"1122","line":84,"column":6,"nodeType":"1097","endLine":84,"endColumn":8,"suggestions":"1141"},{"ruleId":"1079","severity":1,"message":"1080","line":101,"column":17,"nodeType":"1081","endLine":101,"endColumn":65},{"ruleId":"1082","severity":1,"message":"1083","line":117,"column":11,"nodeType":"1081","endLine":117,"endColumn":73},{"ruleId":"1082","severity":1,"message":"1083","line":43,"column":17,"nodeType":"1081","endLine":43,"endColumn":59},{"ruleId":"1084","severity":1,"message":"1103","line":14,"column":10,"nodeType":"1086","messageId":"1087","endLine":14,"endColumn":14},{"ruleId":"1084","severity":1,"message":"1104","line":3,"column":8,"nodeType":"1086","messageId":"1087","endLine":3,"endColumn":25},{"ruleId":"1095","severity":1,"message":"1105","line":31,"column":6,"nodeType":"1097","endLine":31,"endColumn":15,"suggestions":"1142"},{"ruleId":"1079","severity":1,"message":"1080","line":47,"column":13,"nodeType":"1081","endLine":47,"endColumn":37},{"ruleId":"1084","severity":1,"message":"1113","line":17,"column":17,"nodeType":"1086","messageId":"1087","endLine":17,"endColumn":20},{"ruleId":"1095","severity":1,"message":"1114","line":29,"column":6,"nodeType":"1097","endLine":29,"endColumn":27,"suggestions":"1143"},{"ruleId":"1075","replacedBy":"1144"},{"ruleId":"1077","replacedBy":"1145"},{"ruleId":"1084","severity":1,"message":"1127","line":21,"column":10,"nodeType":"1086","messageId":"1087","endLine":21,"endColumn":15},{"ruleId":"1095","severity":1,"message":"1146","line":39,"column":6,"nodeType":"1097","endLine":39,"endColumn":34,"suggestions":"1147"},{"ruleId":"1095","severity":1,"message":"1148","line":68,"column":10,"nodeType":"1097","endLine":68,"endColumn":29,"suggestions":"1149"},{"ruleId":"1082","severity":1,"message":"1083","line":18,"column":13,"nodeType":"1081","endLine":22,"endColumn":14},{"ruleId":"1084","severity":1,"message":"1126","line":11,"column":10,"nodeType":"1086","messageId":"1087","endLine":11,"endColumn":16},{"ruleId":"1084","severity":1,"message":"1127","line":12,"column":10,"nodeType":"1086","messageId":"1087","endLine":12,"endColumn":15},{"ruleId":"1095","severity":1,"message":"1096","line":32,"column":6,"nodeType":"1097","endLine":32,"endColumn":23,"suggestions":"1150"},{"ruleId":"1075","replacedBy":"1151"},{"ruleId":"1077","replacedBy":"1152"},{"ruleId":"1079","severity":1,"message":"1080","line":34,"column":13,"nodeType":"1081","endLine":34,"endColumn":61},{"ruleId":"1082","severity":1,"message":"1120","line":47,"column":11,"nodeType":"1081","endLine":51,"endColumn":12},{"ruleId":"1084","severity":1,"message":"1153","line":16,"column":3,"nodeType":"1086","messageId":"1087","endLine":16,"endColumn":26},{"ruleId":"1116","severity":1,"message":"1117","line":117,"column":26,"nodeType":"1118","messageId":"1119","endLine":117,"endColumn":28},{"ruleId":"1116","severity":1,"message":"1117","line":63,"column":33,"nodeType":"1118","messageId":"1119","endLine":63,"endColumn":35},{"ruleId":"1116","severity":1,"message":"1117","line":228,"column":28,"nodeType":"1118","messageId":"1119","endLine":228,"endColumn":30},{"ruleId":"1116","severity":1,"message":"1117","line":8,"column":33,"nodeType":"1118","messageId":"1119","endLine":8,"endColumn":35},{"ruleId":"1084","severity":1,"message":"1121","line":2,"column":40,"nodeType":"1086","messageId":"1087","endLine":2,"endColumn":54},{"ruleId":"1095","severity":1,"message":"1146","line":43,"column":6,"nodeType":"1097","endLine":43,"endColumn":38,"suggestions":"1154"},{"ruleId":"1084","severity":1,"message":"1155","line":30,"column":10,"nodeType":"1086","messageId":"1087","endLine":30,"endColumn":19},{"ruleId":"1084","severity":1,"message":"1127","line":31,"column":10,"nodeType":"1086","messageId":"1087","endLine":31,"endColumn":15},{"ruleId":"1095","severity":1,"message":"1156","line":53,"column":6,"nodeType":"1097","endLine":53,"endColumn":23,"suggestions":"1157"},{"ruleId":"1079","severity":1,"message":"1080","line":68,"column":17,"nodeType":"1081","endLine":68,"endColumn":43},{"ruleId":"1079","severity":1,"message":"1080","line":92,"column":25,"nodeType":"1081","endLine":92,"endColumn":50},{"ruleId":"1084","severity":1,"message":"1158","line":5,"column":10,"nodeType":"1086","messageId":"1087","endLine":5,"endColumn":33},{"ruleId":"1079","severity":1,"message":"1080","line":14,"column":11,"nodeType":"1081","endLine":14,"endColumn":35},{"ruleId":"1095","severity":1,"message":"1096","line":45,"column":6,"nodeType":"1097","endLine":45,"endColumn":15,"suggestions":"1159"},{"ruleId":"1079","severity":1,"message":"1080","line":56,"column":11,"nodeType":"1081","endLine":56,"endColumn":36},{"ruleId":"1095","severity":1,"message":"1096","line":39,"column":6,"nodeType":"1097","endLine":39,"endColumn":15,"suggestions":"1160"},{"ruleId":"1079","severity":1,"message":"1080","line":47,"column":7,"nodeType":"1081","endLine":47,"endColumn":32},{"ruleId":"1095","severity":1,"message":"1146","line":59,"column":6,"nodeType":"1097","endLine":59,"endColumn":41,"suggestions":"1161"},{"ruleId":"1084","severity":1,"message":"1162","line":2,"column":22,"nodeType":"1086","messageId":"1087","endLine":2,"endColumn":37},{"ruleId":"1084","severity":1,"message":"1163","line":1,"column":28,"nodeType":"1086","messageId":"1087","endLine":1,"endColumn":34},{"ruleId":"1088","severity":1,"message":"1089","line":22,"column":11,"nodeType":"1081","messageId":"1090","endLine":29,"endColumn":12,"fix":"1164"},{"ruleId":"1084","severity":1,"message":"1165","line":17,"column":37,"nodeType":"1086","messageId":"1087","endLine":17,"endColumn":52},{"ruleId":"1084","severity":1,"message":"1163","line":1,"column":28,"nodeType":"1086","messageId":"1087","endLine":1,"endColumn":34},{"ruleId":"1088","severity":1,"message":"1089","line":26,"column":11,"nodeType":"1081","messageId":"1090","endLine":33,"endColumn":12,"fix":"1166"},{"ruleId":"1084","severity":1,"message":"1167","line":9,"column":10,"nodeType":"1086","messageId":"1087","endLine":9,"endColumn":16},{"ruleId":"1088","severity":1,"message":"1089","line":66,"column":17,"nodeType":"1081","messageId":"1090","endLine":74,"endColumn":18,"fix":"1168"},{"ruleId":"1095","severity":1,"message":"1169","line":26,"column":6,"nodeType":"1097","endLine":26,"endColumn":15,"suggestions":"1170"},{"ruleId":"1079","severity":1,"message":"1080","line":28,"column":10,"nodeType":"1081","endLine":28,"endColumn":62},{"ruleId":"1095","severity":1,"message":"1096","line":36,"column":6,"nodeType":"1097","endLine":36,"endColumn":12,"suggestions":"1171"},{"ruleId":"1088","severity":1,"message":"1089","line":73,"column":15,"nodeType":"1081","messageId":"1090","endLine":78,"endColumn":16,"fix":"1172"},{"ruleId":"1084","severity":1,"message":"1173","line":5,"column":17,"nodeType":"1086","messageId":"1087","endLine":5,"endColumn":26},{"ruleId":"1095","severity":1,"message":"1174","line":51,"column":6,"nodeType":"1097","endLine":51,"endColumn":8,"suggestions":"1175"},{"ruleId":"1079","severity":1,"message":"1080","line":54,"column":5,"nodeType":"1081","endLine":54,"endColumn":78},{"ruleId":"1095","severity":1,"message":"1101","line":30,"column":6,"nodeType":"1097","endLine":30,"endColumn":8,"suggestions":"1176"},{"ruleId":"1079","severity":1,"message":"1080","line":33,"column":5,"nodeType":"1081","endLine":33,"endColumn":77},{"ruleId":"1079","severity":1,"message":"1080","line":49,"column":21,"nodeType":"1081","endLine":49,"endColumn":45},{"ruleId":"1084","severity":1,"message":"1111","line":1,"column":17,"nodeType":"1086","messageId":"1087","endLine":1,"endColumn":26},{"ruleId":"1084","severity":1,"message":"1177","line":1,"column":28,"nodeType":"1086","messageId":"1087","endLine":1,"endColumn":35},{"ruleId":"1084","severity":1,"message":"1178","line":11,"column":10,"nodeType":"1086","messageId":"1087","endLine":11,"endColumn":19},{"ruleId":"1084","severity":1,"message":"1113","line":42,"column":17,"nodeType":"1086","messageId":"1087","endLine":42,"endColumn":20},{"ruleId":"1095","severity":1,"message":"1179","line":132,"column":6,"nodeType":"1097","endLine":132,"endColumn":22,"suggestions":"1180"},{"ruleId":"1084","severity":1,"message":"1181","line":218,"column":11,"nodeType":"1086","messageId":"1087","endLine":218,"endColumn":23},{"ruleId":"1084","severity":1,"message":"1182","line":5,"column":3,"nodeType":"1086","messageId":"1087","endLine":5,"endColumn":13},{"ruleId":"1084","severity":1,"message":"1183","line":20,"column":11,"nodeType":"1086","messageId":"1087","endLine":20,"endColumn":26},{"ruleId":"1082","severity":1,"message":"1083","line":41,"column":17,"nodeType":"1081","endLine":45,"endColumn":18},{"ruleId":"1079","severity":1,"message":"1080","line":47,"column":21,"nodeType":"1081","endLine":47,"endColumn":39},{"ruleId":"1084","severity":1,"message":"1184","line":3,"column":10,"nodeType":"1086","messageId":"1087","endLine":3,"endColumn":25},{"ruleId":"1084","severity":1,"message":"1124","line":5,"column":10,"nodeType":"1086","messageId":"1087","endLine":5,"endColumn":15},{"ruleId":"1084","severity":1,"message":"1185","line":6,"column":10,"nodeType":"1086","messageId":"1087","endLine":6,"endColumn":21},{"ruleId":"1084","severity":1,"message":"1178","line":7,"column":10,"nodeType":"1086","messageId":"1087","endLine":7,"endColumn":19},{"ruleId":"1084","severity":1,"message":"1186","line":8,"column":8,"nodeType":"1086","messageId":"1087","endLine":8,"endColumn":13},{"ruleId":"1084","severity":1,"message":"1187","line":9,"column":8,"nodeType":"1086","messageId":"1087","endLine":9,"endColumn":22},{"ruleId":"1084","severity":1,"message":"1127","line":19,"column":10,"nodeType":"1086","messageId":"1087","endLine":19,"endColumn":15},{"ruleId":"1095","severity":1,"message":"1096","line":35,"column":6,"nodeType":"1097","endLine":35,"endColumn":8,"suggestions":"1188"},{"ruleId":"1084","severity":1,"message":"1127","line":19,"column":10,"nodeType":"1086","messageId":"1087","endLine":19,"endColumn":15},{"ruleId":"1084","severity":1,"message":"1189","line":19,"column":17,"nodeType":"1086","messageId":"1087","endLine":19,"endColumn":25},{"ruleId":"1084","severity":1,"message":"1113","line":25,"column":15,"nodeType":"1086","messageId":"1087","endLine":25,"endColumn":18},{"ruleId":"1084","severity":1,"message":"1113","line":41,"column":15,"nodeType":"1086","messageId":"1087","endLine":41,"endColumn":18},{"ruleId":"1095","severity":1,"message":"1190","line":72,"column":6,"nodeType":"1097","endLine":72,"endColumn":8,"suggestions":"1191"},{"ruleId":"1079","severity":1,"message":"1080","line":18,"column":14,"nodeType":"1081","endLine":18,"endColumn":31},{"ruleId":"1079","severity":1,"message":"1080","line":62,"column":23,"nodeType":"1081","endLine":62,"endColumn":48},{"ruleId":"1084","severity":1,"message":"1124","line":2,"column":10,"nodeType":"1086","messageId":"1087","endLine":2,"endColumn":15},{"ruleId":"1084","severity":1,"message":"1192","line":3,"column":10,"nodeType":"1086","messageId":"1087","endLine":3,"endColumn":28},{"ruleId":"1084","severity":1,"message":"1193","line":4,"column":8,"nodeType":"1086","messageId":"1087","endLine":4,"endColumn":33},{"ruleId":"1084","severity":1,"message":"1194","line":6,"column":10,"nodeType":"1086","messageId":"1087","endLine":6,"endColumn":21},{"ruleId":"1079","severity":1,"message":"1080","line":67,"column":23,"nodeType":"1081","endLine":67,"endColumn":48},{"ruleId":"1116","severity":1,"message":"1117","line":6,"column":30,"nodeType":"1118","messageId":"1119","endLine":6,"endColumn":32},{"ruleId":"1079","severity":1,"message":"1080","line":83,"column":23,"nodeType":"1081","endLine":83,"endColumn":48},{"ruleId":"1079","severity":1,"message":"1080","line":105,"column":29,"nodeType":"1081","endLine":105,"endColumn":55},{"ruleId":"1088","severity":1,"message":"1089","line":44,"column":19,"nodeType":"1081","messageId":"1090","endLine":48,"endColumn":20,"fix":"1195"},{"ruleId":"1088","severity":1,"message":"1089","line":85,"column":19,"nodeType":"1081","messageId":"1090","endLine":89,"endColumn":20,"fix":"1196"},{"ruleId":"1088","severity":1,"message":"1089","line":104,"column":19,"nodeType":"1081","messageId":"1090","endLine":108,"endColumn":20,"fix":"1197"},{"ruleId":"1088","severity":1,"message":"1089","line":116,"column":19,"nodeType":"1081","messageId":"1090","endLine":120,"endColumn":20,"fix":"1198"},"no-native-reassign",["1199"],"no-negated-in-lhs",["1200"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","@typescript-eslint/no-unused-vars","'DisplayRandomRune' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1201","text":"1202"},{"range":"1203","text":"1202"},{"range":"1204","text":"1202"},{"range":"1205","text":"1202"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'network'. Either include it or remove the dependency array.","ArrayExpression",["1206"],"'GALLERY_PATH' is defined but never used.","'SMITH_PATH' is defined but never used.","React Hook useEffect has a missing dependency: 'isActive'. Either include it or remove the dependency array.",["1207"],"'txid' is assigned a value but never used.","'SnapshotCountdown' is defined but never used.","React Hook useEffect has a missing dependency: 'tokenId'. Either include it or remove the dependency array.",["1208"],"'useWallet' is defined but never used.",["1209"],["1199"],["1200"],"'useEffect' is defined but never used.","'Network' is defined but never used.","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'network' and 'removePendingTransaction'. Either include them or remove the dependency array.",["1210"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'base64ToString' is defined but never used.","React Hook useEffect has missing dependencies: 'connectWallet', 'connectedWallet.key', and 'disConnectWallet'. Either include them or remove the dependency array.",["1211"],"'toast' is defined but never used.","'DisplayRune' is defined but never used.","'tokens' is assigned a value but never used.","'error' is assigned a value but never used.",["1212"],"'RUNE_PHASE_FILTER' is defined but never used.","'u' is defined but never used.",["1213"],"'Link' is defined but never used.","'useLocation' is defined but never used.",["1199"],["1200"],{"range":"1214","text":"1202"},{"range":"1215","text":"1202"},{"range":"1216","text":"1202"},"'MAINNET' is defined but never used.",["1217"],["1218"],["1219"],["1220"],["1199"],["1200"],"React Hook useEffect has a missing dependency: 'arenaNo'. Either include it or remove the dependency array.",["1221"],"React Hook React.useMemo has a missing dependency: 'arenaNo'. Either include it or remove the dependency array.",["1222"],["1223"],["1199"],["1200"],"'GetRawTransactionResult' is defined but never used.",["1224"],"'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'arenaNo', 'connectedWallet', and 'player.tokenId'. Either include them or remove the dependency array.",["1225"],"'TOURNAMENT_TIME_PADDING' is defined but never used.",["1226"],["1227"],["1228"],"'TOURNAMENT_PATH' is defined but never used.","'useRef' is defined but never used.",{"range":"1229","text":"1202"},"'openWalletModal' is assigned a value but never used.",{"range":"1230","text":"1202"},"'wallet' is defined but never used.",{"range":"1231","text":"1202"},"React Hook useEffect has missing dependencies: 'contractHash' and 'network'. Either include them or remove the dependency array.",["1232"],["1233"],{"range":"1234","text":"1202"},"'setColors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'colors'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBg' needs the current value of 'colors'.",["1235"],["1236"],"'useMemo' is defined but never used.","'toDecimal' is defined but never used.","React Hook useEffect has missing dependencies: 'amountA', 'amountB', 'connectedWallet', and 'network'. Either include them or remove the dependency array.",["1237"],"'scripts' is assigned a value but never used.","'ASSET_LIST' is defined but never used.","'connectedWallet' is assigned a value but never used.","'GAS_SCRIPT_HASH' is defined but never used.","'getEstimate' is defined but never used.","'Input' is defined but never used.","'AssetListModal' is defined but never used.",["1238"],"'setError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'connectedWallet', 'network', 'tokenA', and 'tokenB'. Either include them or remove the dependency array.",["1239"],"'TournamentContract' is defined but never used.","'AfterTransactionSubmitted' is defined but never used.","'NFTContract' is defined but never used.",{"range":"1240","text":"1202"},{"range":"1241","text":"1202"},{"range":"1242","text":"1202"},{"range":"1243","text":"1202"},"no-global-assign","no-unsafe-negation",[1534,1534]," rel=\"noreferrer\"",[2862,2862],[3501,3501],[3973,3973],{"desc":"1244","fix":"1245"},{"desc":"1246","fix":"1247"},{"desc":"1248","fix":"1249"},{"desc":"1248","fix":"1250"},{"desc":"1251","fix":"1252"},{"desc":"1253","fix":"1254"},{"desc":"1255","fix":"1256"},{"desc":"1248","fix":"1257"},[4010,4010],[4216,4216],[4429,4429],{"desc":"1244","fix":"1258"},{"desc":"1253","fix":"1259"},{"desc":"1248","fix":"1260"},{"desc":"1251","fix":"1261"},{"desc":"1262","fix":"1263"},{"desc":"1264","fix":"1265"},{"desc":"1255","fix":"1266"},{"desc":"1267","fix":"1268"},{"desc":"1269","fix":"1270"},{"desc":"1271","fix":"1272"},{"desc":"1248","fix":"1273"},{"desc":"1274","fix":"1275"},[982,982],[1226,1226],[2461,2461],{"desc":"1276","fix":"1277"},{"desc":"1278","fix":"1279"},[2298,2298],{"desc":"1280","fix":"1281"},{"desc":"1246","fix":"1282"},{"desc":"1283","fix":"1284"},{"desc":"1285","fix":"1286"},{"desc":"1287","fix":"1288"},[1477,1477],[2908,2908],[3547,3547],[4019,4019],"Update the dependencies array to be: [connectedWallet, network, route]",{"range":"1289","text":"1290"},"Update the dependencies array to be: [isActive]",{"range":"1291","text":"1292"},"Update the dependencies array to be: [network, tokenId]",{"range":"1293","text":"1294"},{"range":"1295","text":"1294"},"Update the dependencies array to be: [network, pendingTransactions, removePendingTransaction]",{"range":"1296","text":"1297"},"Update the dependencies array to be: [connectWallet, connectedWallet.key, disConnectWallet]",{"range":"1298","text":"1299"},"Update the dependencies array to be: [connectedWallet, network]",{"range":"1300","text":"1301"},{"range":"1302","text":"1294"},{"range":"1303","text":"1290"},{"range":"1304","text":"1299"},{"range":"1305","text":"1294"},{"range":"1306","text":"1297"},"Update the dependencies array to be: [network, location.pathname, arenaNo]",{"range":"1307","text":"1308"},"Update the dependencies array to be: [isLoading, arenaNo, status]",{"range":"1309","text":"1310"},{"range":"1311","text":"1301"},"Update the dependencies array to be: [arenaNo, connectedWallet, network, page]",{"range":"1312","text":"1313"},"Update the dependencies array to be: [arenaNo, connectedWallet, gameNo, network, player.tokenId]",{"range":"1314","text":"1315"},"Update the dependencies array to be: [history, network]",{"range":"1316","text":"1317"},{"range":"1318","text":"1294"},"Update the dependencies array to be: [connectedWallet, network, history, arenaNo]",{"range":"1319","text":"1320"},"Update the dependencies array to be: [contractHash, network, tokenId]",{"range":"1321","text":"1322"},"Update the dependencies array to be: [network, txid]",{"range":"1323","text":"1324"},"Update the dependencies array to be: [colors]",{"range":"1325","text":"1326"},{"range":"1327","text":"1292"},"Update the dependencies array to be: [amountA, amountB, connectedWallet, network, tokenA, tokenB]",{"range":"1328","text":"1329"},"Update the dependencies array to be: [network]",{"range":"1330","text":"1331"},"Update the dependencies array to be: [connectedWallet, network, tokenA, tokenB]",{"range":"1332","text":"1333"},[1983,2007],"[connectedWallet, network, route]",[1444,1446],"[isActive]",[923,932],"[network, tokenId]",[881,890],[664,685],"[network, pendingTransactions, removePendingTransaction]",[2595,2597],"[connectWallet, connectedWallet.key, disConnectWallet]",[1197,1214],"[connectedWallet, network]",[881,890],[1983,2007],[2595,2597],[923,932],[743,764],[1241,1269],"[network, location.pathname, arenaNo]",[2091,2110],"[isLoading, arenaNo, status]",[1021,1038],[1547,1579],"[arenaNo, connectedWallet, network, page]",[1719,1736],"[arenaNo, connectedWallet, gameNo, network, player.tokenId]",[1318,1327],"[history, network]",[1078,1087],[1827,1862],"[connectedWallet, network, history, arenaNo]",[751,760],"[contractHash, network, tokenId]",[1012,1018],"[network, txid]",[2062,2064],"[colors]",[1444,1446],[3964,3980],"[amountA, amountB, connectedWallet, network, tokenA, tokenB]",[1328,1330],"[network]",[2135,2137],"[connectedWallet, network, tokenA, tokenB]"]