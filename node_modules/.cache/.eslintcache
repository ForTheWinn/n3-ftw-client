[{"/Users/ed/Projects/n3-ftw/client/src/index.tsx":"1","/Users/ed/Projects/n3-ftw/client/src/reportWebVitals.ts":"2","/Users/ed/Projects/n3-ftw/client/src/common/hooks/use-app.tsx":"3","/Users/ed/Projects/n3-ftw/client/src/ui/index.tsx":"4","/Users/ed/Projects/n3-ftw/client/src/common/hooks/use-responsive.ts":"5","/Users/ed/Projects/n3-ftw/client/src/ui/components/WalletSidebar.tsx":"6","/Users/ed/Projects/n3-ftw/client/src/ui/components/Header.tsx":"7","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Home.tsx":"8","/Users/ed/Projects/n3-ftw/client/src/ui/components/MobileMenuSlider.tsx":"9","/Users/ed/Projects/n3-ftw/client/src/consts/index.ts":"10","/Users/ed/Projects/n3-ftw/client/src/packages/provider/index.ts":"11","/Users/ed/Projects/n3-ftw/client/src/packages/neo/index.ts":"12","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/index.tsx":"13","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/index.tsx":"14","/Users/ed/Projects/n3-ftw/client/src/ui/components/SidebarNav.tsx":"15","/Users/ed/Projects/n3-ftw/client/src/ui/components/DisplayRandomRune.tsx":"16","/Users/ed/Projects/n3-ftw/client/src/ui/components/Logo.tsx":"17","/Users/ed/Projects/n3-ftw/client/src/consts/pageRoutes.ts":"18","/Users/ed/Projects/n3-ftw/client/src/packages/provider/wallet-provider.tsx":"19","/Users/ed/Projects/n3-ftw/client/src/ui/components/NotifyError.tsx":"20","/Users/ed/Projects/n3-ftw/client/src/ui/components/PageLayout.tsx":"21","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/Pool.tsx":"22","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ActionModal.tsx":"23","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotList.tsx":"24","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ClaimModal.tsx":"25","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/Claims.tsx":"26","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/CancelModal.tsx":"27","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/PropertiesModal.tsx":"28","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/DisplayRune.tsx":"29","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/index.tsx":"30","/Users/ed/Projects/n3-ftw/client/src/packages/ui/PendingTransaction/index.tsx":"31","/Users/ed/Projects/n3-ftw/client/src/packages/neo/wallet/index.ts":"32","/Users/ed/Projects/n3-ftw/client/src/packages/neo/network/index.ts":"33","/Users/ed/Projects/n3-ftw/client/src/packages/neo/consts/index.ts":"34","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/index.ts":"35","/Users/ed/Projects/n3-ftw/client/src/packages/neo/utils/index.ts":"36","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCountdown.tsx":"37","/Users/ed/Projects/n3-ftw/client/src/ui/components/Modal.tsx":"38","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/MyPosition.tsx":"39","/Users/ed/Projects/n3-ftw/client/src/ui/components/TransactionSubmitted.tsx":"40","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletList.tsx":"41","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletDropdown.tsx":"42","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/AssetCard.tsx":"43","/Users/ed/Projects/n3-ftw/client/src/packages/neo/wallet/dev-wallet.ts":"44","/Users/ed/Projects/n3-ftw/client/src/packages/neo/local-storage/index.ts":"45","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/helpers.ts":"46","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/index.ts":"47","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/index.ts":"48","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/helpers.ts":"49","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/consts.ts":"50","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/helpers.ts":"51","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/consts.ts":"52","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCard.tsx":"53","/Users/ed/Projects/n3-ftw/client/src/ui/components/WalletDropdown.tsx":"54","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/Runes.tsx":"55","/Users/ed/Projects/n3-ftw/client/src/ui/pages/MyCollection/index.tsx":"56","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/bank/index.ts":"57","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nep17/index.ts":"58","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/PositionModal.tsx":"59","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/About.tsx":"60","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/index.tsx":"61","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/index.ts":"62","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/consts.ts":"63","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/helpers.ts":"64","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/ActionModal.tsx":"65","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/ContractCard.tsx":"66","/Users/ed/Projects/n3-ftw/client/src/ui/components/NetworkCheck.tsx":"67","/Users/ed/Projects/n3-ftw/client/src/ui/components/NetworkSwitch.tsx":"68","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/Banner.tsx":"69","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/index.tsx":"70","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/DisplayRune.tsx":"71","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/index.ts":"72","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/consts.ts":"73","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/helpers.ts":"74","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/Stage4.tsx":"75","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/pageRoutes.ts":"76","/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/index.ts":"77","/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/rest.ts":"78","/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/consts.ts":"79","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Arena/index.tsx":"80","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Home/index.tsx":"81","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Arena/Banner.tsx":"82"},{"size":624,"mtime":1633734969020,"results":"83","hashOfConfig":"84"},{"size":425,"mtime":1633497407848,"results":"85","hashOfConfig":"84"},{"size":1309,"mtime":1639724016473,"results":"86","hashOfConfig":"84"},{"size":1470,"mtime":1640622893531,"results":"87","hashOfConfig":"84"},{"size":591,"mtime":1633679011995,"results":"88","hashOfConfig":"84"},{"size":672,"mtime":1637900932333,"results":"89","hashOfConfig":"84"},{"size":4417,"mtime":1639620401842,"results":"90","hashOfConfig":"84"},{"size":4196,"mtime":1639086967652,"results":"91","hashOfConfig":"84"},{"size":489,"mtime":1639037096055,"results":"92","hashOfConfig":"84"},{"size":30,"mtime":1638893084422,"results":"93","hashOfConfig":"84"},{"size":34,"mtime":1637559785947,"results":"94","hashOfConfig":"84"},{"size":239,"mtime":1637559785941,"results":"95","hashOfConfig":"84"},{"size":4655,"mtime":1639300594240,"results":"96","hashOfConfig":"84"},{"size":3188,"mtime":1640585376262,"results":"97","hashOfConfig":"84"},{"size":927,"mtime":1639296687060,"results":"98","hashOfConfig":"84"},{"size":1581,"mtime":1639034767064,"results":"99","hashOfConfig":"84"},{"size":309,"mtime":1638868993214,"results":"100","hashOfConfig":"84"},{"size":704,"mtime":1640068867717,"results":"101","hashOfConfig":"84"},{"size":3091,"mtime":1639993271043,"results":"102","hashOfConfig":"84"},{"size":268,"mtime":1637559785958,"results":"103","hashOfConfig":"84"},{"size":230,"mtime":1637559785958,"results":"104","hashOfConfig":"84"},{"size":1465,"mtime":1639300292984,"results":"105","hashOfConfig":"84"},{"size":3082,"mtime":1637891429918,"results":"106","hashOfConfig":"84"},{"size":1693,"mtime":1639300331838,"results":"107","hashOfConfig":"84"},{"size":1220,"mtime":1637894305513,"results":"108","hashOfConfig":"84"},{"size":1944,"mtime":1639300331832,"results":"109","hashOfConfig":"84"},{"size":1287,"mtime":1638165273098,"results":"110","hashOfConfig":"84"},{"size":1592,"mtime":1640583336741,"results":"111","hashOfConfig":"84"},{"size":1131,"mtime":1639293939381,"results":"112","hashOfConfig":"84"},{"size":1405,"mtime":1639028483325,"results":"113","hashOfConfig":"84"},{"size":1118,"mtime":1639009300745,"results":"114","hashOfConfig":"84"},{"size":4241,"mtime":1640598198650,"results":"115","hashOfConfig":"84"},{"size":3323,"mtime":1638163806270,"results":"116","hashOfConfig":"84"},{"size":1382,"mtime":1640599057954,"results":"117","hashOfConfig":"84"},{"size":112,"mtime":1637946015157,"results":"118","hashOfConfig":"84"},{"size":1683,"mtime":1639619515744,"results":"119","hashOfConfig":"84"},{"size":845,"mtime":1639300797095,"results":"120","hashOfConfig":"84"},{"size":881,"mtime":1640302612275,"results":"121","hashOfConfig":"84"},{"size":1582,"mtime":1639300578733,"results":"122","hashOfConfig":"84"},{"size":558,"mtime":1637894305518,"results":"123","hashOfConfig":"84"},{"size":1085,"mtime":1639028483330,"results":"124","hashOfConfig":"84"},{"size":1857,"mtime":1637900644235,"results":"125","hashOfConfig":"84"},{"size":413,"mtime":1637567392298,"results":"126","hashOfConfig":"84"},{"size":7180,"mtime":1640586317249,"results":"127","hashOfConfig":"84"},{"size":2879,"mtime":1639296129004,"results":"128","hashOfConfig":"84"},{"size":310,"mtime":1637559785952,"results":"129","hashOfConfig":"84"},{"size":3567,"mtime":1640583104075,"results":"130","hashOfConfig":"84"},{"size":5979,"mtime":1638154121762,"results":"131","hashOfConfig":"84"},{"size":1704,"mtime":1638929139740,"results":"132","hashOfConfig":"84"},{"size":542,"mtime":1640582997164,"results":"133","hashOfConfig":"84"},{"size":646,"mtime":1637867144835,"results":"134","hashOfConfig":"84"},{"size":239,"mtime":1638155927534,"results":"135","hashOfConfig":"84"},{"size":598,"mtime":1637892170390,"results":"136","hashOfConfig":"84"},{"size":3971,"mtime":1639030825785,"results":"137","hashOfConfig":"84"},{"size":1737,"mtime":1637902640430,"results":"138","hashOfConfig":"84"},{"size":2862,"mtime":1640586517923,"results":"139","hashOfConfig":"84"},{"size":230,"mtime":1638174485672,"results":"140","hashOfConfig":"84"},{"size":270,"mtime":1638034751030,"results":"141","hashOfConfig":"84"},{"size":2300,"mtime":1639302927524,"results":"142","hashOfConfig":"84"},{"size":869,"mtime":1639300841404,"results":"143","hashOfConfig":"84"},{"size":2112,"mtime":1639295252715,"results":"144","hashOfConfig":"84"},{"size":3394,"mtime":1639027599972,"results":"145","hashOfConfig":"84"},{"size":271,"mtime":1639068073975,"results":"146","hashOfConfig":"84"},{"size":1007,"mtime":1639382295672,"results":"147","hashOfConfig":"84"},{"size":5424,"mtime":1639302956663,"results":"148","hashOfConfig":"84"},{"size":1482,"mtime":1639027829759,"results":"149","hashOfConfig":"84"},{"size":496,"mtime":1639297175982,"results":"150","hashOfConfig":"84"},{"size":1368,"mtime":1639295784864,"results":"151","hashOfConfig":"84"},{"size":3234,"mtime":1640582997168,"results":"152","hashOfConfig":"84"},{"size":545,"mtime":1640587022519,"results":"153","hashOfConfig":"84"},{"size":1147,"mtime":1640319955625,"results":"154","hashOfConfig":"84"},{"size":2730,"mtime":1640459478123,"results":"155","hashOfConfig":"84"},{"size":236,"mtime":1639993271048,"results":"156","hashOfConfig":"84"},{"size":1057,"mtime":1640155030148,"results":"157","hashOfConfig":"84"},{"size":3757,"mtime":1639727258900,"results":"158","hashOfConfig":"84"},{"size":293,"mtime":1640587449829,"results":"159","hashOfConfig":"84"},{"size":23,"mtime":1637559785922,"results":"160","hashOfConfig":"84"},{"size":684,"mtime":1640571969729,"results":"161","hashOfConfig":"84"},{"size":283,"mtime":1640574613690,"results":"162","hashOfConfig":"84"},{"size":329,"mtime":1640596903139,"results":"163","hashOfConfig":"84"},{"size":1157,"mtime":1640596879206,"results":"164","hashOfConfig":"84"},{"size":1312,"mtime":1640596403386,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"1u1quzu",{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"168"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"184","usedDeprecatedRules":"168"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"168"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"168"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"168"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"168"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"168"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"168"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"168"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"168"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"168"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"168"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"168"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"168"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"168"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"168"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"168"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"168"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"168"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},"/Users/ed/Projects/n3-ftw/client/src/index.tsx",[],["357","358"],"/Users/ed/Projects/n3-ftw/client/src/reportWebVitals.ts",[],"/Users/ed/Projects/n3-ftw/client/src/common/hooks/use-app.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/common/hooks/use-responsive.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/WalletSidebar.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/Header.tsx",["359","360"],"import React, { useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaBars, FaWallet } from \"react-icons/fa\";\nimport Logo from \"./Logo\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { useWallet } from \"../../packages/provider\";\nimport { utils } from \"../../packages/neo\";\nimport { COLLECTION_PATH, MENU } from \"../../consts\";\nimport PendingTransaction from \"../../packages/ui/PendingTransaction\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport NetworkSwitch from \"./NetworkSwitch\";\n\nconst Header = () => {\n  const { toggleSidebar, toggleWalletSidebar } = useApp();\n  const { connectedWallet, network, disConnectWallet } = useWallet();\n  const [isActive, setActive] = useState(false);\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    disConnectWallet();\n  };\n  return (\n    <nav\n      className=\"navbar has-shadow is-white is-fixed-top\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ height: \"52px\" }}\n    >\n      <div className=\"container\">\n        <div\n          className=\"navbar-brand\"\n          style={{ justifyContent: \"space-between\" }}\n        >\n          <div\n            role=\"button\"\n            className=\"navbar-burger is-center is-hidden-tablet\"\n            style={{ marginLeft: 0 }}\n            onClick={toggleSidebar}\n          >\n            <FaBars />\n          </div>\n          <Link className=\"has-text-white navbar-item is-center\" to=\"/\">\n            <Logo />\n          </Link>\n          <div\n            role=\"button\"\n            className={`navbar-burger is-center is-hidden-desktop`}\n            onClick={() => {\n              if (connectedWallet) {\n                setActive(!isActive);\n              } else {\n                toggleWalletSidebar();\n              }\n            }}\n            style={{ marginLeft: 0 }}\n          >\n            <FaWallet />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div\n            className={`navbar-menu  is-hidden-tablet ${\n              isActive && \"is-active\"\n            }`}\n          >\n            <div className=\"navbar-start\">\n              <div className=\"navbar-item\">\n                <div className=\"media\">\n                  <div className=\"media-left\">\n                    <img src={getWalletIcon(connectedWallet.key)} />\n                  </div>\n                  <div className=\"media-content\">\n                    {utils.truncateAddress(connectedWallet.account.address)}\n                  </div>\n                </div>\n              </div>\n              <hr className=\"dropdown-divider\" />\n              <Link\n                onClick={() => setActive(false)}\n                className=\"navbar-item has-text-dark\"\n                to={COLLECTION_PATH}\n              >\n                My NFT\n              </Link>\n              <hr className=\"dropdown-divider\" />\n              <a onClick={handleDisconnectWallet} className=\"navbar-item\">\n                Disconnect wallet\n              </a>\n            </div>\n          </div>\n        )}\n\n        <div className=\"navbar-menu ml-3\">\n          <div className=\"navbar-start\">\n            {MENU.map((route) => {\n              if (!route.network.includes(network)) return <></>;\n              return (\n                <NavLink\n                  key={route.label}\n                  activeClassName=\"is-active\"\n                  to={route.path}\n                  className=\"navbar-item\"\n                >\n                  <strong>{route.label}</strong>\n                </NavLink>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"navbar-end is-hidden-touch\">\n          <div className=\"navbar-item\">\n            <NetworkSwitch />\n          </div>\n          <PendingTransaction />\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              {connectedWallet ? (\n                <WalletDropdown connectedWallet={connectedWallet} />\n              ) : (\n                <button\n                  onClick={toggleWalletSidebar}\n                  className=\"button is-small is-black is-rounded\"\n                >\n                  Connect wallet\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Home.tsx",["361","362","363","364","365"],"import React, { useEffect, useRef, useState } from \"react\";\nimport PageLayout from \"../components/PageLayout\";\n// tslint:disable-next-line:no-submodule-imports\nimport DOTS from \"vanta/dist/vanta.halo.min\";\nimport DisplayRandomRune from \"../components/DisplayRandomRune\";\n// import * as THREE from \"three\";\n\nconst Home = (props) => {\n  const [vantaEffect, setVantaEffect] = useState(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        DOTS({\n          el: myRef.current,\n          mouseControls: true,\n          touchControls: true,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          backgroundColor: 0x80822,\n          size: 2.8,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) {\n        // @ts-ignore\n        vantaEffect.destroy();\n      }\n    };\n  }, [vantaEffect]);\n  return (\n    <div>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <div className=\"column is-flex\" style={{ alignItems: \"center\" }}>\n                <div>\n                  <h1 className=\"title\">Forthewin is back</h1>\n                  <p className=\"subtitle\">\n                    Migrate your Neo-legacy FTX to the new <span>N3 FTW</span>\n                  </p>\n                  <a\n                    target=\"_blank\"\n                    href=\"https://nepmigration.com/\"\n                    className=\"button is-primary\"\n                  >\n                    Go to Migrate\n                  </a>\n                </div>\n              </div>\n              <div className=\"column is-hidden-touch\">\n                <div\n                  className=\"block\"\n                  // style={{ display: \"flex\", justifyContent: \"center\" }}\n                >\n                  <video style={{ width: \"450px\" }} autoPlay loop>\n                    <source src={\"/migration.mp4\"} type=\"video/mp4\" />\n                  </video>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        <div className=\"columns halo\" ref={myRef}>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>Neo-legacy</h3>\n                <h6>Symbol</h6>\n                <p>FTX</p>\n                <h6>Contract hash</h6>\n                <p>0xaac66f9779ca67d819d05492805d251dab02fc7b</p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://neotracker.io/asset/aac66f9779ca67d819d05492805d251dab02fc7b\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\">\n            <div className=\"has-background-white\">\n              <div className=\"box content\">\n                <h3>N3</h3>\n                <h6>Symbol</h6>\n                <p>FTW</p>\n                <h6>Contract hash</h6>\n                <p>\n                  <a\n                    target=\"_blank\"\n                    className=\"has-text-dark\"\n                    href=\"https://explorer.onegate.space/contractinfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\n                  </a>\n                </p>\n                <h6>Total supply</h6>\n                <p>500,000,000</p>\n                <h6>Browser</h6>\n                <p>\n                  <a\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href=\"https://explorer.onegate.space/NEP17tokeninfo/0x9f8b20c31bb9e45003f2d9f316d2caf1dcd1bf20\"\n                  >\n                    Open\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PageLayout>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ed/Projects/n3-ftw/client/src/ui/components/MobileMenuSlider.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/consts/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/provider/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/index.tsx",["366","367","368","369","370"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport ActionModal from \"./ActionModal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport toast from \"react-hot-toast\";\nimport SnapshotList from \"./SnapshotList\";\nimport NotifyError from \"../../components/NotifyError\";\nimport Pool from \"./Pool\";\nimport CancelModal from \"./CancelModal\";\nimport ClaimModal from \"./ClaimModal\";\nimport Claims from \"./Claims\";\nimport PositionModal from \"./PositionModal\";\nimport About from \"./About\";\nimport { TESTNET } from \"../../../packages/neo/consts\";\n\nconst Farm = () => {\n  // let location = useLocation();\n  const production = [TESTNET];\n  const [route, setRoute] = useState(\"POOL\");\n  const [modalActive, setModalActive] = useState(false);\n  const [cancelModalActive, setCancelModalActive] = useState(false);\n  const [claimModalActive, setClaimModalActive] = useState(false);\n  const [positionModalActive, setPositionModalActive] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [contractStatus, setContractStatus] = useState<IFarmContractStatus>();\n  const onActive = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onCancelModalActive = () => setCancelModalActive(true);\n  const onClaimModalActive = () => setClaimModalActive(true);\n  const onPositionChange = () => setPositionModalActive(true);\n  const { connectedWallet, network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new FarmContract(network).getStatus(connectedWallet);\n        setContractStatus(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet, route]);\n  if (!production.includes(network))\n    return (\n      <PageLayout>This smart contract is not support in {network}.</PageLayout>\n    );\n  return (\n    <PageLayout>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-half\">\n          <div className=\"box \">\n            <div className=\"tabs is-toggle\">\n              <ul>\n                <li className={route === \"POOL\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"POOL\")}>Pool</a>\n                </li>\n                {connectedWallet && contractStatus && contractStatus.deposit && (\n                  <li className={route === \"CLAIMS\" ? \"is-active\" : \"\"}>\n                    <a onClick={() => setRoute(\"CLAIMS\")}>Claims</a>\n                  </li>\n                )}\n                <li className={route === \"SNAPSHOTS\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"SNAPSHOTS\")}>Snapshots</a>\n                </li>\n                <li className={route === \"ABOUT\" ? \"is-active\" : \"\"}>\n                  <a onClick={() => setRoute(\"ABOUT\")}>About</a>\n                </li>\n              </ul>\n            </div>\n            <NotifyError msg={error} onClose={() => setError(\"\")} />\n            {route === \"POOL\" && (\n              <Pool\n                contractStatus={contractStatus}\n                onPositionChange={onPositionChange}\n                onDeposit={onActive}\n                onCancel={onCancelModalActive}\n                onClaim={onClaimModalActive}\n              />\n            )}\n            {route === \"SNAPSHOTS\" && (\n              <SnapshotList contractStatus={contractStatus} />\n            )}\n            {route === \"CLAIMS\" && (\n              <Claims\n                onClaim={onClaimModalActive}\n                contractStatus={contractStatus}\n              />\n            )}\n            {route === \"ABOUT\" && <About contractStatus={contractStatus} />}\n          </div>\n        </div>\n      </div>\n      {contractStatus && modalActive && (\n        <ActionModal\n          range={contractStatus.range}\n          onClose={() => setModalActive(false)}\n        />\n      )}\n      {contractStatus && contractStatus.deposit && positionModalActive && (\n        <PositionModal\n          currentPosition={contractStatus.deposit.position}\n          range={contractStatus.range}\n          onClose={() => setPositionModalActive(false)}\n        />\n      )}\n      {cancelModalActive && (\n        <CancelModal onClose={() => setCancelModalActive(false)} />\n      )}\n      {claimModalActive && (\n        <ClaimModal onClose={() => setClaimModalActive(false)} />\n      )}\n    </PageLayout>\n  );\n};\n\nexport default Farm;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/index.tsx",["371"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport PropertiesModal from \"./PropertiesModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport Banner from \"./Banner\";\nimport { RestAPI } from \"../../../packages/neo/api\";\nimport { RUNE_PHASE_FILTER } from \"../../../packages/neo/contracts/ftw/nft/consts\";\n\nconst Gallery = () => {\n  const [filter, setFilter] = useState<string>(RUNE_PHASE_FILTER[0]);\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network, addPendingTransaction } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n  const onFilterChange = (val: string) => setFilter(val);\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new NFTContract(network).mint(connectedWallet);\n        addPendingTransaction(res);\n      } catch (e: any) {\n      \tconsole.log(e)\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const items = await new RestAPI(network).getRunes(filter);\n        // const res = await new NFTContract(network).getTokens();\n        setTokens(items);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network, filter]);\n  return (\n    <section id=\"Rune\">\n      <Banner\n        network={network}\n        filter={filter}\n        onFilterChange={onFilterChange}\n        onMint={onMint}\n      />\n      {isLoading ? (\n        <PageLayout>\n          <div>Loading..</div>\n        </PageLayout>\n      ) : error ? (\n        <PageLayout>\n          <div>{error}</div>\n        </PageLayout>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"wrap\",\n          }}\n        >\n          {tokens.map((token) => (\n            <figure\n              style={{ width: \"10%\" }}\n              key={token.tokenId}\n              className=\"image rune\"\n              onClick={() => onPropertiesModalActive(token.tokenId.toString())}\n            >\n              <img src={token.image} />\n              {/*<small*/}\n              {/*  className=\"has-text-white\"*/}\n              {/*  style={{ position: \"absolute\", top: 0 }}*/}\n              {/*>*/}\n              {/*  #{token.tokenId}*/}\n              {/*</small>*/}\n              {/*<span className=\"has-text-white\">{token.phase}</span>*/}\n            </figure>\n          ))}\n        </div>\n      )}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default Gallery;\n","/Users/ed/Projects/n3-ftw/client/src/ui/components/SidebarNav.tsx",["372","373"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { GALLERY_PATH, MENU, SMITH_PATH } from \"../../consts\";\nimport { useWallet } from \"../../packages/provider\";\n\nconst SidebarNav = (props) => {\n  const { network } = useWallet();\n  const { toggleSidebar } = useApp();\n  return (\n    <aside className=\"menu p-5\">\n      <p className=\"menu-label\">Menu</p>\n      <ul className=\"menu-list\">\n        {MENU.map((route) => {\n          if (!route.network.includes(network)) return <></>;\n          return (\n            <li key={route.label}>\n              <NavLink\n                onClick={toggleSidebar}\n                activeClassName={\"is-active\"}\n                to={route.path}\n              >\n                {route.label}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </aside>\n  );\n};\n\nexport default SidebarNav;\n","/Users/ed/Projects/n3-ftw/client/src/ui/components/DisplayRandomRune.tsx",["374","375"],"import React, { useEffect, useState } from \"react\";\nimport _ from \"underscore\";\nconst getColors = () => _.range(18).map((i) => Math.floor(Math.random() * 256));\n\ninterface IDisplayRandomRuneProps {\n  width: string;\n  height: string;\n  isActive?: boolean;\n}\nconst DisplayRandomRune = ({\n  width,\n  height,\n  isActive,\n}: IDisplayRandomRuneProps) => {\n  const [colors, setColors] = useState(getColors());\n  const bg = \"rgb(\" + colors[0] + \",\" + colors[6] + \",\" + colors[12] + \")\";\n  const dot1 = \"rgb(\" + colors[1] + \",\" + colors[7] + \",\" + colors[13] + \")\";\n  const dot2 = \"rgb(\" + colors[2] + \",\" + colors[8] + \",\" + colors[14] + \")\";\n  const dot3 = \"rgb(\" + colors[3] + \",\" + colors[9] + \",\" + colors[15] + \")\";\n  const dot4 = \"rgb(\" + colors[4] + \",\" + colors[10] + \",\" + colors[16] + \")\";\n  const body = \"rgb(\" + colors[5] + \",\" + colors[11] + \",\" + colors[17] + \")\";\n  const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"512\"><path fill=\"${bg}\" d=\"M0 0h512v512H0z\"/><path fill=\"${dot4}\" d=\"M293 378h81v-81h-81Zm0 0\"/><path fill=\"${body}\" d=\"M374 142H138v314h85V226h151Zm0 0\"/><path fill=\"${dot3}\" d=\"M436 56h-86v86h86Zm0 0\"/><path fill=\"${dot2}\" d=\"M300 142V56h-87v86Zm0 0\"/><path fill=\"${dot1}\" d=\"M162 142V56H76v86Zm0 0\"/></svg>`;\n  useEffect(() => {\n    if (isActive) {\n      const interval = setInterval(() => {\n        setColors(getColors());\n      }, 2000);\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  return (\n    <img style={{ width, height }} src={`data:image/svg+xml;utf8,${svg}`} />\n  );\n};\n\nexport default DisplayRandomRune;\n","/Users/ed/Projects/n3-ftw/client/src/ui/components/Logo.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/consts/pageRoutes.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/provider/wallet-provider.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/NotifyError.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/PageLayout.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/Pool.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ActionModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotList.tsx",["376"],"import React, { useState } from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { toast } from \"react-hot-toast\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\nimport SnapshotCard from \"./SnapshotCard\";\n\ninterface ISnapshotListProps {\n  contractStatus?: IFarmContractStatus;\n}\nconst SnapshotList = ({ contractStatus }: ISnapshotListProps) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onCreateSnapshot = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).createSnapshot(\n          connectedWallet\n        );\n        setTxid(res);\n      } catch (e: any) {\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  if (!contractStatus) return <div></div>;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">Snapshots</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            <SnapshotCountdown\n              timeLeft={parseFloat(contractStatus.timeLeft)}\n              onCreateSnapshot={onCreateSnapshot}\n            />\n          </div>\n        </div>\n      </div>\n\n      {contractStatus.snapshots.items.map((item) => (\n        <SnapshotCard key={item.no} item={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default SnapshotList;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ClaimModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/Claims.tsx",["377"],"import React from \"react\";\nimport { IFarmContractStatus } from \"../../../packages/neo/contracts/ftw/farm/interfaces\";\nimport SnapshotCountdown from \"./SnapshotCountdown\";\n\ninterface IClaimsProps {\n  contractStatus?: IFarmContractStatus;\n  onClaim: () => void;\n}\nconst Claims = ({ contractStatus, onClaim }: IClaimsProps) => {\n  if (!contractStatus) return <div></div>;\n  if (!contractStatus.claims) return <div></div>;\n  if (!contractStatus.deposit) return <div></div>;\n  const lastClaimNo = contractStatus.deposit.lastClaimNo\n    ? parseFloat(contractStatus.deposit.lastClaimNo)\n    : 0;\n  const isClaimable =\n    parseFloat(contractStatus.snapshots.totalItems) > lastClaimNo;\n  return (\n    <div className=\"\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <h1 className=\"title is-4 is-marginless\">My Claims</h1>\n          </div>\n        </div>\n        <div className=\"level-right\">\n          <div className=\"level-item\">\n            {isClaimable && (\n              <button\n                onClick={onClaim}\n                className=\"button is-primary is-fullwidth\"\n              >\n                Claim Reward\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      {contractStatus.claims.items.length > 0 ? (\n        contractStatus.claims.items.map((item) => {\n          return (\n            <div key={item.createdAt} className=\"media\">\n              <div className=\"media-left\">#{item.no}</div>\n              <div className=\"media-content\">\n                Snapshots: {`${item.from} ~ ${item.end}`}\n                <br />\n                GAS: {item.GAS}\n                <br />\n                FTW: {item.FTW}\n                <br />\n                {item.createdAt}\n              </div>\n            </div>\n          );\n        })\n      ) : (\n        <div>No claims to display</div>\n      )}\n    </div>\n  );\n};\n\nexport default Claims;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/CancelModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/PropertiesModal.tsx",["378","379"],"import React, { useEffect, useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\n\ninterface IPropertiesModal {\n  tokenId: string;\n  onClose: () => void;\n}\nconst PropertiesModal = ({ tokenId, onClose }: IPropertiesModal) => {\n  const [item, setItem] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const { network } = useWallet();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      setLoading(true);\n      try {\n        const res = await new NFTContract(network).getProperties(\n          tokenId.toString()\n        );\n        setItem(res);\n      } catch (e: any) {\n        setError(e.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchContractStatus();\n  }, [network]);\n  return (\n    <Modal onClose={onClose}>\n      {isLoading ? (\n        <div>Loading the rune data from the chain..</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <>\n          <h1 className=\"title is-4\">{item.name}</h1>\n\n          <p className=\"subtitle is-7\">\n            <strong>Phase:</strong> {item.phase}, <strong>Luck:</strong>{\" \"}\n            {item.luck}\n          </p>\n          <figure className=\"image is-square\">\n            <img src={item.image} />\n          </figure>\n          <p className=\"subtitle is-7 has-text-right mt-3\">{item.owner}</p>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default PropertiesModal;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/DisplayRune.tsx",["380","381","382"],"import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../packages/neo/contracts/ftw/nft/interfaces\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n}\n\nconst DisplayRune = ({\n  width,\n  height,\n  tokenId,\n  network,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(tokenId);\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune\"\n      onClick={() => onClick(token)}\n    >\n      <img src={token.image} />\n    </figure>\n  );\n};\n\nexport default DisplayRune;\n","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/index.tsx",["383","384"],"import React, { useEffect } from \"react\";\nimport { utils } from \"../../neo\";\nimport WalletDropdown from \"./WalletDropdown\";\nimport WalletList from \"./WalletList\";\nimport AssetCard from \"./AssetCard\";\nimport { useWallet } from \"../../provider\";\nimport Runes from \"./Runes\";\nimport { Network } from \"../../neo/network\";\n\nconst Wallet = (props) => {\n  const { connectedWallet } = useWallet();\n  return (\n    <>\n      <header className=\"level is-mobile p-3 is-marginless\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <WalletDropdown />\n          </div>\n        </div>\n        {connectedWallet && (\n          <div className=\"level-right\">\n            <div className=\"level-item\">\n              <small>\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </small>\n            </div>\n          </div>\n        )}\n      </header>\n      <hr className=\"m-0\" />\n      <section className=\"p-5\">\n        {connectedWallet ? (\n          <>\n            <div>\n              {connectedWallet &&\n                connectedWallet.balances.map((balance) => {\n                  return <AssetCard key={balance.symbol} {...balance} />;\n                })}\n            </div>\n            <Runes connectedWallet={connectedWallet} />\n          </>\n        ) : (\n          <WalletList />\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default Wallet;\n","/Users/ed/Projects/n3-ftw/client/src/packages/ui/PendingTransaction/index.tsx",["385","386"],"import React, { useEffect } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useWallet } from \"../../provider\";\nimport { Network } from \"../../neo/network\";\n\nconst PendingTransaction = () => {\n  const { network, pendingTransactions, removePendingTransaction } =\n    useWallet();\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        for (const txid of pendingTransactions) {\n          const res = await Network.getRawTx(txid, network);\n          removePendingTransaction(txid);\n        }\n      } catch (e: any) {\n        console.error(e);\n      }\n    }\n\n    if (pendingTransactions.length > 0) {\n      checkTxid();\n    }\n  }, [pendingTransactions]);\n  if (pendingTransactions.length === 0) return <></>;\n  return (\n    <div className=\"navbar-item pr-0\">\n      <div\n        style={{ pointerEvents: \"none\" }}\n        className=\"is-center button is-outlined is-rounded is-small\"\n      >\n        <ClipLoader loading={true} size={15} />\n        <span className=\"ml-2\">{`${pendingTransactions.length} Pending`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default PendingTransaction;\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/wallet/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/network/index.ts",["387"],"import { rpc, sc, u } from \"@cityofzion/neon-core\";\nimport {\n  MAINNET,\n  MAINNET_CONFIG,\n  PRIVATE_CONFIG,\n  PRIVATENET,\n  TESTNET,\n  TESTNET_CONFIG,\n} from \"../consts\";\nimport { InvokeResult } from \"@cityofzion/neon-core/lib/rpc\";\nimport {\n  ApplicationLogJson,\n  GetRawTransactionResult,\n} from \"@cityofzion/neon-core/lib/rpc/Query\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport type INetworkType = typeof PRIVATENET | typeof MAINNET | typeof TESTNET;\n\nexport class Network {\n  private static readonly READ_LOG_FREQUENCY = 6000;\n\n  static getRPCClient = (networkType: INetworkType) => {\n    let config;\n    switch (networkType) {\n      case PRIVATENET:\n        config = PRIVATE_CONFIG;\n        break;\n      case TESTNET:\n        config = TESTNET_CONFIG;\n        break;\n      case MAINNET:\n        config = MAINNET_CONFIG;\n        break;\n    }\n    return new rpc.RPCClient(config.url);\n  };\n\n  static getRawTx = async (txid: string, network: INetworkType) => {\n    const rpcClient = Network.getRPCClient(network);\n    // Cycle\n    let rawTx: GetRawTransactionResult | undefined;\n    do {\n      try {\n      \tconsole.log(\"ping\")\n        rawTx = await rpcClient.getRawTransaction(txid, true);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!rawTx);\n\n    return rawTx;\n  };\n\n  static findNotificationFromTxId = async (\n    txId: string,\n    scriptHash: string,\n    eventName: string,\n    networkType: INetworkType\n  ) => {\n    // Get transaction notifications\n    const notifications = await Network.getNotificationsFromTxId(\n      txId,\n      networkType\n    );\n    // Return selected one\n    return notifications.find(\n      (n: any) => n.contract === \"0x\" + scriptHash && n.eventname === eventName\n    );\n  };\n\n  static getNotificationsFromTxId = async (\n    txId: string,\n    network: INetworkType\n  ) => {\n    // Get rpc client to do calls\n    const rpcClient = Network.getRPCClient(network);\n\n    // Cycle until i get app log to extract notifications from\n    let appLog: ApplicationLogJson | undefined;\n    do {\n      try {\n        appLog = await rpcClient.getApplicationLog(txId);\n      } catch (e) {\n        await Network.sleep(Network.READ_LOG_FREQUENCY);\n      }\n    } while (!appLog);\n\n    // Get notifications from app log and return them\n    const notifications = [] as any;\n    appLog.executions.forEach((e) => {\n      notifications.push(...e.notifications);\n    });\n    return notifications;\n  };\n\n  static read = async (\n    network: INetworkType,\n    scripts: sc.ContractCallJson[]\n  ): Promise<InvokeResult> => {\n    const rpcClient = Network.getRPCClient(network);\n    const sb = new sc.ScriptBuilder();\n    scripts.map((script) => {\n      let params: unknown[] = [];\n      if (script.args) {\n        params = script.args.map((arg) => convertContractCallParam(arg));\n      }\n      sb.emitAppCall(script.scriptHash, script.operation, params);\n    });\n    const res = await rpcClient.invokeScript(u.HexString.fromHex(sb.build()));\n    if (res.state === \"FAULT\") {\n      console.error(\"RPC read error\" + res);\n      throw new Error(res.exception ? res.exception : \"Network error\");\n    }\n    return res;\n  };\n\n  static sleep = (duration: number) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n  };\n}\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/consts/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/utils/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCountdown.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/Modal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/MyPosition.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/TransactionSubmitted.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletList.tsx",["388"],"import React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletList = () => {\n  const { connectWallet, list, useDevWallet } = useWallet();\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          if (!useDevWallet && _wallet.key === DEV) return false;\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} alt=\"React Logo\" />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletDropdown.tsx",["389","390"],"import React, { useState } from \"react\";\n// tslint:disable-next-line:no-submodule-imports\nimport { FaAngleDown } from \"react-icons/all\";\nimport { useApp } from \"../../../common/hooks/use-app\";\nimport { useWallet } from \"../../provider\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletDropdown = () => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectedWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n  if (!connectedWallet) {\n    return (\n      <button className=\"button is-white \" onClick={() => setActive(!isActive)}>\n        <strong>Wallet</strong>\n      </button>\n    );\n  }\n  return (\n    <div className={`dropdown ${isActive && \"is-active\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          className=\"button is-white\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu3\"\n          onClick={() => setActive(!isActive)}\n        >\n          <span className=\"icon is-small\">\n            <img src={getWalletIcon(connectedWallet.key)} />\n          </span>\n          <span>\n            <strong>Wallet</strong>\n          </span>\n          <span className=\"icon is-small\">\n            <FaAngleDown />\n            {/*<i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>*/}\n          </span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <a\n            onClick={handleDisconnectWallet}\n            href=\"#\"\n            className=\"dropdown-item\"\n          >\n            Disconnect\n          </a>\n          {/*<hr className=\"dropdown-divider\"/>*/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/AssetCard.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/wallet/dev-wallet.ts",["391"],"import {\n  DEV_WALLET_PRIVATE_KEY,\n  GAS_SCRIPT_HASH,\n  NEO_SCRIPT_HASH,\n} from \"../consts\";\nimport { CONST, rpc, sc, tx, u, wallet } from \"@cityofzion/neon-core\";\n// tslint:disable-next-line:no-submodule-imports\nimport { BigInteger } from \"@cityofzion/neon-core/lib/u\";\nimport { INetworkType, Network } from \"../network\";\nimport { IBalance } from \"./interfaces\";\nimport { convertContractCallParam } from \"../utils\";\n\nexport class DevWallet {\n  static account = new wallet.Account(DEV_WALLET_PRIVATE_KEY);\n  static async getAccount() {\n    return {\n      address: DevWallet.account.address,\n      label: \"DEV\",\n    };\n  }\n\n  static async getProvider() {\n    return {\n      name: \"Dev wallet\",\n      version: \"0.0\",\n      website: \"https://\",\n      // @ts-ignore\n      compatibility: [],\n      extra: { currency: \"USD\", theme: \"\" },\n    };\n  }\n\n  static async getNetworks(network: INetworkType) {\n    return {\n      chainId: 4,\n      defaultNetwork: network,\n      networks: [\"MainNet\", \"TestNet\", \"N3MainNet\", \"N3TestNet\"],\n    };\n  }\n\n  /* Convert balance as neoline does */\n  static async getBalance(network: INetworkType) {\n    const rpcClient = Network.getRPCClient(network);\n    const res = await rpcClient.getNep17Balances(DevWallet.account.address);\n    const balances: IBalance[] = [];\n    res.balance.forEach((item) => {\n      let symbol;\n      let amount;\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        symbol = \"GAS\";\n        amount = u.BigInteger.fromNumber(item.amount).toDecimal(8).toString();\n      }\n      if (item.assethash.includes(NEO_SCRIPT_HASH)) {\n        symbol = \"NEO\";\n        amount = item.amount;\n      }\n      balances.push({\n        contract: item.assethash,\n        amount,\n        symbol,\n      });\n    });\n    return balances;\n  }\n\n  static async invoke(\n    network: INetworkType,\n    invokeScript: sc.ContractCallJson\n  ) {\n    const rpcClient = Network.getRPCClient(network);\n    const version: any = await rpcClient.getVersion();\n    const txObj = await DevWallet.build(\n      rpcClient,\n      invokeScript,\n      DevWallet.account.address\n    );\n    txObj.sign(DevWallet.account, version.protocol.network);\n    const txid = await rpcClient.sendRawTransaction(txObj);\n    // tslint:disable-next-line:no-console\n    console.log(\n      JSON.stringify(\n        {\n          RPC: rpc,\n          Transaction: txObj,\n          Network: version,\n          \"Network Fee\": txObj.networkFee.toDecimal(8).toString(),\n          \"System Fee\": txObj.systemFee.toDecimal(8).toString(),\n        },\n        null,\n        4\n      )\n    );\n    return {\n      txid,\n      nodeUrl: rpcClient.url,\n    };\n  }\n\n  static build = async (\n    rpcClient: rpc.RPCClient,\n    invokeScript: sc.ContractCallJson,\n    senderAddress: string,\n    cosignerAddress?: string\n  ): Promise<tx.Transaction> => {\n    const currentHeight = await rpcClient.getBlockCount();\n    // @ts-ignore\n    invokeScript.args = invokeScript.args.map((param: any) =>\n      convertContractCallParam(param)\n    );\n    const script = sc.createScript({ ...invokeScript });\n\n    const signers = [\n      {\n        account: wallet.getScriptHashFromAddress(senderAddress),\n        scopes: tx.WitnessScope.Global,\n      },\n    ];\n    if (cosignerAddress) {\n      signers.push({\n        account: wallet.getScriptHashFromAddress(cosignerAddress),\n        scopes: tx.WitnessScope.Global,\n      });\n    }\n\n    const transaction = new tx.Transaction({\n      validUntilBlock: currentHeight + 1,\n      script,\n      signers,\n    });\n\n    transaction.networkFee = await DevWallet.calculateNetworkFee(\n      rpcClient,\n      transaction\n    );\n    const systemFee = await DevWallet.calculateSystemFee(\n      rpcClient,\n      transaction\n    );\n    transaction.systemFee = systemFee;\n    //\n    // if (cosigner) {\n    //   transaction.sign(cosigner, version.network);\n    // }\n    /* Temporary hard coding to solve NeonJS ordering bug */\n    // if (\n    //   transaction.witnesses[0].scriptHash !== sender.scriptHash &&\n    //   signers.length > 1\n    // ) {\n    //   let sig1 = transaction.witnesses[0];\n    //   let sig2 = transaction.witnesses[1];\n    //   transaction.witnesses[1] = sig1;\n    //   transaction.witnesses[0] = sig2;\n    // }\n    return transaction;\n  };\n\n  static calculateNetworkFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ): Promise<BigInteger> => {\n    const invokeFunctionResponse = await rpcClient.invokeFunction(\n      CONST.NATIVE_CONTRACT_HASH.PolicyContract,\n      \"getFeePerByte\"\n    );\n\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    const feePerByte = u.BigInteger.fromNumber(\n      // @ts-ignore\n      invokeFunctionResponse.stack[0].value\n    );\n    // Account for witness size\n    const transactionByteSize = transaction.serialize().length / 2 + 109;\n    // Hardcoded. Running a witness is always the same cost for the basic account.\n    const witnessProcessingFee = u.BigInteger.fromNumber(\n      // In case of cosigner, check signer length check and mul the fee.\n      1000390 * (transaction.signers.length === 1 ? 1 : 3)\n    );\n\n    return feePerByte.mul(transactionByteSize).add(witnessProcessingFee);\n  };\n\n  static calculateSystemFee = async (\n    rpcClient: rpc.RPCClient,\n    transaction: tx.Transaction\n  ) => {\n    const invokeFunctionResponse = await rpcClient.invokeScript(\n      transaction.script,\n      transaction.signers\n    );\n    if (invokeFunctionResponse.state !== \"HALT\") {\n      throw new Error(\n        invokeFunctionResponse.exception\n          ? invokeFunctionResponse.exception\n          : \"Failed\"\n      );\n    }\n\n    return u.BigInteger.fromNumber(invokeFunctionResponse.gasconsumed);\n  };\n\n  static balanceCheck = async (\n    rpcClient: rpc.RPCClient,\n    sender: string,\n    systemFee: number,\n    networkFee: number,\n    transferScript?: sc.ContractCallJson\n  ): Promise<boolean> => {\n    const res = await rpcClient.getNep17Balances(sender);\n    let gasBalance = 0;\n    const requiredGas = systemFee + networkFee;\n    let transferTokenBalance = 0;\n\n    res.balance.map((item) => {\n      if (item.assethash.includes(GAS_SCRIPT_HASH)) {\n        gasBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n      if (\n        transferScript &&\n        transferScript.operation === \"transfer\" &&\n        item.assethash.includes(transferScript.scriptHash)\n      ) {\n        transferTokenBalance = u.Fixed8.fromRawNumber(item.amount).toNumber();\n      }\n    });\n\n    if (gasBalance < requiredGas) {\n      return false;\n    }\n\n    gasBalance = gasBalance - requiredGas;\n\n    if (transferScript && transferScript.operation === \"transfer\") {\n      const transferAmount = u.Fixed8.fromRawNumber(\n        // @ts-ignore\n        transferScript.args[2].value\n      ).toNumber();\n\n      if (transferScript.scriptHash === GAS_SCRIPT_HASH) {\n        if (gasBalance < transferAmount) {\n          return false;\n        }\n      } else {\n        if (transferTokenBalance < transferAmount) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n}\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/local-storage/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/helpers.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/helpers.ts",["392"],"import { IFarmDepositRecord } from \"./interfaces\";\nimport { base64ToDate, base64ToFixed8, base64ToString } from \"../../../utils\";\n\nexport const parseDeposit = (\n  stackItem: any\n): IFarmDepositRecord | undefined => {\n  // TODO check if there no deposit\n  // if (!stackItem.value) return undefined;\n  return {\n    position: stackItem[0].value,\n    amount: stackItem[1].value,\n    lastClaimNo: stackItem[2].value,\n    createdAt: stackItem[3].value,\n  };\n};\n\nexport const parseClaimPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseClaim(stackItem[3].value),\n  };\n};\n\nexport const parseClaim = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      from: item.value[1].value,\n      end: item.value[2].value,\n      GAS: base64ToFixed8(item.value[3].value),\n      FTW: base64ToFixed8(item.value[4].value),\n      createdAt: base64ToDate(item.value[5].value),\n    };\n  });\n};\n\nexport const parseSnapshotPaginate = (stackItem: any) => {\n  return {\n    totalItems: stackItem[0].value,\n    totalPages: stackItem[1].value,\n    page: stackItem[2].value,\n    items: parseSnapshotItem(stackItem[3].value),\n  };\n};\n\nconst parseSnapshotItem = (stackItem) => {\n  return stackItem.map((item) => {\n    return {\n      no: item.value[0].value,\n      totalPositionPool: item.value[1].value, // NEO amount\n      totalNeo: item.value[2].value, // NEO amount\n      totalGas: base64ToFixed8(item.value[3].value),\n      range: base64ToFixed8(item.value[4].value),\n      winPosition: item.value[5].value,\n      createdAt: base64ToDate(item.value[6].value),\n    };\n  });\n};\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nft/helpers.ts",["393"],"import { u } from \"@cityofzion/neon-core\";\nimport { base64ToAddress, base64ToString } from \"../../../utils\";\n\n/* Parse properties from rpc. */\nexport const parseProperties = (stackItem) => {\n  const obj = {};\n  // return JSON.stringify(res, null, 2);\n  stackItem[0].value.map((item) => {\n    const key = u.base642utf8(item.key.value);\n    let value = \"\";\n\n    if (key === \"owner\") {\n      value = base64ToAddress(item.value.value);\n    } else {\n      if (item.value.type === \"Integer\") {\n        value = item.value.value;\n      } else {\n        value = base64ToString(item.value.value);\n      }\n    }\n    obj[key] = value;\n  });\n  return obj;\n};\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/farm/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCard.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/WalletDropdown.tsx",["394","395","396"],"import React, { useEffect, useState } from \"react\";\nimport { utils } from \"../../packages/neo\";\nimport { IConnectedWallet } from \"../../packages/neo/wallet/interfaces\";\nimport { useWallet } from \"../../packages/provider\";\nimport { useApp } from \"../../common/hooks/use-app\";\nimport { getWalletIcon } from \"../../packages/ui/Wallet/helpers\";\nimport { COLLECTION_PATH } from \"../../consts\";\nimport { NavLink } from \"react-router-dom\";\nimport { NEO_LINE, O3 } from \"../../packages/neo/consts\";\nimport neo3Dapi from \"neo3-dapi\";\ninterface IWalletDropdownProps {\n  connectedWallet: IConnectedWallet;\n}\nconst WalletDropdown = ({ connectedWallet }: IWalletDropdownProps) => {\n  const [isActive, setActive] = useState(false);\n  const { disConnectWallet, connectWallet } = useWallet();\n  const { toggleWalletSidebar } = useApp();\n  const handleDisconnectWallet = () => {\n    setActive(false);\n    toggleWalletSidebar();\n    disConnectWallet();\n  };\n\n  const onActive = () => setActive(!isActive);\n\n  useEffect(() => {\n    const refresh = () => {\n      connectWallet(connectedWallet.key);\n    };\n    const disconnected = () => {\n      disConnectWallet();\n    };\n\n    if (connectedWallet.key === NEO_LINE) {\n      window.addEventListener(\"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.NETWORK_CHANGED\", refresh);\n      window.addEventListener(\"NEOLine.NEO.EVENT.DISCONNECTED\", disconnected);\n      return () => {\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.ACCOUNT_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.NETWORK_CHANGED\",\n          refresh\n        );\n        window.removeEventListener(\n          \"NEOLine.NEO.EVENT.DISCONNECTED\",\n          disconnected\n        );\n      };\n    }\n    if (connectedWallet.key === O3) {\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n        refresh\n      );\n\n      neo3Dapi.addEventListener(\n        neo3Dapi.Constants.EventName.DISCONNECTED,\n        disconnected\n      );\n\n      return () => {\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.ACCOUNT_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.NETWORK_CHANGED,\n          refresh\n        );\n        neo3Dapi.removeEventListener(\n          neo3Dapi.Constants.EventName.DISCONNECTED,\n          disconnected\n        );\n      };\n    }\n  }, []);\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className=\"button is-small is-black is-rounded\"\n          aria-controls=\"dropdown-wallet\"\n        >\n          <span>{utils.truncateAddress(connectedWallet.account.address)}</span>\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <img src={getWalletIcon(connectedWallet.key)} />\n              </div>\n              <div className=\"media-content\">\n                {utils.truncateAddress(connectedWallet.account.address)}\n              </div>\n            </div>\n          </div>\n          <hr className=\"dropdown-divider\" />\n          <NavLink\n            className=\"dropdown-item has-text-dark\"\n            onClick={() => setActive(false)}\n            to={COLLECTION_PATH}\n          >\n            My NFT\n          </NavLink>\n          <hr className=\"dropdown-divider\" />\n          <a onClick={handleDisconnectWallet} className=\"dropdown-item\">\n            Disconnect\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WalletDropdown;\n","/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/Runes.tsx",["397","398","399","400","401","402"],"import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../neo/contracts\";\nimport { IRuneMeta } from \"../../neo/contracts/ftw/nft/interfaces\";\nimport { useWallet } from \"../../provider\";\nimport toast from \"react-hot-toast\";\nimport DisplayRune from \"../../../ui/pages/Gallery/DisplayRune\";\nimport DisplayRandomRune from \"../../../ui/components/DisplayRandomRune\";\nimport { IConnectedWallet } from \"../../neo/wallet/interfaces\";\n\ninterface IRunesProps {\n  connectedWallet: IConnectedWallet;\n}\nconst Runes = ({ connectedWallet }: IRunesProps) => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  useState<IRuneMeta>();\n  const { network } = useWallet();\n  // const onPropertiesModalActive = (obj: IRuneMeta) => {\n  //   if (connectedWallet) {\n  //     setPropertiesModalActive(obj);\n  //   } else {\n  //     toast.error(\"Please connect wallet.\");\n  //   }\n  // };\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getTokens();\n        setTokens(res);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet]);\n  return (\n    <div>\n      <div\n        style={{\n          flexFlow: \"wrap\",\n          // width: \"640px\",\n          // margin: \"0 auto\"\n        }}\n        className=\"is-flex\"\n      >\n        {/*{tokens.map((tokenId) => (*/}\n        {/*  <DisplayRune*/}\n        {/*    tokenId={tokenId}*/}\n        {/*    network={network}*/}\n        {/*    onClick={() => false}*/}\n        {/*  />*/}\n        {/*))}*/}\n        {/*<DisplayRandomRune width=\"64px\" height=\"64px\" />*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Runes;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/MyCollection/index.tsx",["403"],"import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport PropertiesModal from \"../Gallery/PropertiesModal\";\nimport { GALLERY_PATH } from \"../../../consts\";\nimport { Link } from \"react-router-dom\";\n\nconst MyCollection = () => {\n  const [tokens, setTokens] = useState<any>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState<string>();\n  const { connectedWallet, network } = useWallet();\n  const onPropertiesModalActive = (tokenId: string) => {\n    setPropertiesModalActive(tokenId);\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus(address: string) {\n      setError(\"\");\n      try {\n        const res = await new NFTContract(network).getTokensOf(address);\n        setTokens(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    if (connectedWallet) {\n      fetchContractStatus(connectedWallet.account.address);\n    }\n  }, [connectedWallet, network]);\n  return (\n    <>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">My collection</h1>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"columns is-multiline\">\n            {tokens.length > 0 ? (\n              tokens.map((token) => (\n                <div className=\"column is-3\">\n                  <figure\n                    className=\"image\"\n                    onClick={() => onPropertiesModalActive(token.tokenId)}\n                  >\n                    <img src={token.image} />\n                  </figure>\n                </div>\n              ))\n            ) : (\n              <div className=\"column is-3\">\n                <div className=\"box\">\n                  <div className=\"block\">\n                    <p>You don't have any runes yet</p>\n                  </div>\n\n                  <Link className=\"button is-primary\" to={GALLERY_PATH}>\n                    Go Get Them\n                  </Link>\n                </div>\n                {/*<DisplayRandomRune width=\"100%\" height=\"100%\" />*/}\n              </div>\n            )}\n          </div>\n        )}\n      </PageLayout>\n      {/*<button onClick={onMint} className=\"button is-black\">Mint</button>*/}\n      {propertiesModalActive && (\n        <PropertiesModal\n          tokenId={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MyCollection;\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/bank/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/nep17/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/PositionModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/About.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/smith/helpers.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/ActionModal.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Smith/ContractCard.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/NetworkCheck.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/components/NetworkSwitch.tsx",["404","405"],"import React, { useEffect, useState } from \"react\";\nimport { useWallet } from \"../../packages/provider\";\nimport { MAINNET, TESTNET } from \"../../packages/neo/consts\";\nconst NetworkSwitch = () => {\n  const [isActive, setActive] = useState(false);\n  const { network, switchNetwork } = useWallet();\n\n  const onActive = () => setActive(!isActive);\n  const handleNetworkChange = () => {\n    // eslint-disable-next-line no-restricted-globals\n    if (confirm(\"Are you sure to switch network?\")) {\n      switchNetwork(network === TESTNET ? MAINNET : TESTNET);\n      setActive(false);\n    }\n  };\n  return (\n    <div className={`dropdown is-right ${isActive ? \"is-active\" : \"\"}`}>\n      <div className=\"dropdown-trigger\">\n        <button\n          onClick={onActive}\n          className={`button is-small ${\n            network === TESTNET ? \"is-danger\" : \"is-white\"\n          }`}\n          aria-controls=\"dropdown-wallet\"\n        >\n          {network}\n        </button>\n      </div>\n      <div className=\"dropdown-menu\" id=\"dropdown-wallet\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          <div className=\"dropdown-item\">\n            <a onClick={handleNetworkChange}>\n              {network === TESTNET ? `Switch to Mainnet` : `Switch to Testnet`}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NetworkSwitch;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/Banner.tsx",["406","407"],"import React from \"react\";\nimport DisplayRandomRune from \"../../components/DisplayRandomRune\";\nimport {\n  RUNE_PHASE_FILTER,\n  RUNE_PRICE,\n} from \"../../../packages/neo/contracts/ftw/nft/consts\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport { u } from \"@cityofzion/neon-core\";\ninterface IBannerProps {\n  network: INetworkType;\n  filter: string;\n  onMint: () => void;\n  onFilterChange: (val: string) => void;\n}\nconst Banner = ({ onMint, onFilterChange, filter, network }: IBannerProps) => {\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div>\n                <h1 className=\"title\">Forthewin Runes</h1>\n                <p className=\"subtitle\">Algorithms-generated lucky runes</p>\n\n                <div className=\"content is-small\">\n                  <p>\n                    <strong>Max supply</strong>\n                    <br />\n                    500 runes\n                  </p>\n                  <p>\n                    <strong>Attribute #1</strong>\n                    <br />\n                    Random phase (Dark, Light, Fire, Water, Wood, Earth, Metal)\n                  </p>\n                  <p>\n                    <strong>Attribute #2</strong>\n                    <br /> Luck (1 ~ 10)\n                  </p>\n                </div>\n                <div className=\"block has-text-centered-mobile is-hidden-mobile\">\n                  <button\n                    onClick={onMint}\n                    className=\"button is-primary press-font\"\n                  >\n                    Mint: {RUNE_PRICE[network]} GAS\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div\n                className=\"block\"\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <DisplayRandomRune\n                  isActive={true}\n                  width=\"230px\"\n                  height=\"230px\"\n                />\n              </div>\n              <div className=\"block has-text-centered-mobile is-hidden-tablet\">\n                <button\n                  onClick={onMint}\n                  className=\"button is-primary press-font\"\n                >\n                  Mint: {RUNE_PRICE[network]} GAS\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/*<div className=\"hero-foot\">*/}\n      {/*  <nav className=\"tabs is-boxed is-fullwidth\">*/}\n      {/*    <div className=\"container\">*/}\n      {/*      <ul>*/}\n      {/*        {RUNE_PHASE_FILTER.map((phase) => {*/}\n      {/*          return (*/}\n      {/*            <li*/}\n      {/*              key={phase}*/}\n      {/*              className={filter === phase ? \"is-active\" : \"\"}*/}\n      {/*            >*/}\n      {/*              <a onClick={() => onFilterChange(phase)}>{phase}</a>*/}\n      {/*            </li>*/}\n      {/*          );*/}\n      {/*        })}*/}\n      {/*      </ul>*/}\n      {/*    </div>*/}\n      {/*  </nav>*/}\n      {/*</div>*/}\n    </section>\n  );\n};\n\nexport default Banner;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/index.tsx",["408","409"],"import React from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport Banner from \"./scenes/Arena/Banner\";\nimport { ARENA_HOME_PATH, ARENA_PATH } from \"./pageRoutes\";\nimport { Route } from \"react-router-dom\";\nimport ArenaHome from \"./scenes/Home\";\nimport Arena from \"./scenes/Arena\";\n\nconst Tournament = () => {\n  return (\n    <section>\n      <Route exact={true} path={ARENA_HOME_PATH} component={ArenaHome} />\n      <Route exact={true} path={ARENA_PATH} component={Arena} />\n    </section>\n  );\n};\n\nexport default Tournament;\n","/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/DisplayRune.tsx",["410","411","412"],"import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../packages/neo/contracts/ftw/nft/interfaces\";\n\ninterface IDisplayRuneProps {\n  width: string;\n  height: string;\n  tokenId: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n}\n\nconst DisplayRune = ({\n  width,\n  height,\n  tokenId,\n  network,\n  onClick,\n}: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      try {\n        const res = await new NFTContract(network).getProperties(tokenId);\n        setToken(res);\n      } catch (e: any) {\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure\n      style={{ width, height }}\n      className=\"image rune\"\n      onClick={() => onClick({ ...token, tokenId })}\n    >\n      <img src={token.image} />\n    </figure>\n  );\n};\n\nexport default DisplayRune;\n","/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/contracts/ftw/tournament/helpers.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/Stage4.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/pageRoutes.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/index.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/rest.ts",[],"/Users/ed/Projects/n3-ftw/client/src/packages/neo/api/consts.ts",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Arena/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Home/index.tsx",[],"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Tournament/scenes/Arena/Banner.tsx",["413","414"],"import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\ninterface IBanner {\n\tarenaNo: string\n}\nconst Banner = ({arenaNo}: IBanner) => {\n  return (\n    <section className=\"hero is-white\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div>\n                <h1 className=\"title\">Arena {arenaNo}</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hero-foot\">\n        <nav className=\"tabs is-boxed is-fullwidth\">\n          <div className=\"container\">\n            <ul>\n              {/*<li*/}\n              {/*  className={*/}\n              {/*    location.pathname === PLAYERS_PATH ? \"is-active\" : \"\"*/}\n              {/*  }*/}\n              {/*>*/}\n              {/*  <Link to={PLAYERS_PATH}>Players</Link>*/}\n              {/*</li>*/}\n              {/*<li*/}\n              {/*  className={*/}\n              {/*    location.pathname === HISTORY_PATH ? \"is-active\" : \"\"*/}\n              {/*  }*/}\n              {/*>*/}\n              {/*  <Link to={HISTORY_PATH}>Champions</Link>*/}\n              {/*</li>*/}\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n",{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","replacedBy":"418"},{"ruleId":"419","severity":1,"message":"420","line":71,"column":21,"nodeType":"421","endLine":71,"endColumn":69},{"ruleId":"422","severity":1,"message":"423","line":87,"column":15,"nodeType":"421","endLine":87,"endColumn":75},{"ruleId":"424","severity":1,"message":"425","line":5,"column":8,"nodeType":"426","messageId":"427","endLine":5,"endColumn":25},{"ruleId":"428","severity":1,"message":"429","line":45,"column":19,"nodeType":"421","messageId":"430","endLine":49,"endColumn":20,"fix":"431"},{"ruleId":"428","severity":1,"message":"429","line":82,"column":19,"nodeType":"421","messageId":"430","endLine":86,"endColumn":20,"fix":"432"},{"ruleId":"428","severity":1,"message":"429","line":101,"column":19,"nodeType":"421","messageId":"430","endLine":105,"endColumn":20,"fix":"433"},{"ruleId":"428","severity":1,"message":"429","line":113,"column":19,"nodeType":"421","messageId":"430","endLine":117,"endColumn":20,"fix":"434"},{"ruleId":"435","severity":1,"message":"436","line":50,"column":6,"nodeType":"437","endLine":50,"endColumn":30,"suggestions":"438"},{"ruleId":"422","severity":1,"message":"423","line":63,"column":19,"nodeType":"421","endLine":63,"endColumn":55},{"ruleId":"422","severity":1,"message":"423","line":67,"column":21,"nodeType":"421","endLine":67,"endColumn":59},{"ruleId":"422","severity":1,"message":"423","line":71,"column":19,"nodeType":"421","endLine":71,"endColumn":60},{"ruleId":"422","severity":1,"message":"423","line":74,"column":19,"nodeType":"421","endLine":74,"endColumn":56},{"ruleId":"419","severity":1,"message":"420","line":82,"column":15,"nodeType":"421","endLine":82,"endColumn":40},{"ruleId":"424","severity":1,"message":"439","line":4,"column":10,"nodeType":"426","messageId":"427","endLine":4,"endColumn":22},{"ruleId":"424","severity":1,"message":"440","line":4,"column":30,"nodeType":"426","messageId":"427","endLine":4,"endColumn":40},{"ruleId":"435","severity":1,"message":"441","line":30,"column":6,"nodeType":"437","endLine":30,"endColumn":8,"suggestions":"442"},{"ruleId":"419","severity":1,"message":"420","line":33,"column":5,"nodeType":"421","endLine":33,"endColumn":77},{"ruleId":"424","severity":1,"message":"443","line":14,"column":10,"nodeType":"426","messageId":"427","endLine":14,"endColumn":14},{"ruleId":"424","severity":1,"message":"444","line":3,"column":8,"nodeType":"426","messageId":"427","endLine":3,"endColumn":25},{"ruleId":"435","severity":1,"message":"445","line":31,"column":6,"nodeType":"437","endLine":31,"endColumn":15,"suggestions":"446"},{"ruleId":"419","severity":1,"message":"420","line":47,"column":13,"nodeType":"421","endLine":47,"endColumn":37},{"ruleId":"424","severity":1,"message":"447","line":3,"column":10,"nodeType":"426","messageId":"427","endLine":3,"endColumn":19},{"ruleId":"435","severity":1,"message":"436","line":33,"column":6,"nodeType":"437","endLine":33,"endColumn":15,"suggestions":"448"},{"ruleId":"419","severity":1,"message":"420","line":41,"column":7,"nodeType":"421","endLine":41,"endColumn":32},{"ruleId":"424","severity":1,"message":"449","line":1,"column":17,"nodeType":"426","messageId":"427","endLine":1,"endColumn":26},{"ruleId":"424","severity":1,"message":"450","line":8,"column":10,"nodeType":"426","messageId":"427","endLine":8,"endColumn":17},{"ruleId":"424","severity":1,"message":"451","line":13,"column":17,"nodeType":"426","messageId":"427","endLine":13,"endColumn":20},{"ruleId":"435","severity":1,"message":"452","line":24,"column":6,"nodeType":"437","endLine":24,"endColumn":27,"suggestions":"453"},{"ruleId":"454","severity":1,"message":"455","line":102,"column":26,"nodeType":"456","messageId":"457","endLine":102,"endColumn":28},{"ruleId":"422","severity":1,"message":"423","line":18,"column":13,"nodeType":"421","endLine":22,"endColumn":14},{"ruleId":"419","severity":1,"message":"420","line":34,"column":13,"nodeType":"421","endLine":34,"endColumn":61},{"ruleId":"422","severity":1,"message":"458","line":47,"column":11,"nodeType":"421","endLine":51,"endColumn":12},{"ruleId":"454","severity":1,"message":"455","line":220,"column":28,"nodeType":"456","messageId":"457","endLine":220,"endColumn":30},{"ruleId":"424","severity":1,"message":"459","line":2,"column":40,"nodeType":"426","messageId":"427","endLine":2,"endColumn":54},{"ruleId":"454","severity":1,"message":"455","line":8,"column":33,"nodeType":"456","messageId":"457","endLine":8,"endColumn":35},{"ruleId":"435","severity":1,"message":"460","line":84,"column":6,"nodeType":"437","endLine":84,"endColumn":8,"suggestions":"461"},{"ruleId":"419","severity":1,"message":"420","line":101,"column":17,"nodeType":"421","endLine":101,"endColumn":65},{"ruleId":"422","severity":1,"message":"423","line":117,"column":11,"nodeType":"421","endLine":117,"endColumn":73},{"ruleId":"424","severity":1,"message":"462","line":5,"column":8,"nodeType":"426","messageId":"427","endLine":5,"endColumn":13},{"ruleId":"424","severity":1,"message":"463","line":6,"column":8,"nodeType":"426","messageId":"427","endLine":6,"endColumn":19},{"ruleId":"424","severity":1,"message":"425","line":7,"column":8,"nodeType":"426","messageId":"427","endLine":7,"endColumn":25},{"ruleId":"424","severity":1,"message":"464","line":14,"column":10,"nodeType":"426","messageId":"427","endLine":14,"endColumn":16},{"ruleId":"424","severity":1,"message":"465","line":15,"column":10,"nodeType":"426","messageId":"427","endLine":15,"endColumn":15},{"ruleId":"435","severity":1,"message":"436","line":35,"column":6,"nodeType":"437","endLine":35,"endColumn":23,"suggestions":"466"},{"ruleId":"419","severity":1,"message":"420","line":57,"column":21,"nodeType":"421","endLine":57,"endColumn":46},{"ruleId":"424","severity":1,"message":"449","line":1,"column":17,"nodeType":"426","messageId":"427","endLine":1,"endColumn":26},{"ruleId":"422","severity":1,"message":"423","line":32,"column":13,"nodeType":"421","endLine":32,"endColumn":46},{"ruleId":"424","severity":1,"message":"467","line":4,"column":3,"nodeType":"426","messageId":"427","endLine":4,"endColumn":20},{"ruleId":"424","severity":1,"message":"468","line":8,"column":10,"nodeType":"426","messageId":"427","endLine":8,"endColumn":11},{"ruleId":"424","severity":1,"message":"469","line":2,"column":8,"nodeType":"426","messageId":"427","endLine":2,"endColumn":18},{"ruleId":"424","severity":1,"message":"470","line":3,"column":8,"nodeType":"426","messageId":"427","endLine":3,"endColumn":14},{"ruleId":"424","severity":1,"message":"447","line":3,"column":10,"nodeType":"426","messageId":"427","endLine":3,"endColumn":19},{"ruleId":"435","severity":1,"message":"436","line":33,"column":6,"nodeType":"437","endLine":33,"endColumn":15,"suggestions":"471"},{"ruleId":"419","severity":1,"message":"420","line":41,"column":7,"nodeType":"421","endLine":41,"endColumn":32},{"ruleId":"424","severity":1,"message":"472","line":2,"column":10,"nodeType":"426","messageId":"427","endLine":2,"endColumn":14},{"ruleId":"424","severity":1,"message":"473","line":2,"column":16,"nodeType":"426","messageId":"427","endLine":2,"endColumn":27},"no-native-reassign",["474"],"no-negated-in-lhs",["475"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","@typescript-eslint/no-unused-vars","'DisplayRandomRune' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"476","text":"477"},{"range":"478","text":"477"},{"range":"479","text":"477"},{"range":"480","text":"477"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'network'. Either include it or remove the dependency array.","ArrayExpression",["481"],"'GALLERY_PATH' is defined but never used.","'SMITH_PATH' is defined but never used.","React Hook useEffect has a missing dependency: 'isActive'. Either include it or remove the dependency array.",["482"],"'txid' is assigned a value but never used.","'SnapshotCountdown' is defined but never used.","React Hook useEffect has a missing dependency: 'tokenId'. Either include it or remove the dependency array.",["483"],"'useWallet' is defined but never used.",["484"],"'useEffect' is defined but never used.","'Network' is defined but never used.","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'network' and 'removePendingTransaction'. Either include them or remove the dependency array.",["485"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'base64ToString' is defined but never used.","React Hook useEffect has missing dependencies: 'connectWallet', 'connectedWallet.key', and 'disConnectWallet'. Either include them or remove the dependency array.",["486"],"'toast' is defined but never used.","'DisplayRune' is defined but never used.","'tokens' is assigned a value but never used.","'error' is assigned a value but never used.",["487"],"'RUNE_PHASE_FILTER' is defined but never used.","'u' is defined but never used.","'PageLayout' is defined but never used.","'Banner' is defined but never used.",["488"],"'Link' is defined but never used.","'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation",[1534,1534]," rel=\"noreferrer\"",[2862,2862],[3501,3501],[3973,3973],{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"493","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"493","fix":"502"},"Update the dependencies array to be: [connectedWallet, network, route]",{"range":"503","text":"504"},"Update the dependencies array to be: [isActive]",{"range":"505","text":"506"},"Update the dependencies array to be: [network, tokenId]",{"range":"507","text":"508"},{"range":"509","text":"508"},"Update the dependencies array to be: [network, pendingTransactions, removePendingTransaction]",{"range":"510","text":"511"},"Update the dependencies array to be: [connectWallet, connectedWallet.key, disConnectWallet]",{"range":"512","text":"513"},"Update the dependencies array to be: [connectedWallet, network]",{"range":"514","text":"515"},{"range":"516","text":"508"},[1983,2007],"[connectedWallet, network, route]",[1444,1446],"[isActive]",[923,932],"[network, tokenId]",[881,890],[664,685],"[network, pendingTransactions, removePendingTransaction]",[2595,2597],"[connectWallet, connectedWallet.key, disConnectWallet]",[1197,1214],"[connectedWallet, network]",[881,890]]