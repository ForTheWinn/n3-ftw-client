{"ast":null,"code":"var _jsxFileName = \"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCountdown.tsx\";\nimport React from \"react\";\nimport Countdown from \"react-countdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SnapshotCountdown = _ref => {\n  let {\n    timeLeft,\n    onCreateSnapshot\n  } = _ref;\n\n  const CreateSnapshotBtn = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onCreateSnapshot,\n    className: \"button is-button is-primary\",\n    children: \"Creat snapshot\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n\n  if (timeLeft < 1) {\n    return /*#__PURE__*/_jsxDEV(CreateSnapshotBtn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Countdown, {\n    date: Date.now() + timeLeft,\n    renderer: props => {\n      if (props.completed) {\n        return /*#__PURE__*/_jsxDEV(CreateSnapshotBtn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [props.hours, \":\", props.minutes, \":\", props.seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SnapshotCountdown;\nexport default SnapshotCountdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"SnapshotCountdown\");","map":{"version":3,"sources":["/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/SnapshotCountdown.tsx"],"names":["React","Countdown","SnapshotCountdown","timeLeft","onCreateSnapshot","CreateSnapshotBtn","Date","now","props","completed","hours","minutes","seconds"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;AAMA,MAAMC,iBAAiB,GAAG,QAGK;AAAA,MAHJ;AACzBC,IAAAA,QADyB;AAEzBC,IAAAA;AAFyB,GAGI;;AAC7B,QAAMC,iBAAiB,GAAG,mBACxB;AAAQ,IAAA,OAAO,EAAED,gBAAjB;AAAmC,IAAA,SAAS,EAAC,6BAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAKA,MAAID,QAAQ,GAAG,CAAf,EAAkB;AAChB,wBAAO,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,SAAD;AACE,IAAA,IAAI,EAAEG,IAAI,CAACC,GAAL,KAAaJ,QADrB;AAEE,IAAA,QAAQ,EAAGK,KAAD,IAAW;AACnB,UAAIA,KAAK,CAACC,SAAV,EAAqB;AACnB,4BAAO,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BACE;AAAA,qBACGD,KAAK,CAACE,KADT,OACiBF,KAAK,CAACG,OADvB,OACiCH,KAAK,CAACI,OADvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AACF;AAZH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA5BD;;KAAMV,iB;AA8BN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport Countdown from \"react-countdown\";\n\ninterface ISnapshotCountdownProps {\n  timeLeft: number;\n  onCreateSnapshot: () => void;\n}\nconst SnapshotCountdown = ({\n  timeLeft,\n  onCreateSnapshot,\n}: ISnapshotCountdownProps) => {\n  const CreateSnapshotBtn = () => (\n    <button onClick={onCreateSnapshot} className=\"button is-button is-primary\">\n      Creat snapshot\n    </button>\n  );\n  if (timeLeft < 1) {\n    return <CreateSnapshotBtn />;\n  }\n  return (\n    <Countdown\n      date={Date.now() + timeLeft}\n      renderer={(props) => {\n        if (props.completed) {\n          return <CreateSnapshotBtn />;\n        } else {\n          return (\n            <span>\n              {props.hours}:{props.minutes}:{props.seconds}\n            </span>\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport default SnapshotCountdown;\n"]},"metadata":{},"sourceType":"module"}