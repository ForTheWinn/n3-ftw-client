{"ast":null,"code":"var _jsxFileName = \"/Users/ed/Projects/n3-ftw/client/src/packages/ui/PendingTransaction/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useWallet } from \"../../provider\";\nimport { Network } from \"../../neo/network\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PendingTransaction = props => {\n  _s();\n\n  const {\n    network,\n    pendingTransactions,\n    removePendingTransaction\n  } = useWallet(); // const [items, setItems] = useState<ITransaction[]>([]);\n  // const handleTransactionsChange = useCallback(async (event) => {\n  //   const transactions = LocalStorage.getTransactions();\n  //   const pendingTransactions = transactions.filter(\n  //     (i) => i.status === \"PENDING\"\n  //   );\n  //   if (pendingTransactions.length > 0) {\n  //     setItems(transactions);\n  //     for (const tx of transactions) {\n  //       const res = await Network.getRawTx(tx.txid, network);\n  //       setItems(items.filter((i) => i.txid !== tx.txid));\n  //       console.log(1);\n  //       console.log(res);\n  //     }\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        for (const txid of pendingTransactions) {\n          const res = await Network.getRawTx(txid, network);\n          removePendingTransaction(txid);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    if (pendingTransactions.length > 0) {\n      checkTxid();\n    } // handleTransactionsChange(() => {});\n    // window.addEventListener(\"transactions\", handleTransactionsChange);\n    // return () => {\n    //   window.removeEventListener(\"transactions\", handleTransactionsChange);\n    // };\n\n  }, [pendingTransactions]); // console.log(items);\n\n  if (pendingTransactions.length === 0) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar-item pr-0\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        pointerEvents: \"none\"\n      },\n      className: \"is-center button is-outlined is-rounded is-small\",\n      children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n        loading: true,\n        size: 15\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2\",\n        children: `${pendingTransactions.length} Pending`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PendingTransaction, \"7/pSPD9Hpjg73Wab2wQAnVpT9fk=\", false, function () {\n  return [useWallet];\n});\n\n_c = PendingTransaction;\nexport default PendingTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"PendingTransaction\");","map":{"version":3,"sources":["/Users/ed/Projects/n3-ftw/client/src/packages/ui/PendingTransaction/index.tsx"],"names":["React","useEffect","ClipLoader","useWallet","Network","PendingTransaction","props","network","pendingTransactions","removePendingTransaction","checkTxid","txid","res","getRawTx","e","console","error","length","pointerEvents"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,OAAT,QAAwB,mBAAxB;;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,mBAAX;AAAgCC,IAAAA;AAAhC,MACJN,SAAS,EADX,CADoC,CAGpC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,SAAf,GAA2B;AACzB,UAAI;AACF,aAAK,MAAMC,IAAX,IAAmBH,mBAAnB,EAAwC;AACtC,gBAAMI,GAAG,GAAG,MAAMR,OAAO,CAACS,QAAR,CAAiBF,IAAjB,EAAuBJ,OAAvB,CAAlB;AACAE,UAAAA,wBAAwB,CAACE,IAAD,CAAxB;AACD;AACF,OALD,CAKE,OAAOG,CAAP,EAAe;AACfC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;;AAED,QAAIN,mBAAmB,CAACS,MAApB,GAA6B,CAAjC,EAAoC;AAClCP,MAAAA,SAAS;AACV,KAda,CAed;AACA;AACA;AACA;AACA;;AACD,GApBQ,EAoBN,CAACF,mBAAD,CApBM,CAAT,CArBoC,CA0CpC;;AACA,MAAIA,mBAAmB,CAACS,MAApB,KAA+B,CAAnC,EAAsC,oBAAO,qCAAP;AACtC,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACE;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OADT;AAEE,MAAA,SAAS,EAAC,kDAFZ;AAAA,8BAIE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE,IAArB;AAA2B,QAAA,IAAI,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,kBAAyB,GAAEV,mBAAmB,CAACS,MAAO;AAAtD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvDD;;GAAMZ,kB;UAEFF,S;;;KAFEE,kB;AAyDN,eAAeA,kBAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useWallet } from \"../../provider\";\nimport { Network } from \"../../neo/network\";\n\nconst PendingTransaction = (props) => {\n  const { network, pendingTransactions, removePendingTransaction } =\n    useWallet();\n  // const [items, setItems] = useState<ITransaction[]>([]);\n\n  // const handleTransactionsChange = useCallback(async (event) => {\n  //   const transactions = LocalStorage.getTransactions();\n  //   const pendingTransactions = transactions.filter(\n  //     (i) => i.status === \"PENDING\"\n  //   );\n  //   if (pendingTransactions.length > 0) {\n  //     setItems(transactions);\n  //     for (const tx of transactions) {\n  //       const res = await Network.getRawTx(tx.txid, network);\n  //       setItems(items.filter((i) => i.txid !== tx.txid));\n  //       console.log(1);\n  //       console.log(res);\n  //     }\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    async function checkTxid() {\n      try {\n        for (const txid of pendingTransactions) {\n          const res = await Network.getRawTx(txid, network);\n          removePendingTransaction(txid);\n        }\n      } catch (e: any) {\n        console.error(e);\n      }\n    }\n\n    if (pendingTransactions.length > 0) {\n      checkTxid();\n    }\n    // handleTransactionsChange(() => {});\n    // window.addEventListener(\"transactions\", handleTransactionsChange);\n    // return () => {\n    //   window.removeEventListener(\"transactions\", handleTransactionsChange);\n    // };\n  }, [pendingTransactions]);\n  // console.log(items);\n  if (pendingTransactions.length === 0) return <></>;\n  return (\n    <div className=\"navbar-item pr-0\">\n      <div\n        style={{ pointerEvents: \"none\" }}\n        className=\"is-center button is-outlined is-rounded is-small\"\n      >\n        <ClipLoader loading={true} size={15} />\n        <span className=\"ml-2\">{`${pendingTransactions.length} Pending`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default PendingTransaction;\n"]},"metadata":{},"sourceType":"module"}