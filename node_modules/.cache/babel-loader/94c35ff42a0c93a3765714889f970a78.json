{"ast":null,"code":"var _jsxFileName = \"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Mint/ActionModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ActionModal = _ref => {\n  _s();\n\n  let {\n    onClose\n  } = _ref;\n  const {\n    network,\n    connectedWallet,\n    openWalletModal\n  } = useWallet();\n  const [txid, setTxid] = useState();\n\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {// const txid = await new FarmContract(network).deposit(\n        //   connectedWallet,\n        // );\n        // setTxid(txid);\n      } catch (e) {\n        console.error(e); // @ts-ignore\n\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    children: txid ? /*#__PURE__*/_jsxDEV(TransactionSubmitted, {\n      txid: txid,\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title is-flex\",\n        children: \"Deposit NEO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onMint,\n        className: \"button is-button is-black\",\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActionModal, \"WLl5BrjM/RC6FCf/vuzSVUk6Ymw=\", false, function () {\n  return [useWallet];\n});\n\n_c = ActionModal;\nexport default ActionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionModal\");","map":{"version":3,"sources":["/Users/ed/Projects/n3-ftw/client/src/ui/pages/Mint/ActionModal.tsx"],"names":["React","useState","Modal","useWallet","toast","TransactionSubmitted","ActionModal","onClose","network","connectedWallet","openWalletModal","txid","setTxid","onMint","e","console","error","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAGA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;;;;AAKA,MAAMC,WAAW,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAAEC,IAAAA;AAAF,GAA8B;AACjD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA;AAA5B,MAAgDP,SAAS,EAA/D;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;;AACA,QAAMY,MAAM,GAAG,YAAY;AACzB,QAAIJ,eAAJ,EAAqB;AACnB,UAAI,CACF;AACA;AACA;AACA;AACD,OALD,CAKE,OAAOK,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd,EADU,CAEV;;AACAV,QAAAA,KAAK,CAACY,KAAN,CAAYF,CAAC,CAACG,OAAd;AACD;AACF,KAXD,MAWO;AACLP,MAAAA,eAAe;AAChB;AACF,GAfD;;AAgBA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEH,OAAhB;AAAA,cACGI,IAAI,gBACH,QAAC,oBAAD;AAAsB,MAAA,IAAI,EAAEA,IAA5B;AAAkC,MAAA,OAAO,EAAEJ;AAA3C;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AACE,QAAA,OAAO,EAAEM,MADX;AAEE,QAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxCD;;GAAMP,W;UACkDH,S;;;KADlDG,W;AA0CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport NumberFormat from \"react-number-format\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\n\ninterface IActionModal {\n  onClose: () => void;\n}\nconst ActionModal = ({ onClose }: IActionModal) => {\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        // const txid = await new FarmContract(network).deposit(\n        //   connectedWallet,\n        // );\n        // setTxid(txid);\n      } catch (e) {\n        console.error(e);\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">\n            {/*<img src={\"/neo_512_512.svg\"} />*/}\n            Deposit NEO\n          </h1>\n\n          <button\n            onClick={onMint}\n            className=\"button is-button is-black\"\n          >\n            Deposit\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default ActionModal;\n"]},"metadata":{},"sourceType":"module"}