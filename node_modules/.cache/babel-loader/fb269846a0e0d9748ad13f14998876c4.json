{"ast":null,"code":"var _jsxFileName = \"/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WalletList = props => {\n  _s();\n\n  const {\n    connectWallet,\n    list,\n    useDevWallet\n  } = useWallet();\n\n  const onConnect = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitle is-6\",\n      children: \"Connect with one of our available wallet info providers or create a new one.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"panel\",\n      children: list.map(_wallet => {\n        if (!useDevWallet && _wallet.key === DEV) return false;\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"panel-block\",\n          onClick: () => connectWallet(_wallet.key),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"panel-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: getWalletIcon(_wallet.key),\n              alt: \"React Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), _wallet.label]\n        }, _wallet.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WalletList, \"2MRGckpueFOfVIdZN+HfAa7ICjg=\", false, function () {\n  return [useWallet];\n});\n\n_c = WalletList;\nexport default WalletList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletList\");","map":{"version":3,"sources":["/Users/ed/Projects/n3-ftw/client/src/packages/ui/Wallet/WalletList.tsx"],"names":["React","useWallet","DEV","getWalletIcon","WalletList","props","connectWallet","list","useDevWallet","onConnect","map","_wallet","key","label"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,aAAT,QAA8B,WAA9B;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA;AAAvB,MAAwCP,SAAS,EAAvD;;AACA,QAAMQ,SAAS,GAAG,MAAK,CAEtB,CAFD;;AAGA,sBACE;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGF,IAAI,CAACG,GAAL,CAAUC,OAAD,IAAa;AACrB,YAAI,CAACH,YAAD,IAAiBG,OAAO,CAACC,GAAR,KAAgBV,GAArC,EAA0C,OAAO,KAAP;AAC1C,4BACE;AAEE,UAAA,SAAS,EAAC,aAFZ;AAGE,UAAA,OAAO,EAAE,MAAMI,aAAa,CAACK,OAAO,CAACC,GAAT,CAH9B;AAAA,kCAKE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,mCACE;AAAK,cAAA,GAAG,EAAET,aAAa,CAACQ,OAAO,CAACC,GAAT,CAAvB;AAAsC,cAAA,GAAG,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF,EAUGD,OAAO,CAACE,KAVX;AAAA,WACOF,OAAO,CAACC,GADf;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD,OAhBA;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AA2BD,CAhCD;;GAAMR,U;UAC0CH,S;;;KAD1CG,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { useWallet } from \"../../provider\";\nimport { DEV } from \"../../neo/consts\";\nimport { getWalletIcon } from \"./helpers\";\n\nconst WalletList = (props) => {\n  const { connectWallet, list, useDevWallet } = useWallet();\n  const onConnect = () =>{\n\n  }\n  return (\n    <>\n      <p className=\"subtitle is-6\">\n        Connect with one of our available wallet info providers or create a new\n        one.\n      </p>\n      <nav className=\"panel\">\n        {list.map((_wallet) => {\n          if (!useDevWallet && _wallet.key === DEV) return false;\n          return (\n            <a\n              key={_wallet.key}\n              className=\"panel-block\"\n              onClick={() => connectWallet(_wallet.key)}\n            >\n              <span className=\"panel-icon\">\n                <img src={getWalletIcon(_wallet.key)} alt=\"React Logo\" />\n                {/*<_wallet.img />*/}\n                {/*<i className=\"fas fa-book\" aria-hidden=\"true\"></i>*/}\n              </span>\n              {_wallet.label}\n            </a>\n          );\n        })}\n      </nav>\n    </>\n  );\n};\n\nexport default WalletList;\n"]},"metadata":{},"sourceType":"module"}