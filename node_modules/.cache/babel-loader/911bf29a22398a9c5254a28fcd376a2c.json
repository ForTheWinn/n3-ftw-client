{"ast":null,"code":"var _jsxFileName = \"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Mint/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport ActionModal from \"./ActionModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mint = props => {\n  _s();\n\n  const [modalActive, setModalActive] = useState(false);\n  const {\n    connectedWallet,\n    network\n  } = useWallet();\n\n  const onActive = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const txid = await new NFTContract(network).mint(connectedWallet);\n        console.log(txid); // setTxid(txid);\n      } catch (e) {\n        console.error(e); // @ts-ignore\n\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onMint,\n      className: \"button is-black\",\n      children: \"Mint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), modalActive && /*#__PURE__*/_jsxDEV(ActionModal, {\n      onClose: () => setModalActive(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Mint, \"/HX0hPBMoJfebCmyOvR9P6SK2Bo=\", false, function () {\n  return [useWallet];\n});\n\n_c = Mint;\nexport default Mint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mint\");","map":{"version":3,"sources":["/Users/ed/Projects/n3-ftw/client/src/ui/pages/Mint/index.tsx"],"names":["React","useState","PageLayout","ActionModal","toast","useWallet","NFTContract","Mint","props","modalActive","setModalActive","connectedWallet","network","onActive","error","onMint","txid","mint","console","log","e","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,WAAT,QAA4B,iCAA5B;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAEU,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA+BP,SAAS,EAA9C;;AACA,QAAMQ,QAAQ,GAAG,MAAM;AACrB,QAAIF,eAAJ,EAAqB;AACnBD,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAFD,MAEO;AACLN,MAAAA,KAAK,CAACU,KAAN,CAAY,wBAAZ;AACD;AACF,GAND;;AAOA,QAAMC,MAAM,GAAG,YAAY;AACzB,QAAIJ,eAAJ,EAAqB;AACnB,UAAI;AACF,cAAMK,IAAI,GAAG,MAAM,IAAIV,WAAJ,CAAgBM,OAAhB,EAAyBK,IAAzB,CAA8BN,eAA9B,CAAnB;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAFE,CAGF;AACD,OAJD,CAIE,OAAOI,CAAP,EAAU;AACVF,QAAAA,OAAO,CAACJ,KAAR,CAAcM,CAAd,EADU,CAEV;;AACAhB,QAAAA,KAAK,CAACU,KAAN,CAAYM,CAAC,CAACC,OAAd;AACD;AACF,KAVD,MAUO;AACLjB,MAAAA,KAAK,CAACU,KAAN,CAAY,wBAAZ;AACD;AACF,GAdD;;AAeA,sBACE,QAAC,UAAD;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEC,MAAjB;AAAyB,MAAA,SAAS,EAAC,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGN,WAAW,iBAAI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,KAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAjCD;;GAAMH,I;UAEiCF,S;;;KAFjCE,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport ActionModal from \"./ActionModal\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\n\nconst Mint = (props) => {\n  const [modalActive, setModalActive] = useState(false);\n  const { connectedWallet, network } = useWallet();\n  const onActive = () => {\n    if (connectedWallet) {\n      setModalActive(true);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  const onMint = async () => {\n    if (connectedWallet) {\n      try {\n        const txid = await new NFTContract(network).mint(connectedWallet);\n        console.log(txid);\n        // setTxid(txid);\n      } catch (e) {\n        console.error(e);\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n  return (\n    <PageLayout>\n      <button onClick={onMint} className=\"button is-black\">\n        Mint\n      </button>\n      {modalActive && <ActionModal onClose={() => setModalActive(false)} />}\n    </PageLayout>\n  );\n};\n\nexport default Mint;\n"]},"metadata":{},"sourceType":"module"}