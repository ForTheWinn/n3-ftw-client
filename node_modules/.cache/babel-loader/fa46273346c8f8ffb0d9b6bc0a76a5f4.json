{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMediaQuery } from \"react-responsive\"; // Breakpoints taken as for antd design all in px\n\nconst BREAKPOINTS = {\n  xs: 480,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1600\n};\nexport function useResponsive() {\n  _s();\n\n  const isDesktop = useMediaQuery({\n    query: `(min-width: ${BREAKPOINTS[\"lg\"]}px)`\n  });\n  const isTabletAndBelow = useMediaQuery({\n    query: `(max-width: ${BREAKPOINTS[\"lg\"] - 1}px)`\n  });\n  const isMobileAndBelow = useMediaQuery({\n    query: `(max-width: ${BREAKPOINTS[\"sm\"] - 1}px)`\n  });\n  return {\n    isDesktop,\n    isTabletAndBelow,\n    isMobileAndBelow\n  };\n}\n\n_s(useResponsive, \"MbUA0p2i6kbB+hQh92sAqB2mT/A=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery];\n});","map":{"version":3,"sources":["/Users/ed/Projects/n3-ftw/client/src/common/hooks/use-responsive.ts"],"names":["useMediaQuery","BREAKPOINTS","xs","sm","md","lg","xl","xxl","useResponsive","isDesktop","query","isTabletAndBelow","isMobileAndBelow"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,kBAA9B,C,CAEA;;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,EAAE,EAAE,GADc;AAElBC,EAAAA,EAAE,EAAE,GAFc;AAGlBC,EAAAA,EAAE,EAAE,GAHc;AAIlBC,EAAAA,EAAE,EAAE,GAJc;AAKlBC,EAAAA,EAAE,EAAE,IALc;AAMlBC,EAAAA,GAAG,EAAE;AANa,CAApB;AASA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC9B,QAAMC,SAAS,GAAGT,aAAa,CAAC;AAC9BU,IAAAA,KAAK,EAAG,eAAcT,WAAW,CAAC,IAAD,CAAO;AADV,GAAD,CAA/B;AAGA,QAAMU,gBAAgB,GAAGX,aAAa,CAAC;AACrCU,IAAAA,KAAK,EAAG,eAAcT,WAAW,CAAC,IAAD,CAAX,GAAoB,CAAE;AADP,GAAD,CAAtC;AAGA,QAAMW,gBAAgB,GAAGZ,aAAa,CAAC;AACrCU,IAAAA,KAAK,EAAG,eAAcT,WAAW,CAAC,IAAD,CAAX,GAAoB,CAAE;AADP,GAAD,CAAtC;AAIA,SAAO;AAAEQ,IAAAA,SAAF;AAAaE,IAAAA,gBAAb;AAA+BC,IAAAA;AAA/B,GAAP;AACD;;GAZeJ,a;UACIR,a,EAGOA,a,EAGAA,a","sourcesContent":["import { useMediaQuery } from \"react-responsive\";\n\n// Breakpoints taken as for antd design all in px\nconst BREAKPOINTS = {\n  xs: 480,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1600,\n};\n\nexport function useResponsive() {\n  const isDesktop = useMediaQuery({\n    query: `(min-width: ${BREAKPOINTS[\"lg\"]}px)`,\n  });\n  const isTabletAndBelow = useMediaQuery({\n    query: `(max-width: ${BREAKPOINTS[\"lg\"] - 1}px)`,\n  });\n  const isMobileAndBelow = useMediaQuery({\n    query: `(max-width: ${BREAKPOINTS[\"sm\"] - 1}px)`,\n  });\n\n  return { isDesktop, isTabletAndBelow, isMobileAndBelow };\n}\n"]},"metadata":{},"sourceType":"module"}