{"ast":null,"code":"var _jsxFileName = \"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/DisplayRune.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayRune = _ref => {\n  _s();\n\n  let {\n    tokenId,\n    network,\n    onClick\n  } = _ref;\n  const [token, setToken] = useState();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      console.log(\"reload\");\n\n      try {\n        const res = await new NFTContract(network).getProperties(tokenId);\n        console.log(res);\n        setToken(res);\n      } catch (e) {\n        console.error(e); // setError(e.message);\n      }\n    }\n\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"figure\", {\n    className: \"image is-64x64\",\n    onClick: () => onClick(token),\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      width: 64,\n      src: token.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DisplayRune, \"53gWZVYLZTYZjWpgb2o1I8HXzgU=\");\n\n_c = DisplayRune;\nexport default DisplayRune;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayRune\");","map":{"version":3,"sources":["/Users/ed/Projects/n3-ftw/client/src/ui/pages/Gallery/DisplayRune.tsx"],"names":["React","useEffect","useState","NFTContract","DisplayRune","tokenId","network","onClick","token","setToken","fetchContractStatus","console","log","res","getProperties","e","error","image"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,iCAA5B;;;;AAWA,MAAMC,WAAW,GAAG,QAAsD;AAAA;;AAAA,MAArD;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,GAAqD;AACxE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,mBAAf,GAAqC;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,UAAI;AACF,cAAMC,GAAG,GAAG,MAAM,IAAIV,WAAJ,CAAgBG,OAAhB,EAAyBQ,aAAzB,CAAuCT,OAAvC,CAAlB;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAJ,QAAAA,QAAQ,CAACI,GAAD,CAAR;AACD,OAJD,CAIE,OAAOE,CAAP,EAAe;AACfJ,QAAAA,OAAO,CAACK,KAAR,CAAcD,CAAd,EADe,CAEf;AACD;AACF;;AACDL,IAAAA,mBAAmB;AACpB,GAbQ,EAaN,CAACL,OAAD,CAbM,CAAT;AAcA,MAAI,CAACG,KAAL,EAAY,oBAAO,qCAAP;AACZ,sBACE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAmC,IAAA,OAAO,EAAE,MAAMD,OAAO,CAACC,KAAD,CAAzD;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE,EAAZ;AAAgB,MAAA,GAAG,EAAEA,KAAK,CAACS;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBD;;GAAMb,W;;KAAAA,W;AAwBN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { INetworkType } from \"../../../packages/neo/network\";\nimport { IRuneMeta } from \"../../../packages/neo/contracts/ftw/nft/interfaces\";\n\ninterface IDisplayRuneProps {\n  tokenId: string;\n  network: INetworkType;\n  onClick: (obj) => void;\n}\n\nconst DisplayRune = ({ tokenId, network, onClick }: IDisplayRuneProps) => {\n  const [token, setToken] = useState<IRuneMeta>();\n  useEffect(() => {\n    async function fetchContractStatus() {\n      console.log(\"reload\");\n      try {\n        const res = await new NFTContract(network).getProperties(tokenId);\n        console.log(res);\n        setToken(res);\n      } catch (e: any) {\n        console.error(e);\n        // setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [tokenId]);\n  if (!token) return <></>;\n  return (\n    <figure className=\"image is-64x64\" onClick={() => onClick(token)}>\n      <img width={64} src={token.image} />\n    </figure>\n  );\n};\n\nexport default DisplayRune;\n"]},"metadata":{},"sourceType":"module"}