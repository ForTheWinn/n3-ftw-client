{"ast":null,"code":"var _jsxFileName = \"/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ActionModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport NumberFormat from \"react-number-format\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ActionModal = _ref => {\n  _s();\n\n  let {\n    range,\n    onClose\n  } = _ref;\n  const [amount, setAmount] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const {\n    network,\n    connectedWallet,\n    openWalletModal\n  } = useWallet();\n  const [txid, setTxid] = useState();\n\n  const onDeposit = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).deposit(connectedWallet, amount, position);\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    children: txid ? /*#__PURE__*/_jsxDEV(TransactionSubmitted, {\n      txid: txid,\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title is-flex\",\n        children: \"Deposit NEO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              children: \"Your position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: position,\n                onChange: e => setPosition(e.target.value),\n                children: _.range(0, range).map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: i + 1,\n                  children: i + 1\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(NumberFormat, {\n              autoFocus: true // ref={this.props, inputRef}\n              ,\n              decimalScale: 0,\n              inputMode: \"decimal\",\n              className: \"input\",\n              value: amount,\n              onValueChange: value => {\n                setAmount(value.value);\n              },\n              thousandSeparator: true,\n              suffix: \" NEO\",\n              allowLeadingZeros: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onDeposit,\n        disabled: !amount || parseFloat(amount) < 1,\n        className: \"button is-button is-black\",\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActionModal, \"yQnce5OrPx37bDJ1ErJxBuMH4js=\", false, function () {\n  return [useWallet];\n});\n\n_c = ActionModal;\nexport default ActionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionModal\");","map":{"version":3,"sources":["/Users/ed/Projects/n3-ftw/client/src/ui/pages/Farm/ActionModal.tsx"],"names":["React","useState","Modal","NumberFormat","FarmContract","useWallet","toast","TransactionSubmitted","_","ActionModal","range","onClose","amount","setAmount","position","setPosition","network","connectedWallet","openWalletModal","txid","setTxid","onDeposit","res","deposit","e","error","message","target","value","map","i","parseFloat"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport NumberFormat from \"react-number-format\";\nimport { FarmContract } from \"../../../packages/neo/contracts\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { toast } from \"react-hot-toast\";\nimport TransactionSubmitted from \"../../components/TransactionSubmitted\";\nimport _ from \"underscore\";\ninterface IActionModal {\n  range: string;\n  onClose: () => void;\n}\nconst ActionModal = ({ range, onClose }: IActionModal) => {\n  const [amount, setAmount] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const { network, connectedWallet, openWalletModal } = useWallet();\n  const [txid, setTxid] = useState<string>();\n  const onDeposit = async () => {\n    if (connectedWallet) {\n      try {\n        const res = await new FarmContract(network).deposit(\n          connectedWallet,\n          amount,\n          position\n        );\n        setTxid(res);\n      } catch (e) {\n        // @ts-ignore\n        toast.error(e.message);\n      }\n    } else {\n      openWalletModal();\n    }\n  };\n  return (\n    <Modal onClose={onClose}>\n      {txid ? (\n        <TransactionSubmitted txid={txid} onClick={onClose} />\n      ) : (\n        <>\n          <h1 className=\"title is-flex\">\n            {/*<img src={\"/neo_512_512.svg\"} />*/}\n            Deposit NEO\n          </h1>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Your position</label>\n                <div className=\"select is-fullwidth\">\n                  <select\n                    value={position}\n                    onChange={(e) => setPosition(e.target.value)}\n                  >\n                    {_.range(0, range).map((i) => (\n                      <option key={i} value={i + 1}>\n                        {i + 1}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"field\">\n                <label className=\"label\">Amount</label>\n                <NumberFormat\n                  autoFocus={true}\n                  // ref={this.props, inputRef}\n                  decimalScale={0}\n                  inputMode=\"decimal\"\n                  className=\"input\"\n                  value={amount}\n                  onValueChange={(value) => {\n                    setAmount(value.value);\n                  }}\n                  thousandSeparator={true}\n                  suffix={\" NEO\"}\n                  allowLeadingZeros={false}\n                />\n              </div>\n            </div>\n          </div>\n          <button\n            onClick={onDeposit}\n            disabled={!amount || parseFloat(amount) < 1}\n            className=\"button is-button is-black\"\n          >\n            Deposit\n          </button>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default ActionModal;\n"]},"metadata":{},"sourceType":"module"}