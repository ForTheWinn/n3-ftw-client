{"ast":null,"code":"var _jsxFileName = \"/Users/ed/Projects/n3-ftw/client/src/ui/pages/MyCollection/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport DisplayRune from \"../Gallery/DisplayRune\";\nimport PropertiesModal from \"../Gallery/PropertiesModal\";\nimport { GALLERY_PATH } from \"../../../consts\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyCollection = props => {\n  _s();\n\n  const [isLoading, setLoading] = useState(true);\n  const [tokens, setTokens] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] = useState();\n  const {\n    connectedWallet,\n    network\n  } = useWallet();\n\n  const onPropertiesModalActive = obj => {\n    if (connectedWallet) {\n      setPropertiesModalActive(obj);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n\n      try {\n        const res = await new NFTContract(network).getTokens();\n        setTokens(res);\n        setLoading(false);\n      } catch (e) {\n        setError(e.message);\n      }\n    }\n\n    fetchContractStatus();\n  }, [connectedWallet]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"hero is-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"My collection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns is-multiline\",\n        children: tokens.length === 0 ? tokens.map(tokenId => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column is-3\",\n          children: /*#__PURE__*/_jsxDEV(DisplayRune, {\n            width: \"100%\",\n            height: \"100%\",\n            tokenId: tokenId,\n            network: network,\n            onClick: onPropertiesModalActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column is-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You don't have any runes yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"button is-primary\",\n              to: GALLERY_PATH,\n              children: \"Go Get Them\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), propertiesModalActive && /*#__PURE__*/_jsxDEV(PropertiesModal, {\n      properties: propertiesModalActive,\n      onClose: () => setPropertiesModalActive(undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyCollection, \"yJScCNy4fjTfxT+dWwF6ovzRV6Y=\", false, function () {\n  return [useWallet];\n});\n\n_c = MyCollection;\nexport default MyCollection;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyCollection\");","map":{"version":3,"sources":["/Users/ed/Projects/n3-ftw/client/src/ui/pages/MyCollection/index.tsx"],"names":["React","useEffect","useState","PageLayout","toast","useWallet","NFTContract","DisplayRune","PropertiesModal","GALLERY_PATH","Link","MyCollection","props","isLoading","setLoading","tokens","setTokens","error","setError","propertiesModalActive","setPropertiesModalActive","connectedWallet","network","onPropertiesModalActive","obj","fetchContractStatus","res","getTokens","e","message","length","map","tokenId","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PageLayout from \"../../components/PageLayout\";\nimport toast from \"react-hot-toast\";\nimport { useWallet } from \"../../../packages/provider\";\nimport { NFTContract } from \"../../../packages/neo/contracts\";\nimport DisplayRune from \"../Gallery/DisplayRune\";\nimport PropertiesModal from \"../Gallery/PropertiesModal\";\nimport { IRuneMeta } from \"../../../packages/neo/contracts/ftw/nft/interfaces\";\nimport DisplayRandomRune from \"../../components/DisplayRandomRune\";\nimport { GALLERY_PATH } from \"../../../consts\";\nimport { Link } from \"react-router-dom\";\n\nconst MyCollection = (props) => {\n  const [isLoading, setLoading] = useState(true);\n  const [tokens, setTokens] = useState<any>([]);\n  const [error, setError] = useState(\"\");\n  const [propertiesModalActive, setPropertiesModalActive] =\n    useState<IRuneMeta>();\n  const { connectedWallet, network } = useWallet();\n  const onPropertiesModalActive = (obj: IRuneMeta) => {\n    if (connectedWallet) {\n      setPropertiesModalActive(obj);\n    } else {\n      toast.error(\"Please connect wallet.\");\n    }\n  };\n\n  useEffect(() => {\n    async function fetchContractStatus() {\n      setError(\"\");\n      try {\n        const res = await new NFTContract(network).getTokens();\n        setTokens(res);\n        setLoading(false);\n      } catch (e: any) {\n        setError(e.message);\n      }\n    }\n    fetchContractStatus();\n  }, [connectedWallet]);\n  return (\n    <>\n      <section className=\"hero is-white\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">My collection</h1>\n          </div>\n        </div>\n      </section>\n      <PageLayout>\n        {isLoading ? (\n          <div>Loading..</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <div className=\"columns is-multiline\">\n            {tokens.length === 0 ? (\n              tokens.map((tokenId) => (\n                <div className=\"column is-3\">\n                  <DisplayRune\n                    width=\"100%\"\n                    height=\"100%\"\n                    tokenId={tokenId}\n                    network={network}\n                    onClick={onPropertiesModalActive}\n                  />\n                </div>\n              ))\n            ) : (\n              <div className=\"column is-3\">\n                <div className=\"box\">\n                  <p>You don't have any runes yet</p>\n                  <Link className=\"button is-primary\" to={GALLERY_PATH}>\n                    Go Get Them\n                  </Link>\n                </div>\n                {/*<DisplayRandomRune width=\"100%\" height=\"100%\" />*/}\n              </div>\n            )}\n          </div>\n        )}\n      </PageLayout>\n      {/*<button onClick={onMint} className=\"button is-black\">Mint</button>*/}\n      {propertiesModalActive && (\n        <PropertiesModal\n          properties={propertiesModalActive}\n          onClose={() => setPropertiesModalActive(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MyCollection;\n"]},"metadata":{},"sourceType":"module"}